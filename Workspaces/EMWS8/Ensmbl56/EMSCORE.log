MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1ZGVQ84 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1ZGVQ84 new;
MPRINT(EM_DIAGRAM):   run;
334082     filename emflow
334082   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring AUTONEURAL37_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334083     *------------------------------------------------------------*;
334084     * Ensmbl56: Scoring AUTONEURAL37_TRAIN data;
334085     *------------------------------------------------------------*;
334086     data EMWS8.Ensmbl56_TRAIN
334087     / view=EMWS8.Ensmbl56_TRAIN
334088     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_TRAIN / view=EMWS8.Ensmbl56_TRAIN ;
334089     set EMWS8.AutoNeural37_TRAIN
334090     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_TRAIN ;
334091     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas.
334092    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334093    +* Ensmbl56: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Combine model for DepVar;
334094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334095    +* Ensmbl56: Scoring Code of model 1 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 1 of 6;
334096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334097    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334098    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
334099    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
334100    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
334101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334102    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334103    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
334104    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
334105    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
334106    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334108    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
334109    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
334110    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
334111    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334113    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
334114    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
334115    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
334116    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334117    +
334118    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
334119    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
334119   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
334120    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
334121    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
334122    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
334123    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
334124    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
334125    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334126    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
334127    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
334128    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
334129    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334131    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
334132    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334133    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
334134    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
334135    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
334136    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334137    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
334138    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
334139    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
334140    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334142    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
334143    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
334144    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
334145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334146    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334147    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
334148    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
334149    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
334150    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334151    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
334152    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
334153    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
334154    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
334155    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
334156    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
334157    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
334158    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
334159    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
334160    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
334161    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
334162    +LENGTH _WARN_ $4
334163    +      F_DepVar  $ 12
334164    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
334165    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
334166    +
334167    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
334168    +
334169    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
334170    +
334171    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
334172    +
334173    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
334174    +
334175    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
334176    +
334177    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
334178    +
334179    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
334180    +
334181    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
334182    +
334183    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
334184    +
334185    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
334186    +
334187    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
334188    +
334189    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
334190    +
334191    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
334192    +
334193    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
334194    +
334195    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
334196    +
334197    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
334198    +
334199    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
334200    +
334201    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
334202    +
334203    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
334204    +
334205    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
334206    +
334207    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
334208    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
334209    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
334210    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
334211    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
334212    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
334213    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
334214    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
334215    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
334216    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
334217    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
334218    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
334219    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
334220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
334221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
334222    +end;
MPRINT(EM_DIAGRAM):   end;
334223    +else do;
MPRINT(EM_DIAGRAM):   else do;
334224    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
334225    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
334226    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
334227    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
334228    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
334229    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
334230    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
334231    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
334232    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334233    +         end;
MPRINT(EM_DIAGRAM):   end;
334234    +         else do;
MPRINT(EM_DIAGRAM):   else do;
334235    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
334236    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
334237    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334238    +            end;
MPRINT(EM_DIAGRAM):   end;
334239    +         end;
MPRINT(EM_DIAGRAM):   end;
334240    +      end;
MPRINT(EM_DIAGRAM):   end;
334241    +      else do;
MPRINT(EM_DIAGRAM):   else do;
334242    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
334243    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
334244    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334245    +         end;
MPRINT(EM_DIAGRAM):   end;
334246    +      end;
MPRINT(EM_DIAGRAM):   end;
334247    +   end;
MPRINT(EM_DIAGRAM):   end;
334248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
334249    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
334250    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
334251    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334252    +      end;
MPRINT(EM_DIAGRAM):   end;
334253    +      else do;
MPRINT(EM_DIAGRAM):   else do;
334254    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
334255    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
334256    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
334257    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
334258    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
334259    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334260    +         end;
MPRINT(EM_DIAGRAM):   end;
334261    +      end;
MPRINT(EM_DIAGRAM):   end;
334262    +   end;
MPRINT(EM_DIAGRAM):   end;
334263    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
334264    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
334265    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
334266    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
334267    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
334268    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
334269    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
334270    +   end;
MPRINT(EM_DIAGRAM):   end;
334271    +end;
MPRINT(EM_DIAGRAM):   end;
334272    +
334273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334274    +*** Checking missing input Interval
334275    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
334276    +
334277    +IF NMISS(
334278    +   AcceptedCmpTotal ,
334279    +   Frq ,
334280    +   Mnt ,
334281    +   MntMeatProducts ,
334282    +   NumCatalogPurchases ,
334283    +   NumDealsPurchases ,
334284    +   NumWebVisitsMonth ,
334285    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
334286    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
334287    +
334288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
334289    +END;
MPRINT(EM_DIAGRAM):   END;
334290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334291    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
334292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334293    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334294    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
334295    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
334296    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
334297    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
334298    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
334299    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
334300    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
334301    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
334302    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
334303    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
334304    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
334305    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
334306    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
334307    +END;
MPRINT(EM_DIAGRAM):   END;
334308    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334309    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
334310    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
334311    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
334312    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
334313    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
334314    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
334315    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
334316    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
334317    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
334318    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
334319    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
334320    +   ELSE S_NumCatalogPurchases
334321    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
334322    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
334323    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
334324    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
334325    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
334326    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
334327    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
334328    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
334329    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
334330    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
334331    +END;
MPRINT(EM_DIAGRAM):   END;
334332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334333    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
334334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334336    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
334337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334338    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334339    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
334340    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
334341    +          +     6.08901143667375 * S_MntMeatProducts
334342    +          +     2.21464286693249 * S_NumCatalogPurchases
334343    +          +     0.88693497635794 * S_NumDealsPurchases
334344    +          +    -0.16352347343851 * S_NumWebVisitsMonth
334345    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 * 
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 * 
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 * 
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
334346    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
334347    +          +     0.97693281807676 * Marital_StatusMarried
334348    +          +    -0.47353913752833 * Marital_StatusSingle
334349    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced + 
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle + 
0.72993998289048 * Marital_StatusTogether ;
334350    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
334351    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
334352    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
334353    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
334354    +END;
MPRINT(EM_DIAGRAM):   END;
334355    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334356    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
334357    +END;
MPRINT(EM_DIAGRAM):   END;
334358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334359    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
334360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334361    +
334362    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
334363    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
334364    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
334365    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
334366    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
334367    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
334368    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
334369    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
334370    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
334371    +end;
MPRINT(EM_DIAGRAM):   end;
334372    +else do;
MPRINT(EM_DIAGRAM):   else do;
334373    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
334374    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
334375    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
334376    +   end;
MPRINT(EM_DIAGRAM):   end;
334377    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
334378    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
334379    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
334380    +   end;
MPRINT(EM_DIAGRAM):   end;
334381    +   else do;
MPRINT(EM_DIAGRAM):   else do;
334382    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
334383    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
334384    +   end;
MPRINT(EM_DIAGRAM):   end;
334385    +end;
MPRINT(EM_DIAGRAM):   end;
334386    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334387    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
334388    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
334389    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
334390    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
334391    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
334392    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
334393    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
334394    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
334395    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
334396    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
334397    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
334398    +END;
MPRINT(EM_DIAGRAM):   END;
334399    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334400    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
334401    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
334402    +END;
MPRINT(EM_DIAGRAM):   END;
334403    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
334404    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
334405    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
334406    +END;
MPRINT(EM_DIAGRAM):   END;
334407    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
334408    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
334409    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
334410    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
334411    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
334412    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
334413    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
334414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334415    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
334416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334417    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
334418    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
334419    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
334420    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
334421    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
334422    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
334423    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
334424    +END;
MPRINT(EM_DIAGRAM):   END;
334425    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
334426    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
334427    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
334428    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
334429    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
334430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334431    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
334432    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334433    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
334434    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
334435    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
334436    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
334437    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334438    +* Renaming Into variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural37;
334439    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334440    +length AutoNeural37_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural37_I_DepVar $32;
334441    +drop AutoNeural37_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_I_DepVar;
334442    +AutoNeural37_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural37_I_DepVar = I_DepVar;
334443    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334444    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
334445    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334446    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
334447    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
334448    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
334449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334450    +* Ensmbl56: Scoring Code of model 2 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 2 of 6;
334451    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334452    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334453    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
334454    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
334455    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
334456    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
334457    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
334458    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
334459    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
334460    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
334461    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
334462    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
334463    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
334464    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
334465    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
334466    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
334467    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
334468    +LENGTH _WARN_ $4
334469    +      F_DepVar  $ 12
334470    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
334471    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
334472    +
334473    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
334474    +
334475    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
334476    +
334477    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
334478    +
334479    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
334480    +
334481    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
334482    +
334483    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
334484    +
334485    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
334486    +
334487    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
334488    +
334489    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
334490    +
334491    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
334492    +
334493    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
334494    +
334495    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
334496    +
334497    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
334498    +
334499    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
334500    +
334501    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
334502    +
334503    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
334504    +
334505    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
334506    +
334507    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
334508    +
334509    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
334510    +
334511    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
334512    +
334513    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
334514    +
334515    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
334516    +
334517    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
334518    +
334519    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
334520    +
334521    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
334522    +
334523    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
334524    +
334525    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
334526    +
334527    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
334528    +
334529    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
334530    +
334531    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
334532    +
334533    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
334534    +
334535    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
334536    +
334537    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
334538    +
334539    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
334540    +
334541    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
334542    +
334543    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
334544    +
334545    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
334546    +
334547    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
334548    +
334549    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
334550    +
334551    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
334552    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
334553    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
334554    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
334555    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
334556    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
334557    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
334558    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
334559    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
334560    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
334561    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
334562    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
334563    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
334564    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
334565    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
334566    +end;
MPRINT(EM_DIAGRAM):   end;
334567    +else do;
MPRINT(EM_DIAGRAM):   else do;
334568    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
334569    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
334570    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
334571    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
334572    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
334573    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
334574    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
334575    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
334576    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334577    +         end;
MPRINT(EM_DIAGRAM):   end;
334578    +         else do;
MPRINT(EM_DIAGRAM):   else do;
334579    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
334580    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
334581    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334582    +            end;
MPRINT(EM_DIAGRAM):   end;
334583    +         end;
MPRINT(EM_DIAGRAM):   end;
334584    +      end;
MPRINT(EM_DIAGRAM):   end;
334585    +      else do;
MPRINT(EM_DIAGRAM):   else do;
334586    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
334587    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
334588    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334589    +         end;
MPRINT(EM_DIAGRAM):   end;
334590    +      end;
MPRINT(EM_DIAGRAM):   end;
334591    +   end;
MPRINT(EM_DIAGRAM):   end;
334592    +   else do;
MPRINT(EM_DIAGRAM):   else do;
334593    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
334594    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
334595    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334596    +      end;
MPRINT(EM_DIAGRAM):   end;
334597    +      else do;
MPRINT(EM_DIAGRAM):   else do;
334598    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
334599    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
334600    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
334601    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
334602    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
334603    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
334604    +         end;
MPRINT(EM_DIAGRAM):   end;
334605    +      end;
MPRINT(EM_DIAGRAM):   end;
334606    +   end;
MPRINT(EM_DIAGRAM):   end;
334607    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
334608    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
334609    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
334610    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
334611    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
334612    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
334613    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
334614    +   end;
MPRINT(EM_DIAGRAM):   end;
334615    +end;
MPRINT(EM_DIAGRAM):   end;
334616    +
334617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334618    +*** Checking missing input Interval
334619    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
334620    +
334621    +IF NMISS(
334622    +   AcceptedCmpTotal ,
334623    +   Frq ,
334624    +   Mnt ,
334625    +   MntMeatProducts ,
334626    +   NumCatalogPurchases ,
334627    +   NumDealsPurchases ,
334628    +   NumWebVisitsMonth ,
334629    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
334630    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
334631    +
334632    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
334633    +END;
MPRINT(EM_DIAGRAM):   END;
334634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334635    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
334636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334637    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334638    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
334639    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
334640    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
334641    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
334642    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
334643    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
334644    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
334645    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
334646    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
334647    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
334648    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
334649    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
334650    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
334651    +END;
MPRINT(EM_DIAGRAM):   END;
334652    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334653    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
334654    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
334655    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
334656    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
334657    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
334658    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
334659    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
334660    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
334661    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
334662    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
334663    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
334664    +   ELSE S_NumCatalogPurchases
334665    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
334666    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
334667    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
334668    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
334669    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
334670    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
334671    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
334672    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
334673    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
334674    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
334675    +END;
MPRINT(EM_DIAGRAM):   END;
334676    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334677    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
334678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334679    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334680    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
334681    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334682    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334683    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
334684    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
334685    +          +     3.02405267314398 * S_MntMeatProducts
334686    +          +     0.25422172488707 * S_NumCatalogPurchases
334687    +          +     0.25977266371328 * S_NumDealsPurchases
334688    +          +    -0.26865365728773 * S_NumWebVisitsMonth
334689    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
334690    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
334691    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
334692    +          +    -0.64419071408502 * S_MntMeatProducts
334693    +          +    -0.49060224303044 * S_NumCatalogPurchases
334694    +          +    -0.04840762943457 * S_NumDealsPurchases
334695    +          +     -0.7656247386051 * S_NumWebVisitsMonth
334696    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
334697    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
334698    +          +    -0.05888536499281 * Marital_StatusMarried
334699    +          +    -0.22627441829205 * Marital_StatusSingle
334700    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
334701    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
334702    +          +     0.82536605771339 * Marital_StatusMarried
334703    +          +    -0.97196770004098 * Marital_StatusSingle
334704    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
334705    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
334706    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
334707    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
334708    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
334709    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
334710    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
334711    +END;
MPRINT(EM_DIAGRAM):   END;
334712    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334713    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
334714    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
334715    +END;
MPRINT(EM_DIAGRAM):   END;
334716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334717    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
334718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334719    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334720    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
334721    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
334722    +          +    -1.52187144029368 * S_MntMeatProducts
334723    +          +    -0.17233011764417 * S_NumCatalogPurchases
334724    +          +     0.08681674245114 * S_NumDealsPurchases
334725    +          +     0.13308256651831 * S_NumWebVisitsMonth
334726    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
334727    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
334728    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
334729    +          +     0.66187267823731 * S_MntMeatProducts
334730    +          +     1.52530454111654 * S_NumCatalogPurchases
334731    +          +     0.73982889008686 * S_NumDealsPurchases
334732    +          +     1.03760708665776 * S_NumWebVisitsMonth
334733    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
334734    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
334735    +          +    -0.57121500191985 * Marital_StatusMarried
334736    +          +     0.00575301863466 * Marital_StatusSingle
334737    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
334738    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
334739    +          +     0.68382990555761 * Marital_StatusMarried
334740    +          +    -0.40241665873988 * Marital_StatusSingle
334741    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
334742    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
334743    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
334744    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
334745    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
334746    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
334747    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
334748    +END;
MPRINT(EM_DIAGRAM):   END;
334749    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334750    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
334751    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
334752    +END;
MPRINT(EM_DIAGRAM):   END;
334753    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334754    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
334755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334756    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334757    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
334758    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
334759    +          +    -2.40830591527574 * S_MntMeatProducts
334760    +          +    -0.89296864866675 * S_NumCatalogPurchases
334761    +          +     1.79889409325514 * S_NumDealsPurchases
334762    +          +    -0.33765715793031 * S_NumWebVisitsMonth
334763    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
334764    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
334765    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
334766    +          +     0.04224245417831 * S_MntMeatProducts
334767    +          +     0.25836861794607 * S_NumCatalogPurchases
334768    +          +     2.47909264202917 * S_NumDealsPurchases
334769    +          +     0.14790226792406 * S_NumWebVisitsMonth
334770    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
334771    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
334772    +          +     0.39103795234666 * Marital_StatusMarried
334773    +          +    -0.52822284221545 * Marital_StatusSingle
334774    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
334775    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
334776    +          +       1.975579060233 * Marital_StatusMarried
334777    +          +     0.15028521746762 * Marital_StatusSingle
334778    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
334779    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
334780    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
334781    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
334782    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
334783    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
334784    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
334785    +END;
MPRINT(EM_DIAGRAM):   END;
334786    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334787    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
334788    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
334789    +END;
MPRINT(EM_DIAGRAM):   END;
334790    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334791    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
334792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334793    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334794    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
334795    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
334796    +          +     0.16060225059391 * S_MntMeatProducts
334797    +          +     1.53093292630033 * S_NumCatalogPurchases
334798    +          +     0.39573641806699 * S_NumDealsPurchases
334799    +          +    -0.95387142126649 * S_NumWebVisitsMonth
334800    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
334801    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
334802    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
334803    +          +     0.71628478327205 * S_MntMeatProducts
334804    +          +     0.15890352363556 * S_NumCatalogPurchases
334805    +          +    -1.12928875468011 * S_NumDealsPurchases
334806    +          +    -0.30108145274307 * S_NumWebVisitsMonth
334807    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
334808    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
334809    +          +     0.91966160839643 * Marital_StatusMarried
334810    +          +    -0.63411090570397 * Marital_StatusSingle
334811    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
334812    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
334813    +          +     0.77230489026504 * Marital_StatusMarried
334814    +          +     0.20456495503812 * Marital_StatusSingle
334815    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
334816    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
334817    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
334818    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
334819    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
334820    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
334821    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
334822    +END;
MPRINT(EM_DIAGRAM):   END;
334823    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334824    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
334825    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
334826    +END;
MPRINT(EM_DIAGRAM):   END;
334827    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334828    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
334829    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334830    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334831    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
334832    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
334833    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
334834    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
334835    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
334836    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
334837    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
334838    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
334839    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
334840    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
334841    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
334842    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
334843    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
334844    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
334845    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
334846    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
334847    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
334848    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
334849    +END;
MPRINT(EM_DIAGRAM):   END;
334850    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334851    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
334852    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
334853    +END;
MPRINT(EM_DIAGRAM):   END;
334854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334855    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
334856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334857    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334858    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
334859    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
334860    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
334861    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
334862    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
334863    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
334864    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
334865    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
334866    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
334867    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
334868    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
334869    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
334870    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
334871    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
334872    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
334873    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
334874    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
334875    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
334876    +END;
MPRINT(EM_DIAGRAM):   END;
334877    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334878    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
334879    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
334880    +END;
MPRINT(EM_DIAGRAM):   END;
334881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334882    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
334883    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334884    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334885    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
334886    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
334887    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
334888    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
334889    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
334890    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
334891    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
334892    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
334893    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
334894    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
334895    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
334896    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
334897    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
334898    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
334899    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
334900    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
334901    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
334902    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
334903    +END;
MPRINT(EM_DIAGRAM):   END;
334904    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334905    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
334906    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
334907    +END;
MPRINT(EM_DIAGRAM):   END;
334908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334909    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
334910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334911    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334912    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
334913    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
334914    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
334915    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
334916    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
334917    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
334918    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
334919    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
334920    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
334921    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
334922    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
334923    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
334924    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
334925    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
334926    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
334927    +END;
MPRINT(EM_DIAGRAM):   END;
334928    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334929    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
334930    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
334931    +END;
MPRINT(EM_DIAGRAM):   END;
334932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334933    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
334934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334935    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334936    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
334937    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
334938    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
334939    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
334940    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
334941    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
334942    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
334943    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
334944    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
334945    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
334946    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
334947    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
334948    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
334949    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
334950    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
334951    +END;
MPRINT(EM_DIAGRAM):   END;
334952    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334953    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
334954    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
334955    +END;
MPRINT(EM_DIAGRAM):   END;
334956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334957    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
334958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334959    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
334960    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
334961    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
334962    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
334963    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
334964    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
334965    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
334966    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
334967    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
334968    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
334969    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
334970    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
334971    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
334972    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
334973    +END;
MPRINT(EM_DIAGRAM):   END;
334974    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
334975    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
334976    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
334977    +END;
MPRINT(EM_DIAGRAM):   END;
334978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334979    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
334980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
334981    +
334982    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
334983    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
334984    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
334985    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
334986    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
334987    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
334988    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
334989    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
334990    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
334991    +end;
MPRINT(EM_DIAGRAM):   end;
334992    +else do;
MPRINT(EM_DIAGRAM):   else do;
334993    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
334994    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
334995    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
334996    +   end;
MPRINT(EM_DIAGRAM):   end;
334997    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
334998    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
334999    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
335000    +   end;
MPRINT(EM_DIAGRAM):   end;
335001    +   else do;
MPRINT(EM_DIAGRAM):   else do;
335002    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
335003    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
335004    +   end;
MPRINT(EM_DIAGRAM):   end;
335005    +end;
MPRINT(EM_DIAGRAM):   end;
335006    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335007    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
335008    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
335009    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
335010    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
335011    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
335012    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
335013    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
335014    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
335015    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
335016    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
335017    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
335018    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
335019    +END;
MPRINT(EM_DIAGRAM):   END;
335020    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
335021    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
335022    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
335023    +END;
MPRINT(EM_DIAGRAM):   END;
335024    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
335025    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
335026    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
335027    +END;
MPRINT(EM_DIAGRAM):   END;
335028    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
335029    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
335030    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
335031    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
335032    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
335033    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
335034    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
335035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335036    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
335037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335038    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
335039    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
335040    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
335041    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
335042    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
335043    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
335044    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
335045    +END;
MPRINT(EM_DIAGRAM):   END;
335046    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
335047    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
335048    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
335049    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
335050    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
335051    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335052    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
335053    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335054    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
335055    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
335056    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
335057    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
335058    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335059    +* Renaming Into variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural38;
335060    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335061    +length AutoNeural38_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural38_I_DepVar $32;
335062    +drop AutoNeural38_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_I_DepVar;
335063    +AutoNeural38_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural38_I_DepVar = I_DepVar;
335064    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335065    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
335066    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335067    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
335068    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
335069    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
335070    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335071    +* Ensmbl56: Scoring Code of model 3 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 3 of 6;
335072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335073    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335074    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
335075    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
335076    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
335077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335078    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
335079    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
335080    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
335081    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
335082    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
335083    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
335084    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
335085    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
335086    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
335087    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
335088    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
335089    +LENGTH _WARN_ $4
335090    +      F_DepVar  $ 12
335091    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
335092    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
335093    +
335094    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
335095    +
335096    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
335097    +
335098    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
335099    +
335100    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
335101    +
335102    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
335103    +
335104    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
335105    +
335106    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
335107    +
335108    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
335109    +
335110    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
335111    +
335112    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
335113    +
335114    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
335115    +
335116    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
335117    +
335118    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
335119    +
335120    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
335121    +
335122    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
335123    +
335124    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
335125    +
335126    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
335127    +
335128    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
335129    +
335130    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
335131    +
335132    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
335133    +
335134    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
335135    +
335136    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
335137    +
335138    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
335139    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
335140    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
335141    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
335142    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
335143    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
335144    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
335145    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
335146    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
335147    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
335148    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
335149    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
335150    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
335151    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
335152    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335153    +end;
MPRINT(EM_DIAGRAM):   end;
335154    +else do;
MPRINT(EM_DIAGRAM):   else do;
335155    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
335156    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
335157    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
335158    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
335159    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
335160    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
335161    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
335162    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
335163    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335164    +         end;
MPRINT(EM_DIAGRAM):   end;
335165    +         else do;
MPRINT(EM_DIAGRAM):   else do;
335166    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
335167    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
335168    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335169    +            end;
MPRINT(EM_DIAGRAM):   end;
335170    +         end;
MPRINT(EM_DIAGRAM):   end;
335171    +      end;
MPRINT(EM_DIAGRAM):   end;
335172    +      else do;
MPRINT(EM_DIAGRAM):   else do;
335173    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
335174    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
335175    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335176    +         end;
MPRINT(EM_DIAGRAM):   end;
335177    +      end;
MPRINT(EM_DIAGRAM):   end;
335178    +   end;
MPRINT(EM_DIAGRAM):   end;
335179    +   else do;
MPRINT(EM_DIAGRAM):   else do;
335180    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
335181    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
335182    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335183    +      end;
MPRINT(EM_DIAGRAM):   end;
335184    +      else do;
MPRINT(EM_DIAGRAM):   else do;
335185    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
335186    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
335187    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
335188    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
335189    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
335190    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335191    +         end;
MPRINT(EM_DIAGRAM):   end;
335192    +      end;
MPRINT(EM_DIAGRAM):   end;
335193    +   end;
MPRINT(EM_DIAGRAM):   end;
335194    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
335195    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
335196    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
335197    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
335198    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
335199    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
335200    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335201    +   end;
MPRINT(EM_DIAGRAM):   end;
335202    +end;
MPRINT(EM_DIAGRAM):   end;
335203    +
335204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335205    +*** Checking missing input Interval
335206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
335207    +
335208    +IF NMISS(
335209    +   AcceptedCmpTotal ,
335210    +   Frq ,
335211    +   Mnt ,
335212    +   MntMeatProducts ,
335213    +   NumCatalogPurchases ,
335214    +   NumDealsPurchases ,
335215    +   NumWebVisitsMonth ,
335216    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
335217    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
335218    +
335219    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335220    +END;
MPRINT(EM_DIAGRAM):   END;
335221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335222    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
335223    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335224    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335225    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
335226    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
335227    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
335228    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
335229    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
335230    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
335231    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
335232    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
335233    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
335234    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
335235    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
335236    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
335237    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
335238    +END;
MPRINT(EM_DIAGRAM):   END;
335239    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
335240    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
335241    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
335242    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
335243    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
335244    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
335245    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
335246    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
335247    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
335248    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
335249    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
335250    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
335251    +   ELSE S_NumCatalogPurchases
335252    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
335253    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
335254    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
335255    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
335256    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
335257    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
335258    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
335259    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
335260    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
335261    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
335262    +END;
MPRINT(EM_DIAGRAM):   END;
335263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335264    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
335265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335267    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
335268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335269    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335270    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
335271    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
335272    +          +     0.02561809182055 * S_MntMeatProducts
335273    +          +     -0.1793288912734 * S_NumCatalogPurchases
335274    +          +    -0.37563080213093 * S_NumDealsPurchases
335275    +          +    -0.48858578777845 * S_NumWebVisitsMonth
335276    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
335277    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
335278    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
335279    +          +     1.94302986779634 * S_MntMeatProducts
335280    +          +      0.2669037763846 * S_NumCatalogPurchases
335281    +          +     0.29313104233947 * S_NumDealsPurchases
335282    +          +    -0.30591479309812 * S_NumWebVisitsMonth
335283    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
335284    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
335285    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
335286    +          +    -0.76055629383789 * S_MntMeatProducts
335287    +          +    -0.40114802991127 * S_NumCatalogPurchases
335288    +          +    -1.12215966034372 * S_NumDealsPurchases
335289    +          +    -0.30978133586417 * S_NumWebVisitsMonth
335290    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
335291    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
335292    +          +     0.20445663414925 * Marital_StatusMarried
335293    +          +     0.16369117386202 * Marital_StatusSingle
335294    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
335295    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
335296    +          +     0.09645374599508 * Marital_StatusMarried
335297    +          +     -0.0816282741981 * Marital_StatusSingle
335298    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
335299    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
335300    +          +     -3.9031880089591 * Marital_StatusMarried
335301    +          +      1.6995748309328 * Marital_StatusSingle
335302    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
335303    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
335304    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
335305    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
335306    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
335307    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
335308    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
335309    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
335310    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
335311    +END;
MPRINT(EM_DIAGRAM):   END;
335312    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
335313    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
335314    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
335315    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
335316    +END;
MPRINT(EM_DIAGRAM):   END;
335317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335318    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
335319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335320    +
335321    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
335322    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
335323    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
335324    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
335325    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
335326    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
335327    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
335328    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
335329    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
335330    +end;
MPRINT(EM_DIAGRAM):   end;
335331    +else do;
MPRINT(EM_DIAGRAM):   else do;
335332    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
335333    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
335334    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
335335    +   end;
MPRINT(EM_DIAGRAM):   end;
335336    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
335337    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
335338    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
335339    +   end;
MPRINT(EM_DIAGRAM):   end;
335340    +   else do;
MPRINT(EM_DIAGRAM):   else do;
335341    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
335342    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
335343    +   end;
MPRINT(EM_DIAGRAM):   end;
335344    +end;
MPRINT(EM_DIAGRAM):   end;
335345    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335346    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
335347    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
335348    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
335349    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
335350    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
335351    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
335352    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
335353    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
335354    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
335355    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
335356    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
335357    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
335358    +END;
MPRINT(EM_DIAGRAM):   END;
335359    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
335360    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
335361    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
335362    +END;
MPRINT(EM_DIAGRAM):   END;
335363    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
335364    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
335365    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
335366    +END;
MPRINT(EM_DIAGRAM):   END;
335367    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
335368    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
335369    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
335370    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
335371    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
335372    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
335373    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
335374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335375    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
335376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335377    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
335378    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
335379    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
335380    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
335381    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
335382    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
335383    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
335384    +END;
MPRINT(EM_DIAGRAM):   END;
335385    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
335386    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
335387    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
335388    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
335389    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
335390    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335391    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
335392    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335393    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
335394    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
335395    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
335396    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
335397    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335398    +* Renaming Into variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural39;
335399    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335400    +length AutoNeural39_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural39_I_DepVar $32;
335401    +drop AutoNeural39_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_I_DepVar;
335402    +AutoNeural39_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural39_I_DepVar = I_DepVar;
335403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335404    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
335405    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335406    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
335407    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
335408    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
335409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335410    +* Ensmbl56: Scoring Code of model 4 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 4 of 6;
335411    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335413    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
335414    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
335415    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
335416    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335417    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
335418    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
335419    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
335420    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
335421    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
335422    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
335423    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
335424    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
335425    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
335426    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
335427    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
335428    +LENGTH _WARN_ $4
335429    +      F_DepVar  $ 12
335430    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
335431    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
335432    +
335433    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
335434    +
335435    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
335436    +
335437    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
335438    +
335439    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
335440    +
335441    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
335442    +
335443    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
335444    +
335445    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
335446    +
335447    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
335448    +
335449    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
335450    +
335451    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
335452    +
335453    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
335454    +
335455    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
335456    +
335457    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
335458    +
335459    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
335460    +
335461    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
335462    +
335463    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
335464    +
335465    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
335466    +
335467    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
335468    +
335469    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
335470    +
335471    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
335472    +
335473    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
335474    +
335475    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
335476    +
335477    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
335478    +
335479    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
335480    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
335481    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
335482    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
335483    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
335484    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
335485    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
335486    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
335487    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
335488    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
335489    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
335490    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
335491    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
335492    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
335493    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335494    +end;
MPRINT(EM_DIAGRAM):   end;
335495    +else do;
MPRINT(EM_DIAGRAM):   else do;
335496    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
335497    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
335498    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
335499    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
335500    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
335501    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
335502    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
335503    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
335504    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335505    +         end;
MPRINT(EM_DIAGRAM):   end;
335506    +         else do;
MPRINT(EM_DIAGRAM):   else do;
335507    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
335508    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
335509    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335510    +            end;
MPRINT(EM_DIAGRAM):   end;
335511    +         end;
MPRINT(EM_DIAGRAM):   end;
335512    +      end;
MPRINT(EM_DIAGRAM):   end;
335513    +      else do;
MPRINT(EM_DIAGRAM):   else do;
335514    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
335515    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
335516    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335517    +         end;
MPRINT(EM_DIAGRAM):   end;
335518    +      end;
MPRINT(EM_DIAGRAM):   end;
335519    +   end;
MPRINT(EM_DIAGRAM):   end;
335520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
335521    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
335522    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
335523    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335524    +      end;
MPRINT(EM_DIAGRAM):   end;
335525    +      else do;
MPRINT(EM_DIAGRAM):   else do;
335526    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
335527    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
335528    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
335529    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
335530    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
335531    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335532    +         end;
MPRINT(EM_DIAGRAM):   end;
335533    +      end;
MPRINT(EM_DIAGRAM):   end;
335534    +   end;
MPRINT(EM_DIAGRAM):   end;
335535    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
335536    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
335537    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
335538    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
335539    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
335540    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
335541    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335542    +   end;
MPRINT(EM_DIAGRAM):   end;
335543    +end;
MPRINT(EM_DIAGRAM):   end;
335544    +
335545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335546    +*** Checking missing input Interval
335547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
335548    +
335549    +IF NMISS(
335550    +   AcceptedCmpTotal ,
335551    +   Frq ,
335552    +   Mnt ,
335553    +   MntMeatProducts ,
335554    +   NumCatalogPurchases ,
335555    +   NumDealsPurchases ,
335556    +   NumWebVisitsMonth ,
335557    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
335558    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
335559    +
335560    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335561    +END;
MPRINT(EM_DIAGRAM):   END;
335562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335563    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
335564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335565    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335566    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
335567    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
335568    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
335569    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
335570    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
335571    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
335572    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
335573    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
335574    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
335575    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
335576    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
335577    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
335578    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
335579    +END;
MPRINT(EM_DIAGRAM):   END;
335580    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
335581    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
335582    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
335583    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
335584    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
335585    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
335586    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
335587    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
335588    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
335589    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
335590    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
335591    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
335592    +   ELSE S_NumCatalogPurchases
335593    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
335594    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
335595    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
335596    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
335597    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
335598    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
335599    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
335600    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
335601    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
335602    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
335603    +END;
MPRINT(EM_DIAGRAM):   END;
335604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335605    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
335606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335608    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
335609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335610    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335611    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
335612    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
335613    +          +      0.2338265945616 * S_MntMeatProducts
335614    +          +     0.01564313414142 * S_NumCatalogPurchases
335615    +          +    -0.07464304384577 * S_NumDealsPurchases
335616    +          +    -0.08299095200051 * S_NumWebVisitsMonth
335617    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 * 
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 * 
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 * 
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
335618    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
335619    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
335620    +          +     -0.3893643428589 * S_MntMeatProducts
335621    +          +    -0.11487225011852 * S_NumCatalogPurchases
335622    +          +       0.001237145136 * S_NumDealsPurchases
335623    +          +    -0.04234500703321 * S_NumWebVisitsMonth
335624    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 * 
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 * 
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 * 
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
335625    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
335626    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
335627    +          +    -0.27963474874984 * S_MntMeatProducts
335628    +          +     0.01939450840376 * S_NumCatalogPurchases
335629    +          +    -0.03907394757592 * S_NumDealsPurchases
335630    +          +     0.06752842740103 * S_NumWebVisitsMonth
335631    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 * 
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 * 
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 * 
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
335632    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
335633    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
335634    +          +     0.09842717305515 * S_MntMeatProducts
335635    +          +     0.48040050668836 * S_NumCatalogPurchases
335636    +          +     0.55911507039756 * S_NumDealsPurchases
335637    +          +     0.35441361757916 * S_NumWebVisitsMonth
335638    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 * 
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 * 
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 * 
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
335639    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
335640    +          +     0.13423943689575 * Marital_StatusMarried
335641    +          +    -0.01496857872487 * Marital_StatusSingle
335642    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced + 
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle + 
0.09065620914015 * Marital_StatusTogether ;
335643    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
335644    +          +     0.03005244373637 * Marital_StatusMarried
335645    +          +    -0.06891231360799 * Marital_StatusSingle
335646    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced + 
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle + 
0.03916911436548 * Marital_StatusTogether ;
335647    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
335648    +          +     0.01694145364157 * Marital_StatusMarried
335649    +          +    -0.05183794192194 * Marital_StatusSingle
335650    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced + 
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle + 
0.03543146366331 * Marital_StatusTogether ;
335651    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
335652    +          +     0.44185773223966 * Marital_StatusMarried
335653    +          +     -0.6351733171702 * Marital_StatusSingle
335654    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced + 
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle + 
0.63280583005707 * Marital_StatusTogether ;
335655    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
335656    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
335657    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
335658    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
335659    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
335660    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
335661    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
335662    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
335663    +END;
MPRINT(EM_DIAGRAM):   END;
335664    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
335665    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
335666    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
335667    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
335668    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
335669    +END;
MPRINT(EM_DIAGRAM):   END;
335670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335671    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
335672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335673    +
335674    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
335675    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
335676    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
335677    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
335678    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
335679    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
335680    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
335681    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
335682    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
335683    +end;
MPRINT(EM_DIAGRAM):   end;
335684    +else do;
MPRINT(EM_DIAGRAM):   else do;
335685    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
335686    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
335687    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
335688    +   end;
MPRINT(EM_DIAGRAM):   end;
335689    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
335690    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
335691    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
335692    +   end;
MPRINT(EM_DIAGRAM):   end;
335693    +   else do;
MPRINT(EM_DIAGRAM):   else do;
335694    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
335695    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
335696    +   end;
MPRINT(EM_DIAGRAM):   end;
335697    +end;
MPRINT(EM_DIAGRAM):   end;
335698    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335699    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
335700    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 + 
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
335701    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
335702    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
335703    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
335704    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
335705    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
335706    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
335707    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
335708    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
335709    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
335710    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
335711    +END;
MPRINT(EM_DIAGRAM):   END;
335712    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
335713    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
335714    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
335715    +END;
MPRINT(EM_DIAGRAM):   END;
335716    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
335717    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
335718    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
335719    +END;
MPRINT(EM_DIAGRAM):   END;
335720    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
335721    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
335722    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
335723    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
335724    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
335725    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
335726    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
335727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335728    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
335729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335730    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
335731    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
335732    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
335733    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
335734    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
335735    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
335736    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
335737    +END;
MPRINT(EM_DIAGRAM):   END;
335738    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
335739    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
335740    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
335741    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
335742    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
335743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335744    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
335745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335746    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
335747    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
335748    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
335749    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
335750    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335751    +* Renaming Into variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural40;
335752    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335753    +length AutoNeural40_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural40_I_DepVar $32;
335754    +drop AutoNeural40_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_I_DepVar;
335755    +AutoNeural40_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural40_I_DepVar = I_DepVar;
335756    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335757    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
335758    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335759    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
335760    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
335761    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
335762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335763    +* Ensmbl56: Scoring Code of model 5 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 5 of 6;
335764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335765    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335766    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
335767    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
335768    +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
335769    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
335770    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
335771    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
335772    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
335773    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
335774    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
335775    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
335776    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
335777    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
335778    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
335779    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
335780    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
335781    +LENGTH _WARN_ $4
335782    +      F_DepVar  $ 12
335783    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
335784    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
335785    +
335786    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
335787    +
335788    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
335789    +
335790    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
335791    +
335792    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
335793    +
335794    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
335795    +
335796    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
335797    +
335798    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
335799    +
335800    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
335801    +
335802    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
335803    +
335804    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
335805    +
335806    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
335807    +
335808    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
335809    +
335810    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
335811    +
335812    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
335813    +
335814    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
335815    +
335816    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
335817    +
335818    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
335819    +
335820    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
335821    +
335822    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
335823    +
335824    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
335825    +
335826    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
335827    +
335828    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
335829    +
335830    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
335831    +
335832    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
335833    +
335834    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
335835    +
335836    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
335837    +
335838    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
335839    +
335840    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
335841    +
335842    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
335843    +
335844    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
335845    +
335846    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
335847    +
335848    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
335849    +
335850    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
335851    +
335852    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
335853    +
335854    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
335855    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
335856    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
335857    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
335858    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
335859    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
335860    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
335861    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
335862    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
335863    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
335864    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
335865    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
335866    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
335867    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
335868    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335869    +end;
MPRINT(EM_DIAGRAM):   end;
335870    +else do;
MPRINT(EM_DIAGRAM):   else do;
335871    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
335872    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
335873    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
335874    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
335875    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
335876    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
335877    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
335878    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
335879    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335880    +         end;
MPRINT(EM_DIAGRAM):   end;
335881    +         else do;
MPRINT(EM_DIAGRAM):   else do;
335882    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
335883    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
335884    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335885    +            end;
MPRINT(EM_DIAGRAM):   end;
335886    +         end;
MPRINT(EM_DIAGRAM):   end;
335887    +      end;
MPRINT(EM_DIAGRAM):   end;
335888    +      else do;
MPRINT(EM_DIAGRAM):   else do;
335889    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
335890    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
335891    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335892    +         end;
MPRINT(EM_DIAGRAM):   end;
335893    +      end;
MPRINT(EM_DIAGRAM):   end;
335894    +   end;
MPRINT(EM_DIAGRAM):   end;
335895    +   else do;
MPRINT(EM_DIAGRAM):   else do;
335896    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
335897    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
335898    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335899    +      end;
MPRINT(EM_DIAGRAM):   end;
335900    +      else do;
MPRINT(EM_DIAGRAM):   else do;
335901    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
335902    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
335903    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
335904    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
335905    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
335906    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
335907    +         end;
MPRINT(EM_DIAGRAM):   end;
335908    +      end;
MPRINT(EM_DIAGRAM):   end;
335909    +   end;
MPRINT(EM_DIAGRAM):   end;
335910    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
335911    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
335912    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
335913    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
335914    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
335915    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
335916    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335917    +   end;
MPRINT(EM_DIAGRAM):   end;
335918    +end;
MPRINT(EM_DIAGRAM):   end;
335919    +
335920    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335921    +*** Checking missing input Interval
335922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
335923    +
335924    +IF NMISS(
335925    +   AcceptedCmpTotal ,
335926    +   Frq ,
335927    +   Mnt ,
335928    +   MntMeatProducts ,
335929    +   NumCatalogPurchases ,
335930    +   NumDealsPurchases ,
335931    +   NumWebVisitsMonth ,
335932    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
335933    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
335934    +
335935    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
335936    +END;
MPRINT(EM_DIAGRAM):   END;
335937    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335938    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
335939    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335940    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335941    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
335942    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
335943    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
335944    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
335945    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
335946    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
335947    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
335948    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
335949    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
335950    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
335951    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
335952    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
335953    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
335954    +END;
MPRINT(EM_DIAGRAM):   END;
335955    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
335956    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
335957    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
335958    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
335959    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
335960    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
335961    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
335962    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
335963    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
335964    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
335965    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
335966    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
335967    +   ELSE S_NumCatalogPurchases
335968    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
335969    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
335970    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
335971    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
335972    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
335973    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
335974    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
335975    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
335976    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
335977    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
335978    +END;
MPRINT(EM_DIAGRAM):   END;
335979    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335980    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
335981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335983    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
335984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
335985    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
335986    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
335987    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
335988    +          +    -1.92258561684999 * S_MntMeatProducts
335989    +          +     -1.7098915194593 * S_NumCatalogPurchases
335990    +          +    -0.73092398706652 * S_NumDealsPurchases
335991    +          +    -1.52371325097768 * S_NumWebVisitsMonth
335992    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 * 
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 * 
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 * 
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
335993    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
335994    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
335995    +          +     3.63686708458831 * S_MntMeatProducts
335996    +          +     0.32632650897658 * S_NumCatalogPurchases
335997    +          +     1.27820262549135 * S_NumDealsPurchases
335998    +          +    -0.18941034658667 * S_NumWebVisitsMonth
335999    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 * 
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 * 
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 * 
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
336000    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
336001    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
336002    +          +    -0.10252809999866 * S_MntMeatProducts
336003    +          +    -2.01730745054613 * S_NumCatalogPurchases
336004    +          +     0.36276273056202 * S_NumDealsPurchases
336005    +          +    -2.03441379397145 * S_NumWebVisitsMonth
336006    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 * 
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 * 
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 * 
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
336007    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
336008    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
336009    +          +     8.03567059273376 * S_MntMeatProducts
336010    +          +     2.16664649845379 * S_NumCatalogPurchases
336011    +          +     0.84009978401032 * S_NumDealsPurchases
336012    +          +     0.11354933533503 * S_NumWebVisitsMonth
336013    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 * 
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 * 
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 * 
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
336014    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
336015    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
336016    +          +     1.87107978843927 * S_MntMeatProducts
336017    +          +    -0.31123291719979 * S_NumCatalogPurchases
336018    +          +    -2.80886037303887 * S_NumDealsPurchases
336019    +          +     0.08829426076164 * S_NumWebVisitsMonth
336020    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq 
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 * 
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 * 
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
336021    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
336022    +          +     0.50838467240268 * Marital_StatusMarried
336023    +          +    -0.57765911295879 * Marital_StatusSingle
336024    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced + 
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle + 
-0.24222335065155 * Marital_StatusTogether ;
336025    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
336026    +          +     0.03531168852657 * Marital_StatusMarried
336027    +          +    -0.34417109081648 * Marital_StatusSingle
336028    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced + 
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle + 
-0.31315325265885 * Marital_StatusTogether ;
336029    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
336030    +          +      1.9516301625913 * Marital_StatusMarried
336031    +          +    -0.24904237582097 * Marital_StatusSingle
336032    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced + 
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle + 
1.51668241109596 * Marital_StatusTogether ;
336033    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
336034    +          +     0.06718550412505 * Marital_StatusMarried
336035    +          +    -0.16735434131197 * Marital_StatusSingle
336036    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced + 
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle + 
1.06963270761532 * Marital_StatusTogether ;
336037    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
336038    +          +    -1.79498797741807 * Marital_StatusMarried
336039    +          +     2.86341746904333 * Marital_StatusSingle
336040    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced + 
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle + 
-2.44061593695879 * Marital_StatusTogether ;
336041    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
336042    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
336043    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
336044    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
336045    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
336046    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
336047    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
336048    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
336049    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
336050    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
336051    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
336052    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
336053    +END;
MPRINT(EM_DIAGRAM):   END;
336054    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336055    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
336056    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
336057    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
336058    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
336059    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
336060    +END;
MPRINT(EM_DIAGRAM):   END;
336061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336062    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
336063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336064    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336065    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
336066    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
336067    +          +    -0.19914740985847 * S_MntMeatProducts
336068    +          +    -0.96920717464092 * S_NumCatalogPurchases
336069    +          +    -1.68508588177508 * S_NumDealsPurchases
336070    +          +     -0.9404284924488 * S_NumWebVisitsMonth
336071    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 * 
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092 
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 * 
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
336072    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
336073    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
336074    +          +    -1.60286606361912 * S_MntMeatProducts
336075    +          +    -0.05010796315816 * S_NumCatalogPurchases
336076    +          +      1.1380574488234 * S_NumDealsPurchases
336077    +          +     0.25426721345204 * S_NumWebVisitsMonth
336078    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq 
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 * 
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 * 
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
336079    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
336080    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
336081    +          +     2.58979830897092 * S_MntMeatProducts
336082    +          +      1.2569773545009 * S_NumCatalogPurchases
336083    +          +     0.21119951191653 * S_NumDealsPurchases
336084    +          +    -0.40993456334326 * S_NumWebVisitsMonth
336085    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 * 
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 * 
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 * 
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
336086    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
336087    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
336088    +          +     1.58324428521578 * S_MntMeatProducts
336089    +          +    -0.64140579988939 * S_NumCatalogPurchases
336090    +          +    -0.07557073365385 * S_NumDealsPurchases
336091    +          +     0.27159109297915 * S_NumWebVisitsMonth
336092    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 * 
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 * 
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 * 
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
336093    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
336094    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
336095    +          +     0.02133290318048 * S_MntMeatProducts
336096    +          +    -0.37682732019302 * S_NumCatalogPurchases
336097    +          +     2.57483962426003 * S_NumDealsPurchases
336098    +          +    -0.76651867011773 * S_NumWebVisitsMonth
336099    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 * 
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 * 
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 * 
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
336100    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
336101    +          +     1.00798219323102 * Marital_StatusMarried
336102    +          +     -1.3878630687005 * Marital_StatusSingle
336103    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced + 
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle + 
0.38993646858937 * Marital_StatusTogether ;
336104    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
336105    +          +    -0.99149540204741 * Marital_StatusMarried
336106    +          +    -0.22772928542301 * Marital_StatusSingle
336107    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced + 
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle + 
2.92746205796719 * Marital_StatusTogether ;
336108    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
336109    +          +     1.54170826840021 * Marital_StatusMarried
336110    +          +    -0.09937587953829 * Marital_StatusSingle
336111    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced + 
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle + 
0.56302999728519 * Marital_StatusTogether ;
336112    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
336113    +          +    -0.48775794259019 * Marital_StatusMarried
336114    +          +     0.87075561905397 * Marital_StatusSingle
336115    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced + 
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle + 
0.04810416118778 * Marital_StatusTogether ;
336116    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
336117    +          +     0.01260332236695 * Marital_StatusMarried
336118    +          +     1.18815076116703 * Marital_StatusSingle
336119    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced + 
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle + 
0.48437203261339 * Marital_StatusTogether ;
336120    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
336121    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
336122    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
336123    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
336124    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
336125    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
336126    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
336127    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
336128    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
336129    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
336130    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
336131    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
336132    +END;
MPRINT(EM_DIAGRAM):   END;
336133    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336134    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
336135    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
336136    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
336137    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
336138    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
336139    +END;
MPRINT(EM_DIAGRAM):   END;
336140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336141    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
336142    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336143    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336144    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
336145    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
336146    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 + 
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
336147    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
336148    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
336149    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 + 
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
336150    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
336151    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
336152    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 + 
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
336153    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
336154    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
336155    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 + 
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
336156    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
336157    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
336158    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 + 
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
336159    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
336160    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
336161    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2 
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
336162    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
336163    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
336164    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2 
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
336165    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
336166    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
336167    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2 
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
336168    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
336169    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
336170    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2 
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
336171    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
336172    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
336173    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2 
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
336174    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
336175    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
336176    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
336177    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
336178    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
336179    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
336180    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
336181    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
336182    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
336183    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
336184    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
336185    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
336186    +END;
MPRINT(EM_DIAGRAM):   END;
336187    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336188    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
336189    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
336190    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
336191    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
336192    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
336193    +END;
MPRINT(EM_DIAGRAM):   END;
336194    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336195    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
336196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336197    +
336198    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
336199    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
336200    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
336201    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
336202    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
336203    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
336204    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
336205    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
336206    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
336207    +end;
MPRINT(EM_DIAGRAM):   end;
336208    +else do;
MPRINT(EM_DIAGRAM):   else do;
336209    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
336210    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
336211    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
336212    +   end;
MPRINT(EM_DIAGRAM):   end;
336213    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
336214    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
336215    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
336216    +   end;
MPRINT(EM_DIAGRAM):   end;
336217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
336218    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
336219    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
336220    +   end;
MPRINT(EM_DIAGRAM):   end;
336221    +end;
MPRINT(EM_DIAGRAM):   end;
336222    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336223    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
336224    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
336225    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 + 
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
336226    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
336227    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
336228    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
336229    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
336230    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
336231    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
336232    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
336233    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
336234    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
336235    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
336236    +END;
MPRINT(EM_DIAGRAM):   END;
336237    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336238    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
336239    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
336240    +END;
MPRINT(EM_DIAGRAM):   END;
336241    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
336242    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
336243    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
336244    +END;
MPRINT(EM_DIAGRAM):   END;
336245    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
336246    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
336247    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
336248    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
336249    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
336250    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
336251    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
336252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336253    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
336254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336255    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
336256    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
336257    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
336258    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
336259    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
336260    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
336261    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
336262    +END;
MPRINT(EM_DIAGRAM):   END;
336263    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
336264    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
336265    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
336266    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
336267    +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
336268    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336269    +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
336270    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336271    +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
336272    +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
336273    +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
336274    +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
336275    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336276    +* Renaming Into variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural34;
336277    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336278    +length AutoNeural34_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural34_I_DepVar $32;
336279    +drop AutoNeural34_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_I_DepVar;
336280    +AutoNeural34_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural34_I_DepVar = I_DepVar;
336281    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336282    +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
336283    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336284    +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
336285    +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
336286    +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
336287    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336288    +* Ensmbl56: Scoring Code of model 6 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 6 of 6;
336289    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336290    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336291    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
336292    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
336293    +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
336294    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
336295    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
336296    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
336297    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
336298    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
336299    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
336300    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
336301    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
336302    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
336303    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
336304    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
336305    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
336306    +LENGTH _WARN_ $4
336307    +      F_DepVar  $ 12
336308    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
336309    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
336310    +
336311    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
336312    +
336313    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
336314    +
336315    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
336316    +
336317    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
336318    +
336319    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
336320    +
336321    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
336322    +
336323    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
336324    +
336325    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
336326    +
336327    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
336328    +
336329    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
336330    +
336331    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
336332    +
336333    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
336334    +
336335    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
336336    +
336337    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
336338    +
336339    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
336340    +
336341    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
336342    +
336343    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
336344    +
336345    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
336346    +
336347    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
336348    +
336349    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
336350    +
336351    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
336352    +
336353    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
336354    +
336355    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
336356    +
336357    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
336358    +
336359    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
336360    +
336361    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
336362    +
336363    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
336364    +
336365    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
336366    +
336367    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
336368    +
336369    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
336370    +
336371    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
336372    +
336373    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
336374    +
336375    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
336376    +
336377    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
336378    +
336379    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
336380    +
336381    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
336382    +
336383    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
336384    +
336385    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
336386    +
336387    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
336388    +
336389    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
336390    +
336391    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
336392    +
336393    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
336394    +
336395    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
336396    +
336397    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
336398    +
336399    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
336400    +
336401    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
336402    +
336403    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
336404    +
336405    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
336406    +
336407    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
336408    +
336409    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
336410    +
336411    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
336412    +
336413    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
336414    +
336415    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
336416    +
336417    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
336418    +
336419    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
336420    +
336421    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
336422    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
336423    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
336424    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
336425    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
336426    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
336427    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
336428    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
336429    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
336430    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
336431    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
336432    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
336433    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
336434    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
336435    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
336436    +end;
MPRINT(EM_DIAGRAM):   end;
336437    +else do;
MPRINT(EM_DIAGRAM):   else do;
336438    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
336439    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
336440    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
336441    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
336442    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
336443    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
336444    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
336445    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
336446    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
336447    +         end;
MPRINT(EM_DIAGRAM):   end;
336448    +         else do;
MPRINT(EM_DIAGRAM):   else do;
336449    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
336450    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
336451    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
336452    +            end;
MPRINT(EM_DIAGRAM):   end;
336453    +         end;
MPRINT(EM_DIAGRAM):   end;
336454    +      end;
MPRINT(EM_DIAGRAM):   end;
336455    +      else do;
MPRINT(EM_DIAGRAM):   else do;
336456    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
336457    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
336458    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
336459    +         end;
MPRINT(EM_DIAGRAM):   end;
336460    +      end;
MPRINT(EM_DIAGRAM):   end;
336461    +   end;
MPRINT(EM_DIAGRAM):   end;
336462    +   else do;
MPRINT(EM_DIAGRAM):   else do;
336463    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
336464    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
336465    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
336466    +      end;
MPRINT(EM_DIAGRAM):   end;
336467    +      else do;
MPRINT(EM_DIAGRAM):   else do;
336468    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
336469    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
336470    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
336471    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
336472    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
336473    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
336474    +         end;
MPRINT(EM_DIAGRAM):   end;
336475    +      end;
MPRINT(EM_DIAGRAM):   end;
336476    +   end;
MPRINT(EM_DIAGRAM):   end;
336477    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
336478    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
336479    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
336480    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
336481    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
336482    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
336483    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
336484    +   end;
MPRINT(EM_DIAGRAM):   end;
336485    +end;
MPRINT(EM_DIAGRAM):   end;
336486    +
336487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336488    +*** Checking missing input Interval
336489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
336490    +
336491    +IF NMISS(
336492    +   AcceptedCmpTotal ,
336493    +   Frq ,
336494    +   Mnt ,
336495    +   MntMeatProducts ,
336496    +   NumCatalogPurchases ,
336497    +   NumDealsPurchases ,
336498    +   NumWebVisitsMonth ,
336499    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
336500    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
336501    +
336502    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
336503    +END;
MPRINT(EM_DIAGRAM):   END;
336504    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336505    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
336506    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336507    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336508    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
336509    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
336510    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
336511    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
336512    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
336513    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
336514    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
336515    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
336516    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
336517    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
336518    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
336519    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
336520    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
336521    +END;
MPRINT(EM_DIAGRAM):   END;
336522    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336523    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
336524    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
336525    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
336526    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
336527    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
336528    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
336529    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
336530    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
336531    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
336532    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
336533    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
336534    +   ELSE S_NumCatalogPurchases
336535    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
336536    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
336537    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
336538    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
336539    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
336540    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
336541    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
336542    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
336543    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
336544    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
336545    +END;
MPRINT(EM_DIAGRAM):   END;
336546    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336547    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
336548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336550    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
336551    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336552    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336553    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
336554    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
336555    +          +     2.79168320854924 * S_MntMeatProducts
336556    +          +    -1.09894266401589 * S_NumCatalogPurchases
336557    +          +    -0.32966417347551 * S_NumDealsPurchases
336558    +          +    -0.72195034767343 * S_NumWebVisitsMonth
336559    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 * 
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 * 
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 * 
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
336560    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
336561    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
336562    +          +     9.02469430152189 * S_MntMeatProducts
336563    +          +     1.42644521887241 * S_NumCatalogPurchases
336564    +          +      0.6475058577302 * S_NumDealsPurchases
336565    +          +     0.08123225110233 * S_NumWebVisitsMonth
336566    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 * 
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 * 
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 * 
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
336567    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
336568    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
336569    +          +     5.40567027331821 * S_MntMeatProducts
336570    +          +     0.21404551755506 * S_NumCatalogPurchases
336571    +          +    -3.79184634796332 * S_NumDealsPurchases
336572    +          +     0.64355102802571 * S_NumWebVisitsMonth
336573    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 * 
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 * 
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 * 
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
336574    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
336575    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
336576    +          +     2.35287601364019 * S_MntMeatProducts
336577    +          +    -3.27198648531912 * S_NumCatalogPurchases
336578    +          +    -0.16046880718311 * S_NumDealsPurchases
336579    +          +     -3.7025327830273 * S_NumWebVisitsMonth
336580    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 * 
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 * 
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 * 
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
336581    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
336582    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
336583    +          +     8.39312647460766 * S_MntMeatProducts
336584    +          +     3.07026872536137 * S_NumCatalogPurchases
336585    +          +     2.03045608124213 * S_NumDealsPurchases
336586    +          +     3.86452915398414 * S_NumWebVisitsMonth
336587    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 * 
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 * 
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 * 
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
336588    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
336589    +          +     0.14979485299347 * Marital_StatusMarried
336590    +          +    -0.09166445391312 * Marital_StatusSingle
336591    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced + 
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle + 
-0.8898837643688 * Marital_StatusTogether ;
336592    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
336593    +          +      0.1646484112393 * Marital_StatusMarried
336594    +          +     0.01074681811884 * Marital_StatusSingle
336595    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced + 
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle + 
-0.38035258327435 * Marital_StatusTogether ;
336596    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
336597    +          +    -0.28313626645981 * Marital_StatusMarried
336598    +          +      2.8257446964988 * Marital_StatusSingle
336599    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced + 
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle + 
0.44817043395102 * Marital_StatusTogether ;
336600    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
336601    +          +     3.05775024202559 * Marital_StatusMarried
336602    +          +    -0.23539571945671 * Marital_StatusSingle
336603    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced + 
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle + 
4.66331490520755 * Marital_StatusTogether ;
336604    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
336605    +          +    -0.48359916542157 * Marital_StatusMarried
336606    +          +    -1.64182316823237 * Marital_StatusSingle
336607    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced + 
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle + 
1.33430611846768 * Marital_StatusTogether ;
336608    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
336609    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
336610    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
336611    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
336612    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
336613    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
336614    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
336615    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
336616    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
336617    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
336618    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
336619    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
336620    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
336621    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
336622    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
336623    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
336624    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
336625    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
336626    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
336627    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
336628    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
336629    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
336630    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
336631    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
336632    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
336633    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
336634    +END;
MPRINT(EM_DIAGRAM):   END;
336635    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336636    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
336637    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
336638    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
336639    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
336640    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
336641    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
336642    +END;
MPRINT(EM_DIAGRAM):   END;
336643    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336644    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
336645    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336646    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336647    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
336648    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
336649    +          +     0.55999885697493 * S_MntMeatProducts
336650    +          +      0.2225207563207 * S_NumCatalogPurchases
336651    +          +     -1.0233439835205 * S_NumDealsPurchases
336652    +          +    -0.35430585878397 * S_NumWebVisitsMonth
336653    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 * 
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 * 
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 * 
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
336654    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
336655    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
336656    +          +    -1.04508919964747 * S_MntMeatProducts
336657    +          +     -0.6758665249546 * S_NumCatalogPurchases
336658    +          +    -0.24215201937497 * S_NumDealsPurchases
336659    +          +    -1.02736823453312 * S_NumWebVisitsMonth
336660    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 * 
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 * 
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 * 
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
336661    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
336662    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
336663    +          +    -3.97854305593999 * S_MntMeatProducts
336664    +          +    -2.05331728407593 * S_NumCatalogPurchases
336665    +          +    -0.48841403720827 * S_NumDealsPurchases
336666    +          +     0.25411498590567 * S_NumWebVisitsMonth
336667    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 * 
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593 
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 * 
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
336668    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
336669    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
336670    +          +     -0.7071400781557 * S_MntMeatProducts
336671    +          +     1.20780208787296 * S_NumCatalogPurchases
336672    +          +    -0.58152407834402 * S_NumDealsPurchases
336673    +          +     2.15567925539399 * S_NumWebVisitsMonth
336674    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 * 
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 * 
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 * 
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
336675    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
336676    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
336677    +          +    -1.07023271439686 * S_MntMeatProducts
336678    +          +     0.31952847185507 * S_NumCatalogPurchases
336679    +          +     0.97232557455358 * S_NumDealsPurchases
336680    +          +     1.40227284681788 * S_NumWebVisitsMonth
336681    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 * 
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 * 
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 * 
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
336682    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
336683    +          +    -1.54860787754125 * Marital_StatusMarried
336684    +          +     3.07164083530731 * Marital_StatusSingle
336685    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced + 
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle + 
-0.82580381126768 * Marital_StatusTogether ;
336686    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
336687    +          +     1.93404037878036 * Marital_StatusMarried
336688    +          +    -1.33159061927866 * Marital_StatusSingle
336689    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced + 
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle + 
-1.07762979483959 * Marital_StatusTogether ;
336690    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
336691    +          +    -1.20603561095549 * Marital_StatusMarried
336692    +          +     1.40927693179184 * Marital_StatusSingle
336693    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced + 
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle + 
-0.49407691558139 * Marital_StatusTogether ;
336694    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
336695    +          +     -0.1442863204197 * Marital_StatusMarried
336696    +          +     0.60523055771734 * Marital_StatusSingle
336697    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced + 
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle + 
0.73192299984342 * Marital_StatusTogether ;
336698    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
336699    +          +     0.09024082077945 * Marital_StatusMarried
336700    +          +     0.46315219527454 * Marital_StatusSingle
336701    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced + 
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle + 
-0.88863370904771 * Marital_StatusTogether ;
336702    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
336703    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
336704    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
336705    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
336706    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
336707    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
336708    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
336709    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
336710    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
336711    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
336712    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
336713    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
336714    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
336715    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
336716    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
336717    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
336718    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
336719    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
336720    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
336721    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
336722    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
336723    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
336724    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
336725    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
336726    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
336727    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
336728    +END;
MPRINT(EM_DIAGRAM):   END;
336729    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336730    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
336731    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
336732    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
336733    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
336734    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
336735    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
336736    +END;
MPRINT(EM_DIAGRAM):   END;
336737    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336738    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
336739    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336740    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336741    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
336742    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
336743    +          +    -1.02461177883701 * S_MntMeatProducts
336744    +          +     0.58245198640098 * S_NumCatalogPurchases
336745    +          +    -0.23780276328844 * S_NumDealsPurchases
336746    +          +     1.28202459687231 * S_NumWebVisitsMonth
336747    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 * 
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 * 
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 * 
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
336748    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
336749    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
336750    +          +     0.13875330330852 * S_MntMeatProducts
336751    +          +    -0.22996544763814 * S_NumCatalogPurchases
336752    +          +    -0.36599639965399 * S_NumDealsPurchases
336753    +          +     1.99081506581768 * S_NumWebVisitsMonth
336754    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 * 
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 * 
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 * 
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
336755    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
336756    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
336757    +          +     0.94472031892058 * S_MntMeatProducts
336758    +          +     0.27511909854912 * S_NumCatalogPurchases
336759    +          +    -0.55526545857693 * S_NumDealsPurchases
336760    +          +    -0.61544688091302 * S_NumWebVisitsMonth
336761    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 * 
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 * 
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 * 
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
336762    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
336763    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
336764    +          +     1.61403840093612 * S_MntMeatProducts
336765    +          +    -0.34382576245292 * S_NumCatalogPurchases
336766    +          +     0.70213159483637 * S_NumDealsPurchases
336767    +          +    -0.39731145628175 * S_NumWebVisitsMonth
336768    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 * 
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 * 
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 * 
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
336769    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
336770    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
336771    +          +    -0.33974847531229 * S_MntMeatProducts
336772    +          +     1.74350962571519 * S_NumCatalogPurchases
336773    +          +     0.41098583446208 * S_NumDealsPurchases
336774    +          +    -0.66305298743409 * S_NumWebVisitsMonth
336775    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 * 
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 * 
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 * 
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
336776    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
336777    +          +    -0.29510060772746 * Marital_StatusMarried
336778    +          +     1.74124353401891 * Marital_StatusSingle
336779    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced + 
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle + 
0.09719439743973 * Marital_StatusTogether ;
336780    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
336781    +          +    -0.61203463567014 * Marital_StatusMarried
336782    +          +     1.95705767804118 * Marital_StatusSingle
336783    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced + 
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle + 
0.33872926096104 * Marital_StatusTogether ;
336784    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
336785    +          +      1.7151906515185 * Marital_StatusMarried
336786    +          +     0.70376524929742 * Marital_StatusSingle
336787    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced + 
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle + 
-1.29423542782048 * Marital_StatusTogether ;
336788    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
336789    +          +    -1.27088213578872 * Marital_StatusMarried
336790    +          +    -0.91253966593459 * Marital_StatusSingle
336791    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced + 
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle + 
-1.63570965011409 * Marital_StatusTogether ;
336792    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
336793    +          +     -0.5308059771847 * Marital_StatusMarried
336794    +          +    -0.11208078645904 * Marital_StatusSingle
336795    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced + 
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle + 
0.12123408245196 * Marital_StatusTogether ;
336796    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
336797    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
336798    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
336799    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
336800    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
336801    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
336802    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
336803    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
336804    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
336805    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
336806    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
336807    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
336808    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
336809    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
336810    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
336811    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
336812    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
336813    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
336814    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
336815    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
336816    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
336817    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
336818    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
336819    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
336820    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
336821    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
336822    +END;
MPRINT(EM_DIAGRAM):   END;
336823    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336824    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
336825    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
336826    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
336827    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
336828    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
336829    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
336830    +END;
MPRINT(EM_DIAGRAM):   END;
336831    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336832    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
336833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336834    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336835    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
336836    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
336837    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 + 
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 + 
3.54247817086581 * H1x1_6 ;
336838    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
336839    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
336840    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 + 
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 + 
-0.52107667797315 * H1x1_6 ;
336841    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
336842    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
336843    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 + 
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 + 
0.60012496024445 * H1x1_6 ;
336844    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
336845    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
336846    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 + 
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 + 
2.02399938887542 * H1x1_6 ;
336847    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
336848    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
336849    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 + 
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 + 
-4.36781665394854 * H1x1_6 ;
336850    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
336851    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
336852    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 + 
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 + 
-0.71801946066256 * H1x1_6 ;
336853    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
336854    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
336855    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
336856    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2 
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 + 
2.04509722582983 * H1x2_6 ;
336857    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
336858    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
336859    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
336860    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2 
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 + 
-0.58594558422322 * H1x2_6 ;
336861    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
336862    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
336863    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
336864    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2 
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 + 
0.11690916040928 * H1x2_6 ;
336865    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
336866    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
336867    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
336868    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2 
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 + 
2.96934196494413 * H1x2_6 ;
336869    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
336870    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
336871    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
336872    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2 
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 + 
-2.39364002282682 * H1x2_6 ;
336873    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
336874    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
336875    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
336876    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 * 
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 + 
-0.91996717495653 * H1x2_6 ;
336877    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
336878    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
336879    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
336880    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2 
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 + 
0.53167866343669 * H1x3_6 ;
336881    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
336882    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
336883    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
336884    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2 
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 + 
0.09325988094727 * H1x3_6 ;
336885    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
336886    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
336887    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
336888    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 * 
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5 
+ -0.43722126116548 * H1x3_6 ;
336889    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
336890    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
336891    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
336892    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2 
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 + 
1.49998370890459 * H1x3_6 ;
336893    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
336894    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
336895    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
336896    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2 
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 + 
-0.30128378921356 * H1x3_6 ;
336897    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
336898    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
336899    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
336900    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2 
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 + 
-0.19152232249307 * H1x3_6 ;
336901    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
336902    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
336903    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
336904    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
336905    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
336906    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
336907    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
336908    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
336909    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
336910    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
336911    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
336912    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
336913    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
336914    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
336915    +END;
MPRINT(EM_DIAGRAM):   END;
336916    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
336917    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
336918    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
336919    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
336920    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
336921    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
336922    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
336923    +END;
MPRINT(EM_DIAGRAM):   END;
336924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336925    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
336926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
336927    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
336928    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
336929    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
336930    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 + 
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 + 
-1.19299469136178 * H1x1_6 ;
336931    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
336932    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
336933    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 + 
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 + 
-0.23243316190231 * H1x1_6 ;
336934    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
336935    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
336936    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 + 
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 + 
1.14739016222951 * H1x1_6 ;
336937    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
336938    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
336939    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 + 
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 + 
0.69001883670374 * H1x1_6 ;
336940    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
336941    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
336942    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 + 
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 + 
1.62881757963203 * H1x1_6 ;
336943    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
336944    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
336945    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 + 
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 + 
1.10728303240553 * H1x1_6 ;
336946    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
336947    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
336948    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
336949    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2 
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 + 
1.21824749182936 * H1x2_6 ;
336950    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
336951    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
336952    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
336953    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2 
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 + 
-0.70127450180732 * H1x2_6 ;
336954    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
336955    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
336956    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
336957    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2 
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 + 
0.1757517587226 * H1x2_6 ;
336958    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
336959    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
336960    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
336961    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2 
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 + 
0.8693099398328 * H1x2_6 ;
336962    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
336963    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
336964    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
336965    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2 
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 + 
0.11240659705231 * H1x2_6 ;
336966    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
336967    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
336968    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
336969    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2 
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 + 
0.67151326645383 * H1x2_6 ;
336970    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
336971    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
336972    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
336973    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2 
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 + 
-0.76522554014331 * H1x3_6 ;
336974    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
336975    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
336976    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
336977    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2 
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 + 
1.79694481340011 * H1x3_6 ;
336978    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
336979    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
336980    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
336981    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2 
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 + 
0.43346153474351 * H1x3_6 ;
336982    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
336983    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
336984    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
336985    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 * 
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5 
+ 0.11633831354046 * H1x3_6 ;
336986    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
336987    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
336988    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
336989    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2 
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 + 
-0.51535580022884 * H1x3_6 ;
336990    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
336991    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
336992    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
336993    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 + 
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 + 
1.02261478089015 * H1x3_6 ;
336994    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
336995    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
336996    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
336997    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
336998    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
336999    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
337000    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
337001    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
337002    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
337003    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
337004    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
337005    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
337006    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
337007    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
337008    +END;
MPRINT(EM_DIAGRAM):   END;
337009    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
337010    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
337011    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
337012    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
337013    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
337014    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
337015    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
337016    +END;
MPRINT(EM_DIAGRAM):   END;
337017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337018    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
337019    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337020    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
337021    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
337022    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
337023    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 + 
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 + 
-0.19906676643855 * H2x1_6 ;
337024    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
337025    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
337026    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 + 
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 + 
-0.76411205087595 * H2x1_6 ;
337027    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
337028    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
337029    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 + 
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 + 
-1.24122940235749 * H2x1_6 ;
337030    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
337031    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
337032    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 + 
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 + 
1.46523065565448 * H2x1_6 ;
337033    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
337034    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
337035    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 + 
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 + 
-0.45051702468841 * H2x1_6 ;
337036    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
337037    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
337038    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 + 
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 + 
0.29690402913896 * H2x1_6 ;
337039    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
337040    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
337041    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
337042    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 * 
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 + 
-0.96381430690961 * H2x2_6 ;
337043    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
337044    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
337045    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
337046    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2 
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 + 
-1.37757472119786 * H2x2_6 ;
337047    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
337048    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
337049    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
337050    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2 
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 + 
-1.58203174336227 * H2x2_6 ;
337051    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
337052    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
337053    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
337054    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 * 
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 + 
1.21364725785316 * H2x2_6 ;
337055    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
337056    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
337057    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
337058    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2 
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 + 
0.95942799624748 * H2x2_6 ;
337059    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
337060    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
337061    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
337062    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2 
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 + 
0.23144688198135 * H2x2_6 ;
337063    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
337064    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
337065    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
337066    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
337067    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
337068    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
337069    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
337070    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
337071    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
337072    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
337073    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
337074    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
337075    +END;
MPRINT(EM_DIAGRAM):   END;
337076    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
337077    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
337078    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
337079    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
337080    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
337081    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
337082    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
337083    +END;
MPRINT(EM_DIAGRAM):   END;
337084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337085    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
337086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337087    +
337088    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
337089    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
337090    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
337091    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
337092    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
337093    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
337094    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
337095    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
337096    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
337097    +end;
MPRINT(EM_DIAGRAM):   end;
337098    +else do;
MPRINT(EM_DIAGRAM):   else do;
337099    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
337100    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
337101    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
337102    +   end;
MPRINT(EM_DIAGRAM):   end;
337103    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
337104    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
337105    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
337106    +   end;
MPRINT(EM_DIAGRAM):   end;
337107    +   else do;
MPRINT(EM_DIAGRAM):   else do;
337108    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
337109    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
337110    +   end;
MPRINT(EM_DIAGRAM):   end;
337111    +end;
MPRINT(EM_DIAGRAM):   end;
337112    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
337113    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
337114    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
337115    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 + 
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 + 
-2.12623562549552 * H3x1_6 ;
337116    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
337117    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
337118    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
337119    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
337120    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
337121    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
337122    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
337123    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
337124    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
337125    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
337126    +END;
MPRINT(EM_DIAGRAM):   END;
337127    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
337128    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
337129    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
337130    +END;
MPRINT(EM_DIAGRAM):   END;
337131    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
337132    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
337133    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
337134    +END;
MPRINT(EM_DIAGRAM):   END;
337135    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
337136    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
337137    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
337138    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
337139    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
337140    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
337141    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
337142    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337143    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
337144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337145    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
337146    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
337147    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
337148    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
337149    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
337150    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
337151    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
337152    +END;
MPRINT(EM_DIAGRAM):   END;
337153    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
337154    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
337155    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
337156    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
337157    +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
337158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337159    +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
337160    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337161    +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
337162    +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
337163    +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
337164    +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
337165    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337166    +* Renaming Into variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural35;
337167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337168    +length AutoNeural35_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural35_I_DepVar $32;
337169    +drop AutoNeural35_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_I_DepVar;
337170    +AutoNeural35_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural35_I_DepVar = I_DepVar;
337171    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337172    +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
337173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337174    +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
337175    +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
337176    +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
337177    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337178    +* Ensmbl56: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Voting to produce predicted target;
337179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337180    +array Ensmbl56_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl56_post{2} _temporary_;
337181    +array Ensmbl56_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl56_count{2} _temporary_;
337182    +array Ensmbl56_level{2} $32 _temporary_ (
337183    +"1"
337184    +"0"
337185    +);
The SAS System

MPRINT(EM_DIAGRAM):   array Ensmbl56_level{2} $32 _temporary_ ( "1" "0" );
337186    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
337187    +Ensmbl56_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{i} = 0;
337188    +Ensmbl56_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{i} = 0;
337189    +end;
MPRINT(EM_DIAGRAM):   end;
337190    +if AutoNeural37_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural37_I_DepVar = Ensmbl56_level{1} then do;
337191    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
337192    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural37_P_DepVar1;
337193    +end;
MPRINT(EM_DIAGRAM):   end;
337194    +if AutoNeural38_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural38_I_DepVar = Ensmbl56_level{1} then do;
337195    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
337196    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural38_P_DepVar1;
337197    +end;
MPRINT(EM_DIAGRAM):   end;
337198    +if AutoNeural39_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural39_I_DepVar = Ensmbl56_level{1} then do;
337199    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
337200    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural39_P_DepVar1;
337201    +end;
MPRINT(EM_DIAGRAM):   end;
337202    +if AutoNeural40_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural40_I_DepVar = Ensmbl56_level{1} then do;
337203    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
337204    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural40_P_DepVar1;
337205    +end;
MPRINT(EM_DIAGRAM):   end;
337206    +if AutoNeural34_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural34_I_DepVar = Ensmbl56_level{1} then do;
337207    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
337208    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural34_P_DepVar1;
337209    +end;
MPRINT(EM_DIAGRAM):   end;
337210    +if AutoNeural35_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural35_I_DepVar = Ensmbl56_level{1} then do;
337211    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
337212    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural35_P_DepVar1;
337213    +end;
MPRINT(EM_DIAGRAM):   end;
337214    +if AutoNeural37_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural37_I_DepVar = Ensmbl56_level{2} then do;
337215    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
337216    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural37_P_DepVar0;
337217    +end;
MPRINT(EM_DIAGRAM):   end;
337218    +if AutoNeural38_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural38_I_DepVar = Ensmbl56_level{2} then do;
337219    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
337220    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural38_P_DepVar0;
337221    +end;
MPRINT(EM_DIAGRAM):   end;
337222    +if AutoNeural39_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural39_I_DepVar = Ensmbl56_level{2} then do;
337223    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
337224    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural39_P_DepVar0;
337225    +end;
MPRINT(EM_DIAGRAM):   end;
337226    +if AutoNeural40_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural40_I_DepVar = Ensmbl56_level{2} then do;
337227    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
337228    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural40_P_DepVar0;
337229    +end;
MPRINT(EM_DIAGRAM):   end;
337230    +if AutoNeural34_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural34_I_DepVar = Ensmbl56_level{2} then do;
337231    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
337232    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural34_P_DepVar0;
337233    +end;
MPRINT(EM_DIAGRAM):   end;
337234    +if AutoNeural35_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural35_I_DepVar = Ensmbl56_level{2} then do;
337235    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
337236    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural35_P_DepVar0;
337237    +end;
MPRINT(EM_DIAGRAM):   end;
337238    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337239    +* Ensmbl56: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Determine Into Variable;
337240    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337241    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
337242    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
337243    +vote_count = max(
337244    +Ensmbl56_count{1} ,
337245    +Ensmbl56_count{2}
337246    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl56_count{1} , Ensmbl56_count{2} );
337247    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
337248    +if Ensmbl56_count{i}=vote_count and Ensmbl56_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl56_count{i}=vote_count and Ensmbl56_post{i}>vote_post then do;
337249    +I_DepVar = Ensmbl56_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl56_level{i};
337250    +vote_post = Ensmbl56_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl56_count{i};
337251    +end;
MPRINT(EM_DIAGRAM):   end;
337252    +end;
MPRINT(EM_DIAGRAM):   end;
337253    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337254    +* Ensmbl56: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Compute posterior vars using models predicting the chosen 
level;
337255    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337256    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
337257    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
337258    +if I_DepVar = AutoNeural37_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural37_I_DepVar then do;
337259    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural37_P_DepVar1;
337260    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural37_P_DepVar0;
337261    +end;
MPRINT(EM_DIAGRAM):   end;
337262    +if I_DepVar = AutoNeural38_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural38_I_DepVar then do;
337263    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural38_P_DepVar1;
337264    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural38_P_DepVar0;
337265    +end;
MPRINT(EM_DIAGRAM):   end;
337266    +if I_DepVar = AutoNeural39_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural39_I_DepVar then do;
337267    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural39_P_DepVar1;
337268    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural39_P_DepVar0;
337269    +end;
MPRINT(EM_DIAGRAM):   end;
337270    +if I_DepVar = AutoNeural40_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural40_I_DepVar then do;
337271    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural40_P_DepVar1;
337272    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural40_P_DepVar0;
337273    +end;
MPRINT(EM_DIAGRAM):   end;
337274    +if I_DepVar = AutoNeural34_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural34_I_DepVar then do;
337275    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural34_P_DepVar1;
337276    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural34_P_DepVar0;
337277    +end;
MPRINT(EM_DIAGRAM):   end;
337278    +if I_DepVar = AutoNeural35_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural35_I_DepVar then do;
337279    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural35_P_DepVar1;
337280    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural35_P_DepVar0;
337281    +end;
MPRINT(EM_DIAGRAM):   end;
337282    +* Ensmbl56: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Averaging posterior;
337283    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
337284    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
337285    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337286    +* Ensmbl56: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Producing Unformatted variable;
337287    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337288    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
337289    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
337290    +else
337291    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
337292    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337293    +* Ensmbl56: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing _WARN_ Variable;
337294    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337295    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
337296    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
337297    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
337298    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
337298   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
337299    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
337299   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
337300    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
337300   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
337301    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
337301   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
337302    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
337302   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
337303    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
337303   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
337304    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
337304   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
337305    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
337305   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
337306    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
337306   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
337307    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
337307   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
337308    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
337308   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
337309    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
337309   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
337310    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
337310   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
337311    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
337311   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
337312    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
337312   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
337313    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
337313   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
337314    +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
337314   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
337315    +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
337315   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
337316    +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
337316   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
337317    +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
337317   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
337318    +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
337318   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
337319    +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
337319   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
337320    +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
337320   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
337321    +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
337321   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
337322    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337323    +* Ensmbl56: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing Residual Vars;
337324    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337325    +if
337326    +F_DepVar NE '1'
337327    +AND F_DepVar NE '0'
337328    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
337329    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
337330    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
337331    +end;
MPRINT(EM_DIAGRAM):   end;
337332    +else do;
MPRINT(EM_DIAGRAM):   else do;
337333    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
337334    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
337335    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
337336    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
337337    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
337338    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
337339    +END;
MPRINT(EM_DIAGRAM):   END;
337340    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
337341     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL56_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL37_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
337342     quit;
337343     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
337344     filename emflow
337344   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring AUTONEURAL37_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337345     *------------------------------------------------------------*;
337346     * Ensmbl56: Scoring AUTONEURAL37_VALIDATE data;
337347     *------------------------------------------------------------*;
337348     data EMWS8.Ensmbl56_VALIDATE
337349     / view=EMWS8.Ensmbl56_VALIDATE
337350     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_VALIDATE / view=EMWS8.Ensmbl56_VALIDATE ;
337351     set EMWS8.AutoNeural37_VALIDATE
337352     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_VALIDATE ;
337353     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas.
337354    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337355    +* Ensmbl56: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Combine model for DepVar;
337356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337357    +* Ensmbl56: Scoring Code of model 1 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 1 of 6;
337358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337359    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337360    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
337361    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
337362    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
337363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337364    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337365    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
337366    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
337367    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
337368    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337370    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
337371    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
337372    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
337373    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337374    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337375    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
337376    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
337377    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
337378    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337379    +
337380    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
337381    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
337381   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
337382    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
337383    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
337384    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
337385    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
337386    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
337387    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337388    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
337389    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
337390    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
337391    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337392    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337393    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
337394    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337395    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
337396    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
337397    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
337398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337399    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
337400    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
337401    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
337402    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337404    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
337405    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
337406    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
337407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337408    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337409    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
337410    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
337411    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
337412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337413    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
337414    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
337415    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
337416    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
337417    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
337418    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
337419    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
337420    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
337421    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
337422    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
337423    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
337424    +LENGTH _WARN_ $4
337425    +      F_DepVar  $ 12
337426    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
337427    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
337428    +
337429    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
337430    +
337431    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
337432    +
337433    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
337434    +
337435    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
337436    +
337437    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
337438    +
337439    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
337440    +
337441    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
337442    +
337443    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
337444    +
337445    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
337446    +
337447    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
337448    +
337449    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
337450    +
337451    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
337452    +
337453    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
337454    +
337455    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
337456    +
337457    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
337458    +
337459    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
337460    +
337461    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
337462    +
337463    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
337464    +
337465    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
337466    +
337467    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
337468    +
337469    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
337470    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
337471    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
337472    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
337473    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
337474    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
337475    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
337476    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
337477    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
337478    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
337479    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
337480    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
337481    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
337482    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
337483    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
337484    +end;
MPRINT(EM_DIAGRAM):   end;
337485    +else do;
MPRINT(EM_DIAGRAM):   else do;
337486    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
337487    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
337488    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
337489    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
337490    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
337491    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
337492    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
337493    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
337494    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337495    +         end;
MPRINT(EM_DIAGRAM):   end;
337496    +         else do;
MPRINT(EM_DIAGRAM):   else do;
337497    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
337498    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
337499    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337500    +            end;
MPRINT(EM_DIAGRAM):   end;
337501    +         end;
MPRINT(EM_DIAGRAM):   end;
337502    +      end;
MPRINT(EM_DIAGRAM):   end;
337503    +      else do;
MPRINT(EM_DIAGRAM):   else do;
337504    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
337505    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
337506    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337507    +         end;
MPRINT(EM_DIAGRAM):   end;
337508    +      end;
MPRINT(EM_DIAGRAM):   end;
337509    +   end;
MPRINT(EM_DIAGRAM):   end;
337510    +   else do;
MPRINT(EM_DIAGRAM):   else do;
337511    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
337512    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
337513    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337514    +      end;
MPRINT(EM_DIAGRAM):   end;
337515    +      else do;
MPRINT(EM_DIAGRAM):   else do;
337516    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
337517    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
337518    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
337519    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
337520    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
337521    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337522    +         end;
MPRINT(EM_DIAGRAM):   end;
337523    +      end;
MPRINT(EM_DIAGRAM):   end;
337524    +   end;
MPRINT(EM_DIAGRAM):   end;
337525    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
337526    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
337527    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
337528    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
337529    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
337530    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
337531    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
337532    +   end;
MPRINT(EM_DIAGRAM):   end;
337533    +end;
MPRINT(EM_DIAGRAM):   end;
337534    +
337535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337536    +*** Checking missing input Interval
337537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
337538    +
337539    +IF NMISS(
337540    +   AcceptedCmpTotal ,
337541    +   Frq ,
337542    +   Mnt ,
337543    +   MntMeatProducts ,
337544    +   NumCatalogPurchases ,
337545    +   NumDealsPurchases ,
337546    +   NumWebVisitsMonth ,
337547    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
337548    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
337549    +
337550    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
337551    +END;
MPRINT(EM_DIAGRAM):   END;
337552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337553    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
337554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337555    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
337556    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
337557    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
337558    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
337559    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
337560    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
337561    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
337562    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
337563    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
337564    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
337565    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
337566    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
337567    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
337568    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
337569    +END;
MPRINT(EM_DIAGRAM):   END;
337570    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
337571    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
337572    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
337573    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
337574    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
337575    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
337576    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
337577    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
337578    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
337579    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
337580    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
337581    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
337582    +   ELSE S_NumCatalogPurchases
337583    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
337584    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
337585    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
337586    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
337587    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
337588    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
337589    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
337590    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
337591    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
337592    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
337593    +END;
MPRINT(EM_DIAGRAM):   END;
337594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337595    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
337596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337598    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
337599    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337600    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
337601    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
337602    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
337603    +          +     6.08901143667375 * S_MntMeatProducts
337604    +          +     2.21464286693249 * S_NumCatalogPurchases
337605    +          +     0.88693497635794 * S_NumDealsPurchases
337606    +          +    -0.16352347343851 * S_NumWebVisitsMonth
337607    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 * 
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 * 
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 * 
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
337608    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
337609    +          +     0.97693281807676 * Marital_StatusMarried
337610    +          +    -0.47353913752833 * Marital_StatusSingle
337611    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced + 
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle + 
0.72993998289048 * Marital_StatusTogether ;
337612    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
337613    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
337614    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
337615    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
337616    +END;
MPRINT(EM_DIAGRAM):   END;
337617    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
337618    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
337619    +END;
MPRINT(EM_DIAGRAM):   END;
337620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337621    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
337622    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337623    +
337624    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
337625    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
337626    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
337627    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
337628    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
337629    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
337630    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
337631    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
337632    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
337633    +end;
MPRINT(EM_DIAGRAM):   end;
337634    +else do;
MPRINT(EM_DIAGRAM):   else do;
337635    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
337636    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
337637    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
337638    +   end;
MPRINT(EM_DIAGRAM):   end;
337639    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
337640    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
337641    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
337642    +   end;
MPRINT(EM_DIAGRAM):   end;
337643    +   else do;
MPRINT(EM_DIAGRAM):   else do;
337644    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
337645    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
337646    +   end;
MPRINT(EM_DIAGRAM):   end;
337647    +end;
MPRINT(EM_DIAGRAM):   end;
337648    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
337649    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
337650    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
337651    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
337652    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
337653    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
337654    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
337655    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
337656    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
337657    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
337658    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
337659    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
337660    +END;
MPRINT(EM_DIAGRAM):   END;
337661    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
337662    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
337663    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
337664    +END;
MPRINT(EM_DIAGRAM):   END;
337665    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
337666    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
337667    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
337668    +END;
MPRINT(EM_DIAGRAM):   END;
337669    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
337670    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
337671    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
337672    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
337673    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
337674    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
337675    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
337676    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337677    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
337678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337679    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
337680    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
337681    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
337682    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
337683    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
337684    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
337685    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
337686    +END;
MPRINT(EM_DIAGRAM):   END;
337687    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
337688    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
337689    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
337690    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
337691    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
337692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337693    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
337694    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337695    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
337696    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
337697    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
337698    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
337699    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337700    +* Renaming Into variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural37;
337701    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337702    +length AutoNeural37_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural37_I_DepVar $32;
337703    +drop AutoNeural37_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_I_DepVar;
337704    +AutoNeural37_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural37_I_DepVar = I_DepVar;
337705    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337706    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
337707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337708    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
337709    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
337710    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
337711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337712    +* Ensmbl56: Scoring Code of model 2 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 2 of 6;
337713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337714    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337715    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
337716    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
337717    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
337718    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
337719    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
337720    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
337721    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
337722    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
337723    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
337724    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
337725    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
337726    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
337727    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
337728    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
337729    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
337730    +LENGTH _WARN_ $4
337731    +      F_DepVar  $ 12
337732    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
337733    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
337734    +
337735    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
337736    +
337737    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
337738    +
337739    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
337740    +
337741    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
337742    +
337743    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
337744    +
337745    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
337746    +
337747    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
337748    +
337749    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
337750    +
337751    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
337752    +
337753    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
337754    +
337755    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
337756    +
337757    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
337758    +
337759    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
337760    +
337761    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
337762    +
337763    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
337764    +
337765    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
337766    +
337767    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
337768    +
337769    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
337770    +
337771    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
337772    +
337773    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
337774    +
337775    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
337776    +
337777    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
337778    +
337779    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
337780    +
337781    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
337782    +
337783    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
337784    +
337785    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
337786    +
337787    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
337788    +
337789    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
337790    +
337791    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
337792    +
337793    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
337794    +
337795    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
337796    +
337797    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
337798    +
337799    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
337800    +
337801    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
337802    +
337803    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
337804    +
337805    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
337806    +
337807    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
337808    +
337809    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
337810    +
337811    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
337812    +
337813    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
337814    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
337815    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
337816    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
337817    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
337818    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
337819    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
337820    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
337821    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
337822    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
337823    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
337824    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
337825    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
337826    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
337827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
337828    +end;
MPRINT(EM_DIAGRAM):   end;
337829    +else do;
MPRINT(EM_DIAGRAM):   else do;
337830    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
337831    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
337832    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
337833    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
337834    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
337835    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
337836    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
337837    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
337838    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337839    +         end;
MPRINT(EM_DIAGRAM):   end;
337840    +         else do;
MPRINT(EM_DIAGRAM):   else do;
337841    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
337842    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
337843    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337844    +            end;
MPRINT(EM_DIAGRAM):   end;
337845    +         end;
MPRINT(EM_DIAGRAM):   end;
337846    +      end;
MPRINT(EM_DIAGRAM):   end;
337847    +      else do;
MPRINT(EM_DIAGRAM):   else do;
337848    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
337849    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
337850    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337851    +         end;
MPRINT(EM_DIAGRAM):   end;
337852    +      end;
MPRINT(EM_DIAGRAM):   end;
337853    +   end;
MPRINT(EM_DIAGRAM):   end;
337854    +   else do;
MPRINT(EM_DIAGRAM):   else do;
337855    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
337856    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
337857    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337858    +      end;
MPRINT(EM_DIAGRAM):   end;
337859    +      else do;
MPRINT(EM_DIAGRAM):   else do;
337860    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
337861    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
337862    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
337863    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
337864    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
337865    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
337866    +         end;
MPRINT(EM_DIAGRAM):   end;
337867    +      end;
MPRINT(EM_DIAGRAM):   end;
337868    +   end;
MPRINT(EM_DIAGRAM):   end;
337869    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
337870    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
337871    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
337872    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
337873    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
337874    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
337875    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
337876    +   end;
MPRINT(EM_DIAGRAM):   end;
337877    +end;
MPRINT(EM_DIAGRAM):   end;
337878    +
337879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337880    +*** Checking missing input Interval
337881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
337882    +
337883    +IF NMISS(
337884    +   AcceptedCmpTotal ,
337885    +   Frq ,
337886    +   Mnt ,
337887    +   MntMeatProducts ,
337888    +   NumCatalogPurchases ,
337889    +   NumDealsPurchases ,
337890    +   NumWebVisitsMonth ,
337891    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
337892    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
337893    +
337894    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
337895    +END;
MPRINT(EM_DIAGRAM):   END;
337896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337897    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
337898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337899    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
337900    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
337901    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
337902    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
337903    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
337904    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
337905    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
337906    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
337907    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
337908    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
337909    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
337910    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
337911    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
337912    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
337913    +END;
MPRINT(EM_DIAGRAM):   END;
337914    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
337915    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
337916    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
337917    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
337918    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
337919    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
337920    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
337921    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
337922    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
337923    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
337924    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
337925    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
337926    +   ELSE S_NumCatalogPurchases
337927    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
337928    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
337929    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
337930    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
337931    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
337932    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
337933    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
337934    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
337935    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
337936    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
337937    +END;
MPRINT(EM_DIAGRAM):   END;
337938    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337939    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
337940    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337941    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337942    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
337943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337944    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
337945    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
337946    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
337947    +          +     3.02405267314398 * S_MntMeatProducts
337948    +          +     0.25422172488707 * S_NumCatalogPurchases
337949    +          +     0.25977266371328 * S_NumDealsPurchases
337950    +          +    -0.26865365728773 * S_NumWebVisitsMonth
337951    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
337952    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
337953    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
337954    +          +    -0.64419071408502 * S_MntMeatProducts
337955    +          +    -0.49060224303044 * S_NumCatalogPurchases
337956    +          +    -0.04840762943457 * S_NumDealsPurchases
337957    +          +     -0.7656247386051 * S_NumWebVisitsMonth
337958    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
337959    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
337960    +          +    -0.05888536499281 * Marital_StatusMarried
337961    +          +    -0.22627441829205 * Marital_StatusSingle
337962    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
337963    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
337964    +          +     0.82536605771339 * Marital_StatusMarried
337965    +          +    -0.97196770004098 * Marital_StatusSingle
337966    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
337967    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
337968    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
337969    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
337970    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
337971    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
337972    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
337973    +END;
MPRINT(EM_DIAGRAM):   END;
337974    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
337975    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
337976    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
337977    +END;
MPRINT(EM_DIAGRAM):   END;
337978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337979    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
337980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
337981    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
337982    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
337983    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
337984    +          +    -1.52187144029368 * S_MntMeatProducts
337985    +          +    -0.17233011764417 * S_NumCatalogPurchases
337986    +          +     0.08681674245114 * S_NumDealsPurchases
337987    +          +     0.13308256651831 * S_NumWebVisitsMonth
337988    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
337989    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
337990    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
337991    +          +     0.66187267823731 * S_MntMeatProducts
337992    +          +     1.52530454111654 * S_NumCatalogPurchases
337993    +          +     0.73982889008686 * S_NumDealsPurchases
337994    +          +     1.03760708665776 * S_NumWebVisitsMonth
337995    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
337996    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
337997    +          +    -0.57121500191985 * Marital_StatusMarried
337998    +          +     0.00575301863466 * Marital_StatusSingle
337999    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
338000    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
338001    +          +     0.68382990555761 * Marital_StatusMarried
338002    +          +    -0.40241665873988 * Marital_StatusSingle
338003    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
338004    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
338005    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
338006    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
338007    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
338008    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
338009    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
338010    +END;
MPRINT(EM_DIAGRAM):   END;
338011    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338012    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
338013    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
338014    +END;
MPRINT(EM_DIAGRAM):   END;
338015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338016    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
338017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338018    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338019    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
338020    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
338021    +          +    -2.40830591527574 * S_MntMeatProducts
338022    +          +    -0.89296864866675 * S_NumCatalogPurchases
338023    +          +     1.79889409325514 * S_NumDealsPurchases
338024    +          +    -0.33765715793031 * S_NumWebVisitsMonth
338025    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
338026    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
338027    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
338028    +          +     0.04224245417831 * S_MntMeatProducts
338029    +          +     0.25836861794607 * S_NumCatalogPurchases
338030    +          +     2.47909264202917 * S_NumDealsPurchases
338031    +          +     0.14790226792406 * S_NumWebVisitsMonth
338032    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
338033    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
338034    +          +     0.39103795234666 * Marital_StatusMarried
338035    +          +    -0.52822284221545 * Marital_StatusSingle
338036    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
338037    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
338038    +          +       1.975579060233 * Marital_StatusMarried
338039    +          +     0.15028521746762 * Marital_StatusSingle
338040    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
338041    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
338042    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
338043    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
338044    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
338045    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
338046    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
338047    +END;
MPRINT(EM_DIAGRAM):   END;
338048    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338049    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
338050    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
338051    +END;
MPRINT(EM_DIAGRAM):   END;
338052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338053    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
338054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338055    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338056    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
338057    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
338058    +          +     0.16060225059391 * S_MntMeatProducts
338059    +          +     1.53093292630033 * S_NumCatalogPurchases
338060    +          +     0.39573641806699 * S_NumDealsPurchases
338061    +          +    -0.95387142126649 * S_NumWebVisitsMonth
338062    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
338063    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
338064    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
338065    +          +     0.71628478327205 * S_MntMeatProducts
338066    +          +     0.15890352363556 * S_NumCatalogPurchases
338067    +          +    -1.12928875468011 * S_NumDealsPurchases
338068    +          +    -0.30108145274307 * S_NumWebVisitsMonth
338069    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
338070    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
338071    +          +     0.91966160839643 * Marital_StatusMarried
338072    +          +    -0.63411090570397 * Marital_StatusSingle
338073    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
338074    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
338075    +          +     0.77230489026504 * Marital_StatusMarried
338076    +          +     0.20456495503812 * Marital_StatusSingle
338077    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
338078    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
338079    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
338080    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
338081    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
338082    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
338083    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
338084    +END;
MPRINT(EM_DIAGRAM):   END;
338085    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338086    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
338087    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
338088    +END;
MPRINT(EM_DIAGRAM):   END;
338089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338090    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
338091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338092    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338093    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
338094    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
338095    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
338096    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
338097    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
338098    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
338099    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
338100    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
338101    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
338102    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
338103    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
338104    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
338105    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
338106    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
338107    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
338108    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
338109    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
338110    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
338111    +END;
MPRINT(EM_DIAGRAM):   END;
338112    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338113    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
338114    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
338115    +END;
MPRINT(EM_DIAGRAM):   END;
338116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338117    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
338118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338119    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338120    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
338121    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
338122    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
338123    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
338124    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
338125    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
338126    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
338127    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
338128    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
338129    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
338130    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
338131    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
338132    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
338133    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
338134    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
338135    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
338136    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
338137    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
338138    +END;
MPRINT(EM_DIAGRAM):   END;
338139    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338140    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
338141    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
338142    +END;
MPRINT(EM_DIAGRAM):   END;
338143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338144    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
338145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338146    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338147    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
338148    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
338149    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
338150    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
338151    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
338152    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
338153    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
338154    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
338155    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
338156    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
338157    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
338158    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
338159    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
338160    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
338161    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
338162    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
338163    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
338164    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
338165    +END;
MPRINT(EM_DIAGRAM):   END;
338166    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338167    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
338168    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
338169    +END;
MPRINT(EM_DIAGRAM):   END;
338170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338171    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
338172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338173    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338174    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
338175    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
338176    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
338177    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
338178    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
338179    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
338180    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
338181    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
338182    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
338183    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
338184    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
338185    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
338186    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
338187    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
338188    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
338189    +END;
MPRINT(EM_DIAGRAM):   END;
338190    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338191    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
338192    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
338193    +END;
MPRINT(EM_DIAGRAM):   END;
338194    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338195    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
338196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338197    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338198    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
338199    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
338200    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
338201    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
338202    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
338203    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
338204    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
338205    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
338206    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
338207    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
338208    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
338209    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
338210    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
338211    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
338212    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
338213    +END;
MPRINT(EM_DIAGRAM):   END;
338214    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338215    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
338216    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
338217    +END;
MPRINT(EM_DIAGRAM):   END;
338218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338219    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
338220    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338221    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338222    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
338223    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
338224    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
338225    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
338226    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
338227    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
338228    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
338229    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
338230    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
338231    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
338232    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
338233    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
338234    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
338235    +END;
MPRINT(EM_DIAGRAM):   END;
338236    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338237    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
338238    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
338239    +END;
MPRINT(EM_DIAGRAM):   END;
338240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338241    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
338242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338243    +
338244    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
338245    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
338246    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
338247    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
338248    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
338249    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
338250    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
338251    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
338252    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
338253    +end;
MPRINT(EM_DIAGRAM):   end;
338254    +else do;
MPRINT(EM_DIAGRAM):   else do;
338255    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
338256    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
338257    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
338258    +   end;
MPRINT(EM_DIAGRAM):   end;
338259    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
338260    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
338261    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
338262    +   end;
MPRINT(EM_DIAGRAM):   end;
338263    +   else do;
MPRINT(EM_DIAGRAM):   else do;
338264    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
338265    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
338266    +   end;
MPRINT(EM_DIAGRAM):   end;
338267    +end;
MPRINT(EM_DIAGRAM):   end;
338268    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338269    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
338270    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
338271    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
338272    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
338273    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
338274    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
338275    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
338276    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
338277    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
338278    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
338279    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
338280    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
338281    +END;
MPRINT(EM_DIAGRAM):   END;
338282    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338283    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
338284    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
338285    +END;
MPRINT(EM_DIAGRAM):   END;
338286    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
338287    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
338288    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
338289    +END;
MPRINT(EM_DIAGRAM):   END;
338290    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
338291    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
338292    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
338293    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
338294    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
338295    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
338296    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
338297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338298    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
338299    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338300    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
338301    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
338302    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
338303    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
338304    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
338305    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
338306    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
338307    +END;
MPRINT(EM_DIAGRAM):   END;
338308    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
338309    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
338310    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
338311    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
338312    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
338313    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338314    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
338315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338316    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
338317    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
338318    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
338319    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
338320    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338321    +* Renaming Into variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural38;
338322    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338323    +length AutoNeural38_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural38_I_DepVar $32;
338324    +drop AutoNeural38_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_I_DepVar;
338325    +AutoNeural38_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural38_I_DepVar = I_DepVar;
338326    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338327    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
338328    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338329    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
338330    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
338331    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
338332    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338333    +* Ensmbl56: Scoring Code of model 3 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 3 of 6;
338334    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338335    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338336    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
338337    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
338338    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
338339    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338340    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
338341    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
338342    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
338343    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
338344    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
338345    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
338346    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
338347    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
338348    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
338349    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
338350    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
338351    +LENGTH _WARN_ $4
338352    +      F_DepVar  $ 12
338353    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
338354    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
338355    +
338356    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
338357    +
338358    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
338359    +
338360    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
338361    +
338362    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
338363    +
338364    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
338365    +
338366    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
338367    +
338368    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
338369    +
338370    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
338371    +
338372    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
338373    +
338374    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
338375    +
338376    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
338377    +
338378    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
338379    +
338380    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
338381    +
338382    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
338383    +
338384    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
338385    +
338386    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
338387    +
338388    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
338389    +
338390    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
338391    +
338392    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
338393    +
338394    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
338395    +
338396    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
338397    +
338398    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
338399    +
338400    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
338401    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
338402    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
338403    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
338404    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
338405    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
338406    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
338407    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
338408    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
338409    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
338410    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
338411    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
338412    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
338413    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
338414    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
338415    +end;
MPRINT(EM_DIAGRAM):   end;
338416    +else do;
MPRINT(EM_DIAGRAM):   else do;
338417    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
338418    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
338419    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
338420    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
338421    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
338422    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
338423    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
338424    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
338425    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338426    +         end;
MPRINT(EM_DIAGRAM):   end;
338427    +         else do;
MPRINT(EM_DIAGRAM):   else do;
338428    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
338429    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
338430    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338431    +            end;
MPRINT(EM_DIAGRAM):   end;
338432    +         end;
MPRINT(EM_DIAGRAM):   end;
338433    +      end;
MPRINT(EM_DIAGRAM):   end;
338434    +      else do;
MPRINT(EM_DIAGRAM):   else do;
338435    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
338436    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
338437    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338438    +         end;
MPRINT(EM_DIAGRAM):   end;
338439    +      end;
MPRINT(EM_DIAGRAM):   end;
338440    +   end;
MPRINT(EM_DIAGRAM):   end;
338441    +   else do;
MPRINT(EM_DIAGRAM):   else do;
338442    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
338443    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
338444    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338445    +      end;
MPRINT(EM_DIAGRAM):   end;
338446    +      else do;
MPRINT(EM_DIAGRAM):   else do;
338447    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
338448    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
338449    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
338450    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
338451    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
338452    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338453    +         end;
MPRINT(EM_DIAGRAM):   end;
338454    +      end;
MPRINT(EM_DIAGRAM):   end;
338455    +   end;
MPRINT(EM_DIAGRAM):   end;
338456    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
338457    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
338458    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
338459    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
338460    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
338461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
338462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
338463    +   end;
MPRINT(EM_DIAGRAM):   end;
338464    +end;
MPRINT(EM_DIAGRAM):   end;
338465    +
338466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338467    +*** Checking missing input Interval
338468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
338469    +
338470    +IF NMISS(
338471    +   AcceptedCmpTotal ,
338472    +   Frq ,
338473    +   Mnt ,
338474    +   MntMeatProducts ,
338475    +   NumCatalogPurchases ,
338476    +   NumDealsPurchases ,
338477    +   NumWebVisitsMonth ,
338478    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
338479    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
338480    +
338481    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
338482    +END;
MPRINT(EM_DIAGRAM):   END;
338483    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338484    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
338485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338486    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338487    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
338488    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
338489    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
338490    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
338491    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
338492    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
338493    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
338494    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
338495    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
338496    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
338497    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
338498    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
338499    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
338500    +END;
MPRINT(EM_DIAGRAM):   END;
338501    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338502    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
338503    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
338504    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
338505    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
338506    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
338507    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
338508    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
338509    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
338510    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
338511    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
338512    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
338513    +   ELSE S_NumCatalogPurchases
338514    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
338515    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
338516    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
338517    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
338518    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
338519    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
338520    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
338521    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
338522    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
338523    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
338524    +END;
MPRINT(EM_DIAGRAM):   END;
338525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338526    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
338527    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338529    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
338530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338531    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338532    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
338533    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
338534    +          +     0.02561809182055 * S_MntMeatProducts
338535    +          +     -0.1793288912734 * S_NumCatalogPurchases
338536    +          +    -0.37563080213093 * S_NumDealsPurchases
338537    +          +    -0.48858578777845 * S_NumWebVisitsMonth
338538    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
338539    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
338540    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
338541    +          +     1.94302986779634 * S_MntMeatProducts
338542    +          +      0.2669037763846 * S_NumCatalogPurchases
338543    +          +     0.29313104233947 * S_NumDealsPurchases
338544    +          +    -0.30591479309812 * S_NumWebVisitsMonth
338545    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
338546    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
338547    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
338548    +          +    -0.76055629383789 * S_MntMeatProducts
338549    +          +    -0.40114802991127 * S_NumCatalogPurchases
338550    +          +    -1.12215966034372 * S_NumDealsPurchases
338551    +          +    -0.30978133586417 * S_NumWebVisitsMonth
338552    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
338553    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
338554    +          +     0.20445663414925 * Marital_StatusMarried
338555    +          +     0.16369117386202 * Marital_StatusSingle
338556    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
338557    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
338558    +          +     0.09645374599508 * Marital_StatusMarried
338559    +          +     -0.0816282741981 * Marital_StatusSingle
338560    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
338561    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
338562    +          +     -3.9031880089591 * Marital_StatusMarried
338563    +          +      1.6995748309328 * Marital_StatusSingle
338564    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
338565    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
338566    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
338567    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
338568    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
338569    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
338570    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
338571    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
338572    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
338573    +END;
MPRINT(EM_DIAGRAM):   END;
338574    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338575    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
338576    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
338577    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
338578    +END;
MPRINT(EM_DIAGRAM):   END;
338579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338580    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
338581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338582    +
338583    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
338584    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
338585    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
338586    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
338587    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
338588    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
338589    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
338590    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
338591    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
338592    +end;
MPRINT(EM_DIAGRAM):   end;
338593    +else do;
MPRINT(EM_DIAGRAM):   else do;
338594    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
338595    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
338596    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
338597    +   end;
MPRINT(EM_DIAGRAM):   end;
338598    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
338599    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
338600    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
338601    +   end;
MPRINT(EM_DIAGRAM):   end;
338602    +   else do;
MPRINT(EM_DIAGRAM):   else do;
338603    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
338604    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
338605    +   end;
MPRINT(EM_DIAGRAM):   end;
338606    +end;
MPRINT(EM_DIAGRAM):   end;
338607    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338608    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
338609    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
338610    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
338611    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
338612    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
338613    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
338614    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
338615    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
338616    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
338617    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
338618    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
338619    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
338620    +END;
MPRINT(EM_DIAGRAM):   END;
338621    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338622    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
338623    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
338624    +END;
MPRINT(EM_DIAGRAM):   END;
338625    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
338626    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
338627    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
338628    +END;
MPRINT(EM_DIAGRAM):   END;
338629    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
338630    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
338631    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
338632    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
338633    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
338634    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
338635    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
338636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338637    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
338638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338639    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
338640    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
338641    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
338642    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
338643    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
338644    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
338645    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
338646    +END;
MPRINT(EM_DIAGRAM):   END;
338647    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
338648    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
338649    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
338650    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
338651    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
338652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338653    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
338654    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338655    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
338656    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
338657    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
338658    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
338659    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338660    +* Renaming Into variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural39;
338661    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338662    +length AutoNeural39_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural39_I_DepVar $32;
338663    +drop AutoNeural39_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_I_DepVar;
338664    +AutoNeural39_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural39_I_DepVar = I_DepVar;
338665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338666    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
338667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338668    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
338669    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
338670    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
338671    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338672    +* Ensmbl56: Scoring Code of model 4 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 4 of 6;
338673    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338674    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338675    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
338676    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
338677    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
338678    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
338679    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
338680    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
338681    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
338682    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
338683    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
338684    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
338685    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
338686    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
338687    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
338688    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
338689    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
338690    +LENGTH _WARN_ $4
338691    +      F_DepVar  $ 12
338692    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
338693    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
338694    +
338695    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
338696    +
338697    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
338698    +
338699    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
338700    +
338701    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
338702    +
338703    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
338704    +
338705    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
338706    +
338707    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
338708    +
338709    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
338710    +
338711    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
338712    +
338713    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
338714    +
338715    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
338716    +
338717    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
338718    +
338719    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
338720    +
338721    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
338722    +
338723    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
338724    +
338725    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
338726    +
338727    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
338728    +
338729    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
338730    +
338731    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
338732    +
338733    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
338734    +
338735    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
338736    +
338737    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
338738    +
338739    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
338740    +
338741    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
338742    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
338743    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
338744    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
338745    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
338746    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
338747    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
338748    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
338749    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
338750    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
338751    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
338752    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
338753    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
338754    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
338755    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
338756    +end;
MPRINT(EM_DIAGRAM):   end;
338757    +else do;
MPRINT(EM_DIAGRAM):   else do;
338758    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
338759    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
338760    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
338761    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
338762    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
338763    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
338764    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
338765    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
338766    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338767    +         end;
MPRINT(EM_DIAGRAM):   end;
338768    +         else do;
MPRINT(EM_DIAGRAM):   else do;
338769    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
338770    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
338771    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338772    +            end;
MPRINT(EM_DIAGRAM):   end;
338773    +         end;
MPRINT(EM_DIAGRAM):   end;
338774    +      end;
MPRINT(EM_DIAGRAM):   end;
338775    +      else do;
MPRINT(EM_DIAGRAM):   else do;
338776    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
338777    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
338778    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338779    +         end;
MPRINT(EM_DIAGRAM):   end;
338780    +      end;
MPRINT(EM_DIAGRAM):   end;
338781    +   end;
MPRINT(EM_DIAGRAM):   end;
338782    +   else do;
MPRINT(EM_DIAGRAM):   else do;
338783    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
338784    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
338785    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338786    +      end;
MPRINT(EM_DIAGRAM):   end;
338787    +      else do;
MPRINT(EM_DIAGRAM):   else do;
338788    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
338789    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
338790    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
338791    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
338792    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
338793    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
338794    +         end;
MPRINT(EM_DIAGRAM):   end;
338795    +      end;
MPRINT(EM_DIAGRAM):   end;
338796    +   end;
MPRINT(EM_DIAGRAM):   end;
338797    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
338798    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
338799    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
338800    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
338801    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
338802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
338803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
338804    +   end;
MPRINT(EM_DIAGRAM):   end;
338805    +end;
MPRINT(EM_DIAGRAM):   end;
338806    +
338807    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338808    +*** Checking missing input Interval
338809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
338810    +
338811    +IF NMISS(
338812    +   AcceptedCmpTotal ,
338813    +   Frq ,
338814    +   Mnt ,
338815    +   MntMeatProducts ,
338816    +   NumCatalogPurchases ,
338817    +   NumDealsPurchases ,
338818    +   NumWebVisitsMonth ,
338819    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
338820    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
338821    +
338822    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
338823    +END;
MPRINT(EM_DIAGRAM):   END;
338824    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338825    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
338826    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338827    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338828    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
338829    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
338830    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
338831    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
338832    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
338833    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
338834    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
338835    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
338836    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
338837    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
338838    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
338839    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
338840    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
338841    +END;
MPRINT(EM_DIAGRAM):   END;
338842    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338843    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
338844    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
338845    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
338846    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
338847    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
338848    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
338849    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
338850    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
338851    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
338852    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
338853    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
338854    +   ELSE S_NumCatalogPurchases
338855    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
338856    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
338857    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
338858    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
338859    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
338860    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
338861    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
338862    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
338863    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
338864    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
338865    +END;
MPRINT(EM_DIAGRAM):   END;
338866    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338867    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
338868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338870    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
338871    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338872    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338873    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
338874    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
338875    +          +      0.2338265945616 * S_MntMeatProducts
338876    +          +     0.01564313414142 * S_NumCatalogPurchases
338877    +          +    -0.07464304384577 * S_NumDealsPurchases
338878    +          +    -0.08299095200051 * S_NumWebVisitsMonth
338879    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 * 
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 * 
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 * 
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
338880    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
338881    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
338882    +          +     -0.3893643428589 * S_MntMeatProducts
338883    +          +    -0.11487225011852 * S_NumCatalogPurchases
338884    +          +       0.001237145136 * S_NumDealsPurchases
338885    +          +    -0.04234500703321 * S_NumWebVisitsMonth
338886    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 * 
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 * 
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 * 
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
338887    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
338888    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
338889    +          +    -0.27963474874984 * S_MntMeatProducts
338890    +          +     0.01939450840376 * S_NumCatalogPurchases
338891    +          +    -0.03907394757592 * S_NumDealsPurchases
338892    +          +     0.06752842740103 * S_NumWebVisitsMonth
338893    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 * 
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 * 
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 * 
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
338894    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
338895    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
338896    +          +     0.09842717305515 * S_MntMeatProducts
338897    +          +     0.48040050668836 * S_NumCatalogPurchases
338898    +          +     0.55911507039756 * S_NumDealsPurchases
338899    +          +     0.35441361757916 * S_NumWebVisitsMonth
338900    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 * 
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 * 
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 * 
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
338901    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
338902    +          +     0.13423943689575 * Marital_StatusMarried
338903    +          +    -0.01496857872487 * Marital_StatusSingle
338904    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced + 
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle + 
0.09065620914015 * Marital_StatusTogether ;
338905    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
338906    +          +     0.03005244373637 * Marital_StatusMarried
338907    +          +    -0.06891231360799 * Marital_StatusSingle
338908    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced + 
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle + 
0.03916911436548 * Marital_StatusTogether ;
338909    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
338910    +          +     0.01694145364157 * Marital_StatusMarried
338911    +          +    -0.05183794192194 * Marital_StatusSingle
338912    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced + 
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle + 
0.03543146366331 * Marital_StatusTogether ;
338913    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
338914    +          +     0.44185773223966 * Marital_StatusMarried
338915    +          +     -0.6351733171702 * Marital_StatusSingle
338916    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced + 
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle + 
0.63280583005707 * Marital_StatusTogether ;
338917    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
338918    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
338919    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
338920    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
338921    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
338922    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
338923    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
338924    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
338925    +END;
MPRINT(EM_DIAGRAM):   END;
338926    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338927    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
338928    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
338929    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
338930    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
338931    +END;
MPRINT(EM_DIAGRAM):   END;
338932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338933    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
338934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338935    +
338936    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
338937    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
338938    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
338939    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
338940    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
338941    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
338942    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
338943    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
338944    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
338945    +end;
MPRINT(EM_DIAGRAM):   end;
338946    +else do;
MPRINT(EM_DIAGRAM):   else do;
338947    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
338948    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
338949    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
338950    +   end;
MPRINT(EM_DIAGRAM):   end;
338951    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
338952    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
338953    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
338954    +   end;
MPRINT(EM_DIAGRAM):   end;
338955    +   else do;
MPRINT(EM_DIAGRAM):   else do;
338956    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
338957    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
338958    +   end;
MPRINT(EM_DIAGRAM):   end;
338959    +end;
MPRINT(EM_DIAGRAM):   end;
338960    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
338961    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
338962    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 + 
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
338963    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
338964    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
338965    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
338966    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
338967    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
338968    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
338969    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
338970    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
338971    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
338972    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
338973    +END;
MPRINT(EM_DIAGRAM):   END;
338974    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
338975    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
338976    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
338977    +END;
MPRINT(EM_DIAGRAM):   END;
338978    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
338979    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
338980    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
338981    +END;
MPRINT(EM_DIAGRAM):   END;
338982    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
338983    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
338984    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
338985    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
338986    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
338987    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
338988    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
338989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338990    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
338991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
338992    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
338993    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
338994    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
338995    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
338996    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
338997    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
338998    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
338999    +END;
MPRINT(EM_DIAGRAM):   END;
339000    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
339001    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
339002    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
339003    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
339004    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
339005    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339006    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
339007    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339008    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
339009    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
339010    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
339011    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
339012    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339013    +* Renaming Into variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural40;
339014    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339015    +length AutoNeural40_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural40_I_DepVar $32;
339016    +drop AutoNeural40_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_I_DepVar;
339017    +AutoNeural40_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural40_I_DepVar = I_DepVar;
339018    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339019    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
339020    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339021    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
339022    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
339023    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
339024    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339025    +* Ensmbl56: Scoring Code of model 5 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 5 of 6;
339026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339027    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339028    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
339029    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
339030    +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
339031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339032    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
339033    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
339034    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
339035    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
339036    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
339037    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
339038    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
339039    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
339040    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
339041    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
339042    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
339043    +LENGTH _WARN_ $4
339044    +      F_DepVar  $ 12
339045    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
339046    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
339047    +
339048    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
339049    +
339050    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
339051    +
339052    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
339053    +
339054    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
339055    +
339056    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
339057    +
339058    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
339059    +
339060    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
339061    +
339062    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
339063    +
339064    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
339065    +
339066    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
339067    +
339068    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
339069    +
339070    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
339071    +
339072    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
339073    +
339074    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
339075    +
339076    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
339077    +
339078    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
339079    +
339080    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
339081    +
339082    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
339083    +
339084    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
339085    +
339086    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
339087    +
339088    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
339089    +
339090    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
339091    +
339092    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
339093    +
339094    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
339095    +
339096    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
339097    +
339098    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
339099    +
339100    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
339101    +
339102    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
339103    +
339104    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
339105    +
339106    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
339107    +
339108    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
339109    +
339110    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
339111    +
339112    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
339113    +
339114    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
339115    +
339116    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
339117    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
339118    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
339119    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
339120    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
339121    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
339122    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
339123    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
339124    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
339125    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
339126    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
339127    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
339128    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
339129    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
339130    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
339131    +end;
MPRINT(EM_DIAGRAM):   end;
339132    +else do;
MPRINT(EM_DIAGRAM):   else do;
339133    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
339134    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
339135    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
339136    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
339137    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
339138    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
339139    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
339140    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
339141    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339142    +         end;
MPRINT(EM_DIAGRAM):   end;
339143    +         else do;
MPRINT(EM_DIAGRAM):   else do;
339144    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
339145    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
339146    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339147    +            end;
MPRINT(EM_DIAGRAM):   end;
339148    +         end;
MPRINT(EM_DIAGRAM):   end;
339149    +      end;
MPRINT(EM_DIAGRAM):   end;
339150    +      else do;
MPRINT(EM_DIAGRAM):   else do;
339151    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
339152    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
339153    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339154    +         end;
MPRINT(EM_DIAGRAM):   end;
339155    +      end;
MPRINT(EM_DIAGRAM):   end;
339156    +   end;
MPRINT(EM_DIAGRAM):   end;
339157    +   else do;
MPRINT(EM_DIAGRAM):   else do;
339158    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
339159    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
339160    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339161    +      end;
MPRINT(EM_DIAGRAM):   end;
339162    +      else do;
MPRINT(EM_DIAGRAM):   else do;
339163    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
339164    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
339165    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
339166    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
339167    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
339168    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339169    +         end;
MPRINT(EM_DIAGRAM):   end;
339170    +      end;
MPRINT(EM_DIAGRAM):   end;
339171    +   end;
MPRINT(EM_DIAGRAM):   end;
339172    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
339173    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
339174    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
339175    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
339176    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
339177    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
339178    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
339179    +   end;
MPRINT(EM_DIAGRAM):   end;
339180    +end;
MPRINT(EM_DIAGRAM):   end;
339181    +
339182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339183    +*** Checking missing input Interval
339184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
339185    +
339186    +IF NMISS(
339187    +   AcceptedCmpTotal ,
339188    +   Frq ,
339189    +   Mnt ,
339190    +   MntMeatProducts ,
339191    +   NumCatalogPurchases ,
339192    +   NumDealsPurchases ,
339193    +   NumWebVisitsMonth ,
339194    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
339195    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
339196    +
339197    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
339198    +END;
MPRINT(EM_DIAGRAM):   END;
339199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339200    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
339201    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339202    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
339203    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
339204    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
339205    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
339206    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
339207    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
339208    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
339209    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
339210    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
339211    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
339212    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
339213    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
339214    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
339215    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
339216    +END;
MPRINT(EM_DIAGRAM):   END;
339217    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
339218    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
339219    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
339220    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
339221    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
339222    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
339223    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
339224    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
339225    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
339226    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
339227    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
339228    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
339229    +   ELSE S_NumCatalogPurchases
339230    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
339231    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
339232    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
339233    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
339234    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
339235    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
339236    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
339237    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
339238    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
339239    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
339240    +END;
MPRINT(EM_DIAGRAM):   END;
339241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339242    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
339243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339245    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
339246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339247    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
339248    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
339249    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
339250    +          +    -1.92258561684999 * S_MntMeatProducts
339251    +          +     -1.7098915194593 * S_NumCatalogPurchases
339252    +          +    -0.73092398706652 * S_NumDealsPurchases
339253    +          +    -1.52371325097768 * S_NumWebVisitsMonth
339254    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 * 
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 * 
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 * 
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
339255    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
339256    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
339257    +          +     3.63686708458831 * S_MntMeatProducts
339258    +          +     0.32632650897658 * S_NumCatalogPurchases
339259    +          +     1.27820262549135 * S_NumDealsPurchases
339260    +          +    -0.18941034658667 * S_NumWebVisitsMonth
339261    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 * 
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 * 
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 * 
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
339262    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
339263    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
339264    +          +    -0.10252809999866 * S_MntMeatProducts
339265    +          +    -2.01730745054613 * S_NumCatalogPurchases
339266    +          +     0.36276273056202 * S_NumDealsPurchases
339267    +          +    -2.03441379397145 * S_NumWebVisitsMonth
339268    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 * 
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 * 
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 * 
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
339269    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
339270    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
339271    +          +     8.03567059273376 * S_MntMeatProducts
339272    +          +     2.16664649845379 * S_NumCatalogPurchases
339273    +          +     0.84009978401032 * S_NumDealsPurchases
339274    +          +     0.11354933533503 * S_NumWebVisitsMonth
339275    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 * 
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 * 
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 * 
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
339276    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
339277    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
339278    +          +     1.87107978843927 * S_MntMeatProducts
339279    +          +    -0.31123291719979 * S_NumCatalogPurchases
339280    +          +    -2.80886037303887 * S_NumDealsPurchases
339281    +          +     0.08829426076164 * S_NumWebVisitsMonth
339282    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq 
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 * 
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 * 
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
339283    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
339284    +          +     0.50838467240268 * Marital_StatusMarried
339285    +          +    -0.57765911295879 * Marital_StatusSingle
339286    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced + 
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle + 
-0.24222335065155 * Marital_StatusTogether ;
339287    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
339288    +          +     0.03531168852657 * Marital_StatusMarried
339289    +          +    -0.34417109081648 * Marital_StatusSingle
339290    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced + 
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle + 
-0.31315325265885 * Marital_StatusTogether ;
339291    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
339292    +          +      1.9516301625913 * Marital_StatusMarried
339293    +          +    -0.24904237582097 * Marital_StatusSingle
339294    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced + 
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle + 
1.51668241109596 * Marital_StatusTogether ;
339295    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
339296    +          +     0.06718550412505 * Marital_StatusMarried
339297    +          +    -0.16735434131197 * Marital_StatusSingle
339298    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced + 
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle + 
1.06963270761532 * Marital_StatusTogether ;
339299    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
339300    +          +    -1.79498797741807 * Marital_StatusMarried
339301    +          +     2.86341746904333 * Marital_StatusSingle
339302    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced + 
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle + 
-2.44061593695879 * Marital_StatusTogether ;
339303    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
339304    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
339305    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
339306    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
339307    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
339308    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
339309    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
339310    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
339311    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
339312    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
339313    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
339314    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
339315    +END;
MPRINT(EM_DIAGRAM):   END;
339316    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
339317    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
339318    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
339319    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
339320    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
339321    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
339322    +END;
MPRINT(EM_DIAGRAM):   END;
339323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339324    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
339325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339326    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
339327    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
339328    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
339329    +          +    -0.19914740985847 * S_MntMeatProducts
339330    +          +    -0.96920717464092 * S_NumCatalogPurchases
339331    +          +    -1.68508588177508 * S_NumDealsPurchases
339332    +          +     -0.9404284924488 * S_NumWebVisitsMonth
339333    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 * 
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092 
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 * 
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
339334    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
339335    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
339336    +          +    -1.60286606361912 * S_MntMeatProducts
339337    +          +    -0.05010796315816 * S_NumCatalogPurchases
339338    +          +      1.1380574488234 * S_NumDealsPurchases
339339    +          +     0.25426721345204 * S_NumWebVisitsMonth
339340    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq 
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 * 
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 * 
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
339341    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
339342    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
339343    +          +     2.58979830897092 * S_MntMeatProducts
339344    +          +      1.2569773545009 * S_NumCatalogPurchases
339345    +          +     0.21119951191653 * S_NumDealsPurchases
339346    +          +    -0.40993456334326 * S_NumWebVisitsMonth
339347    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 * 
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 * 
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 * 
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
339348    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
339349    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
339350    +          +     1.58324428521578 * S_MntMeatProducts
339351    +          +    -0.64140579988939 * S_NumCatalogPurchases
339352    +          +    -0.07557073365385 * S_NumDealsPurchases
339353    +          +     0.27159109297915 * S_NumWebVisitsMonth
339354    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 * 
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 * 
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 * 
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
339355    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
339356    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
339357    +          +     0.02133290318048 * S_MntMeatProducts
339358    +          +    -0.37682732019302 * S_NumCatalogPurchases
339359    +          +     2.57483962426003 * S_NumDealsPurchases
339360    +          +    -0.76651867011773 * S_NumWebVisitsMonth
339361    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 * 
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 * 
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 * 
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
339362    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
339363    +          +     1.00798219323102 * Marital_StatusMarried
339364    +          +     -1.3878630687005 * Marital_StatusSingle
339365    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced + 
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle + 
0.38993646858937 * Marital_StatusTogether ;
339366    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
339367    +          +    -0.99149540204741 * Marital_StatusMarried
339368    +          +    -0.22772928542301 * Marital_StatusSingle
339369    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced + 
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle + 
2.92746205796719 * Marital_StatusTogether ;
339370    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
339371    +          +     1.54170826840021 * Marital_StatusMarried
339372    +          +    -0.09937587953829 * Marital_StatusSingle
339373    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced + 
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle + 
0.56302999728519 * Marital_StatusTogether ;
339374    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
339375    +          +    -0.48775794259019 * Marital_StatusMarried
339376    +          +     0.87075561905397 * Marital_StatusSingle
339377    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced + 
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle + 
0.04810416118778 * Marital_StatusTogether ;
339378    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
339379    +          +     0.01260332236695 * Marital_StatusMarried
339380    +          +     1.18815076116703 * Marital_StatusSingle
339381    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced + 
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle + 
0.48437203261339 * Marital_StatusTogether ;
339382    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
339383    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
339384    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
339385    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
339386    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
339387    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
339388    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
339389    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
339390    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
339391    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
339392    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
339393    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
339394    +END;
MPRINT(EM_DIAGRAM):   END;
339395    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
339396    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
339397    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
339398    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
339399    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
339400    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
339401    +END;
MPRINT(EM_DIAGRAM):   END;
339402    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339403    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
339404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339405    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
339406    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
339407    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
339408    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 + 
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
339409    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
339410    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
339411    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 + 
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
339412    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
339413    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
339414    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 + 
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
339415    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
339416    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
339417    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 + 
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
339418    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
339419    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
339420    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 + 
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
339421    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
339422    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
339423    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2 
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
339424    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
339425    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
339426    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2 
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
339427    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
339428    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
339429    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2 
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
339430    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
339431    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
339432    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2 
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
339433    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
339434    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
339435    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2 
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
339436    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
339437    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
339438    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
339439    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
339440    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
339441    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
339442    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
339443    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
339444    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
339445    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
339446    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
339447    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
339448    +END;
MPRINT(EM_DIAGRAM):   END;
339449    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
339450    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
339451    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
339452    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
339453    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
339454    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
339455    +END;
MPRINT(EM_DIAGRAM):   END;
339456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339457    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
339458    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339459    +
339460    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
339461    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
339462    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
339463    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
339464    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
339465    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
339466    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
339467    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
339468    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
339469    +end;
MPRINT(EM_DIAGRAM):   end;
339470    +else do;
MPRINT(EM_DIAGRAM):   else do;
339471    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
339472    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
339473    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
339474    +   end;
MPRINT(EM_DIAGRAM):   end;
339475    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
339476    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
339477    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
339478    +   end;
MPRINT(EM_DIAGRAM):   end;
339479    +   else do;
MPRINT(EM_DIAGRAM):   else do;
339480    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
339481    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
339482    +   end;
MPRINT(EM_DIAGRAM):   end;
339483    +end;
MPRINT(EM_DIAGRAM):   end;
339484    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
339485    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
339486    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
339487    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 + 
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
339488    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
339489    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
339490    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
339491    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
339492    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
339493    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
339494    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
339495    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
339496    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
339497    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
339498    +END;
MPRINT(EM_DIAGRAM):   END;
339499    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
339500    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
339501    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
339502    +END;
MPRINT(EM_DIAGRAM):   END;
339503    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
339504    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
339505    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
339506    +END;
MPRINT(EM_DIAGRAM):   END;
339507    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
339508    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
339509    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
339510    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
339511    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
339512    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
339513    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
339514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339515    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
339516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339517    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
339518    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
339519    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
339520    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
339521    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
339522    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
339523    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
339524    +END;
MPRINT(EM_DIAGRAM):   END;
339525    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
339526    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
339527    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
339528    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
339529    +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
339530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339531    +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
339532    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339533    +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
339534    +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
339535    +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
339536    +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
339537    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339538    +* Renaming Into variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural34;
339539    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339540    +length AutoNeural34_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural34_I_DepVar $32;
339541    +drop AutoNeural34_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_I_DepVar;
339542    +AutoNeural34_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural34_I_DepVar = I_DepVar;
339543    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339544    +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
339545    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339546    +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
339547    +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
339548    +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
339549    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339550    +* Ensmbl56: Scoring Code of model 6 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 6 of 6;
339551    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339553    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
339554    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
339555    +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
339556    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
339557    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
339558    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
339559    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
339560    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
339561    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
339562    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
339563    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
339564    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
339565    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
339566    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
339567    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
339568    +LENGTH _WARN_ $4
339569    +      F_DepVar  $ 12
339570    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
339571    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
339572    +
339573    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
339574    +
339575    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
339576    +
339577    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
339578    +
339579    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
339580    +
339581    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
339582    +
339583    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
339584    +
339585    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
339586    +
339587    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
339588    +
339589    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
339590    +
339591    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
339592    +
339593    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
339594    +
339595    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
339596    +
339597    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
339598    +
339599    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
339600    +
339601    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
339602    +
339603    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
339604    +
339605    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
339606    +
339607    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
339608    +
339609    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
339610    +
339611    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
339612    +
339613    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
339614    +
339615    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
339616    +
339617    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
339618    +
339619    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
339620    +
339621    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
339622    +
339623    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
339624    +
339625    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
339626    +
339627    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
339628    +
339629    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
339630    +
339631    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
339632    +
339633    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
339634    +
339635    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
339636    +
339637    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
339638    +
339639    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
339640    +
339641    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
339642    +
339643    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
339644    +
339645    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
339646    +
339647    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
339648    +
339649    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
339650    +
339651    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
339652    +
339653    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
339654    +
339655    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
339656    +
339657    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
339658    +
339659    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
339660    +
339661    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
339662    +
339663    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
339664    +
339665    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
339666    +
339667    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
339668    +
339669    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
339670    +
339671    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
339672    +
339673    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
339674    +
339675    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
339676    +
339677    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
339678    +
339679    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
339680    +
339681    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
339682    +
339683    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
339684    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
339685    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
339686    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
339687    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
339688    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
339689    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
339690    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
339691    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
339692    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
339693    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
339694    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
339695    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
339696    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
339697    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
339698    +end;
MPRINT(EM_DIAGRAM):   end;
339699    +else do;
MPRINT(EM_DIAGRAM):   else do;
339700    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
339701    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
339702    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
339703    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
339704    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
339705    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
339706    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
339707    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
339708    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339709    +         end;
MPRINT(EM_DIAGRAM):   end;
339710    +         else do;
MPRINT(EM_DIAGRAM):   else do;
339711    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
339712    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
339713    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339714    +            end;
MPRINT(EM_DIAGRAM):   end;
339715    +         end;
MPRINT(EM_DIAGRAM):   end;
339716    +      end;
MPRINT(EM_DIAGRAM):   end;
339717    +      else do;
MPRINT(EM_DIAGRAM):   else do;
339718    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
339719    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
339720    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339721    +         end;
MPRINT(EM_DIAGRAM):   end;
339722    +      end;
MPRINT(EM_DIAGRAM):   end;
339723    +   end;
MPRINT(EM_DIAGRAM):   end;
339724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
339725    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
339726    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
339727    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339728    +      end;
MPRINT(EM_DIAGRAM):   end;
339729    +      else do;
MPRINT(EM_DIAGRAM):   else do;
339730    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
339731    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
339732    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
339733    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
339734    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
339735    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
339736    +         end;
MPRINT(EM_DIAGRAM):   end;
339737    +      end;
MPRINT(EM_DIAGRAM):   end;
339738    +   end;
MPRINT(EM_DIAGRAM):   end;
339739    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
339740    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
339741    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
339742    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
339743    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
339744    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
339745    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
339746    +   end;
MPRINT(EM_DIAGRAM):   end;
339747    +end;
MPRINT(EM_DIAGRAM):   end;
339748    +
339749    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339750    +*** Checking missing input Interval
339751    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
339752    +
339753    +IF NMISS(
339754    +   AcceptedCmpTotal ,
339755    +   Frq ,
339756    +   Mnt ,
339757    +   MntMeatProducts ,
339758    +   NumCatalogPurchases ,
339759    +   NumDealsPurchases ,
339760    +   NumWebVisitsMonth ,
339761    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
339762    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
339763    +
339764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
339765    +END;
MPRINT(EM_DIAGRAM):   END;
339766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339767    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
339768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339769    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
339770    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
339771    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
339772    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
339773    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
339774    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
339775    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
339776    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
339777    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
339778    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
339779    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
339780    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
339781    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
339782    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
339783    +END;
MPRINT(EM_DIAGRAM):   END;
339784    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
339785    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
339786    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
339787    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
339788    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
339789    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
339790    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
339791    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
339792    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
339793    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
339794    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
339795    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
339796    +   ELSE S_NumCatalogPurchases
339797    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
339798    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
339799    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
339800    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
339801    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
339802    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
339803    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
339804    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
339805    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
339806    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
339807    +END;
MPRINT(EM_DIAGRAM):   END;
339808    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339809    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
339810    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339812    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
339813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339814    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
339815    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
339816    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
339817    +          +     2.79168320854924 * S_MntMeatProducts
339818    +          +    -1.09894266401589 * S_NumCatalogPurchases
339819    +          +    -0.32966417347551 * S_NumDealsPurchases
339820    +          +    -0.72195034767343 * S_NumWebVisitsMonth
339821    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 * 
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 * 
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 * 
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
339822    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
339823    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
339824    +          +     9.02469430152189 * S_MntMeatProducts
339825    +          +     1.42644521887241 * S_NumCatalogPurchases
339826    +          +      0.6475058577302 * S_NumDealsPurchases
339827    +          +     0.08123225110233 * S_NumWebVisitsMonth
339828    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 * 
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 * 
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 * 
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
339829    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
339830    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
339831    +          +     5.40567027331821 * S_MntMeatProducts
339832    +          +     0.21404551755506 * S_NumCatalogPurchases
339833    +          +    -3.79184634796332 * S_NumDealsPurchases
339834    +          +     0.64355102802571 * S_NumWebVisitsMonth
339835    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 * 
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 * 
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 * 
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
339836    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
339837    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
339838    +          +     2.35287601364019 * S_MntMeatProducts
339839    +          +    -3.27198648531912 * S_NumCatalogPurchases
339840    +          +    -0.16046880718311 * S_NumDealsPurchases
339841    +          +     -3.7025327830273 * S_NumWebVisitsMonth
339842    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 * 
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 * 
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 * 
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
339843    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
339844    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
339845    +          +     8.39312647460766 * S_MntMeatProducts
339846    +          +     3.07026872536137 * S_NumCatalogPurchases
339847    +          +     2.03045608124213 * S_NumDealsPurchases
339848    +          +     3.86452915398414 * S_NumWebVisitsMonth
339849    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 * 
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 * 
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 * 
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
339850    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
339851    +          +     0.14979485299347 * Marital_StatusMarried
339852    +          +    -0.09166445391312 * Marital_StatusSingle
339853    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced + 
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle + 
-0.8898837643688 * Marital_StatusTogether ;
339854    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
339855    +          +      0.1646484112393 * Marital_StatusMarried
339856    +          +     0.01074681811884 * Marital_StatusSingle
339857    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced + 
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle + 
-0.38035258327435 * Marital_StatusTogether ;
339858    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
339859    +          +    -0.28313626645981 * Marital_StatusMarried
339860    +          +      2.8257446964988 * Marital_StatusSingle
339861    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced + 
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle + 
0.44817043395102 * Marital_StatusTogether ;
339862    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
339863    +          +     3.05775024202559 * Marital_StatusMarried
339864    +          +    -0.23539571945671 * Marital_StatusSingle
339865    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced + 
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle + 
4.66331490520755 * Marital_StatusTogether ;
339866    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
339867    +          +    -0.48359916542157 * Marital_StatusMarried
339868    +          +    -1.64182316823237 * Marital_StatusSingle
339869    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced + 
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle + 
1.33430611846768 * Marital_StatusTogether ;
339870    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
339871    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
339872    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
339873    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
339874    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
339875    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
339876    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
339877    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
339878    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
339879    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
339880    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
339881    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
339882    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
339883    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
339884    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
339885    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
339886    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
339887    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
339888    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
339889    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
339890    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
339891    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
339892    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
339893    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
339894    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
339895    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
339896    +END;
MPRINT(EM_DIAGRAM):   END;
339897    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
339898    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
339899    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
339900    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
339901    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
339902    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
339903    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
339904    +END;
MPRINT(EM_DIAGRAM):   END;
339905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339906    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
339907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
339908    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
339909    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
339910    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
339911    +          +     0.55999885697493 * S_MntMeatProducts
339912    +          +      0.2225207563207 * S_NumCatalogPurchases
339913    +          +     -1.0233439835205 * S_NumDealsPurchases
339914    +          +    -0.35430585878397 * S_NumWebVisitsMonth
339915    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 * 
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 * 
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 * 
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
339916    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
339917    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
339918    +          +    -1.04508919964747 * S_MntMeatProducts
339919    +          +     -0.6758665249546 * S_NumCatalogPurchases
339920    +          +    -0.24215201937497 * S_NumDealsPurchases
339921    +          +    -1.02736823453312 * S_NumWebVisitsMonth
339922    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 * 
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 * 
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 * 
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
339923    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
339924    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
339925    +          +    -3.97854305593999 * S_MntMeatProducts
339926    +          +    -2.05331728407593 * S_NumCatalogPurchases
339927    +          +    -0.48841403720827 * S_NumDealsPurchases
339928    +          +     0.25411498590567 * S_NumWebVisitsMonth
339929    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 * 
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593 
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 * 
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
339930    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
339931    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
339932    +          +     -0.7071400781557 * S_MntMeatProducts
339933    +          +     1.20780208787296 * S_NumCatalogPurchases
339934    +          +    -0.58152407834402 * S_NumDealsPurchases
339935    +          +     2.15567925539399 * S_NumWebVisitsMonth
339936    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 * 
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 * 
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 * 
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
339937    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
339938    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
339939    +          +    -1.07023271439686 * S_MntMeatProducts
339940    +          +     0.31952847185507 * S_NumCatalogPurchases
339941    +          +     0.97232557455358 * S_NumDealsPurchases
339942    +          +     1.40227284681788 * S_NumWebVisitsMonth
339943    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 * 
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 * 
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 * 
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
339944    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
339945    +          +    -1.54860787754125 * Marital_StatusMarried
339946    +          +     3.07164083530731 * Marital_StatusSingle
339947    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced + 
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle + 
-0.82580381126768 * Marital_StatusTogether ;
339948    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
339949    +          +     1.93404037878036 * Marital_StatusMarried
339950    +          +    -1.33159061927866 * Marital_StatusSingle
339951    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced + 
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle + 
-1.07762979483959 * Marital_StatusTogether ;
339952    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
339953    +          +    -1.20603561095549 * Marital_StatusMarried
339954    +          +     1.40927693179184 * Marital_StatusSingle
339955    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced + 
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle + 
-0.49407691558139 * Marital_StatusTogether ;
339956    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
339957    +          +     -0.1442863204197 * Marital_StatusMarried
339958    +          +     0.60523055771734 * Marital_StatusSingle
339959    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced + 
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle + 
0.73192299984342 * Marital_StatusTogether ;
339960    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
339961    +          +     0.09024082077945 * Marital_StatusMarried
339962    +          +     0.46315219527454 * Marital_StatusSingle
339963    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced + 
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle + 
-0.88863370904771 * Marital_StatusTogether ;
339964    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
339965    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
339966    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
339967    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
339968    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
339969    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
339970    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
339971    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
339972    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
339973    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
339974    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
339975    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
339976    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
339977    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
339978    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
339979    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
339980    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
339981    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
339982    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
339983    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
339984    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
339985    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
339986    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
339987    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
339988    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
339989    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
339990    +END;
MPRINT(EM_DIAGRAM):   END;
339991    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
339992    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
339993    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
339994    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
339995    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
339996    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
339997    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
339998    +END;
MPRINT(EM_DIAGRAM):   END;
339999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340000    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
340001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340002    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
340003    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
340004    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
340005    +          +    -1.02461177883701 * S_MntMeatProducts
340006    +          +     0.58245198640098 * S_NumCatalogPurchases
340007    +          +    -0.23780276328844 * S_NumDealsPurchases
340008    +          +     1.28202459687231 * S_NumWebVisitsMonth
340009    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 * 
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 * 
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 * 
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
340010    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
340011    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
340012    +          +     0.13875330330852 * S_MntMeatProducts
340013    +          +    -0.22996544763814 * S_NumCatalogPurchases
340014    +          +    -0.36599639965399 * S_NumDealsPurchases
340015    +          +     1.99081506581768 * S_NumWebVisitsMonth
340016    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 * 
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 * 
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 * 
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
340017    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
340018    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
340019    +          +     0.94472031892058 * S_MntMeatProducts
340020    +          +     0.27511909854912 * S_NumCatalogPurchases
340021    +          +    -0.55526545857693 * S_NumDealsPurchases
340022    +          +    -0.61544688091302 * S_NumWebVisitsMonth
340023    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 * 
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 * 
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 * 
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
340024    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
340025    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
340026    +          +     1.61403840093612 * S_MntMeatProducts
340027    +          +    -0.34382576245292 * S_NumCatalogPurchases
340028    +          +     0.70213159483637 * S_NumDealsPurchases
340029    +          +    -0.39731145628175 * S_NumWebVisitsMonth
340030    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 * 
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 * 
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 * 
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
340031    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
340032    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
340033    +          +    -0.33974847531229 * S_MntMeatProducts
340034    +          +     1.74350962571519 * S_NumCatalogPurchases
340035    +          +     0.41098583446208 * S_NumDealsPurchases
340036    +          +    -0.66305298743409 * S_NumWebVisitsMonth
340037    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 * 
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 * 
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 * 
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
340038    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
340039    +          +    -0.29510060772746 * Marital_StatusMarried
340040    +          +     1.74124353401891 * Marital_StatusSingle
340041    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced + 
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle + 
0.09719439743973 * Marital_StatusTogether ;
340042    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
340043    +          +    -0.61203463567014 * Marital_StatusMarried
340044    +          +     1.95705767804118 * Marital_StatusSingle
340045    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced + 
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle + 
0.33872926096104 * Marital_StatusTogether ;
340046    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
340047    +          +      1.7151906515185 * Marital_StatusMarried
340048    +          +     0.70376524929742 * Marital_StatusSingle
340049    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced + 
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle + 
-1.29423542782048 * Marital_StatusTogether ;
340050    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
340051    +          +    -1.27088213578872 * Marital_StatusMarried
340052    +          +    -0.91253966593459 * Marital_StatusSingle
340053    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced + 
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle + 
-1.63570965011409 * Marital_StatusTogether ;
340054    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
340055    +          +     -0.5308059771847 * Marital_StatusMarried
340056    +          +    -0.11208078645904 * Marital_StatusSingle
340057    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced + 
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle + 
0.12123408245196 * Marital_StatusTogether ;
340058    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
340059    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
340060    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
340061    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
340062    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
340063    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
340064    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
340065    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
340066    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
340067    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
340068    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
340069    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
340070    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
340071    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
340072    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
340073    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
340074    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
340075    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
340076    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
340077    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
340078    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
340079    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
340080    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
340081    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
340082    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
340083    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
340084    +END;
MPRINT(EM_DIAGRAM):   END;
340085    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
340086    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
340087    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
340088    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
340089    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
340090    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
340091    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
340092    +END;
MPRINT(EM_DIAGRAM):   END;
340093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340094    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
340095    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340096    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
340097    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
340098    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
340099    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 + 
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 + 
3.54247817086581 * H1x1_6 ;
340100    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
340101    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
340102    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 + 
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 + 
-0.52107667797315 * H1x1_6 ;
340103    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
340104    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
340105    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 + 
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 + 
0.60012496024445 * H1x1_6 ;
340106    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
340107    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
340108    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 + 
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 + 
2.02399938887542 * H1x1_6 ;
340109    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
340110    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
340111    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 + 
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 + 
-4.36781665394854 * H1x1_6 ;
340112    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
340113    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
340114    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 + 
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 + 
-0.71801946066256 * H1x1_6 ;
340115    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
340116    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
340117    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
340118    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2 
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 + 
2.04509722582983 * H1x2_6 ;
340119    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
340120    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
340121    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
340122    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2 
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 + 
-0.58594558422322 * H1x2_6 ;
340123    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
340124    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
340125    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
340126    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2 
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 + 
0.11690916040928 * H1x2_6 ;
340127    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
340128    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
340129    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
340130    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2 
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 + 
2.96934196494413 * H1x2_6 ;
340131    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
340132    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
340133    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
340134    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2 
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 + 
-2.39364002282682 * H1x2_6 ;
340135    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
340136    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
340137    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
340138    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 * 
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 + 
-0.91996717495653 * H1x2_6 ;
340139    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
340140    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
340141    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
340142    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2 
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 + 
0.53167866343669 * H1x3_6 ;
340143    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
340144    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
340145    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
340146    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2 
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 + 
0.09325988094727 * H1x3_6 ;
340147    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
340148    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
340149    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
340150    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 * 
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5 
+ -0.43722126116548 * H1x3_6 ;
340151    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
340152    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
340153    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
340154    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2 
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 + 
1.49998370890459 * H1x3_6 ;
340155    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
340156    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
340157    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
340158    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2 
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 + 
-0.30128378921356 * H1x3_6 ;
340159    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
340160    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
340161    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
340162    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2 
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 + 
-0.19152232249307 * H1x3_6 ;
340163    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
340164    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
340165    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
340166    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
340167    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
340168    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
340169    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
340170    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
340171    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
340172    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
340173    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
340174    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
340175    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
340176    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
340177    +END;
MPRINT(EM_DIAGRAM):   END;
340178    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
340179    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
340180    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
340181    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
340182    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
340183    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
340184    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
340185    +END;
MPRINT(EM_DIAGRAM):   END;
340186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340187    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
340188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340189    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
340190    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
340191    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
340192    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 + 
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 + 
-1.19299469136178 * H1x1_6 ;
340193    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
340194    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
340195    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 + 
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 + 
-0.23243316190231 * H1x1_6 ;
340196    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
340197    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
340198    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 + 
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 + 
1.14739016222951 * H1x1_6 ;
340199    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
340200    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
340201    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 + 
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 + 
0.69001883670374 * H1x1_6 ;
340202    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
340203    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
340204    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 + 
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 + 
1.62881757963203 * H1x1_6 ;
340205    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
340206    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
340207    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 + 
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 + 
1.10728303240553 * H1x1_6 ;
340208    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
340209    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
340210    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
340211    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2 
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 + 
1.21824749182936 * H1x2_6 ;
340212    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
340213    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
340214    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
340215    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2 
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 + 
-0.70127450180732 * H1x2_6 ;
340216    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
340217    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
340218    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
340219    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2 
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 + 
0.1757517587226 * H1x2_6 ;
340220    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
340221    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
340222    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
340223    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2 
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 + 
0.8693099398328 * H1x2_6 ;
340224    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
340225    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
340226    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
340227    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2 
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 + 
0.11240659705231 * H1x2_6 ;
340228    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
340229    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
340230    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
340231    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2 
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 + 
0.67151326645383 * H1x2_6 ;
340232    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
340233    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
340234    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
340235    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2 
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 + 
-0.76522554014331 * H1x3_6 ;
340236    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
340237    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
340238    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
340239    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2 
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 + 
1.79694481340011 * H1x3_6 ;
340240    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
340241    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
340242    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
340243    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2 
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 + 
0.43346153474351 * H1x3_6 ;
340244    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
340245    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
340246    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
340247    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 * 
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5 
+ 0.11633831354046 * H1x3_6 ;
340248    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
340249    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
340250    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
340251    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2 
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 + 
-0.51535580022884 * H1x3_6 ;
340252    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
340253    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
340254    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
340255    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 + 
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 + 
1.02261478089015 * H1x3_6 ;
340256    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
340257    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
340258    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
340259    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
340260    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
340261    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
340262    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
340263    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
340264    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
340265    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
340266    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
340267    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
340268    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
340269    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
340270    +END;
MPRINT(EM_DIAGRAM):   END;
340271    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
340272    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
340273    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
340274    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
340275    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
340276    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
340277    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
340278    +END;
MPRINT(EM_DIAGRAM):   END;
340279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340280    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
340281    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340282    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
340283    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
340284    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
340285    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 + 
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 + 
-0.19906676643855 * H2x1_6 ;
340286    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
340287    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
340288    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 + 
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 + 
-0.76411205087595 * H2x1_6 ;
340289    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
340290    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
340291    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 + 
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 + 
-1.24122940235749 * H2x1_6 ;
340292    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
340293    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
340294    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 + 
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 + 
1.46523065565448 * H2x1_6 ;
340295    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
340296    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
340297    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 + 
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 + 
-0.45051702468841 * H2x1_6 ;
340298    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
340299    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
340300    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 + 
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 + 
0.29690402913896 * H2x1_6 ;
340301    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
340302    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
340303    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
340304    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 * 
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 + 
-0.96381430690961 * H2x2_6 ;
340305    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
340306    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
340307    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
340308    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2 
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 + 
-1.37757472119786 * H2x2_6 ;
340309    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
340310    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
340311    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
340312    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2 
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 + 
-1.58203174336227 * H2x2_6 ;
340313    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
340314    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
340315    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
340316    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 * 
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 + 
1.21364725785316 * H2x2_6 ;
340317    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
340318    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
340319    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
340320    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2 
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 + 
0.95942799624748 * H2x2_6 ;
340321    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
340322    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
340323    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
340324    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2 
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 + 
0.23144688198135 * H2x2_6 ;
340325    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
340326    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
340327    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
340328    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
340329    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
340330    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
340331    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
340332    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
340333    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
340334    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
340335    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
340336    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
340337    +END;
MPRINT(EM_DIAGRAM):   END;
340338    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
340339    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
340340    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
340341    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
340342    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
340343    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
340344    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
340345    +END;
MPRINT(EM_DIAGRAM):   END;
340346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340347    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
340348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340349    +
340350    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
340351    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
340352    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
340353    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
340354    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
340355    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
340356    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
340357    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
340358    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
340359    +end;
MPRINT(EM_DIAGRAM):   end;
340360    +else do;
MPRINT(EM_DIAGRAM):   else do;
340361    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
340362    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
340363    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
340364    +   end;
MPRINT(EM_DIAGRAM):   end;
340365    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
340366    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
340367    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
340368    +   end;
MPRINT(EM_DIAGRAM):   end;
340369    +   else do;
MPRINT(EM_DIAGRAM):   else do;
340370    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
340371    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
340372    +   end;
MPRINT(EM_DIAGRAM):   end;
340373    +end;
MPRINT(EM_DIAGRAM):   end;
340374    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
340375    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
340376    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
340377    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 + 
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 + 
-2.12623562549552 * H3x1_6 ;
340378    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
340379    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
340380    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
340381    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
340382    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
340383    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
340384    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
340385    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
340386    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
340387    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
340388    +END;
MPRINT(EM_DIAGRAM):   END;
340389    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
340390    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
340391    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
340392    +END;
MPRINT(EM_DIAGRAM):   END;
340393    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
340394    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
340395    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
340396    +END;
MPRINT(EM_DIAGRAM):   END;
340397    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
340398    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
340399    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
340400    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
340401    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
340402    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
340403    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
340404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340405    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
340406    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340407    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
340408    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
340409    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
340410    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
340411    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
340412    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
340413    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
340414    +END;
MPRINT(EM_DIAGRAM):   END;
340415    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
340416    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
340417    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
340418    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
340419    +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
340420    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340421    +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
340422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340423    +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
340424    +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
340425    +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
340426    +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
340427    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340428    +* Renaming Into variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural35;
340429    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340430    +length AutoNeural35_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural35_I_DepVar $32;
340431    +drop AutoNeural35_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_I_DepVar;
340432    +AutoNeural35_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural35_I_DepVar = I_DepVar;
340433    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340434    +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
340435    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340436    +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
340437    +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
340438    +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
340439    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340440    +* Ensmbl56: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Voting to produce predicted target;
340441    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340442    +array Ensmbl56_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl56_post{2} _temporary_;
340443    +array Ensmbl56_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl56_count{2} _temporary_;
340444    +array Ensmbl56_level{2} $32 _temporary_ (
340445    +"1"
340446    +"0"
340447    +);
MPRINT(EM_DIAGRAM):   array Ensmbl56_level{2} $32 _temporary_ ( "1" "0" );
340448    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
340449    +Ensmbl56_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{i} = 0;
340450    +Ensmbl56_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{i} = 0;
340451    +end;
MPRINT(EM_DIAGRAM):   end;
340452    +if AutoNeural37_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural37_I_DepVar = Ensmbl56_level{1} then do;
340453    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
340454    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural37_P_DepVar1;
340455    +end;
MPRINT(EM_DIAGRAM):   end;
340456    +if AutoNeural38_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural38_I_DepVar = Ensmbl56_level{1} then do;
340457    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
340458    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural38_P_DepVar1;
340459    +end;
MPRINT(EM_DIAGRAM):   end;
340460    +if AutoNeural39_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural39_I_DepVar = Ensmbl56_level{1} then do;
340461    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
340462    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural39_P_DepVar1;
340463    +end;
MPRINT(EM_DIAGRAM):   end;
340464    +if AutoNeural40_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural40_I_DepVar = Ensmbl56_level{1} then do;
340465    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
340466    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural40_P_DepVar1;
340467    +end;
MPRINT(EM_DIAGRAM):   end;
340468    +if AutoNeural34_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural34_I_DepVar = Ensmbl56_level{1} then do;
340469    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
340470    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural34_P_DepVar1;
340471    +end;
MPRINT(EM_DIAGRAM):   end;
340472    +if AutoNeural35_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural35_I_DepVar = Ensmbl56_level{1} then do;
340473    +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
340474    +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural35_P_DepVar1;
340475    +end;
MPRINT(EM_DIAGRAM):   end;
340476    +if AutoNeural37_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural37_I_DepVar = Ensmbl56_level{2} then do;
340477    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
340478    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural37_P_DepVar0;
340479    +end;
MPRINT(EM_DIAGRAM):   end;
340480    +if AutoNeural38_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural38_I_DepVar = Ensmbl56_level{2} then do;
340481    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
340482    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural38_P_DepVar0;
340483    +end;
MPRINT(EM_DIAGRAM):   end;
340484    +if AutoNeural39_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural39_I_DepVar = Ensmbl56_level{2} then do;
340485    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
340486    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural39_P_DepVar0;
340487    +end;
MPRINT(EM_DIAGRAM):   end;
340488    +if AutoNeural40_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural40_I_DepVar = Ensmbl56_level{2} then do;
340489    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
340490    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural40_P_DepVar0;
340491    +end;
MPRINT(EM_DIAGRAM):   end;
340492    +if AutoNeural34_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural34_I_DepVar = Ensmbl56_level{2} then do;
340493    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
340494    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural34_P_DepVar0;
340495    +end;
MPRINT(EM_DIAGRAM):   end;
340496    +if AutoNeural35_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural35_I_DepVar = Ensmbl56_level{2} then do;
340497    +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
340498    +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural35_P_DepVar0;
340499    +end;
MPRINT(EM_DIAGRAM):   end;
340500    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340501    +* Ensmbl56: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Determine Into Variable;
340502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340503    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
340504    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
340505    +vote_count = max(
340506    +Ensmbl56_count{1} ,
340507    +Ensmbl56_count{2}
340508    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl56_count{1} , Ensmbl56_count{2} );
340509    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
340510    +if Ensmbl56_count{i}=vote_count and Ensmbl56_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl56_count{i}=vote_count and Ensmbl56_post{i}>vote_post then do;
340511    +I_DepVar = Ensmbl56_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl56_level{i};
340512    +vote_post = Ensmbl56_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl56_count{i};
340513    +end;
MPRINT(EM_DIAGRAM):   end;
340514    +end;
MPRINT(EM_DIAGRAM):   end;
340515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340516    +* Ensmbl56: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Compute posterior vars using models predicting the chosen 
level;
340517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340518    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
340519    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
340520    +if I_DepVar = AutoNeural37_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural37_I_DepVar then do;
340521    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural37_P_DepVar1;
340522    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural37_P_DepVar0;
340523    +end;
MPRINT(EM_DIAGRAM):   end;
340524    +if I_DepVar = AutoNeural38_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural38_I_DepVar then do;
340525    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural38_P_DepVar1;
340526    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural38_P_DepVar0;
340527    +end;
MPRINT(EM_DIAGRAM):   end;
340528    +if I_DepVar = AutoNeural39_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural39_I_DepVar then do;
340529    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural39_P_DepVar1;
340530    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural39_P_DepVar0;
340531    +end;
MPRINT(EM_DIAGRAM):   end;
340532    +if I_DepVar = AutoNeural40_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural40_I_DepVar then do;
340533    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural40_P_DepVar1;
340534    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural40_P_DepVar0;
340535    +end;
MPRINT(EM_DIAGRAM):   end;
340536    +if I_DepVar = AutoNeural34_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural34_I_DepVar then do;
340537    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural34_P_DepVar1;
340538    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural34_P_DepVar0;
340539    +end;
MPRINT(EM_DIAGRAM):   end;
340540    +if I_DepVar = AutoNeural35_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural35_I_DepVar then do;
340541    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural35_P_DepVar1;
340542    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural35_P_DepVar0;
340543    +end;
MPRINT(EM_DIAGRAM):   end;
340544    +* Ensmbl56: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Averaging posterior;
340545    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
340546    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
340547    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340548    +* Ensmbl56: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Producing Unformatted variable;
340549    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340550    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
340551    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
340552    +else
340553    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
340554    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340555    +* Ensmbl56: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing _WARN_ Variable;
340556    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340557    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
340558    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
340559    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
340560    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
340560   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
340561    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
340561   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
340562    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
340562   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
340563    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
340563   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
340564    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
340564   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
340565    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
340565   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
340566    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
340566   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
340567    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
340567   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
340568    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
340568   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
340569    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
340569   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
340570    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
340570   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
340571    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
340571   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
340572    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
340572   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
340573    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
340573   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
340574    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
340574   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
340575    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
340575   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
340576    +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
340576   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
340577    +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
340577   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
340578    +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
340578   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
340579    +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
340579   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
340580    +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
340580   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
340581    +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
340581   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
340582    +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
340582   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
340583    +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
340583   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
340584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340585    +* Ensmbl56: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing Residual Vars;
340586    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340587    +if
340588    +F_DepVar NE '1'
340589    +AND F_DepVar NE '0'
340590    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
340591    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
340592    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
340593    +end;
MPRINT(EM_DIAGRAM):   end;
340594    +else do;
MPRINT(EM_DIAGRAM):   else do;
340595    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
340596    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
340597    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
340598    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
340599    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
340600    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
340601    +END;
MPRINT(EM_DIAGRAM):   END;
340602    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
340603     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL56_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL37_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
340604     quit;
340605     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl56_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl56_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl56_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
340665     filename _pref
340665   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
340666     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
340667     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas.
340668    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
340669    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
340670    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
340671    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
340672    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
340673    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
340674    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
340675    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
340676    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
340677    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
340678    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
340679    +LENGTH _WARN_ $4
340680    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
340681    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
340682    +
340683    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
340684    +
340685    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
340686    +
340687    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
340688    +
340689    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
340690    +
340691    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
340692    +
340693    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
340694    +
340695    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
340696    +
340697    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
340698    +
340699    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
340700    +
340701    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
340702    +
340703    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
340704    +
340705    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
340706    +
340707    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
340708    +
340709    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
340710    +
340711    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
340712    +
340713    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
340714    +
340715    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
340716    +
340717    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
340718    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
340719    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
340720    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
340721    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
340722    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
340723    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
340724    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
340725    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
340726    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
340727    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
340728    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
340729    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
340730    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
340731    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
340732    +end;
MPRINT(EM_DIAGRAM):   end;
340733    +else do;
MPRINT(EM_DIAGRAM):   else do;
340734    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
340735    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
340736    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
340737    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
340738    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
340739    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
340740    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
340741    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
340742    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
340743    +         end;
MPRINT(EM_DIAGRAM):   end;
340744    +         else do;
MPRINT(EM_DIAGRAM):   else do;
340745    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
340746    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
340747    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
340748    +            end;
MPRINT(EM_DIAGRAM):   end;
340749    +         end;
MPRINT(EM_DIAGRAM):   end;
340750    +      end;
MPRINT(EM_DIAGRAM):   end;
340751    +      else do;
MPRINT(EM_DIAGRAM):   else do;
340752    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
340753    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
340754    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
340755    +         end;
MPRINT(EM_DIAGRAM):   end;
340756    +      end;
MPRINT(EM_DIAGRAM):   end;
340757    +   end;
MPRINT(EM_DIAGRAM):   end;
340758    +   else do;
MPRINT(EM_DIAGRAM):   else do;
340759    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
340760    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
340761    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
340762    +      end;
MPRINT(EM_DIAGRAM):   end;
340763    +      else do;
MPRINT(EM_DIAGRAM):   else do;
340764    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
340765    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
340766    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
340767    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
340768    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
340769    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
340770    +         end;
MPRINT(EM_DIAGRAM):   end;
340771    +      end;
MPRINT(EM_DIAGRAM):   end;
340772    +   end;
MPRINT(EM_DIAGRAM):   end;
340773    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
340774    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
340775    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
340776    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
340777    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
340778    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
340779    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
340780    +   end;
MPRINT(EM_DIAGRAM):   end;
340781    +end;
MPRINT(EM_DIAGRAM):   end;
340782    +
340783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340784    +*** Checking missing input Interval
340785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
340786    +
340787    +IF NMISS(
340788    +   AcceptedCmpTotal ,
340789    +   Frq ,
340790    +   Mnt ,
340791    +   MntMeatProducts ,
340792    +   NumCatalogPurchases ,
340793    +   NumDealsPurchases ,
340794    +   NumWebVisitsMonth ,
340795    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
340796    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
340797    +
340798    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
340799    +END;
MPRINT(EM_DIAGRAM):   END;
340800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340801    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
340802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340803    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
340804    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
340805    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
340806    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
340807    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
340808    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
340809    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
340810    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
340811    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
340812    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
340813    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
340814    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
340815    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
340816    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
340817    +END;
MPRINT(EM_DIAGRAM):   END;
340818    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
340819    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
340820    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
340821    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
340822    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
340823    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
340824    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
340825    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
340826    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
340827    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
340828    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
340829    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
340830    +   ELSE S_NumCatalogPurchases
340831    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
340832    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
340833    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
340834    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
340835    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
340836    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
340837    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
340838    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
340839    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
340840    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
340841    +END;
MPRINT(EM_DIAGRAM):   END;
340842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340843    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
340844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340846    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
340847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340848    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
340849    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
340850    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
340851    +          +     6.08901143667375 * S_MntMeatProducts
340852    +          +     2.21464286693249 * S_NumCatalogPurchases
340853    +          +     0.88693497635794 * S_NumDealsPurchases
340854    +          +    -0.16352347343851 * S_NumWebVisitsMonth
340855    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 * 
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 * 
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 * 
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
340856    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
340857    +          +     0.97693281807676 * Marital_StatusMarried
340858    +          +    -0.47353913752833 * Marital_StatusSingle
340859    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced + 
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle + 
0.72993998289048 * Marital_StatusTogether ;
340860    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
340861    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
340862    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
340863    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
340864    +END;
MPRINT(EM_DIAGRAM):   END;
340865    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
340866    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
340867    +END;
MPRINT(EM_DIAGRAM):   END;
340868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340869    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
340870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340871    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
340872    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
340873    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
340874    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
340875    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
340876    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
340877    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
340878    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
340879    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
340880    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
340881    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
340882    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
340883    +END;
MPRINT(EM_DIAGRAM):   END;
340884    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
340885    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
340886    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
340887    +END;
MPRINT(EM_DIAGRAM):   END;
340888    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
340889    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
340890    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
340891    +END;
MPRINT(EM_DIAGRAM):   END;
340892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340893    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
340894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
340895    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
340896    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
340897    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
340898    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
340899    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
340900    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
340901    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
340902    +END;
MPRINT(EM_DIAGRAM):   END;
340903    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
340904    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
340905    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
340906    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
340907     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
340908     quit;
340909     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
340910     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
340911     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
340912     retain ID 2 Node "AutoNeural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural37";
340913     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
340914     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 541 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 541 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340915     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
340916     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
340917     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 541 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 541 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

340918     proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME 
CREATOR);
340919     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
340920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340921     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
340922     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
340923     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
340924     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340925     proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
340926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

340927     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
340928     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
340929     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340930     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
340931     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
340932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
340933     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340934     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
340935     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
340935   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 245 rows and 5 columns.

340936     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340937     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
340938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 245 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340939     filename _pref
340939   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
340940     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
340941     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
340942    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340943    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
340944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
340945    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
340946    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
340947    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
340948     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
340949     quit;
340950     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
340951     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
340952     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
340953     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
340954     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
340955     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340956     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
340957     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
340958     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340959     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
340960     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
340961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340962     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
340963     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
340964     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
340965     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340966     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
340967     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

340968     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
340969     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
340970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340971     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
340972     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
340973     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
340974     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

340975     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
340976     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
340976   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

340977     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340978     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
340979     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340980     filename _pref
340980   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
340981     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
340982     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
340983    +
340984    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
340985    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
340985   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
340986    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
340987    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
340988    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
340989    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
340990    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
340991     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
340992     quit;
340993     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
340994     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
340995     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
340996     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
340997     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
340998     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

340999     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
341000     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341001     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341002     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
341003     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341004     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341005     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341006     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
341007     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
341008     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341009     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
341010     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341011     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
341012     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341013     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

341014     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341015     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
341016     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341017     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341018     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
341019     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
341019   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

341020     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341021     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
341022     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 288 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341023     filename _pref
341023   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
341024     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
341025     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
341026    +
341027    +
341028    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
341029    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
341030    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
341031    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
341032    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
341033    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341034    +
341035    +
341036    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
341037    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
341038    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
341039    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
341040    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
341041    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341042    +
341043    +
341044    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
341045    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
341046    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
341047    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
341048    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
341049    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341050    +
341051    +
341052    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
341053    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
341054    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
341055    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
341056    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
341057    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341058    +
341059    +
341060    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
341061    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
341062    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
341063    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
341064    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
341065    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341066    +
341067    +
341068    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
341069    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
341070    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
341071    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
341072    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
341073    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341074    +
341075    +
341076    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
341077    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
341078    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
341079    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
341080    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
341081    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341082    +
341083    +
341084    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
341085    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
341086    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
341087    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
341088    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
341089    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341090    +if
341091    +_FILTERNORM1 not in ( '.')
341092    + and
341093    +_FILTERNORM2 not in ( '.')
341094    + and
341095    +_FILTERNORM3 not in ( '.')
341096    + and
341097    +_FILTERNORM4 not in ( '.')
341098    + and
341099    +_FILTERNORM5 not in ( '.')
341100    + and
341101    +_FILTERNORM6 not in ( '.')
341102    + and
341103    +_FILTERNORM7 not in ( ' ')
341104    + and
341105    +_FILTERNORM8 not in ( ' ')
341106    +and
341107    +( Dt_Customer ne .)
341108    +and ( Income ne . and (Income<=107000))
341109    +and ( Kidhome ne .)
341110    +and ( MntFishProducts ne .)
341111    +and ( MntFruits ne .)
341112    +and ( MntGoldProds ne .)
341113    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
341114    +and ( MntSweetProducts ne .)
341115    +and ( MntWines ne .)
341116    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
341117    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
341118    +and ( NumStorePurchases ne .)
341119    +and ( NumWebPurchases ne .)
341120    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
341121    +and ( Recency ne .)
341122    +and ( Teenhome ne .)
341123    +and ( Year_Birth ne .)
341124    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
341125    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
341126    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
341127    +end;
MPRINT(EM_DIAGRAM):   end;
341128    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
341129    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
341130     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
341131     quit;
341132     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
341133     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
341134     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
341135     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
341136     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
341137     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341138     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
341139     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341140     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341141     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
341142     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341143     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

341144     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341145     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
341146     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
341147     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341148     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
341149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

341150     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
341151     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341152     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341153     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341154     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
341155     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341156     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341157     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
341158     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
341158   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

341159     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

341160     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
341161     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 354 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341162     %macro varDept(fcmpdata=,id=);
341163     %global nobs&id scoreFlag&id;
341164     %let scoreFlag&id = 0;
341165     %if &id=1 or ^&fcmpStart %then %do;
341166     proc sort data=&fcmpdata out=_temp&id nodupkey;
341167     by NAME;
341168     where id=&id and LHS in( %let j=1;
341169     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
341170     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
341171     "&var" %let j = %eval(&j+1);
341172     %end;
341173     );
341174     run;
341175     %let dsid = %sysfunc(open(_temp&id));
341176     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
341177     %let dsid = %sysfunc(close(&dsid));
341178     %if &&nobs&id %then %do;
341179     %let scoreFlag&id = 1;
341180     %let fcmpStart = 1;
341181     %end;
341182     %else %let fcmpStart = 0;
341183     %end;
341184     %else %do;
341185     proc sort data=&fcmpdata out=_tempid;
341186     where id=&id;
341187     by LHS;
341188     run;
341189     %let dsid = %sysfunc(open(_tempid));
341190     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
341191     %let dsid = %sysfunc(close(&dsid));
341192     %if ^&&nobs&id %then %do;
341193     proc datasets lib=work nolist;
341194     delete _tempid;
341195     run;
341196     quit;
341197     %end;
341198     %else %do;
341199     data _tempAll;
341200     set %let j=%eval(&id-1);
341201     %do x=1 %to &j;
341202     %if &&nobs&x %then %do;
341203     _temp&x %end;
341204     %end;
341205     ;
341206     run;
341207     proc sql;
341208     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
341208   ! work._tempid p2 where p.name=p2.lhs;
341209     quit;
341210     data _temp&id;
341211     set _temp&id;
341212     where LHS ne '' and NAME ne '' and Node ne '';
341213     run;
341214     proc datasets lib=work nolist;
341215     delete _tempAll;
341216     run;
341217     %let dsid = %sysfunc(open(_temp&id));
341218     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
341219     %let dsid = %sysfunc(close(&dsid));
341220     %if ^&&nobs&id %then %do;
341221     proc datasets lib=work nolist;
341222     delete _temp&id;
341223     run;
341224     quit;
341225     %end;
341226     %else %do;
341227     %let scoreFlag&id = 1;
341228     data _temp&id;
341229     set _temp&id;
341230     where LHS ne NAME and node ne '';
341231     run;
341232     %let dsid = %sysfunc(open(_temp&id));
341233     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
341234     %let dsid = %sysfunc(close(&dsid));
341235     %if ^&&nobs&id %then %do;
341236     proc datasets lib=work nolist;
341237     delete _temp&id;
341238     run;
341239     quit;
341240     %end;
341241     %else %do;
341242     proc sort data=_temp&id nodupkey;
341243     by LHS NAME;
341244     run;
341245     %end;
341246     %end;
341247     %end;
341248     %end;
341249     %mend varDept;
341250     %macro optCode(outdata=fcmpdata);
341251     %global fcmpStart;
341252     %let fcmpStart = 0;
341253     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
341254     %let NumNodes=9;
341255     %do k=1 %to &NumNodes;
341256     %vardept(fcmpdata=&outdata, id=&k);
341257     %end;
341258     %mend optCode;
341259     %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 45 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

341260     filename _pref
341260   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
341261     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
341262     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
341263    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
341264    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
341265    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
341266    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
341267    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
341268    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
341269    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
341270    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
341271    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
341272    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
341273    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
341274    +LENGTH _WARN_ $4
341275    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
341276    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
341277    +
341278    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
341279    +
341280    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
341281    +
341282    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
341283    +
341284    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
341285    +
341286    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
341287    +
341288    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
341289    +
341290    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
341291    +
341292    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
341293    +
341294    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
341295    +
341296    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
341297    +
341298    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
341299    +
341300    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
341301    +
341302    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
341303    +
341304    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
341305    +
341306    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
341307    +
341308    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
341309    +
341310    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
341311    +
341312    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
341313    +
341314    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
341315    +
341316    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
341317    +
341318    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
341319    +
341320    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
341321    +
341322    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
341323    +
341324    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
341325    +
341326    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
341327    +
341328    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
341329    +
341330    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
341331    +
341332    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
341333    +
341334    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
341335    +
341336    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
341337    +
341338    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
341339    +
341340    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
341341    +
341342    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
341343    +
341344    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
341345    +
341346    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
341347    +
341348    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
341349    +
341350    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
341351    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
341352    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
341353    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
341354    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
341355    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
341356    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
341357    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
341358    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
341359    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
341360    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
341361    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
341362    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
341363    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
341364    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
341365    +end;
MPRINT(EM_DIAGRAM):   end;
341366    +else do;
MPRINT(EM_DIAGRAM):   else do;
341367    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
341368    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
341369    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
341370    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
341371    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
341372    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
341373    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
341374    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
341375    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
341376    +         end;
MPRINT(EM_DIAGRAM):   end;
341377    +         else do;
MPRINT(EM_DIAGRAM):   else do;
341378    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
341379    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
341380    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
341381    +            end;
MPRINT(EM_DIAGRAM):   end;
341382    +         end;
MPRINT(EM_DIAGRAM):   end;
341383    +      end;
MPRINT(EM_DIAGRAM):   end;
341384    +      else do;
MPRINT(EM_DIAGRAM):   else do;
341385    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
341386    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
341387    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
341388    +         end;
MPRINT(EM_DIAGRAM):   end;
341389    +      end;
MPRINT(EM_DIAGRAM):   end;
341390    +   end;
MPRINT(EM_DIAGRAM):   end;
341391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
341392    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
341393    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
341394    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
341395    +      end;
MPRINT(EM_DIAGRAM):   end;
341396    +      else do;
MPRINT(EM_DIAGRAM):   else do;
341397    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
341398    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
341399    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
341400    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
341401    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
341402    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
341403    +         end;
MPRINT(EM_DIAGRAM):   end;
341404    +      end;
MPRINT(EM_DIAGRAM):   end;
341405    +   end;
MPRINT(EM_DIAGRAM):   end;
341406    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
341407    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
341408    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
341409    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
341410    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
341411    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
341412    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
341413    +   end;
MPRINT(EM_DIAGRAM):   end;
341414    +end;
MPRINT(EM_DIAGRAM):   end;
341415    +
341416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341417    +*** Checking missing input Interval
341418    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
341419    +
341420    +IF NMISS(
341421    +   AcceptedCmpTotal ,
341422    +   Frq ,
341423    +   Mnt ,
341424    +   MntMeatProducts ,
341425    +   NumCatalogPurchases ,
341426    +   NumDealsPurchases ,
341427    +   NumWebVisitsMonth ,
341428    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
341429    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
341430    +
341431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
341432    +END;
MPRINT(EM_DIAGRAM):   END;
341433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341434    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
341435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341436    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341437    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
341438    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
341439    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
341440    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
341441    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
341442    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
341443    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
341444    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
341445    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
341446    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
341447    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
341448    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
341449    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
341450    +END;
MPRINT(EM_DIAGRAM):   END;
341451    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341452    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
341453    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
341454    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
341455    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
341456    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
341457    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
341458    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
341459    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
341460    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
341461    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
341462    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
341463    +   ELSE S_NumCatalogPurchases
341464    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
341465    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
341466    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
341467    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
341468    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
341469    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
341470    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
341471    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
341472    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
341473    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
341474    +END;
MPRINT(EM_DIAGRAM):   END;
341475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341476    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
341477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341479    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
341480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341481    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341482    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
341483    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
341484    +          +     3.02405267314398 * S_MntMeatProducts
341485    +          +     0.25422172488707 * S_NumCatalogPurchases
341486    +          +     0.25977266371328 * S_NumDealsPurchases
341487    +          +    -0.26865365728773 * S_NumWebVisitsMonth
341488    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
341489    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
341490    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
341491    +          +    -0.64419071408502 * S_MntMeatProducts
341492    +          +    -0.49060224303044 * S_NumCatalogPurchases
341493    +          +    -0.04840762943457 * S_NumDealsPurchases
341494    +          +     -0.7656247386051 * S_NumWebVisitsMonth
341495    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
341496    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
341497    +          +    -0.05888536499281 * Marital_StatusMarried
341498    +          +    -0.22627441829205 * Marital_StatusSingle
341499    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
341500    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
341501    +          +     0.82536605771339 * Marital_StatusMarried
341502    +          +    -0.97196770004098 * Marital_StatusSingle
341503    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
341504    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
341505    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
341506    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
341507    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
341508    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
341509    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
341510    +END;
MPRINT(EM_DIAGRAM):   END;
341511    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341512    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
341513    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
341514    +END;
MPRINT(EM_DIAGRAM):   END;
341515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341516    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
341517    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341518    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341519    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
341520    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
341521    +          +    -1.52187144029368 * S_MntMeatProducts
341522    +          +    -0.17233011764417 * S_NumCatalogPurchases
341523    +          +     0.08681674245114 * S_NumDealsPurchases
341524    +          +     0.13308256651831 * S_NumWebVisitsMonth
341525    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
341526    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
341527    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
341528    +          +     0.66187267823731 * S_MntMeatProducts
341529    +          +     1.52530454111654 * S_NumCatalogPurchases
341530    +          +     0.73982889008686 * S_NumDealsPurchases
341531    +          +     1.03760708665776 * S_NumWebVisitsMonth
341532    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
341533    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
341534    +          +    -0.57121500191985 * Marital_StatusMarried
341535    +          +     0.00575301863466 * Marital_StatusSingle
341536    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
341537    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
341538    +          +     0.68382990555761 * Marital_StatusMarried
341539    +          +    -0.40241665873988 * Marital_StatusSingle
341540    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
341541    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
341542    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
341543    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
341544    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
341545    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
341546    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
341547    +END;
MPRINT(EM_DIAGRAM):   END;
341548    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341549    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
341550    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
341551    +END;
MPRINT(EM_DIAGRAM):   END;
341552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341553    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
341554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341555    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341556    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
341557    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
341558    +          +    -2.40830591527574 * S_MntMeatProducts
341559    +          +    -0.89296864866675 * S_NumCatalogPurchases
341560    +          +     1.79889409325514 * S_NumDealsPurchases
341561    +          +    -0.33765715793031 * S_NumWebVisitsMonth
341562    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
341563    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
341564    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
341565    +          +     0.04224245417831 * S_MntMeatProducts
341566    +          +     0.25836861794607 * S_NumCatalogPurchases
341567    +          +     2.47909264202917 * S_NumDealsPurchases
341568    +          +     0.14790226792406 * S_NumWebVisitsMonth
341569    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
341570    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
341571    +          +     0.39103795234666 * Marital_StatusMarried
341572    +          +    -0.52822284221545 * Marital_StatusSingle
341573    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
341574    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
341575    +          +       1.975579060233 * Marital_StatusMarried
341576    +          +     0.15028521746762 * Marital_StatusSingle
341577    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
341578    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
341579    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
341580    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
341581    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
341582    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
341583    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
341584    +END;
MPRINT(EM_DIAGRAM):   END;
341585    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341586    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
341587    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
341588    +END;
MPRINT(EM_DIAGRAM):   END;
341589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341590    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
341591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341592    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341593    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
341594    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
341595    +          +     0.16060225059391 * S_MntMeatProducts
341596    +          +     1.53093292630033 * S_NumCatalogPurchases
341597    +          +     0.39573641806699 * S_NumDealsPurchases
341598    +          +    -0.95387142126649 * S_NumWebVisitsMonth
341599    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
341600    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
341601    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
341602    +          +     0.71628478327205 * S_MntMeatProducts
341603    +          +     0.15890352363556 * S_NumCatalogPurchases
341604    +          +    -1.12928875468011 * S_NumDealsPurchases
341605    +          +    -0.30108145274307 * S_NumWebVisitsMonth
341606    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
341607    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
341608    +          +     0.91966160839643 * Marital_StatusMarried
341609    +          +    -0.63411090570397 * Marital_StatusSingle
341610    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
341611    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
341612    +          +     0.77230489026504 * Marital_StatusMarried
341613    +          +     0.20456495503812 * Marital_StatusSingle
341614    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
341615    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
341616    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
341617    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
341618    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
341619    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
341620    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
341621    +END;
MPRINT(EM_DIAGRAM):   END;
341622    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341623    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
341624    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
341625    +END;
MPRINT(EM_DIAGRAM):   END;
341626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341627    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
341628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341629    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341630    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
341631    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
341632    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
341633    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
341634    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
341635    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
341636    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
341637    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
341638    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
341639    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
341640    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
341641    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
341642    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
341643    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
341644    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
341645    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
341646    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
341647    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
341648    +END;
MPRINT(EM_DIAGRAM):   END;
341649    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341650    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
341651    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
341652    +END;
MPRINT(EM_DIAGRAM):   END;
341653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341654    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
341655    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341656    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341657    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
341658    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
341659    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
341660    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
341661    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
341662    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
341663    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
341664    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
341665    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
341666    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
341667    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
341668    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
341669    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
341670    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
341671    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
341672    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
341673    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
341674    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
341675    +END;
MPRINT(EM_DIAGRAM):   END;
341676    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341677    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
341678    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
341679    +END;
MPRINT(EM_DIAGRAM):   END;
341680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341681    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
341682    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341683    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341684    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
341685    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
341686    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
341687    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
341688    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
341689    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
341690    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
341691    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
341692    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
341693    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
341694    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
341695    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
341696    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
341697    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
341698    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
341699    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
341700    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
341701    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
341702    +END;
MPRINT(EM_DIAGRAM):   END;
341703    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341704    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
341705    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
341706    +END;
MPRINT(EM_DIAGRAM):   END;
341707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341708    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
341709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341710    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341711    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
341712    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
341713    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
341714    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
341715    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
341716    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
341717    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
341718    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
341719    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
341720    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
341721    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
341722    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
341723    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
341724    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
341725    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
341726    +END;
MPRINT(EM_DIAGRAM):   END;
341727    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341728    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
341729    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
341730    +END;
MPRINT(EM_DIAGRAM):   END;
341731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341732    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
341733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341734    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341735    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
341736    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
341737    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
341738    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
341739    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
341740    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
341741    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
341742    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
341743    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
341744    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
341745    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
341746    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
341747    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
341748    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
341749    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
341750    +END;
MPRINT(EM_DIAGRAM):   END;
341751    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341752    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
341753    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
341754    +END;
MPRINT(EM_DIAGRAM):   END;
341755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341756    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
341757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341758    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341759    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
341760    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
341761    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
341762    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
341763    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
341764    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
341765    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
341766    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
341767    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
341768    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
341769    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
341770    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
341771    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
341772    +END;
MPRINT(EM_DIAGRAM):   END;
341773    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341774    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
341775    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
341776    +END;
MPRINT(EM_DIAGRAM):   END;
341777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341778    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
341779    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341780    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
341781    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
341782    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
341783    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
341784    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
341785    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
341786    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
341787    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
341788    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
341789    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
341790    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
341791    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
341792    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
341793    +END;
MPRINT(EM_DIAGRAM):   END;
341794    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
341795    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
341796    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
341797    +END;
MPRINT(EM_DIAGRAM):   END;
341798    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
341799    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
341800    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
341801    +END;
MPRINT(EM_DIAGRAM):   END;
341802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341803    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
341804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
341805    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
341806    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
341807    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
341808    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
341809    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
341810    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
341811    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
341812    +END;
MPRINT(EM_DIAGRAM):   END;
341813    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
341814    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
341815    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
341816    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
341817     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
341818     quit;
341819     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
341820     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
341821     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
341822     retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
341823     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
341824     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341825     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
341826     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341827     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

341828     proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME 
CREATOR);
341829     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341830     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341831     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341832     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
341833     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
341834     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341835     proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
341836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

341837     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
341838     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341839     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341840     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341841     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
341842     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341843     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341844     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
341845     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
341845   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1163 rows and 5 columns.

341846     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

341847     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
341848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1163 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1163 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341849     filename _pref
341849   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
341850     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
341851     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
341852    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
341853    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
341854    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
341855    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
341856    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
341857    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
341858     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
341859     quit;
341860     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
341861     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
341862     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
341863     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
341864     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
341865     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341866     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
341867     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341868     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341869     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
341870     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

341872     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341873     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
341874     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
341875     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341876     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
341877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

341878     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
341879     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341881     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341882     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
341883     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341884     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

341885     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
341886     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
341886   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

341887     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341888     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
341889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1167 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341890     filename _pref
341890   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
341891     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
341892     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
341893    +
341894    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
341895    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
341895   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
341896    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
341897    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
341898    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
341899    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
341900    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
341901     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
341902     quit;
341903     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
341904     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
341905     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
341906     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
341907     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
341908     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341909     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
341910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341911     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

341912     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
341913     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341914     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341915     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341916     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
341917     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
341918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341919     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
341920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341921     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
341922     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341923     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

341924     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
341925     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
341926     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
341927     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341928     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
341929     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
341929   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

341930     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

341931     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
341932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

341933     filename _pref
341933   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
341934     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
341935     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
341936    +
341937    +
341938    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
341939    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
341940    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
341941    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
341942    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
341943    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341944    +
341945    +
341946    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
341947    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
341948    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
341949    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
341950    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
341951    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341952    +
341953    +
341954    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
341955    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
341956    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
341957    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
341958    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
341959    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341960    +
341961    +
341962    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
341963    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
341964    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
341965    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
341966    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
341967    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341968    +
341969    +
341970    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
341971    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
341972    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
341973    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
341974    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
341975    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341976    +
341977    +
341978    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
341979    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
341980    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
The SAS System

341981    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
341982    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
341983    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341984    +
341985    +
341986    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
341987    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
341988    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
341989    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
341990    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
341991    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
341992    +
341993    +
341994    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
341995    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
341996    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
341997    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
341998    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
341999    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342000    +if
342001    +_FILTERNORM1 not in ( '.')
342002    + and
342003    +_FILTERNORM2 not in ( '.')
342004    + and
342005    +_FILTERNORM3 not in ( '.')
342006    + and
342007    +_FILTERNORM4 not in ( '.')
342008    + and
342009    +_FILTERNORM5 not in ( '.')
342010    + and
342011    +_FILTERNORM6 not in ( '.')
342012    + and
342013    +_FILTERNORM7 not in ( ' ')
342014    + and
342015    +_FILTERNORM8 not in ( ' ')
342016    +and
342017    +( Dt_Customer ne .)
342018    +and ( Income ne . and (Income<=107000))
342019    +and ( Kidhome ne .)
342020    +and ( MntFishProducts ne .)
342021    +and ( MntFruits ne .)
342022    +and ( MntGoldProds ne .)
342023    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
342024    +and ( MntSweetProducts ne .)
342025    +and ( MntWines ne .)
342026    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
342027    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
342028    +and ( NumStorePurchases ne .)
342029    +and ( NumWebPurchases ne .)
342030    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
342031    +and ( Recency ne .)
342032    +and ( Teenhome ne .)
342033    +and ( Year_Birth ne .)
342034    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
342035    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
342036    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
342037    +end;
MPRINT(EM_DIAGRAM):   end;
342038    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
342039    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
342040     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
342041     quit;
342042     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
342043     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
342044     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
342045     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
342046     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
342047     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342048     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
342049     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342050     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342051     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
342052     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342054     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342055     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
342056     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
342057     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342058     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
342059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342060     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
342061     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342062     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342063     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342064     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
342065     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342066     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342067     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
342068     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
342068   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

342069     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342070     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
342071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1272 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342072     %macro varDept(fcmpdata=,id=);
342073     %global nobs&id scoreFlag&id;
342074     %let scoreFlag&id = 0;
342075     %if &id=1 or ^&fcmpStart %then %do;
342076     proc sort data=&fcmpdata out=_temp&id nodupkey;
342077     by NAME;
342078     where id=&id and LHS in( %let j=1;
342079     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
342080     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
342081     "&var" %let j = %eval(&j+1);
342082     %end;
342083     );
342084     run;
342085     %let dsid = %sysfunc(open(_temp&id));
342086     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
342087     %let dsid = %sysfunc(close(&dsid));
342088     %if &&nobs&id %then %do;
342089     %let scoreFlag&id = 1;
342090     %let fcmpStart = 1;
342091     %end;
342092     %else %let fcmpStart = 0;
342093     %end;
342094     %else %do;
342095     proc sort data=&fcmpdata out=_tempid;
342096     where id=&id;
342097     by LHS;
342098     run;
342099     %let dsid = %sysfunc(open(_tempid));
342100     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
342101     %let dsid = %sysfunc(close(&dsid));
342102     %if ^&&nobs&id %then %do;
342103     proc datasets lib=work nolist;
342104     delete _tempid;
342105     run;
342106     quit;
342107     %end;
342108     %else %do;
342109     data _tempAll;
342110     set %let j=%eval(&id-1);
342111     %do x=1 %to &j;
342112     %if &&nobs&x %then %do;
342113     _temp&x %end;
342114     %end;
342115     ;
342116     run;
342117     proc sql;
342118     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
342118   ! work._tempid p2 where p.name=p2.lhs;
342119     quit;
342120     data _temp&id;
342121     set _temp&id;
342122     where LHS ne '' and NAME ne '' and Node ne '';
342123     run;
342124     proc datasets lib=work nolist;
342125     delete _tempAll;
342126     run;
342127     %let dsid = %sysfunc(open(_temp&id));
342128     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
342129     %let dsid = %sysfunc(close(&dsid));
342130     %if ^&&nobs&id %then %do;
342131     proc datasets lib=work nolist;
342132     delete _temp&id;
342133     run;
342134     quit;
342135     %end;
342136     %else %do;
342137     %let scoreFlag&id = 1;
342138     data _temp&id;
342139     set _temp&id;
342140     where LHS ne NAME and node ne '';
342141     run;
342142     %let dsid = %sysfunc(open(_temp&id));
342143     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
342144     %let dsid = %sysfunc(close(&dsid));
342145     %if ^&&nobs&id %then %do;
342146     proc datasets lib=work nolist;
342147     delete _temp&id;
342148     run;
342149     quit;
342150     %end;
342151     %else %do;
342152     proc sort data=_temp&id nodupkey;
342153     by LHS NAME;
342154     run;
342155     %end;
342156     %end;
342157     %end;
342158     %end;
342159     %mend varDept;
342160     %macro optCode(outdata=fcmpdata);
342161     %global fcmpStart;
342162     %let fcmpStart = 0;
342163     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
342164     %let NumNodes=9;
342165     %do k=1 %to &NumNodes;
342166     %vardept(fcmpdata=&outdata, id=&k);
342167     %end;
342168     %mend optCode;
342169     %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 102 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 71 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

342170     filename _pref
342170   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
342171     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
342172     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
342173    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
342174    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
342175    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
342176    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
342177    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
342178    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
342179    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
342180    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
342181    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
342182    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
342183    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
342184    +LENGTH _WARN_ $4
342185    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
342186    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
342187    +
342188    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
342189    +
342190    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
342191    +
342192    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
342193    +
342194    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
342195    +
342196    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
342197    +
342198    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
342199    +
342200    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
342201    +
342202    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
342203    +
342204    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
342205    +
342206    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
342207    +
342208    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
342209    +
342210    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
342211    +
342212    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
342213    +
342214    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
342215    +
342216    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
342217    +
342218    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
342219    +
342220    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
342221    +
342222    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
342223    +
342224    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
342225    +
342226    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
342227    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
342228    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
342229    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
342230    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
342231    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
342232    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
342233    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
342234    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
342235    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
342236    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
342237    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
342238    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
342239    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342240    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342241    +end;
MPRINT(EM_DIAGRAM):   end;
342242    +else do;
MPRINT(EM_DIAGRAM):   else do;
342243    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
342244    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
342245    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342246    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
342247    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
342248    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
342249    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
342250    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
342251    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342252    +         end;
MPRINT(EM_DIAGRAM):   end;
342253    +         else do;
MPRINT(EM_DIAGRAM):   else do;
342254    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
342255    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
342256    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342257    +            end;
MPRINT(EM_DIAGRAM):   end;
342258    +         end;
MPRINT(EM_DIAGRAM):   end;
342259    +      end;
MPRINT(EM_DIAGRAM):   end;
342260    +      else do;
MPRINT(EM_DIAGRAM):   else do;
342261    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
342262    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
342263    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342264    +         end;
MPRINT(EM_DIAGRAM):   end;
342265    +      end;
MPRINT(EM_DIAGRAM):   end;
342266    +   end;
MPRINT(EM_DIAGRAM):   end;
342267    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342268    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
342269    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
342270    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342271    +      end;
MPRINT(EM_DIAGRAM):   end;
342272    +      else do;
MPRINT(EM_DIAGRAM):   else do;
342273    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
342274    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
342275    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
342276    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
342277    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
342278    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342279    +         end;
MPRINT(EM_DIAGRAM):   end;
342280    +      end;
MPRINT(EM_DIAGRAM):   end;
342281    +   end;
MPRINT(EM_DIAGRAM):   end;
342282    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
342283    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
342284    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
342285    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
342286    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
342287    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342288    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342289    +   end;
MPRINT(EM_DIAGRAM):   end;
342290    +end;
MPRINT(EM_DIAGRAM):   end;
342291    +
342292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342293    +*** Checking missing input Interval
342294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
342295    +
342296    +IF NMISS(
342297    +   AcceptedCmpTotal ,
342298    +   Frq ,
342299    +   Mnt ,
342300    +   MntMeatProducts ,
342301    +   NumCatalogPurchases ,
342302    +   NumDealsPurchases ,
342303    +   NumWebVisitsMonth ,
342304    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
342305    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
342306    +
342307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342308    +END;
MPRINT(EM_DIAGRAM):   END;
342309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342310    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
342311    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342312    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342313    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
342314    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
342315    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
342316    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
342317    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
342318    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
342319    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
342320    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
342321    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
342322    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
342323    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
342324    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
342325    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
342326    +END;
MPRINT(EM_DIAGRAM):   END;
342327    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342328    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
342329    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
342330    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
342331    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
342332    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
342333    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
342334    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
342335    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
342336    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
342337    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
342338    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
342339    +   ELSE S_NumCatalogPurchases
342340    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
342341    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
342342    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
342343    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
342344    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
342345    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
342346    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
342347    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
342348    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
342349    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
342350    +END;
MPRINT(EM_DIAGRAM):   END;
342351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342352    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
342353    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342355    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
342356    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342357    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342358    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
342359    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
342360    +          +     0.02561809182055 * S_MntMeatProducts
342361    +          +     -0.1793288912734 * S_NumCatalogPurchases
342362    +          +    -0.37563080213093 * S_NumDealsPurchases
342363    +          +    -0.48858578777845 * S_NumWebVisitsMonth
342364    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
342365    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
342366    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
342367    +          +     1.94302986779634 * S_MntMeatProducts
342368    +          +      0.2669037763846 * S_NumCatalogPurchases
342369    +          +     0.29313104233947 * S_NumDealsPurchases
342370    +          +    -0.30591479309812 * S_NumWebVisitsMonth
342371    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
342372    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
342373    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
342374    +          +    -0.76055629383789 * S_MntMeatProducts
342375    +          +    -0.40114802991127 * S_NumCatalogPurchases
342376    +          +    -1.12215966034372 * S_NumDealsPurchases
342377    +          +    -0.30978133586417 * S_NumWebVisitsMonth
342378    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
342379    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
342380    +          +     0.20445663414925 * Marital_StatusMarried
342381    +          +     0.16369117386202 * Marital_StatusSingle
342382    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
342383    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
342384    +          +     0.09645374599508 * Marital_StatusMarried
342385    +          +     -0.0816282741981 * Marital_StatusSingle
342386    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
342387    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
342388    +          +     -3.9031880089591 * Marital_StatusMarried
342389    +          +      1.6995748309328 * Marital_StatusSingle
342390    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
342391    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
342392    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
342393    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
342394    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
342395    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
342396    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
342397    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
342398    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
342399    +END;
MPRINT(EM_DIAGRAM):   END;
342400    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342401    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
342402    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
342403    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
342404    +END;
MPRINT(EM_DIAGRAM):   END;
342405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342406    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
342407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342408    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342409    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
342410    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
342411    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
342412    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
342413    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
342414    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
342415    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
342416    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
342417    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
342418    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
342419    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
342420    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
342421    +END;
MPRINT(EM_DIAGRAM):   END;
342422    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342423    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
342424    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
342425    +END;
MPRINT(EM_DIAGRAM):   END;
342426    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
342427    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
342428    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
342429    +END;
MPRINT(EM_DIAGRAM):   END;
342430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342431    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
342432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342433    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
342434    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
342435    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
342436    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
342437    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
342438    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
342439    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
342440    +END;
MPRINT(EM_DIAGRAM):   END;
342441    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
342442    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
342443    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
342444    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
342445     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
342446     quit;
342447     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
342448     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
342449     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
342450     retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
342451     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
342452     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342453     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
342454     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342455     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342456     proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME 
CREATOR);
342457     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342458     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342459     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342460     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
342461     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
342462     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342463     proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
342464     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

342465     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
342466     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342467     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342468     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342469     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
342470     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342471     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342472     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
342473     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
342473   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 305 rows and 5 columns.

342474     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342475     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
342476     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 305 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 305 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342477     filename _pref
342477   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
342478     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
342479     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
342480    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
342481    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
342482    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
342483    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
342484    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
342485    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
342486     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
342487     quit;
342488     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
342489     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
342490     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
342491     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
342492     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
342493     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342494     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
342495     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342496     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342497     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
342498     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342500     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342501     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
342502     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
342503     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342504     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
342505     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

342506     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
342507     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342508     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342509     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342510     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
342511     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342512     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342513     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
342514     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
342514   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

342515     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342516     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
342517     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 309 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342518     filename _pref
342518   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
342519     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
342520     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
342521    +
342522    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
342523    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
342523   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
342524    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
342525    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
342526    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
342527    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
342528    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
342529     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
342530     quit;
342531     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
342532     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
342533     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
342534     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
342535     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
342536     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342537     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
342538     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342539     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342540     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
342541     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342542     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342543     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342544     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
342545     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
342546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342547     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
342548     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342549     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
342550     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342551     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342552     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342553     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
342554     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342555     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

342556     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
342557     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
342557   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

342558     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342559     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
342560     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 348 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342561     filename _pref
342561   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
342562     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
342563     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
342564    +
342565    +
342566    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
342567    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
342568    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
342569    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
342570    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
342571    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342572    +
342573    +
342574    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
342575    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
342576    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
342577    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
342578    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
342579    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342580    +
342581    +
342582    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
342583    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
342584    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
342585    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
342586    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
342587    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342588    +
342589    +
342590    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
342591    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
342592    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
342593    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
342594    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
342595    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342596    +
342597    +
342598    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
342599    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
342600    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
342601    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
342602    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
342603    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342604    +
342605    +
342606    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
342607    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
342608    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
342609    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
342610    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
342611    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342612    +
342613    +
342614    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
342615    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
342616    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
342617    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
342618    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
342619    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342620    +
342621    +
342622    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
342623    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
342624    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
342625    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
342626    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
342627    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
342628    +if
342629    +_FILTERNORM1 not in ( '.')
342630    + and
342631    +_FILTERNORM2 not in ( '.')
342632    + and
342633    +_FILTERNORM3 not in ( '.')
342634    + and
342635    +_FILTERNORM4 not in ( '.')
342636    + and
342637    +_FILTERNORM5 not in ( '.')
342638    + and
342639    +_FILTERNORM6 not in ( '.')
342640    + and
342641    +_FILTERNORM7 not in ( ' ')
342642    + and
342643    +_FILTERNORM8 not in ( ' ')
342644    +and
342645    +( Dt_Customer ne .)
342646    +and ( Income ne . and (Income<=107000))
342647    +and ( Kidhome ne .)
342648    +and ( MntFishProducts ne .)
342649    +and ( MntFruits ne .)
342650    +and ( MntGoldProds ne .)
342651    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
342652    +and ( MntSweetProducts ne .)
342653    +and ( MntWines ne .)
342654    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
342655    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
342656    +and ( NumStorePurchases ne .)
342657    +and ( NumWebPurchases ne .)
342658    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
342659    +and ( Recency ne .)
342660    +and ( Teenhome ne .)
342661    +and ( Year_Birth ne .)
342662    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
342663    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
342664    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
342665    +end;
MPRINT(EM_DIAGRAM):   end;
342666    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
342667    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
342668     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
342669     quit;
342670     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
342671     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
342672     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
342673     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
342674     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
342675     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342676     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
342677     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342678     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342679     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
342680     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342681     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342682     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342683     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
342684     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
342685     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342686     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
342687     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

342688     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
342689     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342690     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342691     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
342692     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
342693     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
342694     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

342695     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
342696     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
342696   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

342697     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342698     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
342699     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 414 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

342700     %macro varDept(fcmpdata=,id=);
342701     %global nobs&id scoreFlag&id;
342702     %let scoreFlag&id = 0;
342703     %if &id=1 or ^&fcmpStart %then %do;
342704     proc sort data=&fcmpdata out=_temp&id nodupkey;
342705     by NAME;
342706     where id=&id and LHS in( %let j=1;
342707     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
342708     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
342709     "&var" %let j = %eval(&j+1);
342710     %end;
342711     );
342712     run;
342713     %let dsid = %sysfunc(open(_temp&id));
342714     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
342715     %let dsid = %sysfunc(close(&dsid));
342716     %if &&nobs&id %then %do;
342717     %let scoreFlag&id = 1;
342718     %let fcmpStart = 1;
342719     %end;
342720     %else %let fcmpStart = 0;
342721     %end;
342722     %else %do;
342723     proc sort data=&fcmpdata out=_tempid;
342724     where id=&id;
342725     by LHS;
342726     run;
342727     %let dsid = %sysfunc(open(_tempid));
342728     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
342729     %let dsid = %sysfunc(close(&dsid));
342730     %if ^&&nobs&id %then %do;
342731     proc datasets lib=work nolist;
342732     delete _tempid;
342733     run;
342734     quit;
342735     %end;
342736     %else %do;
342737     data _tempAll;
342738     set %let j=%eval(&id-1);
342739     %do x=1 %to &j;
342740     %if &&nobs&x %then %do;
342741     _temp&x %end;
342742     %end;
342743     ;
342744     run;
342745     proc sql;
342746     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
342746   ! work._tempid p2 where p.name=p2.lhs;
342747     quit;
342748     data _temp&id;
342749     set _temp&id;
342750     where LHS ne '' and NAME ne '' and Node ne '';
342751     run;
342752     proc datasets lib=work nolist;
342753     delete _tempAll;
342754     run;
342755     %let dsid = %sysfunc(open(_temp&id));
342756     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
342757     %let dsid = %sysfunc(close(&dsid));
342758     %if ^&&nobs&id %then %do;
342759     proc datasets lib=work nolist;
342760     delete _temp&id;
342761     run;
342762     quit;
342763     %end;
342764     %else %do;
342765     %let scoreFlag&id = 1;
342766     data _temp&id;
342767     set _temp&id;
342768     where LHS ne NAME and node ne '';
342769     run;
342770     %let dsid = %sysfunc(open(_temp&id));
342771     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
342772     %let dsid = %sysfunc(close(&dsid));
342773     %if ^&&nobs&id %then %do;
342774     proc datasets lib=work nolist;
342775     delete _temp&id;
342776     run;
342777     quit;
342778     %end;
342779     %else %do;
342780     proc sort data=_temp&id nodupkey;
342781     by LHS NAME;
342782     run;
342783     %end;
342784     %end;
342785     %end;
342786     %end;
342787     %mend varDept;
342788     %macro optCode(outdata=fcmpdata);
342789     %global fcmpStart;
342790     %let fcmpStart = 0;
342791     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
342792     %let NumNodes=9;
342793     %do k=1 %to &NumNodes;
342794     %vardept(fcmpdata=&outdata, id=&k);
342795     %end;
342796     %mend optCode;
342797     %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 51 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 37 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

342798     filename _pref
342798   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
342799     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
342800     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas.
342801    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
342802    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
342803    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
342804    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
342805    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
342806    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
342807    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
342808    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
342809    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
342810    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
342811    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
342812    +LENGTH _WARN_ $4
342813    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
342814    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
342815    +
342816    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
342817    +
342818    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
342819    +
342820    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
342821    +
342822    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
342823    +
342824    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
342825    +
342826    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
342827    +
342828    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
342829    +
342830    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
342831    +
342832    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
342833    +
342834    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
342835    +
342836    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
342837    +
342838    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
342839    +
342840    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
342841    +
342842    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
342843    +
342844    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
342845    +
342846    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
342847    +
342848    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
342849    +
342850    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
342851    +
342852    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
342853    +
342854    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
342855    +
342856    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
342857    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
342858    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
342859    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
342860    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
342861    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
342862    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
342863    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
342864    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
342865    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
342866    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
342867    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
342868    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
342869    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
342870    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342871    +end;
MPRINT(EM_DIAGRAM):   end;
342872    +else do;
MPRINT(EM_DIAGRAM):   else do;
342873    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
342874    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
342875    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
342876    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
342877    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
342878    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
342879    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
342880    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
342881    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342882    +         end;
MPRINT(EM_DIAGRAM):   end;
342883    +         else do;
MPRINT(EM_DIAGRAM):   else do;
342884    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
342885    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
342886    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342887    +            end;
MPRINT(EM_DIAGRAM):   end;
342888    +         end;
MPRINT(EM_DIAGRAM):   end;
342889    +      end;
MPRINT(EM_DIAGRAM):   end;
342890    +      else do;
MPRINT(EM_DIAGRAM):   else do;
342891    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
342892    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
342893    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342894    +         end;
MPRINT(EM_DIAGRAM):   end;
342895    +      end;
MPRINT(EM_DIAGRAM):   end;
342896    +   end;
MPRINT(EM_DIAGRAM):   end;
342897    +   else do;
MPRINT(EM_DIAGRAM):   else do;
342898    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
342899    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
342900    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342901    +      end;
MPRINT(EM_DIAGRAM):   end;
342902    +      else do;
MPRINT(EM_DIAGRAM):   else do;
342903    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
342904    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
342905    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
342906    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
342907    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
342908    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
342909    +         end;
MPRINT(EM_DIAGRAM):   end;
342910    +      end;
MPRINT(EM_DIAGRAM):   end;
342911    +   end;
MPRINT(EM_DIAGRAM):   end;
342912    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
342913    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
342914    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
342915    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
342916    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
342917    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
342918    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342919    +   end;
MPRINT(EM_DIAGRAM):   end;
342920    +end;
MPRINT(EM_DIAGRAM):   end;
342921    +
342922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342923    +*** Checking missing input Interval
342924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
342925    +
342926    +IF NMISS(
342927    +   AcceptedCmpTotal ,
342928    +   Frq ,
342929    +   Mnt ,
342930    +   MntMeatProducts ,
342931    +   NumCatalogPurchases ,
342932    +   NumDealsPurchases ,
342933    +   NumWebVisitsMonth ,
342934    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
342935    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
342936    +
342937    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
342938    +END;
MPRINT(EM_DIAGRAM):   END;
342939    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342940    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
342941    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342942    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342943    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
342944    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
342945    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
342946    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
342947    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
342948    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
342949    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
342950    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
342951    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
342952    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
342953    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
342954    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
342955    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
342956    +END;
MPRINT(EM_DIAGRAM):   END;
342957    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
342958    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
342959    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
342960    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
342961    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
342962    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
342963    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
342964    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
342965    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
342966    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
342967    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
342968    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
342969    +   ELSE S_NumCatalogPurchases
342970    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
342971    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
342972    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
342973    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
342974    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
342975    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
342976    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
342977    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
342978    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
342979    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
342980    +END;
MPRINT(EM_DIAGRAM):   END;
342981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342982    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
342983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342985    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
342986    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
342987    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
342988    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
342989    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
342990    +          +      0.2338265945616 * S_MntMeatProducts
342991    +          +     0.01564313414142 * S_NumCatalogPurchases
342992    +          +    -0.07464304384577 * S_NumDealsPurchases
342993    +          +    -0.08299095200051 * S_NumWebVisitsMonth
342994    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 * 
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 * 
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 * 
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
342995    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
342996    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
342997    +          +     -0.3893643428589 * S_MntMeatProducts
342998    +          +    -0.11487225011852 * S_NumCatalogPurchases
342999    +          +       0.001237145136 * S_NumDealsPurchases
343000    +          +    -0.04234500703321 * S_NumWebVisitsMonth
343001    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 * 
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 * 
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 * 
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
343002    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
343003    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
343004    +          +    -0.27963474874984 * S_MntMeatProducts
343005    +          +     0.01939450840376 * S_NumCatalogPurchases
343006    +          +    -0.03907394757592 * S_NumDealsPurchases
343007    +          +     0.06752842740103 * S_NumWebVisitsMonth
343008    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 * 
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 * 
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 * 
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
343009    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
343010    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
343011    +          +     0.09842717305515 * S_MntMeatProducts
343012    +          +     0.48040050668836 * S_NumCatalogPurchases
343013    +          +     0.55911507039756 * S_NumDealsPurchases
343014    +          +     0.35441361757916 * S_NumWebVisitsMonth
343015    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 * 
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 * 
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 * 
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
343016    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
343017    +          +     0.13423943689575 * Marital_StatusMarried
343018    +          +    -0.01496857872487 * Marital_StatusSingle
343019    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced + 
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle + 
0.09065620914015 * Marital_StatusTogether ;
343020    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
343021    +          +     0.03005244373637 * Marital_StatusMarried
343022    +          +    -0.06891231360799 * Marital_StatusSingle
343023    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced + 
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle + 
0.03916911436548 * Marital_StatusTogether ;
343024    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
343025    +          +     0.01694145364157 * Marital_StatusMarried
343026    +          +    -0.05183794192194 * Marital_StatusSingle
343027    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced + 
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle + 
0.03543146366331 * Marital_StatusTogether ;
343028    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
343029    +          +     0.44185773223966 * Marital_StatusMarried
343030    +          +     -0.6351733171702 * Marital_StatusSingle
343031    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced + 
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle + 
0.63280583005707 * Marital_StatusTogether ;
343032    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
343033    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
343034    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
343035    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
343036    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
343037    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
343038    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
343039    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
343040    +END;
MPRINT(EM_DIAGRAM):   END;
343041    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343042    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
343043    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
343044    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
343045    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
343046    +END;
MPRINT(EM_DIAGRAM):   END;
343047    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343048    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
343049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343050    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343051    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
343052    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 + 
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
343053    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
343054    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
343055    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
343056    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
343057    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
343058    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
343059    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
343060    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
343061    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
343062    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
343063    +END;
MPRINT(EM_DIAGRAM):   END;
343064    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343065    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
343066    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
343067    +END;
MPRINT(EM_DIAGRAM):   END;
343068    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
343069    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
343070    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
343071    +END;
MPRINT(EM_DIAGRAM):   END;
343072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343073    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
343074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343075    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
343076    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
343077    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
343078    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
343079    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
343080    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
343081    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
343082    +END;
MPRINT(EM_DIAGRAM):   END;
343083    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
343084    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
343085    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
343086    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343087     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343088     quit;
343089     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
343090     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
343091     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
343092     retain ID 2 Node "AutoNeural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural40";
343093     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
343094     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343095     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
343096     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343097     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343098     proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME 
CREATOR);
343099     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343100     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343101     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343102     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
343103     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
343104     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343105     proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
343106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

343107     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
343108     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343110     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343111     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
343112     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343113     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343114     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
343115     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
343115   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 326 rows and 5 columns.

343116     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343117     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
343118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 326 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 326 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343119     filename _pref
343119   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
343120     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
343121     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
343122    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
343123    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
343124    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
343125    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
343126    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
343127    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343128     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343129     quit;
343130     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
343131     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
343132     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
343133     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
343134     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
343135     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343136     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
343137     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343138     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343139     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
343140     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343141     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343142     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343143     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
343144     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
343145     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343146     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
343147     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

343148     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
343149     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343150     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343151     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343152     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
343153     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343154     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343155     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
343156     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
343156   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

343157     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343158     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
343159     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 330 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343160     filename _pref
343160   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
343161     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
343162     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
343163    +
343164    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
343165    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
343165   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
343166    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
343167    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
343168    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
343169    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
343170    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343171     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343172     quit;
343173     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
343174     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
343175     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
343176     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
343177     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
343178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343179     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
343180     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343181     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343182     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
343183     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343184     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343185     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343186     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
343187     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
343188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343189     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
343190     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343191     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
343192     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343193     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343194     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343195     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
343196     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343197     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343198     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
343199     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
343199   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

343200     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343201     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
343202     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 369 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343203     filename _pref
343203   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
343204     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
343205     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
343206    +
343207    +
343208    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
343209    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
343210    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
343211    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
343212    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
343213    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
343214    +
343215    +
343216    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
343217    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
343218    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
343219    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
343220    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
343221    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
343222    +
343223    +
343224    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
343225    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
343226    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
343227    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
343228    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
343229    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
343230    +
343231    +
343232    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
343233    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
343234    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
343235    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
343236    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
343237    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
343238    +
343239    +
343240    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
343241    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
343242    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
343243    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
343244    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
343245    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
343246    +
343247    +
343248    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
343249    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
343250    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
343251    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
343252    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
343253    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
343254    +
343255    +
343256    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
343257    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
343258    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
343259    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
343260    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
343261    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
343262    +
343263    +
343264    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
343265    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
343266    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
343267    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
343268    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
343269    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
343270    +if
343271    +_FILTERNORM1 not in ( '.')
343272    + and
343273    +_FILTERNORM2 not in ( '.')
343274    + and
343275    +_FILTERNORM3 not in ( '.')
343276    + and
343277    +_FILTERNORM4 not in ( '.')
343278    + and
343279    +_FILTERNORM5 not in ( '.')
343280    + and
343281    +_FILTERNORM6 not in ( '.')
343282    + and
343283    +_FILTERNORM7 not in ( ' ')
343284    + and
343285    +_FILTERNORM8 not in ( ' ')
343286    +and
343287    +( Dt_Customer ne .)
343288    +and ( Income ne . and (Income<=107000))
343289    +and ( Kidhome ne .)
343290    +and ( MntFishProducts ne .)
343291    +and ( MntFruits ne .)
343292    +and ( MntGoldProds ne .)
343293    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
343294    +and ( MntSweetProducts ne .)
343295    +and ( MntWines ne .)
343296    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
343297    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
343298    +and ( NumStorePurchases ne .)
343299    +and ( NumWebPurchases ne .)
343300    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
343301    +and ( Recency ne .)
343302    +and ( Teenhome ne .)
343303    +and ( Year_Birth ne .)
343304    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
343305    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
343306    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
343307    +end;
MPRINT(EM_DIAGRAM):   end;
343308    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
343309    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343310     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343311     quit;
343312     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
343313     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
343314     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
343315     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
343316     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
343317     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343318     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
343319     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343320     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343321     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
343322     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343323     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343324     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343325     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
343326     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
343327     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343328     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
343329     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

343330     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
343331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343332     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343333     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343334     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
343335     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343336     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343337     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
343338     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
343338   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

343339     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343340     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
343341     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 435 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343342     %macro varDept(fcmpdata=,id=);
343343     %global nobs&id scoreFlag&id;
343344     %let scoreFlag&id = 0;
343345     %if &id=1 or ^&fcmpStart %then %do;
343346     proc sort data=&fcmpdata out=_temp&id nodupkey;
343347     by NAME;
343348     where id=&id and LHS in( %let j=1;
343349     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
343350     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
343351     "&var" %let j = %eval(&j+1);
343352     %end;
343353     );
343354     run;
343355     %let dsid = %sysfunc(open(_temp&id));
343356     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
343357     %let dsid = %sysfunc(close(&dsid));
343358     %if &&nobs&id %then %do;
343359     %let scoreFlag&id = 1;
343360     %let fcmpStart = 1;
343361     %end;
343362     %else %let fcmpStart = 0;
343363     %end;
343364     %else %do;
343365     proc sort data=&fcmpdata out=_tempid;
343366     where id=&id;
343367     by LHS;
343368     run;
343369     %let dsid = %sysfunc(open(_tempid));
343370     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
343371     %let dsid = %sysfunc(close(&dsid));
343372     %if ^&&nobs&id %then %do;
343373     proc datasets lib=work nolist;
343374     delete _tempid;
343375     run;
343376     quit;
343377     %end;
343378     %else %do;
343379     data _tempAll;
343380     set %let j=%eval(&id-1);
343381     %do x=1 %to &j;
343382     %if &&nobs&x %then %do;
343383     _temp&x %end;
343384     %end;
343385     ;
343386     run;
343387     proc sql;
343388     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
343388   ! work._tempid p2 where p.name=p2.lhs;
343389     quit;
343390     data _temp&id;
343391     set _temp&id;
343392     where LHS ne '' and NAME ne '' and Node ne '';
343393     run;
343394     proc datasets lib=work nolist;
343395     delete _tempAll;
343396     run;
343397     %let dsid = %sysfunc(open(_temp&id));
343398     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
343399     %let dsid = %sysfunc(close(&dsid));
343400     %if ^&&nobs&id %then %do;
343401     proc datasets lib=work nolist;
343402     delete _temp&id;
343403     run;
343404     quit;
343405     %end;
343406     %else %do;
343407     %let scoreFlag&id = 1;
343408     data _temp&id;
343409     set _temp&id;
343410     where LHS ne NAME and node ne '';
343411     run;
343412     %let dsid = %sysfunc(open(_temp&id));
343413     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
343414     %let dsid = %sysfunc(close(&dsid));
343415     %if ^&&nobs&id %then %do;
343416     proc datasets lib=work nolist;
343417     delete _temp&id;
343418     run;
343419     quit;
343420     %end;
343421     %else %do;
343422     proc sort data=_temp&id nodupkey;
343423     by LHS NAME;
343424     run;
343425     %end;
343426     %end;
343427     %end;
343428     %end;
343429     %mend varDept;
343430     %macro optCode(outdata=fcmpdata);
343431     %global fcmpStart;
343432     %let fcmpStart = 0;
343433     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
343434     %let NumNodes=9;
343435     %do k=1 %to &NumNodes;
343436     %vardept(fcmpdata=&outdata, id=&k);
343437     %end;
343438     %mend optCode;
343439     %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 54 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.19 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

343440     filename _pref
343440   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
343441     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
343442     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas.
343443    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
343444    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
343445    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
343446    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
343447    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
343448    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
343449    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
343450    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
343451    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
343452    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
343453    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
343454    +LENGTH _WARN_ $4
343455    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
343456    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
343457    +
343458    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
343459    +
343460    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
343461    +
343462    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
343463    +
343464    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
343465    +
343466    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
343467    +
343468    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
343469    +
343470    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
343471    +
343472    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
343473    +
343474    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
343475    +
343476    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
343477    +
343478    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
343479    +
343480    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
343481    +
343482    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
343483    +
343484    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
343485    +
343486    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
343487    +
343488    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
343489    +
343490    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
343491    +
343492    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
343493    +
343494    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
343495    +
343496    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
343497    +
343498    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
343499    +
343500    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
343501    +
343502    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
343503    +
343504    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
343505    +
343506    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
343507    +
343508    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
343509    +
343510    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
343511    +
343512    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
343513    +
343514    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
343515    +
343516    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
343517    +
343518    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
343519    +
343520    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
343521    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
343522    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
343523    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
343524    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
343525    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
343526    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
343527    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
343528    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
343529    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
343530    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
343531    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
343532    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
343533    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
343534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343535    +end;
MPRINT(EM_DIAGRAM):   end;
343536    +else do;
MPRINT(EM_DIAGRAM):   else do;
343537    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
343538    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
343539    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
343540    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
343541    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
343542    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
343543    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
343544    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
343545    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343546    +         end;
MPRINT(EM_DIAGRAM):   end;
343547    +         else do;
MPRINT(EM_DIAGRAM):   else do;
343548    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
343549    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
343550    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343551    +            end;
MPRINT(EM_DIAGRAM):   end;
343552    +         end;
MPRINT(EM_DIAGRAM):   end;
343553    +      end;
MPRINT(EM_DIAGRAM):   end;
343554    +      else do;
MPRINT(EM_DIAGRAM):   else do;
343555    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
343556    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
343557    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343558    +         end;
MPRINT(EM_DIAGRAM):   end;
343559    +      end;
MPRINT(EM_DIAGRAM):   end;
343560    +   end;
MPRINT(EM_DIAGRAM):   end;
343561    +   else do;
MPRINT(EM_DIAGRAM):   else do;
343562    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
343563    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
343564    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343565    +      end;
MPRINT(EM_DIAGRAM):   end;
343566    +      else do;
MPRINT(EM_DIAGRAM):   else do;
343567    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
343568    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
343569    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
343570    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
343571    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
343572    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
343573    +         end;
MPRINT(EM_DIAGRAM):   end;
343574    +      end;
MPRINT(EM_DIAGRAM):   end;
343575    +   end;
MPRINT(EM_DIAGRAM):   end;
343576    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
343577    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
343578    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
343579    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
343580    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
343581    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
343582    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343583    +   end;
MPRINT(EM_DIAGRAM):   end;
343584    +end;
MPRINT(EM_DIAGRAM):   end;
343585    +
343586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343587    +*** Checking missing input Interval
343588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
343589    +
343590    +IF NMISS(
343591    +   AcceptedCmpTotal ,
343592    +   Frq ,
343593    +   Mnt ,
343594    +   MntMeatProducts ,
343595    +   NumCatalogPurchases ,
343596    +   NumDealsPurchases ,
343597    +   NumWebVisitsMonth ,
343598    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
343599    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
343600    +
343601    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
343602    +END;
MPRINT(EM_DIAGRAM):   END;
343603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343604    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
343605    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343606    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343607    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
343608    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
343609    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
343610    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
343611    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
343612    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
343613    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
343614    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
343615    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
343616    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
343617    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
343618    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
343619    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
343620    +END;
MPRINT(EM_DIAGRAM):   END;
343621    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343622    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
343623    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
343624    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
343625    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
343626    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
343627    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
343628    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
343629    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
343630    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
343631    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
343632    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
343633    +   ELSE S_NumCatalogPurchases
343634    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
343635    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
343636    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
343637    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
343638    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
343639    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
343640    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
343641    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
343642    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
343643    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
343644    +END;
MPRINT(EM_DIAGRAM):   END;
343645    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343646    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
343647    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343649    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
343650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343651    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343652    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
343653    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
343654    +          +    -1.92258561684999 * S_MntMeatProducts
343655    +          +     -1.7098915194593 * S_NumCatalogPurchases
343656    +          +    -0.73092398706652 * S_NumDealsPurchases
343657    +          +    -1.52371325097768 * S_NumWebVisitsMonth
343658    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 * 
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 * 
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 * 
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
343659    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
343660    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
343661    +          +     3.63686708458831 * S_MntMeatProducts
343662    +          +     0.32632650897658 * S_NumCatalogPurchases
343663    +          +     1.27820262549135 * S_NumDealsPurchases
343664    +          +    -0.18941034658667 * S_NumWebVisitsMonth
343665    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 * 
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 * 
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 * 
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
343666    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
343667    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
343668    +          +    -0.10252809999866 * S_MntMeatProducts
343669    +          +    -2.01730745054613 * S_NumCatalogPurchases
343670    +          +     0.36276273056202 * S_NumDealsPurchases
343671    +          +    -2.03441379397145 * S_NumWebVisitsMonth
343672    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 * 
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 * 
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 * 
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
343673    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
343674    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
343675    +          +     8.03567059273376 * S_MntMeatProducts
343676    +          +     2.16664649845379 * S_NumCatalogPurchases
343677    +          +     0.84009978401032 * S_NumDealsPurchases
343678    +          +     0.11354933533503 * S_NumWebVisitsMonth
343679    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 * 
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 * 
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 * 
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
343680    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
343681    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
343682    +          +     1.87107978843927 * S_MntMeatProducts
343683    +          +    -0.31123291719979 * S_NumCatalogPurchases
343684    +          +    -2.80886037303887 * S_NumDealsPurchases
343685    +          +     0.08829426076164 * S_NumWebVisitsMonth
343686    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq 
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 * 
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 * 
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
343687    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
343688    +          +     0.50838467240268 * Marital_StatusMarried
343689    +          +    -0.57765911295879 * Marital_StatusSingle
343690    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced + 
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle + 
-0.24222335065155 * Marital_StatusTogether ;
343691    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
343692    +          +     0.03531168852657 * Marital_StatusMarried
343693    +          +    -0.34417109081648 * Marital_StatusSingle
343694    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced + 
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle + 
-0.31315325265885 * Marital_StatusTogether ;
343695    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
343696    +          +      1.9516301625913 * Marital_StatusMarried
343697    +          +    -0.24904237582097 * Marital_StatusSingle
343698    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced + 
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle + 
1.51668241109596 * Marital_StatusTogether ;
343699    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
343700    +          +     0.06718550412505 * Marital_StatusMarried
343701    +          +    -0.16735434131197 * Marital_StatusSingle
343702    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced + 
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle + 
1.06963270761532 * Marital_StatusTogether ;
343703    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
343704    +          +    -1.79498797741807 * Marital_StatusMarried
343705    +          +     2.86341746904333 * Marital_StatusSingle
343706    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced + 
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle + 
-2.44061593695879 * Marital_StatusTogether ;
343707    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
343708    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
343709    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
343710    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
343711    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
343712    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
343713    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
343714    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
343715    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
343716    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
343717    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
343718    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
343719    +END;
MPRINT(EM_DIAGRAM):   END;
343720    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343721    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
343722    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
343723    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
343724    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
343725    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
343726    +END;
MPRINT(EM_DIAGRAM):   END;
343727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343728    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
343729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343730    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343731    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
343732    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
343733    +          +    -0.19914740985847 * S_MntMeatProducts
343734    +          +    -0.96920717464092 * S_NumCatalogPurchases
343735    +          +    -1.68508588177508 * S_NumDealsPurchases
343736    +          +     -0.9404284924488 * S_NumWebVisitsMonth
343737    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 * 
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092 
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 * 
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
343738    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
343739    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
343740    +          +    -1.60286606361912 * S_MntMeatProducts
343741    +          +    -0.05010796315816 * S_NumCatalogPurchases
343742    +          +      1.1380574488234 * S_NumDealsPurchases
343743    +          +     0.25426721345204 * S_NumWebVisitsMonth
343744    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq 
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 * 
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 * 
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
343745    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
343746    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
343747    +          +     2.58979830897092 * S_MntMeatProducts
343748    +          +      1.2569773545009 * S_NumCatalogPurchases
343749    +          +     0.21119951191653 * S_NumDealsPurchases
343750    +          +    -0.40993456334326 * S_NumWebVisitsMonth
343751    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 * 
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 * 
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 * 
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
343752    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
343753    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
343754    +          +     1.58324428521578 * S_MntMeatProducts
343755    +          +    -0.64140579988939 * S_NumCatalogPurchases
343756    +          +    -0.07557073365385 * S_NumDealsPurchases
343757    +          +     0.27159109297915 * S_NumWebVisitsMonth
343758    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 * 
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 * 
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 * 
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
343759    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
343760    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
343761    +          +     0.02133290318048 * S_MntMeatProducts
343762    +          +    -0.37682732019302 * S_NumCatalogPurchases
343763    +          +     2.57483962426003 * S_NumDealsPurchases
343764    +          +    -0.76651867011773 * S_NumWebVisitsMonth
343765    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 * 
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 * 
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 * 
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
343766    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
343767    +          +     1.00798219323102 * Marital_StatusMarried
343768    +          +     -1.3878630687005 * Marital_StatusSingle
343769    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced + 
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle + 
0.38993646858937 * Marital_StatusTogether ;
343770    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
343771    +          +    -0.99149540204741 * Marital_StatusMarried
343772    +          +    -0.22772928542301 * Marital_StatusSingle
343773    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced + 
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle + 
2.92746205796719 * Marital_StatusTogether ;
343774    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
343775    +          +     1.54170826840021 * Marital_StatusMarried
343776    +          +    -0.09937587953829 * Marital_StatusSingle
343777    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced + 
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle + 
0.56302999728519 * Marital_StatusTogether ;
343778    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
343779    +          +    -0.48775794259019 * Marital_StatusMarried
343780    +          +     0.87075561905397 * Marital_StatusSingle
343781    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced + 
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle + 
0.04810416118778 * Marital_StatusTogether ;
343782    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
343783    +          +     0.01260332236695 * Marital_StatusMarried
343784    +          +     1.18815076116703 * Marital_StatusSingle
343785    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced + 
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle + 
0.48437203261339 * Marital_StatusTogether ;
343786    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
343787    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
343788    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
343789    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
343790    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
343791    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
343792    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
343793    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
343794    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
343795    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
343796    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
343797    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
343798    +END;
MPRINT(EM_DIAGRAM):   END;
343799    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343800    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
343801    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
343802    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
343803    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
343804    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
343805    +END;
MPRINT(EM_DIAGRAM):   END;
343806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343807    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
343808    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343809    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343810    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
343811    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
343812    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 + 
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
343813    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
343814    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
343815    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 + 
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
343816    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
343817    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
343818    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 + 
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
343819    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
343820    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
343821    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 + 
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
343822    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
343823    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
343824    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 + 
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
343825    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
343826    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
343827    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2 
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
343828    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
343829    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
343830    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2 
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
343831    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
343832    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
343833    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2 
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
343834    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
343835    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
343836    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2 
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
343837    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
343838    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
343839    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2 
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
343840    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
343841    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
343842    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
343843    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
343844    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
343845    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
343846    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
343847    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
343848    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
343849    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
343850    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
343851    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
343852    +END;
MPRINT(EM_DIAGRAM):   END;
343853    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343854    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
343855    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
343856    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
343857    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
343858    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
343859    +END;
MPRINT(EM_DIAGRAM):   END;
343860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343861    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
343862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343863    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
343864    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
343865    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
343866    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 + 
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
343867    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
343868    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
343869    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
343870    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
343871    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
343872    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
343873    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
343874    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
343875    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
343876    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
343877    +END;
MPRINT(EM_DIAGRAM):   END;
343878    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
343879    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
343880    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
343881    +END;
MPRINT(EM_DIAGRAM):   END;
343882    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
343883    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
343884    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
343885    +END;
MPRINT(EM_DIAGRAM):   END;
343886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343887    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
343888    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
343889    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
343890    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
343891    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
343892    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
343893    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
343894    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
343895    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
343896    +END;
MPRINT(EM_DIAGRAM):   END;
343897    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
343898    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
343899    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
343900    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343901     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343902     quit;
343903     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
343904     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
343905     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
343906     retain ID 2 Node "AutoNeural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural34";
343907     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
343908     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1777 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1777 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343909     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
343910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343911     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1777 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1777 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343912     proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME 
CREATOR);
343913     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343914     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

343915     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343916     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
343917     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
343918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343919     proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
343920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343921     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
343922     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343923     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343924     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343925     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
343926     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343927     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343928     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
343929     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
343929   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 765 rows and 5 columns.

343930     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343931     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
343932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 765 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 765 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343933     filename _pref
343933   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
343934     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
343935     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
343936    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
343937    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
343938    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
343939    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
343940    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
343941    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343942     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343943     quit;
343944     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
343945     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
343946     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
343947     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
343948     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
343949     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343950     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
343951     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343953     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
343954     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343955     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343956     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343957     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
343958     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
343959     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343960     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
343961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343962     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
343963     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343964     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

343965     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
343966     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
343967     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343968     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343969     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
343970     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
343970   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

343971     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343972     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
343973     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 769 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343974     filename _pref
343974   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
343975     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
343976     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
343977    +
343978    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
343979    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
343979   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
343980    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
343981    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
343982    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
343983    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
343984    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
343985     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
343986     quit;
343987     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
343988     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
343989     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
343990     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
343991     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
343992     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343993     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
343994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343995     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

343996     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
343997     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
343998     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

343999     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
344000     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
344001     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
344002     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344003     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
344004     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

344005     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
344006     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
344007     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344008     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
344009     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
344010     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
344011     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344012     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
344013     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
344013   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

344014     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

344015     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
344016     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 808 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344017     filename _pref
344017   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
344018     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
344019     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
344020    +
344021    +
344022    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
344023    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
344024    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
344025    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
344026    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
344027    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
344028    +
344029    +
344030    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
344031    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
344032    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
344033    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
344034    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
344035    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
344036    +
344037    +
344038    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
344039    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
344040    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
344041    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
344042    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
344043    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
344044    +
344045    +
344046    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
344047    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
344048    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
344049    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
344050    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
344051    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
344052    +
344053    +
344054    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
344055    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
344056    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
344057    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
344058    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
344059    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
344060    +
344061    +
344062    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
344063    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
344064    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
344065    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
344066    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
344067    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
344068    +
344069    +
344070    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
344071    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
344072    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
344073    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
344074    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
344075    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
344076    +
344077    +
344078    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
344079    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
344080    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
344081    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
344082    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
344083    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
344084    +if
344085    +_FILTERNORM1 not in ( '.')
344086    + and
344087    +_FILTERNORM2 not in ( '.')
344088    + and
344089    +_FILTERNORM3 not in ( '.')
344090    + and
344091    +_FILTERNORM4 not in ( '.')
344092    + and
344093    +_FILTERNORM5 not in ( '.')
344094    + and
344095    +_FILTERNORM6 not in ( '.')
344096    + and
344097    +_FILTERNORM7 not in ( ' ')
344098    + and
344099    +_FILTERNORM8 not in ( ' ')
344100    +and
344101    +( Dt_Customer ne .)
344102    +and ( Income ne . and (Income<=107000))
344103    +and ( Kidhome ne .)
344104    +and ( MntFishProducts ne .)
344105    +and ( MntFruits ne .)
344106    +and ( MntGoldProds ne .)
344107    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
344108    +and ( MntSweetProducts ne .)
344109    +and ( MntWines ne .)
344110    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
344111    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
344112    +and ( NumStorePurchases ne .)
344113    +and ( NumWebPurchases ne .)
344114    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
344115    +and ( Recency ne .)
344116    +and ( Teenhome ne .)
344117    +and ( Year_Birth ne .)
344118    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
344119    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
344120    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
344121    +end;
MPRINT(EM_DIAGRAM):   end;
344122    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
344123    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
344124     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
344125     quit;
344126     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
344127     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
344128     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
344129     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
344130     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
344131     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344132     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
344133     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
344134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344135     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
344136     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
344137     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344138     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
344139     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
344140     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
344141     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344142     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
344143     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

344144     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
344145     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
344146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344147     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
344148     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
344149     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
344150     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344151     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
344152     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
344152   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

344153     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

344154     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
344155     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 874 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

344156     %macro varDept(fcmpdata=,id=);
344157     %global nobs&id scoreFlag&id;
344158     %let scoreFlag&id = 0;
344159     %if &id=1 or ^&fcmpStart %then %do;
344160     proc sort data=&fcmpdata out=_temp&id nodupkey;
344161     by NAME;
344162     where id=&id and LHS in( %let j=1;
344163     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
344164     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
344165     "&var" %let j = %eval(&j+1);
344166     %end;
344167     );
344168     run;
344169     %let dsid = %sysfunc(open(_temp&id));
344170     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
344171     %let dsid = %sysfunc(close(&dsid));
344172     %if &&nobs&id %then %do;
344173     %let scoreFlag&id = 1;
344174     %let fcmpStart = 1;
344175     %end;
344176     %else %let fcmpStart = 0;
344177     %end;
344178     %else %do;
344179     proc sort data=&fcmpdata out=_tempid;
344180     where id=&id;
344181     by LHS;
344182     run;
344183     %let dsid = %sysfunc(open(_tempid));
344184     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
344185     %let dsid = %sysfunc(close(&dsid));
344186     %if ^&&nobs&id %then %do;
344187     proc datasets lib=work nolist;
344188     delete _tempid;
344189     run;
344190     quit;
344191     %end;
344192     %else %do;
344193     data _tempAll;
344194     set %let j=%eval(&id-1);
344195     %do x=1 %to &j;
344196     %if &&nobs&x %then %do;
344197     _temp&x %end;
344198     %end;
344199     ;
344200     run;
344201     proc sql;
344202     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
344202   ! work._tempid p2 where p.name=p2.lhs;
344203     quit;
344204     data _temp&id;
344205     set _temp&id;
344206     where LHS ne '' and NAME ne '' and Node ne '';
344207     run;
344208     proc datasets lib=work nolist;
344209     delete _tempAll;
344210     run;
344211     %let dsid = %sysfunc(open(_temp&id));
344212     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
344213     %let dsid = %sysfunc(close(&dsid));
344214     %if ^&&nobs&id %then %do;
344215     proc datasets lib=work nolist;
344216     delete _temp&id;
344217     run;
344218     quit;
344219     %end;
344220     %else %do;
344221     %let scoreFlag&id = 1;
344222     data _temp&id;
344223     set _temp&id;
344224     where LHS ne NAME and node ne '';
344225     run;
344226     %let dsid = %sysfunc(open(_temp&id));
344227     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
344228     %let dsid = %sysfunc(close(&dsid));
344229     %if ^&&nobs&id %then %do;
344230     proc datasets lib=work nolist;
344231     delete _temp&id;
344232     run;
344233     quit;
344234     %end;
344235     %else %do;
344236     proc sort data=_temp&id nodupkey;
344237     by LHS NAME;
344238     run;
344239     %end;
344240     %end;
344241     %end;
344242     %end;
344243     %mend varDept;
344244     %macro optCode(outdata=fcmpdata);
344245     %global fcmpStart;
344246     %let fcmpStart = 0;
344247     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
344248     %let NumNodes=9;
344249     %do k=1 %to &NumNodes;
344250     %vardept(fcmpdata=&outdata, id=&k);
344251     %end;
344252     %mend optCode;
344253     %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 87 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 61 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 26 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

344254     filename _pref
344254   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
344255     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
344256     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas.
344257    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
344258    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
344259    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
344260    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
344261    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
344262    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
344263    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
344264    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
344265    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
344266    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
344267    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
344268    +LENGTH _WARN_ $4
344269    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
344270    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
344271    +
344272    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
344273    +
344274    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
344275    +
344276    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
344277    +
344278    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
344279    +
344280    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
344281    +
344282    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
344283    +
344284    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
344285    +
344286    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
344287    +
344288    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
344289    +
344290    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
344291    +
344292    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
344293    +
344294    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
344295    +
344296    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
344297    +
344298    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
344299    +
344300    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
344301    +
344302    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
344303    +
344304    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
344305    +
344306    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
344307    +
344308    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
344309    +
344310    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
344311    +
344312    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
344313    +
344314    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
344315    +
344316    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
344317    +
344318    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
344319    +
344320    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
344321    +
344322    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
344323    +
344324    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
344325    +
344326    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
344327    +
344328    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
344329    +
344330    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
344331    +
344332    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
344333    +
344334    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
344335    +
344336    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
344337    +
344338    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
344339    +
344340    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
344341    +
344342    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
344343    +
344344    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
344345    +
344346    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
344347    +
344348    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
344349    +
344350    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
344351    +
344352    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
344353    +
344354    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
344355    +
344356    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
344357    +
344358    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
344359    +
344360    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
344361    +
344362    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
344363    +
344364    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
344365    +
344366    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
344367    +
344368    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
344369    +
344370    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
344371    +
344372    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
344373    +
344374    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
344375    +
344376    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
344377    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
344378    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
344379    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
344380    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
344381    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
344382    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
344383    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
344384    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
344385    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
344386    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
344387    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
344388    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
344389    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
344390    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
344391    +end;
MPRINT(EM_DIAGRAM):   end;
344392    +else do;
MPRINT(EM_DIAGRAM):   else do;
344393    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
344394    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
344395    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
344396    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
344397    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
344398    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
344399    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
344400    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
344401    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
344402    +         end;
MPRINT(EM_DIAGRAM):   end;
344403    +         else do;
MPRINT(EM_DIAGRAM):   else do;
344404    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
344405    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
344406    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
344407    +            end;
MPRINT(EM_DIAGRAM):   end;
344408    +         end;
MPRINT(EM_DIAGRAM):   end;
344409    +      end;
MPRINT(EM_DIAGRAM):   end;
344410    +      else do;
MPRINT(EM_DIAGRAM):   else do;
344411    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
344412    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
344413    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
344414    +         end;
MPRINT(EM_DIAGRAM):   end;
344415    +      end;
MPRINT(EM_DIAGRAM):   end;
344416    +   end;
MPRINT(EM_DIAGRAM):   end;
344417    +   else do;
MPRINT(EM_DIAGRAM):   else do;
344418    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
344419    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
344420    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
344421    +      end;
MPRINT(EM_DIAGRAM):   end;
344422    +      else do;
MPRINT(EM_DIAGRAM):   else do;
344423    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
344424    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
344425    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
344426    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
344427    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
344428    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
344429    +         end;
MPRINT(EM_DIAGRAM):   end;
344430    +      end;
MPRINT(EM_DIAGRAM):   end;
344431    +   end;
MPRINT(EM_DIAGRAM):   end;
344432    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
344433    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
344434    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
344435    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
344436    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
344437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
344438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
344439    +   end;
MPRINT(EM_DIAGRAM):   end;
344440    +end;
MPRINT(EM_DIAGRAM):   end;
344441    +
344442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344443    +*** Checking missing input Interval
344444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
344445    +
344446    +IF NMISS(
344447    +   AcceptedCmpTotal ,
344448    +   Frq ,
344449    +   Mnt ,
344450    +   MntMeatProducts ,
344451    +   NumCatalogPurchases ,
344452    +   NumDealsPurchases ,
344453    +   NumWebVisitsMonth ,
344454    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
344455    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
344456    +
344457    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
344458    +END;
MPRINT(EM_DIAGRAM):   END;
344459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344460    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
344461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344462    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
344463    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
344464    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
344465    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
344466    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
344467    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
344468    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
344469    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
344470    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
344471    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
344472    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
344473    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
344474    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
344475    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
344476    +END;
MPRINT(EM_DIAGRAM):   END;
344477    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
344478    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
344479    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
344480    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
344481    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
344482    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
344483    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
344484    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
344485    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
344486    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
344487    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
344488    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
344489    +   ELSE S_NumCatalogPurchases
344490    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
344491    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
344492    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
344493    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
344494    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
344495    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
344496    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
344497    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
344498    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
344499    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
344500    +END;
MPRINT(EM_DIAGRAM):   END;
344501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344502    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
344503    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344504    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344505    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
344506    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344507    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
344508    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
344509    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
344510    +          +     2.79168320854924 * S_MntMeatProducts
344511    +          +    -1.09894266401589 * S_NumCatalogPurchases
344512    +          +    -0.32966417347551 * S_NumDealsPurchases
344513    +          +    -0.72195034767343 * S_NumWebVisitsMonth
344514    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 * 
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 * 
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 * 
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
344515    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
344516    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
344517    +          +     9.02469430152189 * S_MntMeatProducts
344518    +          +     1.42644521887241 * S_NumCatalogPurchases
344519    +          +      0.6475058577302 * S_NumDealsPurchases
344520    +          +     0.08123225110233 * S_NumWebVisitsMonth
344521    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 * 
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 * 
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 * 
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
344522    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
344523    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
344524    +          +     5.40567027331821 * S_MntMeatProducts
344525    +          +     0.21404551755506 * S_NumCatalogPurchases
344526    +          +    -3.79184634796332 * S_NumDealsPurchases
344527    +          +     0.64355102802571 * S_NumWebVisitsMonth
344528    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 * 
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 * 
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 * 
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
344529    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
344530    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
344531    +          +     2.35287601364019 * S_MntMeatProducts
344532    +          +    -3.27198648531912 * S_NumCatalogPurchases
344533    +          +    -0.16046880718311 * S_NumDealsPurchases
344534    +          +     -3.7025327830273 * S_NumWebVisitsMonth
344535    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 * 
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 * 
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 * 
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
344536    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
344537    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
344538    +          +     8.39312647460766 * S_MntMeatProducts
344539    +          +     3.07026872536137 * S_NumCatalogPurchases
344540    +          +     2.03045608124213 * S_NumDealsPurchases
344541    +          +     3.86452915398414 * S_NumWebVisitsMonth
344542    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 * 
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 * 
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 * 
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
344543    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
344544    +          +     0.14979485299347 * Marital_StatusMarried
344545    +          +    -0.09166445391312 * Marital_StatusSingle
344546    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced + 
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle + 
-0.8898837643688 * Marital_StatusTogether ;
344547    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
344548    +          +      0.1646484112393 * Marital_StatusMarried
344549    +          +     0.01074681811884 * Marital_StatusSingle
344550    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced + 
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle + 
-0.38035258327435 * Marital_StatusTogether ;
344551    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
344552    +          +    -0.28313626645981 * Marital_StatusMarried
344553    +          +      2.8257446964988 * Marital_StatusSingle
344554    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced + 
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle + 
0.44817043395102 * Marital_StatusTogether ;
344555    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
344556    +          +     3.05775024202559 * Marital_StatusMarried
344557    +          +    -0.23539571945671 * Marital_StatusSingle
344558    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced + 
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle + 
4.66331490520755 * Marital_StatusTogether ;
344559    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
344560    +          +    -0.48359916542157 * Marital_StatusMarried
344561    +          +    -1.64182316823237 * Marital_StatusSingle
344562    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced + 
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle + 
1.33430611846768 * Marital_StatusTogether ;
344563    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
344564    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
344565    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
344566    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
344567    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
344568    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
344569    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
344570    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
344571    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
344572    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
344573    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
344574    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
344575    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
344576    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
344577    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
344578    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
344579    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
344580    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
344581    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
344582    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
344583    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
344584    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
344585    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
344586    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
344587    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
344588    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
344589    +END;
MPRINT(EM_DIAGRAM):   END;
344590    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
344591    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
344592    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
344593    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
344594    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
344595    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
344596    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
344597    +END;
MPRINT(EM_DIAGRAM):   END;
344598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344599    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
344600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344601    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
344602    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
344603    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
344604    +          +     0.55999885697493 * S_MntMeatProducts
344605    +          +      0.2225207563207 * S_NumCatalogPurchases
344606    +          +     -1.0233439835205 * S_NumDealsPurchases
344607    +          +    -0.35430585878397 * S_NumWebVisitsMonth
344608    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 * 
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 * 
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 * 
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
344609    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
344610    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
344611    +          +    -1.04508919964747 * S_MntMeatProducts
344612    +          +     -0.6758665249546 * S_NumCatalogPurchases
344613    +          +    -0.24215201937497 * S_NumDealsPurchases
344614    +          +    -1.02736823453312 * S_NumWebVisitsMonth
344615    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 * 
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 * 
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 * 
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
344616    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
344617    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
344618    +          +    -3.97854305593999 * S_MntMeatProducts
344619    +          +    -2.05331728407593 * S_NumCatalogPurchases
344620    +          +    -0.48841403720827 * S_NumDealsPurchases
344621    +          +     0.25411498590567 * S_NumWebVisitsMonth
344622    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 * 
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593 
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 * 
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
344623    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
344624    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
344625    +          +     -0.7071400781557 * S_MntMeatProducts
344626    +          +     1.20780208787296 * S_NumCatalogPurchases
344627    +          +    -0.58152407834402 * S_NumDealsPurchases
344628    +          +     2.15567925539399 * S_NumWebVisitsMonth
344629    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 * 
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 * 
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 * 
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
344630    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
344631    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
344632    +          +    -1.07023271439686 * S_MntMeatProducts
344633    +          +     0.31952847185507 * S_NumCatalogPurchases
344634    +          +     0.97232557455358 * S_NumDealsPurchases
344635    +          +     1.40227284681788 * S_NumWebVisitsMonth
344636    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 * 
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 * 
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 * 
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
344637    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
344638    +          +    -1.54860787754125 * Marital_StatusMarried
344639    +          +     3.07164083530731 * Marital_StatusSingle
344640    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced + 
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle + 
-0.82580381126768 * Marital_StatusTogether ;
344641    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
344642    +          +     1.93404037878036 * Marital_StatusMarried
344643    +          +    -1.33159061927866 * Marital_StatusSingle
344644    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced + 
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle + 
-1.07762979483959 * Marital_StatusTogether ;
344645    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
344646    +          +    -1.20603561095549 * Marital_StatusMarried
344647    +          +     1.40927693179184 * Marital_StatusSingle
344648    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced + 
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle + 
-0.49407691558139 * Marital_StatusTogether ;
344649    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
344650    +          +     -0.1442863204197 * Marital_StatusMarried
344651    +          +     0.60523055771734 * Marital_StatusSingle
344652    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced + 
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle + 
0.73192299984342 * Marital_StatusTogether ;
344653    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
344654    +          +     0.09024082077945 * Marital_StatusMarried
344655    +          +     0.46315219527454 * Marital_StatusSingle
344656    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced + 
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle + 
-0.88863370904771 * Marital_StatusTogether ;
344657    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
344658    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
344659    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
344660    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
344661    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
344662    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
344663    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
344664    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
344665    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
344666    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
344667    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
344668    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
344669    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
344670    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
344671    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
344672    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
344673    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
344674    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
344675    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
344676    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
344677    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
344678    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
344679    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
344680    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
344681    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
344682    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
344683    +END;
MPRINT(EM_DIAGRAM):   END;
344684    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
344685    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
344686    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
344687    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
344688    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
344689    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
344690    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
344691    +END;
MPRINT(EM_DIAGRAM):   END;
344692    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344693    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
344694    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344695    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
344696    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
344697    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
344698    +          +    -1.02461177883701 * S_MntMeatProducts
344699    +          +     0.58245198640098 * S_NumCatalogPurchases
344700    +          +    -0.23780276328844 * S_NumDealsPurchases
344701    +          +     1.28202459687231 * S_NumWebVisitsMonth
344702    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 * 
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 * 
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 * 
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
344703    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
344704    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
344705    +          +     0.13875330330852 * S_MntMeatProducts
344706    +          +    -0.22996544763814 * S_NumCatalogPurchases
344707    +          +    -0.36599639965399 * S_NumDealsPurchases
344708    +          +     1.99081506581768 * S_NumWebVisitsMonth
344709    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 * 
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 * 
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 * 
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
344710    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
344711    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
344712    +          +     0.94472031892058 * S_MntMeatProducts
344713    +          +     0.27511909854912 * S_NumCatalogPurchases
344714    +          +    -0.55526545857693 * S_NumDealsPurchases
344715    +          +    -0.61544688091302 * S_NumWebVisitsMonth
344716    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 * 
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 * 
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 * 
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
344717    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
344718    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
344719    +          +     1.61403840093612 * S_MntMeatProducts
344720    +          +    -0.34382576245292 * S_NumCatalogPurchases
344721    +          +     0.70213159483637 * S_NumDealsPurchases
344722    +          +    -0.39731145628175 * S_NumWebVisitsMonth
344723    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 * 
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 * 
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 * 
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
344724    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
344725    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
344726    +          +    -0.33974847531229 * S_MntMeatProducts
344727    +          +     1.74350962571519 * S_NumCatalogPurchases
344728    +          +     0.41098583446208 * S_NumDealsPurchases
344729    +          +    -0.66305298743409 * S_NumWebVisitsMonth
344730    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 * 
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 * 
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 * 
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
344731    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
344732    +          +    -0.29510060772746 * Marital_StatusMarried
344733    +          +     1.74124353401891 * Marital_StatusSingle
344734    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced + 
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle + 
0.09719439743973 * Marital_StatusTogether ;
344735    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
344736    +          +    -0.61203463567014 * Marital_StatusMarried
344737    +          +     1.95705767804118 * Marital_StatusSingle
344738    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced + 
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle + 
0.33872926096104 * Marital_StatusTogether ;
344739    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
344740    +          +      1.7151906515185 * Marital_StatusMarried
344741    +          +     0.70376524929742 * Marital_StatusSingle
344742    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced + 
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle + 
-1.29423542782048 * Marital_StatusTogether ;
344743    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
344744    +          +    -1.27088213578872 * Marital_StatusMarried
344745    +          +    -0.91253966593459 * Marital_StatusSingle
344746    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced + 
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle + 
-1.63570965011409 * Marital_StatusTogether ;
344747    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
344748    +          +     -0.5308059771847 * Marital_StatusMarried
344749    +          +    -0.11208078645904 * Marital_StatusSingle
344750    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced + 
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle + 
0.12123408245196 * Marital_StatusTogether ;
344751    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
344752    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
344753    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
344754    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
344755    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
344756    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
344757    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
344758    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
344759    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
344760    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
344761    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
344762    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
344763    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
344764    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
344765    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
344766    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
344767    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
344768    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
344769    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
344770    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
344771    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
344772    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
344773    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
344774    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
344775    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
344776    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
344777    +END;
MPRINT(EM_DIAGRAM):   END;
344778    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
344779    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
344780    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
344781    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
344782    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
344783    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
344784    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
344785    +END;
MPRINT(EM_DIAGRAM):   END;
344786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344787    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
344788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344789    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
344790    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
344791    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
344792    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 + 
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 + 
3.54247817086581 * H1x1_6 ;
344793    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
344794    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
344795    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 + 
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 + 
-0.52107667797315 * H1x1_6 ;
344796    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
344797    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
344798    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 + 
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 + 
0.60012496024445 * H1x1_6 ;
344799    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
344800    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
344801    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 + 
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 + 
2.02399938887542 * H1x1_6 ;
344802    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
344803    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
344804    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 + 
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 + 
-4.36781665394854 * H1x1_6 ;
344805    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
344806    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
344807    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 + 
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 + 
-0.71801946066256 * H1x1_6 ;
344808    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
344809    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
344810    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
344811    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2 
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 + 
2.04509722582983 * H1x2_6 ;
344812    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
344813    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
344814    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
344815    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2 
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 + 
-0.58594558422322 * H1x2_6 ;
344816    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
344817    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
344818    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
344819    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2 
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 + 
0.11690916040928 * H1x2_6 ;
344820    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
344821    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
344822    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
344823    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2 
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 + 
2.96934196494413 * H1x2_6 ;
344824    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
344825    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
344826    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
344827    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2 
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 + 
-2.39364002282682 * H1x2_6 ;
344828    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
344829    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
344830    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
344831    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 * 
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 + 
-0.91996717495653 * H1x2_6 ;
344832    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
344833    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
344834    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
344835    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2 
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 + 
0.53167866343669 * H1x3_6 ;
344836    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
344837    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
344838    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
344839    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2 
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 + 
0.09325988094727 * H1x3_6 ;
344840    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
344841    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
344842    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
344843    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 * 
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5 
+ -0.43722126116548 * H1x3_6 ;
344844    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
344845    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
344846    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
344847    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2 
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 + 
1.49998370890459 * H1x3_6 ;
344848    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
344849    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
344850    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
344851    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2 
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 + 
-0.30128378921356 * H1x3_6 ;
344852    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
344853    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
344854    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
344855    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2 
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 + 
-0.19152232249307 * H1x3_6 ;
344856    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
344857    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
344858    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
344859    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
344860    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
344861    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
344862    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
344863    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
344864    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
344865    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
344866    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
344867    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
344868    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
344869    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
344870    +END;
MPRINT(EM_DIAGRAM):   END;
344871    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
344872    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
344873    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
344874    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
344875    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
344876    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
344877    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
344878    +END;
MPRINT(EM_DIAGRAM):   END;
344879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344880    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
344881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
344883    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
344884    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
344885    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 + 
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 + 
-1.19299469136178 * H1x1_6 ;
344886    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
344887    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
344888    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 + 
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 + 
-0.23243316190231 * H1x1_6 ;
344889    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
344890    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
344891    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 + 
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 + 
1.14739016222951 * H1x1_6 ;
344892    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
344893    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
344894    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 + 
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 + 
0.69001883670374 * H1x1_6 ;
344895    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
344896    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
344897    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 + 
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 + 
1.62881757963203 * H1x1_6 ;
344898    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
344899    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
344900    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 + 
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 + 
1.10728303240553 * H1x1_6 ;
344901    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
344902    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
344903    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
344904    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2 
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 + 
1.21824749182936 * H1x2_6 ;
344905    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
344906    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
344907    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
344908    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2 
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 + 
-0.70127450180732 * H1x2_6 ;
344909    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
344910    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
344911    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
344912    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2 
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 + 
0.1757517587226 * H1x2_6 ;
344913    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
344914    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
344915    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
344916    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2 
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 + 
0.8693099398328 * H1x2_6 ;
344917    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
344918    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
344919    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
344920    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2 
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 + 
0.11240659705231 * H1x2_6 ;
344921    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
344922    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
344923    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
344924    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2 
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 + 
0.67151326645383 * H1x2_6 ;
344925    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
344926    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
344927    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
344928    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2 
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 + 
-0.76522554014331 * H1x3_6 ;
344929    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
344930    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
344931    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
344932    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2 
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 + 
1.79694481340011 * H1x3_6 ;
344933    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
344934    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
344935    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
344936    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2 
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 + 
0.43346153474351 * H1x3_6 ;
344937    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
344938    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
344939    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
344940    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 * 
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5 
+ 0.11633831354046 * H1x3_6 ;
344941    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
344942    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
344943    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
344944    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2 
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 + 
-0.51535580022884 * H1x3_6 ;
344945    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
344946    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
344947    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
344948    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 + 
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 + 
1.02261478089015 * H1x3_6 ;
344949    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
344950    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
344951    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
344952    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
344953    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
344954    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
344955    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
344956    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
344957    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
344958    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
344959    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
344960    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
344961    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
344962    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
344963    +END;
MPRINT(EM_DIAGRAM):   END;
344964    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
344965    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
344966    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
344967    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
344968    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
344969    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
344970    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
344971    +END;
MPRINT(EM_DIAGRAM):   END;
344972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344973    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
344974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
344975    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
344976    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
344977    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
344978    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 + 
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 + 
-0.19906676643855 * H2x1_6 ;
344979    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
344980    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
344981    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 + 
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 + 
-0.76411205087595 * H2x1_6 ;
344982    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
344983    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
344984    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 + 
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 + 
-1.24122940235749 * H2x1_6 ;
344985    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
344986    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
344987    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 + 
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 + 
1.46523065565448 * H2x1_6 ;
344988    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
344989    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
344990    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 + 
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 + 
-0.45051702468841 * H2x1_6 ;
344991    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
344992    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
344993    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 + 
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 + 
0.29690402913896 * H2x1_6 ;
344994    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
344995    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
344996    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
344997    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 * 
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 + 
-0.96381430690961 * H2x2_6 ;
344998    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
344999    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
345000    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
345001    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2 
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 + 
-1.37757472119786 * H2x2_6 ;
345002    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
345003    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
345004    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
345005    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2 
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 + 
-1.58203174336227 * H2x2_6 ;
345006    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
345007    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
345008    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
345009    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 * 
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 + 
1.21364725785316 * H2x2_6 ;
345010    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
345011    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
345012    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
345013    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2 
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 + 
0.95942799624748 * H2x2_6 ;
345014    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
345015    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
345016    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
345017    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2 
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 + 
0.23144688198135 * H2x2_6 ;
345018    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
345019    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
345020    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
345021    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
345022    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
345023    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
345024    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
345025    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
345026    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
345027    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
345028    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
345029    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
345030    +END;
MPRINT(EM_DIAGRAM):   END;
345031    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
345032    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
345033    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
345034    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
345035    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
345036    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
345037    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
345038    +END;
MPRINT(EM_DIAGRAM):   END;
345039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
345040    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
345041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
345042    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
345043    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
345044    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
345045    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 + 
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 + 
-2.12623562549552 * H3x1_6 ;
345046    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
345047    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
345048    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
345049    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
345050    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
345051    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
345052    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
345053    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
345054    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
345055    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
345056    +END;
MPRINT(EM_DIAGRAM):   END;
345057    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
345058    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
345059    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
345060    +END;
MPRINT(EM_DIAGRAM):   END;
345061    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
345062    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
345063    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
345064    +END;
MPRINT(EM_DIAGRAM):   END;
345065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
345066    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
345067    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
345068    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
345069    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
345070    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
345071    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
345072    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
345073    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
345074    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
345075    +END;
MPRINT(EM_DIAGRAM):   END;
345076    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
345077    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
345078    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
345079    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
345080     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
345081     quit;
345082     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
345083     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
345084     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
345085     retain ID 2 Node "AutoNeural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural35";
345086     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
345087     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8675 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 8675 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345088     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
345089     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345090     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8675 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 8675 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345091     proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME 
CREATOR);
345092     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345093     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345094     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
345095     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
345096     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
345097     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345098     proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
345099     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

345100     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
345101     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345102     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 89 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345103     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
345104     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
345105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345106     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 89 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345107     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
345108     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
345108   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3959 rows and 5 columns.

345109     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345110     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
345111     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3959 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 3959 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345112     filename _pref
345112   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
345113     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
345114     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
345115    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
345116    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
345117    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
345118    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
345119    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
345120    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
345121     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
345122     quit;
345123     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
345124     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
345125     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
345126     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
345127     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
345128     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345129     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
345130     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345131     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345132     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
345133     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345135     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
345136     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
345137     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
345138     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345139     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
345140     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345141     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
345142     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345143     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345144     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
345145     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
345146     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345147     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345148     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
345149     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
345149   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

345150     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345151     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
345152     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 3963 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345153     filename _pref
345153   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
345154     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
345155     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
345156    +
345157    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
345158    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
345158   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
345159    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
345160    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
345161    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
345162    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
345163    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
345164     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
345165     quit;
345166     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
345167     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
345168     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
345169     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
345170     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
345171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345172     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
345173     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345175     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
345176     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345177     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345178     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
345179     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
345180     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
345181     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

345182     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
345183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345184     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
345185     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345186     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345187     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
345188     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
345189     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345190     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345191     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
345192     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
345192   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

345193     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345194     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
345195     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 4002 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345196     filename _pref
345196   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
345197     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
345198     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
345199    +
345200    +
345201    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
345202    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
345203    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
345204    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
345205    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
345206    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
345207    +
345208    +
345209    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
345210    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
345211    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
345212    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
345213    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
345214    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
345215    +
345216    +
345217    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
345218    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
345219    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
345220    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
345221    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
345222    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
345223    +
345224    +
345225    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
345226    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
345227    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
345228    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
345229    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
345230    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
345231    +
345232    +
345233    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
345234    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
345235    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
345236    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
345237    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
345238    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
345239    +
345240    +
345241    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
345242    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
345243    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
345244    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
345245    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
345246    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
345247    +
345248    +
345249    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
345250    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
345251    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
345252    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
345253    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
345254    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
345255    +
345256    +
345257    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
345258    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
345259    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
345260    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
345261    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
345262    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
345263    +if
345264    +_FILTERNORM1 not in ( '.')
345265    + and
345266    +_FILTERNORM2 not in ( '.')
345267    + and
345268    +_FILTERNORM3 not in ( '.')
345269    + and
345270    +_FILTERNORM4 not in ( '.')
345271    + and
345272    +_FILTERNORM5 not in ( '.')
345273    + and
345274    +_FILTERNORM6 not in ( '.')
345275    + and
345276    +_FILTERNORM7 not in ( ' ')
345277    + and
345278    +_FILTERNORM8 not in ( ' ')
345279    +and
345280    +( Dt_Customer ne .)
345281    +and ( Income ne . and (Income<=107000))
345282    +and ( Kidhome ne .)
345283    +and ( MntFishProducts ne .)
345284    +and ( MntFruits ne .)
345285    +and ( MntGoldProds ne .)
345286    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
345287    +and ( MntSweetProducts ne .)
345288    +and ( MntWines ne .)
345289    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
345290    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
345291    +and ( NumStorePurchases ne .)
345292    +and ( NumWebPurchases ne .)
345293    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
345294    +and ( Recency ne .)
345295    +and ( Teenhome ne .)
345296    +and ( Year_Birth ne .)
345297    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
345298    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
345299    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
345300    +end;
MPRINT(EM_DIAGRAM):   end;
345301    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
345302    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
345303     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
345304     quit;
345305     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
345306     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
345307     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
345308     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
345309     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
345310     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345311     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
345312     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345313     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345314     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
345315     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345316     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345317     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
345318     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
345319     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
345320     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345321     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
345322     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

345323     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
345324     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345325     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345326     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
345327     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
345328     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
345329     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345330     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
345331     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
345331   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

345332     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345333     proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
345334     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 4068 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345335     %macro varDept(fcmpdata=,id=);
345336     %global nobs&id scoreFlag&id;
345337     %let scoreFlag&id = 0;
345338     %if &id=1 or ^&fcmpStart %then %do;
345339     proc sort data=&fcmpdata out=_temp&id nodupkey;
345340     by NAME;
345341     where id=&id and LHS in( %let j=1;
345342     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
345343     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
345344     "&var" %let j = %eval(&j+1);
345345     %end;
345346     );
345347     run;
345348     %let dsid = %sysfunc(open(_temp&id));
345349     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
345350     %let dsid = %sysfunc(close(&dsid));
345351     %if &&nobs&id %then %do;
345352     %let scoreFlag&id = 1;
345353     %let fcmpStart = 1;
345354     %end;
345355     %else %let fcmpStart = 0;
345356     %end;
345357     %else %do;
345358     proc sort data=&fcmpdata out=_tempid;
345359     where id=&id;
345360     by LHS;
345361     run;
345362     %let dsid = %sysfunc(open(_tempid));
345363     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
345364     %let dsid = %sysfunc(close(&dsid));
345365     %if ^&&nobs&id %then %do;
345366     proc datasets lib=work nolist;
345367     delete _tempid;
345368     run;
345369     quit;
345370     %end;
345371     %else %do;
345372     data _tempAll;
345373     set %let j=%eval(&id-1);
345374     %do x=1 %to &j;
345375     %if &&nobs&x %then %do;
345376     _temp&x %end;
345377     %end;
345378     ;
345379     run;
345380     proc sql;
345381     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
345381   ! work._tempid p2 where p.name=p2.lhs;
345382     quit;
345383     data _temp&id;
345384     set _temp&id;
345385     where LHS ne '' and NAME ne '' and Node ne '';
345386     run;
345387     proc datasets lib=work nolist;
345388     delete _tempAll;
345389     run;
345390     %let dsid = %sysfunc(open(_temp&id));
345391     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
345392     %let dsid = %sysfunc(close(&dsid));
345393     %if ^&&nobs&id %then %do;
345394     proc datasets lib=work nolist;
345395     delete _temp&id;
345396     run;
345397     quit;
345398     %end;
345399     %else %do;
345400     %let scoreFlag&id = 1;
345401     data _temp&id;
345402     set _temp&id;
345403     where LHS ne NAME and node ne '';
345404     run;
345405     %let dsid = %sysfunc(open(_temp&id));
345406     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
345407     %let dsid = %sysfunc(close(&dsid));
345408     %if ^&&nobs&id %then %do;
345409     proc datasets lib=work nolist;
345410     delete _temp&id;
345411     run;
345412     quit;
345413     %end;
345414     %else %do;
345415     proc sort data=_temp&id nodupkey;
345416     by LHS NAME;
345417     run;
345418     %end;
345419     %end;
345420     %end;
345421     %end;
345422     %mend varDept;
345423     %macro optCode(outdata=fcmpdata);
345424     %global fcmpStart;
345425     %let fcmpStart = 0;
345426     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
345427     %let NumNodes=9;
345428     %do k=1 %to &NumNodes;
345429     %vardept(fcmpdata=&outdata, id=&k);
345430     %end;
345431     %mend optCode;
345432     %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 150 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 103 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 47 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 61 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

345433     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
345434     * Ensmbl56: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing metadata for TRAIN data;
345435     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL56_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl56_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl56_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl56_TRAIN out=WORK.M3QZN_9A noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QZN_9A;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QZN_9A(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QZN_9A;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QZN_9A;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1TB6G4E NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TB6G4E;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TB6G4E;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Y_5QU8(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TB6G4E;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TB6G4E;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TB6G4E;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TB6G4E;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TB6G4E;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl56";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl56";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
345755     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
345756     set EMWS8.Ensmbl56_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl56_EMINFO;
345757     where DATA='Ensmbl56' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl56' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
345758     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_EMINFO.
      WHERE (DATA='Ensmbl56') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345759     data EMWS8.Ensmbl56_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl56_EMINFO;
345760     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
345761     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
345762     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL56_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
345766     run;
345767     data EMWS8.Ensmbl56_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_EMINFO;
345768     set EMWS8.Ensmbl56_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl56_EMINFO WORK.MODELTEMP_INFO;
345769     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL56_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL56_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345770     proc sort data = EMWS8.Ensmbl56_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl56_EMINFO NOTHREADS;
345771     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
345772     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL56_EMINFO.
NOTE: The data set EMWS8.ENSMBL56_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345773     proc sort data = EMWS8.AutoNeural37_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural37_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
345774     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
345775     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

345776     proc sort data = EMWS8.Ensmbl56_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl56_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
345777     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
345778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL56_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345779     data EMWS8.Ensmbl56_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_EMINFO;
345780     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
345781     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
345782     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL56_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

345783     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
345784     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
345785     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
345786     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL56_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL56_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
