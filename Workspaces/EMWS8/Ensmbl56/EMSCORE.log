MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.02 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.02 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O27V1FUS 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O27V1FUS new;
MPRINT(EM_DIAGRAM):   run;
56472      filename emflow
56472    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring AUTONEURAL36_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56473      *------------------------------------------------------------*;
56474      * Ensmbl56: Scoring AUTONEURAL36_TRAIN data;
56475      *------------------------------------------------------------*;
56476      data EMWS8.Ensmbl56_TRAIN
56477      / view=EMWS8.Ensmbl56_TRAIN
56478      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_TRAIN / view=EMWS8.Ensmbl56_TRAIN ;
56479      set EMWS8.AutoNeural36_TRAIN
56480      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural36_TRAIN ;
56481      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas.
56482     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56483     +* Ensmbl56: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Combine model for DepVar;
56484     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56485     +* Ensmbl56: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 1 of 7;
56486     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56487     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56488     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
56489     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
56490     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
56491     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56492     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56493     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
56494     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
56495     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
56496     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56497     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56498     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
56499     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
56500     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
56501     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56502     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56503     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
56504     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
56505     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
56506     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56507     +
56508     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
56509     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
56509    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
56510     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
56511     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
56512     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
56513     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
56514     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
56515     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56516     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
56517     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
56518     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
56519     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56520     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56521     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
56522     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56523     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
56524     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
56525     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
56526     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56527     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
56528     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
56529     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
56530     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56531     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56532     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
56533     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
56534     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
56535     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56536     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56537     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
56538     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
56539     +* NODE: AutoNeural36;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural36;
56540     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56541     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
56542     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
56543     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
56544     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
56545     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
56546     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
56547     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
56548     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
56549     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
56550     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
56551     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
56552     +LENGTH _WARN_ $4
56553     +      F_DepVar  $ 12
56554     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
56555     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
56556     +
56557     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
56558     +
56559     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
56560     +
56561     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
56562     +
56563     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
56564     +
56565     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
56566     +
56567     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
56568     +
56569     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
56570     +
56571     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
56572     +
56573     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
56574     +
56575     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
56576     +
56577     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
56578     +
56579     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
56580     +
56581     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
56582     +
56583     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
56584     +
56585     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
56586     +
56587     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
56588     +
56589     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
56590     +
56591     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
56592     +
56593     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
56594     +
56595     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
56596     +
56597     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
56598     +
56599     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
56600     +
56601     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
56602     +
56603     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
56604     +
56605     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
56606     +
56607     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
56608     +
56609     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
56610     +
56611     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
56612     +
56613     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
56614     +
56615     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
56616     +
56617     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
56618     +
56619     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
56620     +
56621     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
56622     +
56623     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
56624     +
56625     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
56626     +
56627     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
56628     +
56629     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
56630     +
56631     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
56632     +
56633     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
56634     +
56635     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
56636     +
56637     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
56638     +
56639     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
56640     +
56641     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
56642     +
56643     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
56644     +
56645     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
56646     +
56647     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
56648     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
56649     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
56650     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
56651     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56652     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56653     +end;
MPRINT(EM_DIAGRAM):   end;
56654     +else do;
MPRINT(EM_DIAGRAM):   else do;
56655     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
56656     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
56657     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56658     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
56659     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
56660     +   end;
MPRINT(EM_DIAGRAM):   end;
56661     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
56662     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
56663     +   end;
MPRINT(EM_DIAGRAM):   end;
56664     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56665     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
56666     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56667     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56668     +   end;
MPRINT(EM_DIAGRAM):   end;
56669     +end;
MPRINT(EM_DIAGRAM):   end;
56670     +
56671     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
56672     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
56673     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
56674     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
56675     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56676     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56677     +end;
MPRINT(EM_DIAGRAM):   end;
56678     +else do;
MPRINT(EM_DIAGRAM):   else do;
56679     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
56680     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
56681     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56682     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
56683     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
56684     +   end;
MPRINT(EM_DIAGRAM):   end;
56685     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
56686     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
56687     +   end;
MPRINT(EM_DIAGRAM):   end;
56688     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56689     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
56690     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56691     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56692     +   end;
MPRINT(EM_DIAGRAM):   end;
56693     +end;
MPRINT(EM_DIAGRAM):   end;
56694     +
56695     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
56696     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
56697     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
56698     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
56699     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56700     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56701     +end;
MPRINT(EM_DIAGRAM):   end;
56702     +else do;
MPRINT(EM_DIAGRAM):   else do;
56703     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
56704     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
56705     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56706     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
56707     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
56708     +   end;
MPRINT(EM_DIAGRAM):   end;
56709     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
56710     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
56711     +   end;
MPRINT(EM_DIAGRAM):   end;
56712     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56713     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
56714     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56715     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56716     +   end;
MPRINT(EM_DIAGRAM):   end;
56717     +end;
MPRINT(EM_DIAGRAM):   end;
56718     +
56719     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
56720     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
56721     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
56722     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
56723     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56724     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56725     +end;
MPRINT(EM_DIAGRAM):   end;
56726     +else do;
MPRINT(EM_DIAGRAM):   else do;
56727     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
56728     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
56729     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56730     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
56731     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
56732     +   end;
MPRINT(EM_DIAGRAM):   end;
56733     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
56734     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
56735     +   end;
MPRINT(EM_DIAGRAM):   end;
56736     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56737     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
56738     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56739     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56740     +   end;
MPRINT(EM_DIAGRAM):   end;
56741     +end;
MPRINT(EM_DIAGRAM):   end;
56742     +
56743     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
56744     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
56745     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
56746     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
56747     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56748     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56749     +end;
MPRINT(EM_DIAGRAM):   end;
56750     +else do;
MPRINT(EM_DIAGRAM):   else do;
56751     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
56752     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
56753     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56754     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
56755     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
56756     +   end;
MPRINT(EM_DIAGRAM):   end;
56757     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
56758     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
56759     +   end;
MPRINT(EM_DIAGRAM):   end;
56760     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56761     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
56762     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56763     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56764     +   end;
MPRINT(EM_DIAGRAM):   end;
56765     +end;
MPRINT(EM_DIAGRAM):   end;
56766     +
56767     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
56768     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
56769     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
56770     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
56771     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56772     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56773     +end;
MPRINT(EM_DIAGRAM):   end;
56774     +else do;
MPRINT(EM_DIAGRAM):   else do;
56775     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
56776     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
56777     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56778     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
56779     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
56780     +   end;
MPRINT(EM_DIAGRAM):   end;
56781     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
56782     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
56783     +   end;
MPRINT(EM_DIAGRAM):   end;
56784     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56785     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
56786     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56787     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56788     +   end;
MPRINT(EM_DIAGRAM):   end;
56789     +end;
MPRINT(EM_DIAGRAM):   end;
56790     +
56791     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
56792     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
56793     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
56794     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
56795     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56796     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56797     +end;
MPRINT(EM_DIAGRAM):   end;
56798     +else do;
MPRINT(EM_DIAGRAM):   else do;
56799     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
56800     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
56801     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56802     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
56803     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
56804     +   end;
MPRINT(EM_DIAGRAM):   end;
56805     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
56806     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
56807     +   end;
MPRINT(EM_DIAGRAM):   end;
56808     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56809     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
56810     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56811     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56812     +   end;
MPRINT(EM_DIAGRAM):   end;
56813     +end;
MPRINT(EM_DIAGRAM):   end;
56814     +
56815     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
56816     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
56817     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
56818     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
56819     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
56820     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
56821     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
56822     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
56823     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
56824     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
56825     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
56826     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
56827     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56828     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56829     +end;
MPRINT(EM_DIAGRAM):   end;
56830     +else do;
MPRINT(EM_DIAGRAM):   else do;
56831     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
56832     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
56833     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56834     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
56835     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
56836     +   end;
MPRINT(EM_DIAGRAM):   end;
56837     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
56838     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
56839     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
56840     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
56841     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
56842     +   end;
MPRINT(EM_DIAGRAM):   end;
56843     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
56844     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
56845     +   end;
MPRINT(EM_DIAGRAM):   end;
56846     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
56847     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
56848     +   end;
MPRINT(EM_DIAGRAM):   end;
56849     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
56850     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
56851     +   end;
MPRINT(EM_DIAGRAM):   end;
56852     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56853     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
56854     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
56855     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
56856     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
56857     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56858     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56859     +   end;
MPRINT(EM_DIAGRAM):   end;
56860     +end;
MPRINT(EM_DIAGRAM):   end;
56861     +
56862     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
56863     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
56864     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
56865     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
56866     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
56867     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
56868     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
56869     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
56870     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
56871     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
56872     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
56873     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
56874     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
56875     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
56876     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56877     +end;
MPRINT(EM_DIAGRAM):   end;
56878     +else do;
MPRINT(EM_DIAGRAM):   else do;
56879     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
56880     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
56881     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
56882     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
56883     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
56884     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
56885     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
56886     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
56887     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
56888     +         end;
MPRINT(EM_DIAGRAM):   end;
56889     +         else do;
MPRINT(EM_DIAGRAM):   else do;
56890     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
56891     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
56892     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
56893     +            end;
MPRINT(EM_DIAGRAM):   end;
56894     +         end;
MPRINT(EM_DIAGRAM):   end;
56895     +      end;
MPRINT(EM_DIAGRAM):   end;
56896     +      else do;
MPRINT(EM_DIAGRAM):   else do;
56897     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
56898     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
56899     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
56900     +         end;
MPRINT(EM_DIAGRAM):   end;
56901     +      end;
MPRINT(EM_DIAGRAM):   end;
56902     +   end;
MPRINT(EM_DIAGRAM):   end;
56903     +   else do;
MPRINT(EM_DIAGRAM):   else do;
56904     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
56905     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
56906     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
56907     +      end;
MPRINT(EM_DIAGRAM):   end;
56908     +      else do;
MPRINT(EM_DIAGRAM):   else do;
56909     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
56910     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
56911     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
56912     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
56913     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
56914     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
56915     +         end;
MPRINT(EM_DIAGRAM):   end;
56916     +      end;
MPRINT(EM_DIAGRAM):   end;
56917     +   end;
MPRINT(EM_DIAGRAM):   end;
56918     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
56919     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
56920     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
56921     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
56922     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
56923     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
56924     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56925     +   end;
MPRINT(EM_DIAGRAM):   end;
56926     +end;
MPRINT(EM_DIAGRAM):   end;
56927     +
56928     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
56929     +*** Checking missing input Interval
56930     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
56931     +
56932     +IF NMISS(
56933     +   AcceptedCmpTotal ,
56934     +   Age ,
56935     +   Frq ,
56936     +   Income ,
56937     +   Kidhome ,
56938     +   MntFishProducts ,
56939     +   MntFruits ,
56940     +   MntGoldProds ,
56941     +   MntSweetProducts ,
56942     +   MonthsAsCustomer ,
56943     +   NumDealsPurchases ,
56944     +   NumWebVisitsMonth ,
56945     +   RFMstat ,
56946     +   RMntFrq ,
56947     +   Recency ,
56948     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
56949     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
56950     +
56951     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
56952     +END;
MPRINT(EM_DIAGRAM):   END;
56953     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
56954     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
56955     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
56956     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
56957     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
56958     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
56959     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
56960     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
56961     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
56962     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
56963     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
56964     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
56965     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
56966     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
56967     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
56968     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
56969     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
56970     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
56971     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
56972     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
56973     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
56974     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
56975     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
56976     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
56977     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
56978     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
56979     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
56980     +END;
MPRINT(EM_DIAGRAM):   END;
56981     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
56982     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
56983     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
56984     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
56985     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
56986     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
56987     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
56988     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
56989     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
56990     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
56991     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
56992     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
56993     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
56994     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
56995     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
56996     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
56997     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
56998     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
56999     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
57000     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
57001     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
57002     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
57003     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
57004     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
57005     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
57006     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
57007     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
57008     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
57009     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
57010     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
57011     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
57012     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
57013     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
57014     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
57015     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
57016     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
57017     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
57018     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
57019     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
57020     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
57021     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
57022     +END;
MPRINT(EM_DIAGRAM):   END;
57023     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57024     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
57025     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57026     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57027     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
57028     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57029     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57030     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
57031     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57032     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
57033     +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
57034     +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
57035     +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
57036     +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
57037     +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
57038     +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
57039     +          +     1.47210732135355 * S_MonthsAsCustomer
57040     +          +     0.85741098948561 * S_NumDealsPurchases
57041     +          +     0.47124997442086 * S_NumWebVisitsMonth
57042     +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
57043     +        S_RMntFrq  +     0.42017826752434 * S_Recency
57044     +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
57045     +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
57046     +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
57047     +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
57048     +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
57049     +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
57050     +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
57051     +          +     0.74811152666015 * S_MonthsAsCustomer
57052     +          +    -0.13168708818154 * S_NumDealsPurchases
57053     +          +    -0.51935779196522 * S_NumWebVisitsMonth
57054     +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
57055     +        S_RMntFrq  +     1.96758846931972 * S_Recency
57056     +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
57057     +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
57058     +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
57059     +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
57060     +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
57061     +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
57062     +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
57063     +          +     0.11776941975292 * S_MonthsAsCustomer
57064     +          +    -0.69977862189457 * S_NumDealsPurchases
57065     +          +    -0.26676589341422 * S_NumWebVisitsMonth
57066     +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
57067     +        S_RMntFrq  +     1.53487074713045 * S_Recency
57068     +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
57069     +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
57070     +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
57071     +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
57072     +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
57073     +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
57074     +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
57075     +          +     0.46606320110885 * S_MonthsAsCustomer
57076     +          +     1.64885970718717 * S_NumDealsPurchases
57077     +          +     1.70233049691156 * S_NumWebVisitsMonth
57078     +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
57079     +        S_RMntFrq  +    -1.33025042025966 * S_Recency
57080     +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
57081     +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
57082     +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
57083     +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
57084     +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
57085     +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
57086     +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
57087     +          +     0.25703511103123 * S_MonthsAsCustomer
57088     +          +     0.81449309285524 * S_NumDealsPurchases
57089     +          +     0.65863550896078 * S_NumWebVisitsMonth
57090     +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
57091     +        S_RMntFrq  +     0.35298837231553 * S_Recency
57092     +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
57093     +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
57094     +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
57095     +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
57096     +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
57097     +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
57098     +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
57099     +          +     0.79681190434731 * S_MonthsAsCustomer
57100     +          +    -0.93973916927987 * S_NumDealsPurchases
57101     +          +     1.37415777280471 * S_NumWebVisitsMonth
57102     +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
57103     +        S_RMntFrq  +     0.25579910148098 * S_Recency
57104     +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
57105     +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
57106     +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
57107     +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
57108     +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
57109     +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
57110     +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
57111     +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
57112     +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
57113     +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
57114     +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
57115     +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
57116     +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
57117     +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
57118     +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
57119     +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
57120     +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
57121     +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
57122     +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
57123     +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
57124     +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
57125     +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
57126     +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
57127     +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
57128     +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
57129     +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
57130     +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
57131     +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
57132     +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
57133     +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
57134     +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
57135     +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
57136     +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
57137     +        EducationGraduation  +     0.53978142914157 * EducationMaster
57138     +          +    -0.28915302940579 * Marital_StatusDivorced
57139     +          +     0.36400858753372 * Marital_StatusMarried
57140     +          +     0.64088916620982 * Marital_StatusSingle
57141     +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
57142     +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
57143     +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
57144     +        EducationGraduation  +     0.31774696403611 * EducationMaster
57145     +          +    -0.48311224079569 * Marital_StatusDivorced
57146     +          +     0.78522892664414 * Marital_StatusMarried
57147     +          +    -0.52144588286939 * Marital_StatusSingle
57148     +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
57149     +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
57150     +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
57151     +        EducationGraduation  +     1.62119993408702 * EducationMaster
57152     +          +    -1.10138941531054 * Marital_StatusDivorced
57153     +          +     1.91098461544032 * Marital_StatusMarried
57154     +          +    -1.96662881570281 * Marital_StatusSingle
57155     +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
57156     +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
57157     +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
57158     +        EducationGraduation  +    -0.47265183904634 * EducationMaster
57159     +          +    -0.26938567401241 * Marital_StatusDivorced
57160     +          +      0.5252138734125 * Marital_StatusMarried
57161     +          +    -0.77744801183604 * Marital_StatusSingle
57162     +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
57163     +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
57164     +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
57165     +        EducationGraduation  +     1.34706628408556 * EducationMaster
57166     +          +    -0.49116995167497 * Marital_StatusDivorced
57167     +          +     1.22243596432371 * Marital_StatusMarried
57168     +          +    -1.22268267917833 * Marital_StatusSingle
57169     +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
57170     +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
57171     +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
57172     +        EducationGraduation  +     0.19530936178176 * EducationMaster
57173     +          +    -0.21134253419933 * Marital_StatusDivorced
57174     +          +     0.87168965818013 * Marital_StatusMarried
57175     +          +     0.07539748751767 * Marital_StatusSingle
57176     +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
57177     +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
57178     +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
57179     +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
57180     +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
57181     +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
57182     +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
57183     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
57184     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
57185     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
57186     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
57187     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
57188     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
57189     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
57190     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
57191     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
57192     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
57193     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
57194     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
57195     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
57196     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
57197     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
57198     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
57199     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
57200     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
57201     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
57202     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
57203     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
57204     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
57205     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
57206     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
57207     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
57208     +END;
MPRINT(EM_DIAGRAM):   END;
57209     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
57210     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
57211     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
57212     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
57213     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
57214     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
57215     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
57216     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
57217     +END;
MPRINT(EM_DIAGRAM):   END;
57218     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57219     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
57220     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57221     +
57222     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
57223     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
57224     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
57225     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
57226     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
57227     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57228     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
57229     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
57230     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
57231     +end;
MPRINT(EM_DIAGRAM):   end;
57232     +else do;
MPRINT(EM_DIAGRAM):   else do;
57233     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
57234     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
57235     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
57236     +   end;
MPRINT(EM_DIAGRAM):   end;
57237     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
57238     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
57239     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
57240     +   end;
MPRINT(EM_DIAGRAM):   end;
57241     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57242     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
57243     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
57244     +   end;
MPRINT(EM_DIAGRAM):   end;
57245     +end;
MPRINT(EM_DIAGRAM):   end;
57246     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
57247     +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
57248     +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
57249     +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
57250     +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
57251     +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
57252     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
57253     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
57254     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
57255     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
57256     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
57257     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
57258     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
57259     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
57260     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
57261     +END;
MPRINT(EM_DIAGRAM):   END;
57262     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
57263     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
57264     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
57265     +END;
MPRINT(EM_DIAGRAM):   END;
57266     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
57267     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
57268     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
57269     +END;
MPRINT(EM_DIAGRAM):   END;
57270     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
57271     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
57272     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
57273     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
57274     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
57275     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
57276     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
57277     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57278     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
57279     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57280     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
57281     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
57282     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
57283     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
57284     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
57285     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
57286     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
57287     +END;
MPRINT(EM_DIAGRAM):   END;
57288     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
57289     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
57290     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
57291     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
57292     +* Renaming variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural36;
57293     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57294     +* Renaming Posterior variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural36;
57295     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57296     +drop AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar1;
57297     +AutoNeural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar1 = P_DepVar1;
57298     +drop AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar0;
57299     +AutoNeural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar0 = P_DepVar0;
57300     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57301     +* Renaming Into variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural36;
57302     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57303     +length AutoNeural36_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural36_I_DepVar $32;
57304     +drop AutoNeural36_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_I_DepVar;
57305     +AutoNeural36_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural36_I_DepVar = I_DepVar;
57306     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57307     +* Renaming _WARN_ variable for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural36;
57308     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57309     +length AutoNeural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural36_WARN_ $4;
57310     +drop AutoNeural36_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_WARN_;
57311     +AutoNeural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural36_WARN_ = _WARN_;
57312     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57313     +* Ensmbl56: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 2 of 7;
57314     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57315     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57316     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
57317     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
57318     +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
57319     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57320     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
57321     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
57322     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
57323     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
57324     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
57325     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
57326     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
57327     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
57328     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
57329     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
57330     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
57331     +LENGTH _WARN_ $4
57332     +      F_DepVar  $ 12
57333     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
57334     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
57335     +
57336     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
57337     +
57338     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
57339     +
57340     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
57341     +
57342     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
57343     +
57344     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
57345     +
57346     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
57347     +
57348     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
57349     +
57350     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
57351     +
57352     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
57353     +
57354     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
57355     +
57356     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
57357     +
57358     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
57359     +
57360     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
57361     +
57362     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
57363     +
57364     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
57365     +
57366     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
57367     +
57368     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
57369     +
57370     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
57371     +
57372     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
57373     +
57374     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
57375     +
57376     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
57377     +
57378     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
57379     +
57380     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
57381     +
57382     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
57383     +
57384     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
57385     +
57386     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
57387     +
57388     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
57389     +
57390     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
57391     +
57392     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
57393     +
57394     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
57395     +
57396     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
57397     +
57398     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
57399     +
57400     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
57401     +
57402     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
57403     +
57404     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
57405     +
57406     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
57407     +
57408     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
57409     +
57410     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
57411     +
57412     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
57413     +
57414     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
57415     +
57416     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
57417     +
57418     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
57419     +
57420     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
57421     +
57422     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
57423     +
57424     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
57425     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
57426     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
57427     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
57428     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57429     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57430     +end;
MPRINT(EM_DIAGRAM):   end;
57431     +else do;
MPRINT(EM_DIAGRAM):   else do;
57432     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
57433     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
57434     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57435     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
57436     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
57437     +   end;
MPRINT(EM_DIAGRAM):   end;
57438     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
57439     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
57440     +   end;
MPRINT(EM_DIAGRAM):   end;
57441     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57442     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
57443     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57444     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57445     +   end;
MPRINT(EM_DIAGRAM):   end;
57446     +end;
MPRINT(EM_DIAGRAM):   end;
57447     +
57448     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
57449     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
57450     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
57451     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
57452     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57453     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57454     +end;
MPRINT(EM_DIAGRAM):   end;
57455     +else do;
MPRINT(EM_DIAGRAM):   else do;
57456     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
57457     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
57458     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57459     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
57460     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
57461     +   end;
MPRINT(EM_DIAGRAM):   end;
57462     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
57463     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
57464     +   end;
MPRINT(EM_DIAGRAM):   end;
57465     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57466     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
57467     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57468     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57469     +   end;
MPRINT(EM_DIAGRAM):   end;
57470     +end;
MPRINT(EM_DIAGRAM):   end;
57471     +
57472     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
57473     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
57474     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
57475     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
57476     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57477     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57478     +end;
MPRINT(EM_DIAGRAM):   end;
57479     +else do;
MPRINT(EM_DIAGRAM):   else do;
57480     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
57481     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
57482     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57483     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
57484     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
57485     +   end;
MPRINT(EM_DIAGRAM):   end;
57486     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
57487     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
57488     +   end;
MPRINT(EM_DIAGRAM):   end;
57489     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57490     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
57491     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57492     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57493     +   end;
MPRINT(EM_DIAGRAM):   end;
57494     +end;
MPRINT(EM_DIAGRAM):   end;
57495     +
57496     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
57497     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
57498     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
57499     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
57500     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57501     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57502     +end;
MPRINT(EM_DIAGRAM):   end;
57503     +else do;
MPRINT(EM_DIAGRAM):   else do;
57504     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
57505     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
57506     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57507     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
57508     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
57509     +   end;
MPRINT(EM_DIAGRAM):   end;
57510     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
57511     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
57512     +   end;
MPRINT(EM_DIAGRAM):   end;
57513     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57514     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
57515     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57516     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57517     +   end;
MPRINT(EM_DIAGRAM):   end;
57518     +end;
MPRINT(EM_DIAGRAM):   end;
57519     +
57520     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
57521     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
57522     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
57523     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
57524     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57525     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57526     +end;
MPRINT(EM_DIAGRAM):   end;
57527     +else do;
MPRINT(EM_DIAGRAM):   else do;
57528     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
57529     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
57530     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57531     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
57532     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
57533     +   end;
MPRINT(EM_DIAGRAM):   end;
57534     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
57535     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
57536     +   end;
MPRINT(EM_DIAGRAM):   end;
57537     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57538     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
57539     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57540     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57541     +   end;
MPRINT(EM_DIAGRAM):   end;
57542     +end;
MPRINT(EM_DIAGRAM):   end;
57543     +
57544     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
57545     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
57546     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
57547     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
57548     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57549     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57550     +end;
MPRINT(EM_DIAGRAM):   end;
57551     +else do;
MPRINT(EM_DIAGRAM):   else do;
57552     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
57553     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
57554     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57555     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
57556     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
57557     +   end;
MPRINT(EM_DIAGRAM):   end;
57558     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
57559     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
57560     +   end;
MPRINT(EM_DIAGRAM):   end;
57561     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57562     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
57563     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57564     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57565     +   end;
MPRINT(EM_DIAGRAM):   end;
57566     +end;
MPRINT(EM_DIAGRAM):   end;
57567     +
57568     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
57569     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
57570     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
57571     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
57572     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57573     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57574     +end;
MPRINT(EM_DIAGRAM):   end;
57575     +else do;
MPRINT(EM_DIAGRAM):   else do;
57576     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
57577     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
57578     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57579     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
57580     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
57581     +   end;
MPRINT(EM_DIAGRAM):   end;
57582     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
57583     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
57584     +   end;
MPRINT(EM_DIAGRAM):   end;
57585     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57586     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
57587     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57588     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57589     +   end;
MPRINT(EM_DIAGRAM):   end;
57590     +end;
MPRINT(EM_DIAGRAM):   end;
57591     +
57592     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
57593     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
57594     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
57595     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
57596     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
57597     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
57598     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
57599     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
57600     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
57601     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
57602     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
57603     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
57604     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57605     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57606     +end;
MPRINT(EM_DIAGRAM):   end;
57607     +else do;
MPRINT(EM_DIAGRAM):   else do;
57608     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
57609     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
57610     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57611     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
57612     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
57613     +   end;
MPRINT(EM_DIAGRAM):   end;
57614     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
57615     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
57616     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
57617     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
57618     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
57619     +   end;
MPRINT(EM_DIAGRAM):   end;
57620     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
57621     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
57622     +   end;
MPRINT(EM_DIAGRAM):   end;
57623     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
57624     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
57625     +   end;
MPRINT(EM_DIAGRAM):   end;
57626     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
57627     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
57628     +   end;
MPRINT(EM_DIAGRAM):   end;
57629     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57630     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
57631     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
57632     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
57633     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
57634     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57635     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57636     +   end;
MPRINT(EM_DIAGRAM):   end;
57637     +end;
MPRINT(EM_DIAGRAM):   end;
57638     +
57639     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
57640     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
57641     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
57642     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
57643     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
57644     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
57645     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
57646     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
57647     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
57648     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
57649     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
57650     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
57651     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
57652     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
57653     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57654     +end;
MPRINT(EM_DIAGRAM):   end;
57655     +else do;
MPRINT(EM_DIAGRAM):   else do;
57656     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
57657     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
57658     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57659     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
57660     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
57661     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
57662     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
57663     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
57664     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
57665     +         end;
MPRINT(EM_DIAGRAM):   end;
57666     +         else do;
MPRINT(EM_DIAGRAM):   else do;
57667     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
57668     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
57669     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
57670     +            end;
MPRINT(EM_DIAGRAM):   end;
57671     +         end;
MPRINT(EM_DIAGRAM):   end;
57672     +      end;
MPRINT(EM_DIAGRAM):   end;
57673     +      else do;
MPRINT(EM_DIAGRAM):   else do;
57674     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
57675     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
57676     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
57677     +         end;
MPRINT(EM_DIAGRAM):   end;
57678     +      end;
MPRINT(EM_DIAGRAM):   end;
57679     +   end;
MPRINT(EM_DIAGRAM):   end;
57680     +   else do;
MPRINT(EM_DIAGRAM):   else do;
57681     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
57682     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
57683     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
57684     +      end;
MPRINT(EM_DIAGRAM):   end;
57685     +      else do;
MPRINT(EM_DIAGRAM):   else do;
57686     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
57687     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
57688     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
57689     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
57690     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
57691     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
57692     +         end;
MPRINT(EM_DIAGRAM):   end;
57693     +      end;
MPRINT(EM_DIAGRAM):   end;
57694     +   end;
MPRINT(EM_DIAGRAM):   end;
57695     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
57696     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
57697     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
57698     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
57699     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
57700     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
57701     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57702     +   end;
MPRINT(EM_DIAGRAM):   end;
57703     +end;
MPRINT(EM_DIAGRAM):   end;
57704     +
57705     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57706     +*** Checking missing input Interval
57707     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
57708     +
57709     +IF NMISS(
57710     +   AcceptedCmpTotal ,
57711     +   Age ,
57712     +   Frq ,
57713     +   Income ,
57714     +   Kidhome ,
57715     +   MntFishProducts ,
57716     +   MntFruits ,
57717     +   MntGoldProds ,
57718     +   MntSweetProducts ,
57719     +   MonthsAsCustomer ,
57720     +   NumDealsPurchases ,
57721     +   NumWebVisitsMonth ,
57722     +   RFMstat ,
57723     +   RMntFrq ,
57724     +   Recency ,
57725     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
57726     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
57727     +
57728     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
57729     +END;
MPRINT(EM_DIAGRAM):   END;
57730     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57731     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
57732     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57733     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
57734     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
57735     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
57736     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
57737     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
57738     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
57739     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
57740     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
57741     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
57742     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
57743     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
57744     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
57745     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
57746     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
57747     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
57748     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
57749     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
57750     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
57751     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
57752     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
57753     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
57754     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
57755     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
57756     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
57757     +END;
MPRINT(EM_DIAGRAM):   END;
57758     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
57759     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
57760     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
57761     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
57762     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
57763     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
57764     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
57765     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
57766     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
57767     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
57768     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
57769     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
57770     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
57771     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
57772     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
57773     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
57774     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
57775     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
57776     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
57777     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
57778     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
57779     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
57780     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
57781     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
57782     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
57783     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
57784     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
57785     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
57786     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
57787     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
57788     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
57789     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
57790     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
57791     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
57792     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
57793     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
57794     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
57795     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
57796     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
57797     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
57798     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
57799     +END;
MPRINT(EM_DIAGRAM):   END;
57800     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57801     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
57802     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57803     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57804     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
57805     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57806     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57807     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
57808     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57809     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
57810     +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
57811     +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
57812     +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
57813     +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
57814     +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
57815     +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
57816     +          +    -0.63886071804247 * S_MonthsAsCustomer
57817     +          +      2.3488612891037 * S_NumDealsPurchases
57818     +          +     2.32996461229282 * S_NumWebVisitsMonth
57819     +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
57820     +        S_RMntFrq  +    -3.18599476886695 * S_Recency
57821     +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
57822     +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
57823     +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
57824     +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
57825     +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
57826     +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
57827     +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
57828     +          +     0.67699646331113 * S_MonthsAsCustomer
57829     +          +     0.70523055739254 * S_NumDealsPurchases
57830     +          +    -2.06406682205141 * S_NumWebVisitsMonth
57831     +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
57832     +        S_RMntFrq  +      5.0273672656487 * S_Recency
57833     +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
57834     +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
57835     +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
57836     +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
57837     +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
57838     +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
57839     +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
57840     +          +    -0.53694216899543 * S_MonthsAsCustomer
57841     +          +     0.25908508836257 * S_NumDealsPurchases
57842     +          +    -1.18459231573601 * S_NumWebVisitsMonth
57843     +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
57844     +        S_RMntFrq  +    -1.22457627833901 * S_Recency
57845     +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
57846     +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
57847     +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
57848     +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
57849     +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
57850     +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
57851     +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
57852     +          +    -0.08931078748332 * S_MonthsAsCustomer
57853     +          +    -0.46561962814047 * S_NumDealsPurchases
57854     +          +    -0.12241295445297 * S_NumWebVisitsMonth
57855     +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
57856     +        S_RMntFrq  +     0.96804234233608 * S_Recency
57857     +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
57858     +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
57859     +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
57860     +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
57861     +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
57862     +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
57863     +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
57864     +          +     -0.9186653552138 * S_MonthsAsCustomer
57865     +          +     2.17624393037629 * S_NumDealsPurchases
57866     +          +    -0.41699900714758 * S_NumWebVisitsMonth
57867     +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
57868     +        S_RMntFrq  +    -0.28987089218356 * S_Recency
57869     +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
57870     +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
57871     +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
57872     +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
57873     +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
57874     +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
57875     +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
57876     +          +     1.32865070741283 * S_MonthsAsCustomer
57877     +          +      0.8173864987673 * S_NumDealsPurchases
57878     +          +     1.04804775338375 * S_NumWebVisitsMonth
57879     +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
57880     +        S_RMntFrq  +     0.08690587270493 * S_Recency
57881     +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
57882     +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
57883     +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
57884     +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
57885     +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
57886     +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
57887     +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
57888     +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
57889     +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
57890     +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
57891     +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
57892     +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
57893     +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
57894     +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
57895     +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
57896     +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
57897     +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
57898     +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
57899     +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
57900     +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
57901     +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
57902     +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
57903     +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
57904     +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
57905     +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
57906     +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
57907     +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
57908     +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
57909     +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
57910     +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
57911     +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
57912     +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
57913     +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
57914     +        EducationGraduation  +    -0.31624019107181 * EducationMaster
57915     +          +    -0.82783034099773 * Marital_StatusDivorced
57916     +          +     0.39651075241405 * Marital_StatusMarried
57917     +          +     0.17323156170107 * Marital_StatusSingle
57918     +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
57919     +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
57920     +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
57921     +        EducationGraduation  +    -0.05323450200928 * EducationMaster
57922     +          +    -2.42314580112302 * Marital_StatusDivorced
57923     +          +     1.72709251267075 * Marital_StatusMarried
57924     +          +    -0.94350561587168 * Marital_StatusSingle
57925     +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
57926     +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
57927     +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
57928     +        EducationGraduation  +    -1.41317064722862 * EducationMaster
57929     +          +    -1.25323701705333 * Marital_StatusDivorced
57930     +          +    -0.72618091015379 * Marital_StatusMarried
57931     +          +     0.20594885266863 * Marital_StatusSingle
57932     +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
57933     +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
57934     +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
57935     +        EducationGraduation  +     0.75559299844055 * EducationMaster
57936     +          +     -0.9159957275063 * Marital_StatusDivorced
57937     +          +     2.06164757358796 * Marital_StatusMarried
57938     +          +    -1.61544310412168 * Marital_StatusSingle
57939     +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
57940     +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
57941     +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
57942     +        EducationGraduation  +     0.27594869585414 * EducationMaster
57943     +          +    -0.72418104768251 * Marital_StatusDivorced
57944     +          +     0.51077116161056 * Marital_StatusMarried
57945     +          +     -2.0857896888723 * Marital_StatusSingle
57946     +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
57947     +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
57948     +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
57949     +        EducationGraduation  +     -0.7287361872795 * EducationMaster
57950     +          +     0.64139965212864 * Marital_StatusDivorced
57951     +          +    -1.52338846336783 * Marital_StatusMarried
57952     +          +     1.94794784762286 * Marital_StatusSingle
57953     +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
57954     +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
57955     +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
57956     +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
57957     +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
57958     +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
57959     +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
57960     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
57961     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
57962     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
57963     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
57964     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
57965     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
57966     +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
57967     +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
57968     +END;
MPRINT(EM_DIAGRAM):   END;
57969     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
57970     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
57971     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
57972     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
57973     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
57974     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
57975     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
57976     +END;
MPRINT(EM_DIAGRAM):   END;
57977     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57978     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
57979     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
57980     +
57981     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
57982     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
57983     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
57984     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
57985     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
57986     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
57987     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
57988     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
57989     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
57990     +end;
MPRINT(EM_DIAGRAM):   end;
57991     +else do;
MPRINT(EM_DIAGRAM):   else do;
57992     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
57993     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
57994     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
57995     +   end;
MPRINT(EM_DIAGRAM):   end;
57996     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
57997     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
57998     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
57999     +   end;
MPRINT(EM_DIAGRAM):   end;
58000     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58001     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
58002     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
58003     +   end;
MPRINT(EM_DIAGRAM):   end;
58004     +end;
MPRINT(EM_DIAGRAM):   end;
58005     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
58006     +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
58007     +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
58008     +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
58009     +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
58010     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
58011     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
58012     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
58013     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
58014     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
58015     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
58016     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
58017     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
58018     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
58019     +END;
MPRINT(EM_DIAGRAM):   END;
58020     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
58021     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
58022     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
58023     +END;
MPRINT(EM_DIAGRAM):   END;
58024     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
58025     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
58026     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
58027     +END;
MPRINT(EM_DIAGRAM):   END;
58028     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
58029     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
58030     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
58031     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
58032     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
58033     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
58034     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
58035     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58036     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
58037     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58038     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
58039     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
58040     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
58041     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
58042     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
58043     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
58044     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
58045     +END;
MPRINT(EM_DIAGRAM):   END;
58046     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
58047     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
58048     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
58049     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
58050     +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
58051     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58052     +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
58053     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58054     +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
58055     +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
58056     +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
58057     +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
58058     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58059     +* Renaming Into variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural35;
58060     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58061     +length AutoNeural35_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural35_I_DepVar $32;
58062     +drop AutoNeural35_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_I_DepVar;
58063     +AutoNeural35_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural35_I_DepVar = I_DepVar;
58064     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58065     +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
58066     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58067     +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
58068     +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
58069     +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
58070     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58071     +* Ensmbl56: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 3 of 7;
58072     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58073     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58074     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
58075     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
58076     +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
58077     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58078     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
58079     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
58080     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
58081     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
58082     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
58083     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
58084     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
58085     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
58086     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
58087     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
58088     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
58089     +LENGTH _WARN_ $4
58090     +      F_DepVar  $ 12
58091     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
58092     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
58093     +
58094     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
58095     +
58096     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
58097     +
58098     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
58099     +
58100     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
58101     +
58102     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
58103     +
58104     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
58105     +
58106     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
58107     +
58108     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
58109     +
58110     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
58111     +
58112     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
58113     +
58114     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
58115     +
58116     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
58117     +
58118     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
58119     +
58120     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
58121     +
58122     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
58123     +
58124     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
58125     +
58126     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
58127     +
58128     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
58129     +
58130     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
58131     +
58132     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
58133     +
58134     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
58135     +
58136     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
58137     +
58138     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
58139     +
58140     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
58141     +
58142     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
58143     +
58144     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
58145     +
58146     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
58147     +
58148     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
58149     +
58150     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
58151     +
58152     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
58153     +
58154     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
58155     +
58156     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
58157     +
58158     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
58159     +
58160     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
58161     +
58162     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
58163     +
58164     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
58165     +
58166     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
58167     +
58168     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
58169     +
58170     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
58171     +
58172     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
58173     +
58174     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
58175     +
58176     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
58177     +
58178     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
58179     +
58180     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
58181     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
58182     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
58183     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
58184     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58185     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58186     +end;
MPRINT(EM_DIAGRAM):   end;
58187     +else do;
MPRINT(EM_DIAGRAM):   else do;
58188     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58189     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
58190     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58191     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58192     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
58193     +   end;
MPRINT(EM_DIAGRAM):   end;
58194     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58195     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
58196     +   end;
MPRINT(EM_DIAGRAM):   end;
58197     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58198     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
58199     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58200     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58201     +   end;
MPRINT(EM_DIAGRAM):   end;
58202     +end;
MPRINT(EM_DIAGRAM):   end;
58203     +
58204     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
58205     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
58206     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
58207     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
58208     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58209     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58210     +end;
MPRINT(EM_DIAGRAM):   end;
58211     +else do;
MPRINT(EM_DIAGRAM):   else do;
58212     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58213     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
58214     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58215     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58216     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
58217     +   end;
MPRINT(EM_DIAGRAM):   end;
58218     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58219     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
58220     +   end;
MPRINT(EM_DIAGRAM):   end;
58221     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58222     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
58223     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58224     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58225     +   end;
MPRINT(EM_DIAGRAM):   end;
58226     +end;
MPRINT(EM_DIAGRAM):   end;
58227     +
58228     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
58229     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
58230     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
58231     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
58232     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58233     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58234     +end;
MPRINT(EM_DIAGRAM):   end;
58235     +else do;
MPRINT(EM_DIAGRAM):   else do;
58236     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58237     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
58238     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58239     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58240     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
58241     +   end;
MPRINT(EM_DIAGRAM):   end;
58242     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58243     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
58244     +   end;
MPRINT(EM_DIAGRAM):   end;
58245     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58246     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
58247     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58248     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58249     +   end;
MPRINT(EM_DIAGRAM):   end;
58250     +end;
MPRINT(EM_DIAGRAM):   end;
58251     +
58252     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
58253     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
58254     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
58255     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
58256     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58257     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58258     +end;
MPRINT(EM_DIAGRAM):   end;
58259     +else do;
MPRINT(EM_DIAGRAM):   else do;
58260     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58261     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
58262     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58263     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58264     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
58265     +   end;
MPRINT(EM_DIAGRAM):   end;
58266     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58267     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
58268     +   end;
MPRINT(EM_DIAGRAM):   end;
58269     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58270     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
58271     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58272     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58273     +   end;
MPRINT(EM_DIAGRAM):   end;
58274     +end;
MPRINT(EM_DIAGRAM):   end;
58275     +
58276     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
58277     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
58278     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
58279     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
58280     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58281     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58282     +end;
MPRINT(EM_DIAGRAM):   end;
58283     +else do;
MPRINT(EM_DIAGRAM):   else do;
58284     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58285     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
58286     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58287     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58288     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
58289     +   end;
MPRINT(EM_DIAGRAM):   end;
58290     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58291     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
58292     +   end;
MPRINT(EM_DIAGRAM):   end;
58293     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58294     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
58295     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58296     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58297     +   end;
MPRINT(EM_DIAGRAM):   end;
58298     +end;
MPRINT(EM_DIAGRAM):   end;
58299     +
58300     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
58301     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
58302     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
58303     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
58304     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58305     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58306     +end;
MPRINT(EM_DIAGRAM):   end;
58307     +else do;
MPRINT(EM_DIAGRAM):   else do;
58308     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58309     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
58310     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58311     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58312     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
58313     +   end;
MPRINT(EM_DIAGRAM):   end;
58314     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58315     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
58316     +   end;
MPRINT(EM_DIAGRAM):   end;
58317     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58318     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
58319     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58320     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58321     +   end;
MPRINT(EM_DIAGRAM):   end;
58322     +end;
MPRINT(EM_DIAGRAM):   end;
58323     +
58324     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
58325     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
58326     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
58327     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
58328     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58329     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58330     +end;
MPRINT(EM_DIAGRAM):   end;
58331     +else do;
MPRINT(EM_DIAGRAM):   else do;
58332     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58333     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
58334     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58335     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
58336     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
58337     +   end;
MPRINT(EM_DIAGRAM):   end;
58338     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
58339     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
58340     +   end;
MPRINT(EM_DIAGRAM):   end;
58341     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58342     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
58343     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58344     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58345     +   end;
MPRINT(EM_DIAGRAM):   end;
58346     +end;
MPRINT(EM_DIAGRAM):   end;
58347     +
58348     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
58349     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
58350     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
58351     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
58352     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
58353     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
58354     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
58355     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
58356     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
58357     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
58358     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
58359     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
58360     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58361     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58362     +end;
MPRINT(EM_DIAGRAM):   end;
58363     +else do;
MPRINT(EM_DIAGRAM):   else do;
58364     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
58365     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
58366     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58367     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
58368     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
58369     +   end;
MPRINT(EM_DIAGRAM):   end;
58370     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
58371     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
58372     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
58373     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
58374     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
58375     +   end;
MPRINT(EM_DIAGRAM):   end;
58376     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
58377     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
58378     +   end;
MPRINT(EM_DIAGRAM):   end;
58379     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
58380     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
58381     +   end;
MPRINT(EM_DIAGRAM):   end;
58382     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
58383     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
58384     +   end;
MPRINT(EM_DIAGRAM):   end;
58385     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58386     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
58387     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
58388     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
58389     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
58390     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58391     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58392     +   end;
MPRINT(EM_DIAGRAM):   end;
58393     +end;
MPRINT(EM_DIAGRAM):   end;
58394     +
58395     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
58396     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
58397     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
58398     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
58399     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
58400     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
58401     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
58402     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
58403     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
58404     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
58405     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
58406     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
58407     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
58408     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58409     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58410     +end;
MPRINT(EM_DIAGRAM):   end;
58411     +else do;
MPRINT(EM_DIAGRAM):   else do;
58412     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
58413     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
58414     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58415     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
58416     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
58417     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
58418     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
58419     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
58420     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
58421     +         end;
MPRINT(EM_DIAGRAM):   end;
58422     +         else do;
MPRINT(EM_DIAGRAM):   else do;
58423     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
58424     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
58425     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
58426     +            end;
MPRINT(EM_DIAGRAM):   end;
58427     +         end;
MPRINT(EM_DIAGRAM):   end;
58428     +      end;
MPRINT(EM_DIAGRAM):   end;
58429     +      else do;
MPRINT(EM_DIAGRAM):   else do;
58430     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
58431     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
58432     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
58433     +         end;
MPRINT(EM_DIAGRAM):   end;
58434     +      end;
MPRINT(EM_DIAGRAM):   end;
58435     +   end;
MPRINT(EM_DIAGRAM):   end;
58436     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58437     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
58438     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
58439     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
58440     +      end;
MPRINT(EM_DIAGRAM):   end;
58441     +      else do;
MPRINT(EM_DIAGRAM):   else do;
58442     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
58443     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
58444     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
58445     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
58446     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
58447     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
58448     +         end;
MPRINT(EM_DIAGRAM):   end;
58449     +      end;
MPRINT(EM_DIAGRAM):   end;
58450     +   end;
MPRINT(EM_DIAGRAM):   end;
58451     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
58452     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
58453     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
58454     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
58455     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
58456     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58457     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58458     +   end;
MPRINT(EM_DIAGRAM):   end;
58459     +end;
MPRINT(EM_DIAGRAM):   end;
58460     +
58461     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58462     +*** Checking missing input Interval
58463     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
58464     +
58465     +IF NMISS(
58466     +   AcceptedCmpTotal ,
58467     +   Age ,
58468     +   Frq ,
58469     +   Income ,
58470     +   Kidhome ,
58471     +   MntFishProducts ,
58472     +   MntFruits ,
58473     +   MntGoldProds ,
58474     +   MntSweetProducts ,
58475     +   MonthsAsCustomer ,
58476     +   NumDealsPurchases ,
58477     +   NumWebVisitsMonth ,
58478     +   RFMstat ,
58479     +   RMntFrq ,
58480     +   Recency ,
58481     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
58482     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
58483     +
58484     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58485     +END;
MPRINT(EM_DIAGRAM):   END;
58486     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58487     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
58488     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58489     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
58490     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
58491     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
58492     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
58493     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
58494     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
58495     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
58496     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
58497     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
58498     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
58499     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
58500     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
58501     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
58502     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
58503     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
58504     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
58505     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
58506     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
58507     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
58508     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
58509     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
58510     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
58511     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
58512     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
58513     +END;
MPRINT(EM_DIAGRAM):   END;
58514     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
58515     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
58516     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
58517     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
58518     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
58519     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
58520     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
58521     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
58522     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
58523     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
58524     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
58525     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
58526     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
58527     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
58528     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
58529     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
58530     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
58531     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
58532     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
58533     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
58534     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
58535     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
58536     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
58537     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
58538     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
58539     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
58540     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
58541     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
58542     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
58543     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
58544     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
58545     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
58546     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
58547     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
58548     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
58549     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
58550     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
58551     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
58552     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
58553     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
58554     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
58555     +END;
MPRINT(EM_DIAGRAM):   END;
58556     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58557     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
58558     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58559     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58560     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
58561     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58562     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58563     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
58564     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58565     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
58566     +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
58567     +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
58568     +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
58569     +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
58570     +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
58571     +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
58572     +          +     0.04740894983714 * S_MonthsAsCustomer
58573     +          +     1.39008006467326 * S_NumDealsPurchases
58574     +          +     0.21608999126738 * S_NumWebVisitsMonth
58575     +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
58576     +        S_RMntFrq  +    -0.30830265825486 * S_Recency
58577     +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
58578     +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
58579     +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
58580     +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
58581     +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
58582     +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
58583     +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
58584     +          +     0.11090137331567 * S_MonthsAsCustomer
58585     +          +     0.22617410760471 * S_NumDealsPurchases
58586     +          +    -1.50612324994247 * S_NumWebVisitsMonth
58587     +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
58588     +        S_RMntFrq  +     1.36064773168913 * S_Recency
58589     +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
58590     +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
58591     +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
58592     +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
58593     +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
58594     +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
58595     +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
58596     +          +     1.12489244540865 * S_MonthsAsCustomer
58597     +          +     0.65186273365438 * S_NumDealsPurchases
58598     +          +    -2.32770073685469 * S_NumWebVisitsMonth
58599     +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
58600     +        S_RMntFrq  +     2.60277611818411 * S_Recency
58601     +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
58602     +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
58603     +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
58604     +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
58605     +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
58606     +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
58607     +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
58608     +          +     0.30886829972356 * S_MonthsAsCustomer
58609     +          +     0.65492907685123 * S_NumDealsPurchases
58610     +          +     0.10822300736498 * S_NumWebVisitsMonth
58611     +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
58612     +        S_RMntFrq  +     -0.7378392134822 * S_Recency
58613     +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
58614     +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
58615     +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
58616     +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
58617     +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
58618     +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
58619     +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
58620     +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
58621     +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
58622     +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
58623     +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
58624     +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
58625     +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
58626     +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
58627     +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
58628     +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
58629     +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
58630     +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
58631     +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
58632     +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
58633     +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
58634     +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
58635     +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
58636     +        EducationGraduation  +     0.30922934477029 * EducationMaster
58637     +          +     0.01556098790048 * Marital_StatusDivorced
58638     +          +     0.00512523764645 * Marital_StatusMarried
58639     +          +    -0.33980799511448 * Marital_StatusSingle
58640     +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
58641     +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
58642     +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
58643     +        EducationGraduation  +     0.69751348344321 * EducationMaster
58644     +          +     0.01069434029942 * Marital_StatusDivorced
58645     +          +      0.3116587285334 * Marital_StatusMarried
58646     +          +    -0.98635795023549 * Marital_StatusSingle
58647     +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
58648     +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
58649     +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
58650     +        EducationGraduation  +     -0.8155628950024 * EducationMaster
58651     +          +    -0.60393077836174 * Marital_StatusDivorced
58652     +          +    -0.18138878944937 * Marital_StatusMarried
58653     +          +     0.53013032587101 * Marital_StatusSingle
58654     +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
58655     +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
58656     +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
58657     +        EducationGraduation  +    -0.40675219343984 * EducationMaster
58658     +          +     0.43223311502025 * Marital_StatusDivorced
58659     +          +    -1.15741416919552 * Marital_StatusMarried
58660     +          +     0.83939799284264 * Marital_StatusSingle
58661     +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
58662     +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
58663     +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
58664     +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
58665     +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
58666     +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
58667     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
58668     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
58669     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
58670     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
58671     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
58672     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
58673     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
58674     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
58675     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
58676     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
58677     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
58678     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
58679     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
58680     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
58681     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
58682     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
58683     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
58684     +END;
MPRINT(EM_DIAGRAM):   END;
58685     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
58686     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
58687     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
58688     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
58689     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
58690     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
58691     +END;
MPRINT(EM_DIAGRAM):   END;
58692     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58693     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
58694     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58695     +
58696     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
58697     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
58698     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
58699     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
58700     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
58701     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58702     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
58703     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
58704     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
58705     +end;
MPRINT(EM_DIAGRAM):   end;
58706     +else do;
MPRINT(EM_DIAGRAM):   else do;
58707     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
58708     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
58709     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
58710     +   end;
MPRINT(EM_DIAGRAM):   end;
58711     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
58712     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
58713     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
58714     +   end;
MPRINT(EM_DIAGRAM):   end;
58715     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58716     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
58717     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
58718     +   end;
MPRINT(EM_DIAGRAM):   end;
58719     +end;
MPRINT(EM_DIAGRAM):   end;
58720     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
58721     +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
58722     +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
58723     +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
58724     +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
58725     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
58726     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
58727     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
58728     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
58729     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
58730     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
58731     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
58732     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
58733     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
58734     +END;
MPRINT(EM_DIAGRAM):   END;
58735     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
58736     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
58737     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
58738     +END;
MPRINT(EM_DIAGRAM):   END;
58739     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
58740     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
58741     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
58742     +END;
MPRINT(EM_DIAGRAM):   END;
58743     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
58744     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
58745     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
58746     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
58747     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
58748     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
58749     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
58750     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58751     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
58752     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
58753     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
58754     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
58755     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
58756     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
58757     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
58758     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
58759     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
58760     +END;
MPRINT(EM_DIAGRAM):   END;
58761     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
58762     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
58763     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
58764     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
58765     +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
58766     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58767     +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
58768     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58769     +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
58770     +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
58771     +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
58772     +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
58773     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58774     +* Renaming Into variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural34;
58775     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58776     +length AutoNeural34_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural34_I_DepVar $32;
58777     +drop AutoNeural34_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_I_DepVar;
58778     +AutoNeural34_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural34_I_DepVar = I_DepVar;
58779     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58780     +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
58781     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58782     +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
58783     +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
58784     +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
58785     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58786     +* Ensmbl56: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 4 of 7;
58787     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58788     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58789     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
58790     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
58791     +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
58792     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
58793     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
58794     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
58795     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
58796     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
58797     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
58798     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
58799     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
58800     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
58801     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
58802     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
58803     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
58804     +LENGTH _WARN_ $4
58805     +      F_DepVar  $ 12
58806     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
58807     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
58808     +
58809     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
58810     +
58811     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
58812     +
58813     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
58814     +
58815     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
58816     +
58817     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
58818     +
58819     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
58820     +
58821     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
58822     +
58823     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
58824     +
58825     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
58826     +
58827     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
58828     +
58829     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
58830     +
58831     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
58832     +
58833     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
58834     +
58835     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
58836     +
58837     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
58838     +
58839     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
58840     +
58841     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
58842     +
58843     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
58844     +
58845     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
58846     +
58847     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
58848     +
58849     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
58850     +
58851     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
58852     +
58853     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
58854     +
58855     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
58856     +
58857     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
58858     +
58859     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
58860     +
58861     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
58862     +
58863     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
58864     +
58865     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
58866     +
58867     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
58868     +
58869     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
58870     +
58871     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
58872     +
58873     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
58874     +
58875     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
58876     +
58877     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
58878     +
58879     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
58880     +
58881     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
58882     +
58883     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
58884     +
58885     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
58886     +
58887     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
58888     +
58889     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
58890     +
58891     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
58892     +
58893     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
58894     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
58895     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
58896     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
58897     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58898     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58899     +end;
MPRINT(EM_DIAGRAM):   end;
58900     +else do;
MPRINT(EM_DIAGRAM):   else do;
58901     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58902     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
58903     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58904     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58905     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
58906     +   end;
MPRINT(EM_DIAGRAM):   end;
58907     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58908     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
58909     +   end;
MPRINT(EM_DIAGRAM):   end;
58910     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58911     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
58912     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58913     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58914     +   end;
MPRINT(EM_DIAGRAM):   end;
58915     +end;
MPRINT(EM_DIAGRAM):   end;
58916     +
58917     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
58918     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
58919     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
58920     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
58921     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58922     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58923     +end;
MPRINT(EM_DIAGRAM):   end;
58924     +else do;
MPRINT(EM_DIAGRAM):   else do;
58925     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58926     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
58927     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58928     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58929     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
58930     +   end;
MPRINT(EM_DIAGRAM):   end;
58931     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58932     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
58933     +   end;
MPRINT(EM_DIAGRAM):   end;
58934     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58935     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
58936     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58937     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58938     +   end;
MPRINT(EM_DIAGRAM):   end;
58939     +end;
MPRINT(EM_DIAGRAM):   end;
58940     +
58941     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
58942     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
58943     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
58944     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
58945     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58946     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58947     +end;
MPRINT(EM_DIAGRAM):   end;
58948     +else do;
MPRINT(EM_DIAGRAM):   else do;
58949     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58950     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
58951     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58952     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58953     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
58954     +   end;
MPRINT(EM_DIAGRAM):   end;
58955     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58956     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
58957     +   end;
MPRINT(EM_DIAGRAM):   end;
58958     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58959     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
58960     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58961     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58962     +   end;
MPRINT(EM_DIAGRAM):   end;
58963     +end;
MPRINT(EM_DIAGRAM):   end;
58964     +
58965     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
58966     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
58967     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
58968     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
58969     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58970     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58971     +end;
MPRINT(EM_DIAGRAM):   end;
58972     +else do;
MPRINT(EM_DIAGRAM):   else do;
58973     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58974     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
58975     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
58976     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
58977     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
58978     +   end;
MPRINT(EM_DIAGRAM):   end;
58979     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
58980     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
58981     +   end;
MPRINT(EM_DIAGRAM):   end;
58982     +   else do;
MPRINT(EM_DIAGRAM):   else do;
58983     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
58984     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
58985     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58986     +   end;
MPRINT(EM_DIAGRAM):   end;
58987     +end;
MPRINT(EM_DIAGRAM):   end;
58988     +
58989     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
58990     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
58991     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
58992     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
58993     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
58994     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
58995     +end;
MPRINT(EM_DIAGRAM):   end;
58996     +else do;
MPRINT(EM_DIAGRAM):   else do;
58997     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
58998     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
58999     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59000     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
59001     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
59002     +   end;
MPRINT(EM_DIAGRAM):   end;
59003     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
59004     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
59005     +   end;
MPRINT(EM_DIAGRAM):   end;
59006     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59007     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
59008     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59009     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59010     +   end;
MPRINT(EM_DIAGRAM):   end;
59011     +end;
MPRINT(EM_DIAGRAM):   end;
59012     +
59013     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
59014     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
59015     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
59016     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
59017     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59018     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59019     +end;
MPRINT(EM_DIAGRAM):   end;
59020     +else do;
MPRINT(EM_DIAGRAM):   else do;
59021     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59022     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
59023     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59024     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
59025     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
59026     +   end;
MPRINT(EM_DIAGRAM):   end;
59027     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
59028     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
59029     +   end;
MPRINT(EM_DIAGRAM):   end;
59030     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59031     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
59032     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59033     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59034     +   end;
MPRINT(EM_DIAGRAM):   end;
59035     +end;
MPRINT(EM_DIAGRAM):   end;
59036     +
59037     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
59038     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
59039     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
59040     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
59041     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59042     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59043     +end;
MPRINT(EM_DIAGRAM):   end;
59044     +else do;
MPRINT(EM_DIAGRAM):   else do;
59045     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59046     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
59047     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59048     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
59049     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
59050     +   end;
MPRINT(EM_DIAGRAM):   end;
59051     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
59052     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
59053     +   end;
MPRINT(EM_DIAGRAM):   end;
59054     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59055     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
59056     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59057     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59058     +   end;
MPRINT(EM_DIAGRAM):   end;
59059     +end;
MPRINT(EM_DIAGRAM):   end;
59060     +
59061     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
59062     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
59063     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
59064     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
59065     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
59066     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
59067     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
59068     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
59069     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
59070     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
59071     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
59072     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
59073     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59074     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59075     +end;
MPRINT(EM_DIAGRAM):   end;
59076     +else do;
MPRINT(EM_DIAGRAM):   else do;
59077     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
59078     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
59079     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59080     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
59081     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
59082     +   end;
MPRINT(EM_DIAGRAM):   end;
59083     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
59084     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
59085     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
59086     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
59087     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
59088     +   end;
MPRINT(EM_DIAGRAM):   end;
59089     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
59090     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
59091     +   end;
MPRINT(EM_DIAGRAM):   end;
59092     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
59093     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
59094     +   end;
MPRINT(EM_DIAGRAM):   end;
59095     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
59096     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
59097     +   end;
MPRINT(EM_DIAGRAM):   end;
59098     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59099     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
59100     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
59101     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
59102     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
59103     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59104     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59105     +   end;
MPRINT(EM_DIAGRAM):   end;
59106     +end;
MPRINT(EM_DIAGRAM):   end;
59107     +
59108     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
59109     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
59110     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
59111     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
59112     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
59113     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
59114     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
59115     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
59116     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
59117     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
59118     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
59119     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
59120     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
59121     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59122     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59123     +end;
MPRINT(EM_DIAGRAM):   end;
59124     +else do;
MPRINT(EM_DIAGRAM):   else do;
59125     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
59126     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
59127     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59128     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
59129     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
59130     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
59131     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
59132     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
59133     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59134     +         end;
MPRINT(EM_DIAGRAM):   end;
59135     +         else do;
MPRINT(EM_DIAGRAM):   else do;
59136     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
59137     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
59138     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59139     +            end;
MPRINT(EM_DIAGRAM):   end;
59140     +         end;
MPRINT(EM_DIAGRAM):   end;
59141     +      end;
MPRINT(EM_DIAGRAM):   end;
59142     +      else do;
MPRINT(EM_DIAGRAM):   else do;
59143     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
59144     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
59145     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59146     +         end;
MPRINT(EM_DIAGRAM):   end;
59147     +      end;
MPRINT(EM_DIAGRAM):   end;
59148     +   end;
MPRINT(EM_DIAGRAM):   end;
59149     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59150     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
59151     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
59152     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59153     +      end;
MPRINT(EM_DIAGRAM):   end;
59154     +      else do;
MPRINT(EM_DIAGRAM):   else do;
59155     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
59156     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
59157     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
59158     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
59159     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
59160     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59161     +         end;
MPRINT(EM_DIAGRAM):   end;
59162     +      end;
MPRINT(EM_DIAGRAM):   end;
59163     +   end;
MPRINT(EM_DIAGRAM):   end;
59164     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
59165     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
59166     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
59167     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
59168     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
59169     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59170     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59171     +   end;
MPRINT(EM_DIAGRAM):   end;
59172     +end;
MPRINT(EM_DIAGRAM):   end;
59173     +
59174     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59175     +*** Checking missing input Interval
59176     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
59177     +
59178     +IF NMISS(
59179     +   AcceptedCmpTotal ,
59180     +   Age ,
59181     +   Frq ,
59182     +   Income ,
59183     +   Kidhome ,
59184     +   MntFishProducts ,
59185     +   MntFruits ,
59186     +   MntGoldProds ,
59187     +   MntSweetProducts ,
59188     +   MonthsAsCustomer ,
59189     +   NumDealsPurchases ,
59190     +   NumWebVisitsMonth ,
59191     +   RFMstat ,
59192     +   RMntFrq ,
59193     +   Recency ,
59194     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
59195     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
59196     +
59197     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59198     +END;
MPRINT(EM_DIAGRAM):   END;
59199     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59200     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
59201     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59202     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
59203     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
59204     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
59205     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
59206     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
59207     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
59208     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
59209     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
59210     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
59211     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
59212     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
59213     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
59214     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
59215     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
59216     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
59217     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
59218     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
59219     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
59220     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
59221     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
The SAS System

NumWebVisitsMonth ;
59222     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
59223     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
59224     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
59225     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
59226     +END;
MPRINT(EM_DIAGRAM):   END;
59227     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
59228     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
59229     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
59230     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
59231     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
59232     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
59233     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
59234     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
59235     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
59236     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
59237     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
59238     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
59239     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
59240     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
59241     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
59242     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
59243     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
59244     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
59245     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
59246     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
59247     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
59248     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
59249     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
59250     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
59251     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
59252     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
59253     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
59254     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
59255     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
59256     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
59257     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
59258     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
59259     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
59260     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
59261     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
59262     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
59263     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
59264     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
59265     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
59266     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
59267     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
59268     +END;
MPRINT(EM_DIAGRAM):   END;
59269     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59270     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
59271     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59272     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59273     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
59274     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59275     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59276     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
59277     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59278     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
59279     +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
59280     +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
59281     +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
59282     +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
59283     +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
59284     +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
59285     +          +     -0.6473961304074 * S_MonthsAsCustomer
59286     +          +     0.68960902951007 * S_NumDealsPurchases
59287     +          +    -0.03600585273268 * S_NumWebVisitsMonth
59288     +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
59289     +        S_RMntFrq  +    -0.37413569649471 * S_Recency
59290     +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
59291     +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
59292     +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
59293     +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
59294     +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
59295     +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
59296     +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
59297     +          +    -0.70674764548268 * S_MonthsAsCustomer
59298     +          +     0.03761139203619 * S_NumDealsPurchases
59299     +          +    -0.69359662485747 * S_NumWebVisitsMonth
59300     +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
59301     +        S_RMntFrq  +    -1.62720417424557 * S_Recency
59302     +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
59303     +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
59304     +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
59305     +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
59306     +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
59307     +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
59308     +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
59309     +          +    -0.47559913836984 * S_MonthsAsCustomer
59310     +          +    -0.26961781245749 * S_NumDealsPurchases
59311     +          +    -0.67017962977412 * S_NumWebVisitsMonth
59312     +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
59313     +        S_RMntFrq  +     0.67120737584665 * S_Recency
59314     +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
59315     +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
59316     +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
59317     +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
59318     +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
59319     +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
59320     +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
59321     +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
59322     +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
59323     +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
59324     +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
59325     +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
59326     +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
59327     +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
59328     +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
59329     +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
59330     +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
59331     +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
59332     +        EducationGraduation  +     0.46172475127934 * EducationMaster
59333     +          +    -0.18858032329482 * Marital_StatusDivorced
59334     +          +     0.16067956508072 * Marital_StatusMarried
59335     +          +    -0.90926406046237 * Marital_StatusSingle
59336     +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
59337     +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
59338     +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
59339     +        EducationGraduation  +    -0.74629011053947 * EducationMaster
59340     +          +     0.71998738170149 * Marital_StatusDivorced
59341     +          +    -1.53543515752013 * Marital_StatusMarried
59342     +          +     0.44068743694663 * Marital_StatusSingle
59343     +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
59344     +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
59345     +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
59346     +        EducationGraduation  +     0.11252156068047 * EducationMaster
59347     +          +    -0.31683932084863 * Marital_StatusDivorced
59348     +          +     0.17674162427585 * Marital_StatusMarried
59349     +          +    -0.67064017247711 * Marital_StatusSingle
59350     +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
59351     +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
59352     +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
59353     +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
59354     +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
59355     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
59356     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
59357     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
59358     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
59359     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
59360     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
59361     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
59362     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
59363     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
59364     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
59365     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
59366     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
59367     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
59368     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
59369     +END;
MPRINT(EM_DIAGRAM):   END;
59370     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
59371     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
59372     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
59373     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
59374     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
59375     +END;
MPRINT(EM_DIAGRAM):   END;
59376     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59377     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
59378     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59379     +
59380     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
59381     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
59382     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
59383     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
59384     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
59385     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59386     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
59387     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
59388     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
59389     +end;
MPRINT(EM_DIAGRAM):   end;
59390     +else do;
MPRINT(EM_DIAGRAM):   else do;
59391     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
59392     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
59393     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
59394     +   end;
MPRINT(EM_DIAGRAM):   end;
59395     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
59396     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
59397     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
59398     +   end;
MPRINT(EM_DIAGRAM):   end;
59399     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59400     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
59401     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
59402     +   end;
MPRINT(EM_DIAGRAM):   end;
59403     +end;
MPRINT(EM_DIAGRAM):   end;
59404     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
59405     +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
59406     +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
59407     +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
59408     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
59409     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
59410     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
59411     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
59412     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
59413     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
59414     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
59415     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
59416     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
59417     +END;
MPRINT(EM_DIAGRAM):   END;
59418     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
59419     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
59420     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
59421     +END;
MPRINT(EM_DIAGRAM):   END;
59422     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
59423     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
59424     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
59425     +END;
MPRINT(EM_DIAGRAM):   END;
59426     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
59427     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
59428     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
59429     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
59430     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
59431     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
59432     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
59433     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59434     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
59435     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59436     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
59437     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
59438     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
59439     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
59440     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
59441     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
59442     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
59443     +END;
MPRINT(EM_DIAGRAM):   END;
59444     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
59445     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
59446     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
59447     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
59448     +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
59449     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59450     +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
59451     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59452     +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
59453     +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
59454     +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
59455     +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
59456     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59457     +* Renaming Into variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural40;
59458     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59459     +length AutoNeural40_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural40_I_DepVar $32;
59460     +drop AutoNeural40_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_I_DepVar;
59461     +AutoNeural40_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural40_I_DepVar = I_DepVar;
59462     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59463     +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
59464     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59465     +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
59466     +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
59467     +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
59468     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59469     +* Ensmbl56: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 5 of 7;
59470     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59471     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59472     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
59473     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
59474     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
59475     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
59476     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
59477     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
59478     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
59479     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
59480     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
59481     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
59482     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
59483     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
59484     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
59485     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
59486     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
59487     +LENGTH _WARN_ $4
59488     +      F_DepVar  $ 12
59489     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
59490     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
59491     +
59492     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
59493     +
59494     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
59495     +
59496     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
59497     +
59498     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
59499     +
59500     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
59501     +
59502     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
59503     +
59504     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
59505     +
59506     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
59507     +
59508     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
59509     +
59510     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
59511     +
59512     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
59513     +
59514     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
59515     +
59516     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
59517     +
59518     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
59519     +
59520     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
59521     +
59522     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
59523     +
59524     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
59525     +
59526     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
59527     +
59528     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
59529     +
59530     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
59531     +
59532     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
59533     +
59534     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
59535     +
59536     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
59537     +
59538     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
59539     +
59540     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
59541     +
59542     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
59543     +
59544     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
59545     +
59546     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
59547     +
59548     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
59549     +
59550     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
59551     +
59552     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
59553     +
59554     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
59555     +
59556     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
59557     +
59558     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
59559     +
59560     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
59561     +
59562     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
59563     +
59564     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
59565     +
59566     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
59567     +
59568     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
59569     +
59570     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
59571     +
59572     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
59573     +
59574     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
59575     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
59576     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
59577     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
59578     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59579     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59580     +end;
MPRINT(EM_DIAGRAM):   end;
59581     +else do;
MPRINT(EM_DIAGRAM):   else do;
59582     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59583     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
59584     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59585     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
59586     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
59587     +   end;
MPRINT(EM_DIAGRAM):   end;
59588     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
59589     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
59590     +   end;
MPRINT(EM_DIAGRAM):   end;
59591     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59592     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
59593     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59594     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59595     +   end;
MPRINT(EM_DIAGRAM):   end;
59596     +end;
MPRINT(EM_DIAGRAM):   end;
59597     +
59598     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
59599     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
59600     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
59601     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
59602     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59603     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59604     +end;
MPRINT(EM_DIAGRAM):   end;
59605     +else do;
MPRINT(EM_DIAGRAM):   else do;
59606     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59607     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
59608     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59609     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
59610     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
59611     +   end;
MPRINT(EM_DIAGRAM):   end;
59612     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
59613     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
59614     +   end;
MPRINT(EM_DIAGRAM):   end;
59615     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59616     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
59617     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59618     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59619     +   end;
MPRINT(EM_DIAGRAM):   end;
59620     +end;
MPRINT(EM_DIAGRAM):   end;
59621     +
59622     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
59623     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
59624     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
59625     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
59626     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59627     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59628     +end;
MPRINT(EM_DIAGRAM):   end;
59629     +else do;
MPRINT(EM_DIAGRAM):   else do;
59630     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59631     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
59632     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59633     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
59634     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
59635     +   end;
MPRINT(EM_DIAGRAM):   end;
59636     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
59637     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
59638     +   end;
MPRINT(EM_DIAGRAM):   end;
59639     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59640     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
59641     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59642     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59643     +   end;
MPRINT(EM_DIAGRAM):   end;
59644     +end;
MPRINT(EM_DIAGRAM):   end;
59645     +
59646     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
59647     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
59648     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
59649     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
59650     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59651     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59652     +end;
MPRINT(EM_DIAGRAM):   end;
59653     +else do;
MPRINT(EM_DIAGRAM):   else do;
59654     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59655     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
59656     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59657     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
59658     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
59659     +   end;
MPRINT(EM_DIAGRAM):   end;
59660     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
59661     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
59662     +   end;
MPRINT(EM_DIAGRAM):   end;
59663     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59664     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
59665     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59666     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59667     +   end;
MPRINT(EM_DIAGRAM):   end;
59668     +end;
MPRINT(EM_DIAGRAM):   end;
59669     +
59670     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
59671     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
59672     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
59673     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
59674     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59675     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59676     +end;
MPRINT(EM_DIAGRAM):   end;
59677     +else do;
MPRINT(EM_DIAGRAM):   else do;
59678     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59679     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
59680     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59681     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
59682     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
59683     +   end;
MPRINT(EM_DIAGRAM):   end;
59684     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
59685     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
59686     +   end;
MPRINT(EM_DIAGRAM):   end;
59687     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59688     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
59689     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59690     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59691     +   end;
MPRINT(EM_DIAGRAM):   end;
59692     +end;
MPRINT(EM_DIAGRAM):   end;
59693     +
59694     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
59695     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
59696     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
59697     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
59698     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59699     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59700     +end;
MPRINT(EM_DIAGRAM):   end;
59701     +else do;
MPRINT(EM_DIAGRAM):   else do;
59702     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59703     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
59704     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59705     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
59706     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
59707     +   end;
MPRINT(EM_DIAGRAM):   end;
59708     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
59709     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
59710     +   end;
MPRINT(EM_DIAGRAM):   end;
59711     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59712     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
59713     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59714     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59715     +   end;
MPRINT(EM_DIAGRAM):   end;
59716     +end;
MPRINT(EM_DIAGRAM):   end;
59717     +
59718     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
59719     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
59720     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
59721     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
59722     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59723     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59724     +end;
MPRINT(EM_DIAGRAM):   end;
59725     +else do;
MPRINT(EM_DIAGRAM):   else do;
59726     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
59727     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
59728     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59729     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
59730     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
59731     +   end;
MPRINT(EM_DIAGRAM):   end;
59732     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
59733     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
59734     +   end;
MPRINT(EM_DIAGRAM):   end;
59735     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59736     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
59737     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59738     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59739     +   end;
MPRINT(EM_DIAGRAM):   end;
59740     +end;
MPRINT(EM_DIAGRAM):   end;
59741     +
59742     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
59743     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
59744     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
59745     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
59746     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
59747     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
59748     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
59749     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
59750     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
59751     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
59752     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
59753     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
59754     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59755     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59756     +end;
MPRINT(EM_DIAGRAM):   end;
59757     +else do;
MPRINT(EM_DIAGRAM):   else do;
59758     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
59759     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
59760     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59761     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
59762     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
59763     +   end;
MPRINT(EM_DIAGRAM):   end;
59764     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
59765     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
59766     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
59767     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
59768     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
59769     +   end;
MPRINT(EM_DIAGRAM):   end;
59770     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
59771     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
59772     +   end;
MPRINT(EM_DIAGRAM):   end;
59773     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
59774     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
59775     +   end;
MPRINT(EM_DIAGRAM):   end;
59776     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
59777     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
59778     +   end;
MPRINT(EM_DIAGRAM):   end;
59779     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59780     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
59781     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
59782     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
59783     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
59784     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59785     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59786     +   end;
MPRINT(EM_DIAGRAM):   end;
59787     +end;
MPRINT(EM_DIAGRAM):   end;
59788     +
59789     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
59790     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
59791     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
59792     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
59793     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
59794     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
59795     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
59796     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
59797     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
59798     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
59799     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
59800     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
59801     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
59802     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
59803     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59804     +end;
MPRINT(EM_DIAGRAM):   end;
59805     +else do;
MPRINT(EM_DIAGRAM):   else do;
59806     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
59807     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
59808     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
59809     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
59810     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
59811     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
59812     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
59813     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
59814     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59815     +         end;
MPRINT(EM_DIAGRAM):   end;
59816     +         else do;
MPRINT(EM_DIAGRAM):   else do;
59817     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
59818     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
59819     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59820     +            end;
MPRINT(EM_DIAGRAM):   end;
59821     +         end;
MPRINT(EM_DIAGRAM):   end;
59822     +      end;
MPRINT(EM_DIAGRAM):   end;
59823     +      else do;
MPRINT(EM_DIAGRAM):   else do;
59824     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
59825     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
59826     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59827     +         end;
MPRINT(EM_DIAGRAM):   end;
59828     +      end;
MPRINT(EM_DIAGRAM):   end;
59829     +   end;
MPRINT(EM_DIAGRAM):   end;
59830     +   else do;
MPRINT(EM_DIAGRAM):   else do;
59831     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
59832     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
59833     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59834     +      end;
MPRINT(EM_DIAGRAM):   end;
59835     +      else do;
MPRINT(EM_DIAGRAM):   else do;
59836     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
59837     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
59838     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
59839     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
59840     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
59841     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
59842     +         end;
MPRINT(EM_DIAGRAM):   end;
59843     +      end;
MPRINT(EM_DIAGRAM):   end;
59844     +   end;
MPRINT(EM_DIAGRAM):   end;
59845     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
59846     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
59847     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
59848     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
59849     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
59850     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
59851     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59852     +   end;
MPRINT(EM_DIAGRAM):   end;
59853     +end;
MPRINT(EM_DIAGRAM):   end;
59854     +
59855     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59856     +*** Checking missing input Interval
59857     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
59858     +
59859     +IF NMISS(
59860     +   AcceptedCmpTotal ,
59861     +   Age ,
59862     +   Frq ,
59863     +   Income ,
59864     +   Kidhome ,
59865     +   MntFishProducts ,
59866     +   MntFruits ,
59867     +   MntGoldProds ,
59868     +   MntSweetProducts ,
59869     +   MonthsAsCustomer ,
59870     +   NumDealsPurchases ,
59871     +   NumWebVisitsMonth ,
59872     +   RFMstat ,
59873     +   RMntFrq ,
59874     +   Recency ,
59875     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
59876     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
59877     +
59878     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
59879     +END;
MPRINT(EM_DIAGRAM):   END;
59880     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59881     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
59882     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59883     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
59884     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
59885     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
59886     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
59887     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
59888     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
59889     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
59890     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
59891     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
59892     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
59893     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
59894     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
59895     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
59896     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
59897     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
59898     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
59899     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
59900     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
59901     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
59902     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
59903     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
59904     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
59905     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
59906     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
59907     +END;
MPRINT(EM_DIAGRAM):   END;
59908     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
59909     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
59910     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
59911     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
59912     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
59913     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
59914     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
59915     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
59916     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
59917     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
59918     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
59919     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
59920     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
59921     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
59922     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
59923     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
59924     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
59925     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
59926     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
59927     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
59928     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
59929     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
59930     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
59931     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
59932     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
59933     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
59934     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
59935     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
59936     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
59937     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
59938     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
59939     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
59940     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
59941     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
59942     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
59943     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
59944     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
59945     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
59946     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
59947     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
59948     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
59949     +END;
MPRINT(EM_DIAGRAM):   END;
59950     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59951     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
59952     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59953     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59954     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
59955     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59956     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59957     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
59958     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
59959     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
59960     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
59961     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
59962     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
59963     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
59964     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
59965     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
59966     +          +     -0.1740957673716 * S_MonthsAsCustomer
59967     +          +     0.66565026405117 * S_NumDealsPurchases
59968     +          +     0.43247206282836 * S_NumWebVisitsMonth
59969     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
59970     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
59971     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
59972     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
59973     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
59974     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
59975     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
59976     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
59977     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
59978     +          +    -0.06176784990963 * S_MonthsAsCustomer
59979     +          +    -0.11740415005833 * S_NumDealsPurchases
59980     +          +    -0.17084845478672 * S_NumWebVisitsMonth
59981     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
59982     +        S_RMntFrq  +     0.54983271222574 * S_Recency
59983     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
59984     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
59985     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
59986     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
59987     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
59988     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
59989     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
59990     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
59991     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
59992     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
59993     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
59994     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
59995     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
59996     +        EducationGraduation  +     0.22632282500966 * EducationMaster
59997     +          +     -0.0800438380883 * Marital_StatusDivorced
59998     +          +     0.44505766937623 * Marital_StatusMarried
59999     +          +    -0.57546515626468 * Marital_StatusSingle
60000     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
60001     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
60002     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
60003     +        EducationGraduation  +      0.0794165981215 * EducationMaster
60004     +          +    -0.20291653465543 * Marital_StatusDivorced
60005     +          +     0.39547414450617 * Marital_StatusMarried
60006     +          +    -0.37001331184001 * Marital_StatusSingle
60007     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
60008     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
60009     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
60010     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
60011     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
60012     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
60013     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
60014     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
60015     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
60016     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
60017     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
60018     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
60019     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
60020     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
60021     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
60022     +END;
MPRINT(EM_DIAGRAM):   END;
60023     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
60024     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
60025     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
60026     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
60027     +END;
MPRINT(EM_DIAGRAM):   END;
60028     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60029     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
60030     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60031     +
60032     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
60033     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
60034     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
60035     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
60036     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
60037     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60038     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
60039     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
60040     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
60041     +end;
MPRINT(EM_DIAGRAM):   end;
60042     +else do;
MPRINT(EM_DIAGRAM):   else do;
60043     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
60044     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
60045     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
60046     +   end;
MPRINT(EM_DIAGRAM):   end;
60047     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
60048     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
60049     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
60050     +   end;
MPRINT(EM_DIAGRAM):   end;
60051     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60052     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
60053     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
60054     +   end;
MPRINT(EM_DIAGRAM):   end;
60055     +end;
MPRINT(EM_DIAGRAM):   end;
60056     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
60057     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
60058     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
60059     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
60060     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
60061     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
60062     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
60063     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
60064     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
60065     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
60066     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
60067     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
60068     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
60069     +END;
MPRINT(EM_DIAGRAM):   END;
60070     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
60071     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
60072     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
60073     +END;
MPRINT(EM_DIAGRAM):   END;
60074     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
60075     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
60076     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
60077     +END;
MPRINT(EM_DIAGRAM):   END;
60078     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
60079     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
60080     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
60081     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
60082     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
60083     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
60084     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
60085     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60086     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
60087     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60088     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
60089     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
60090     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
60091     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
60092     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
60093     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
60094     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
60095     +END;
MPRINT(EM_DIAGRAM):   END;
60096     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
60097     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
60098     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
60099     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
60100     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
60101     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60102     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
60103     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60104     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
60105     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
60106     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
60107     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
60108     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60109     +* Renaming Into variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural39;
60110     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60111     +length AutoNeural39_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural39_I_DepVar $32;
60112     +drop AutoNeural39_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_I_DepVar;
60113     +AutoNeural39_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural39_I_DepVar = I_DepVar;
60114     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60115     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
60116     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60117     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
60118     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
60119     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
60120     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60121     +* Ensmbl56: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 6 of 7;
60122     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60123     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60124     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
60125     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
60126     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
60127     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60128     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
60129     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
60130     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
60131     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
60132     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
60133     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
60134     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
60135     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
60136     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
60137     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
60138     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
60139     +LENGTH _WARN_ $4
60140     +      F_DepVar  $ 12
60141     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
60142     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
60143     +
60144     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
60145     +
60146     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
60147     +
60148     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
60149     +
60150     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
60151     +
60152     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
60153     +
60154     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
60155     +
60156     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
60157     +
60158     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
60159     +
60160     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
60161     +
60162     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
60163     +
60164     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
60165     +
60166     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
60167     +
60168     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
60169     +
60170     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
60171     +
60172     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
60173     +
60174     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
60175     +
60176     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
60177     +
60178     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
60179     +
60180     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
60181     +
60182     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
60183     +
60184     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
60185     +
60186     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
60187     +
60188     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
60189     +
60190     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
60191     +
60192     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
60193     +
60194     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
60195     +
60196     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
60197     +
60198     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
60199     +
60200     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
60201     +
60202     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
60203     +
60204     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
60205     +
60206     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
60207     +
60208     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
60209     +
60210     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
60211     +
60212     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
60213     +
60214     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
60215     +
60216     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
60217     +
60218     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
60219     +
60220     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
60221     +
60222     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
60223     +
60224     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
60225     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
60226     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
60227     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
60228     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60229     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60230     +end;
MPRINT(EM_DIAGRAM):   end;
60231     +else do;
MPRINT(EM_DIAGRAM):   else do;
60232     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60233     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
60234     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60235     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60236     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
60237     +   end;
MPRINT(EM_DIAGRAM):   end;
60238     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60239     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
60240     +   end;
MPRINT(EM_DIAGRAM):   end;
60241     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60242     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
60243     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60244     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60245     +   end;
MPRINT(EM_DIAGRAM):   end;
60246     +end;
MPRINT(EM_DIAGRAM):   end;
60247     +
60248     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
60249     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
60250     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
60251     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
60252     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60253     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60254     +end;
MPRINT(EM_DIAGRAM):   end;
60255     +else do;
MPRINT(EM_DIAGRAM):   else do;
60256     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60257     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
60258     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60259     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60260     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
60261     +   end;
MPRINT(EM_DIAGRAM):   end;
60262     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60263     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
60264     +   end;
MPRINT(EM_DIAGRAM):   end;
60265     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60266     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
60267     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60268     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60269     +   end;
MPRINT(EM_DIAGRAM):   end;
60270     +end;
MPRINT(EM_DIAGRAM):   end;
60271     +
60272     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
60273     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
60274     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
60275     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
60276     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60277     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60278     +end;
MPRINT(EM_DIAGRAM):   end;
60279     +else do;
MPRINT(EM_DIAGRAM):   else do;
60280     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60281     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
60282     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60283     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60284     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
60285     +   end;
MPRINT(EM_DIAGRAM):   end;
60286     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60287     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
60288     +   end;
MPRINT(EM_DIAGRAM):   end;
60289     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60290     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
60291     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60292     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60293     +   end;
MPRINT(EM_DIAGRAM):   end;
60294     +end;
MPRINT(EM_DIAGRAM):   end;
60295     +
60296     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
60297     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
60298     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
60299     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
60300     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60301     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60302     +end;
MPRINT(EM_DIAGRAM):   end;
60303     +else do;
MPRINT(EM_DIAGRAM):   else do;
60304     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60305     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
60306     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60307     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60308     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
60309     +   end;
MPRINT(EM_DIAGRAM):   end;
60310     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60311     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
60312     +   end;
MPRINT(EM_DIAGRAM):   end;
60313     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60314     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
60315     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60316     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60317     +   end;
MPRINT(EM_DIAGRAM):   end;
60318     +end;
MPRINT(EM_DIAGRAM):   end;
60319     +
60320     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
60321     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
60322     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
60323     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
60324     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60325     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60326     +end;
MPRINT(EM_DIAGRAM):   end;
60327     +else do;
MPRINT(EM_DIAGRAM):   else do;
60328     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60329     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
60330     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60331     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60332     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
60333     +   end;
MPRINT(EM_DIAGRAM):   end;
60334     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60335     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
60336     +   end;
MPRINT(EM_DIAGRAM):   end;
60337     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60338     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
60339     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60340     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60341     +   end;
MPRINT(EM_DIAGRAM):   end;
60342     +end;
MPRINT(EM_DIAGRAM):   end;
60343     +
60344     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
60345     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
60346     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
60347     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
60348     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60349     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60350     +end;
MPRINT(EM_DIAGRAM):   end;
60351     +else do;
MPRINT(EM_DIAGRAM):   else do;
60352     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60353     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
60354     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60355     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60356     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
60357     +   end;
MPRINT(EM_DIAGRAM):   end;
60358     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60359     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
60360     +   end;
MPRINT(EM_DIAGRAM):   end;
60361     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60362     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
60363     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60364     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60365     +   end;
MPRINT(EM_DIAGRAM):   end;
60366     +end;
MPRINT(EM_DIAGRAM):   end;
60367     +
60368     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
60369     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
60370     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
60371     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
60372     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60373     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60374     +end;
MPRINT(EM_DIAGRAM):   end;
60375     +else do;
MPRINT(EM_DIAGRAM):   else do;
60376     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60377     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
60378     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60379     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
60380     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
60381     +   end;
MPRINT(EM_DIAGRAM):   end;
60382     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
60383     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
60384     +   end;
MPRINT(EM_DIAGRAM):   end;
60385     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60386     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
60387     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60388     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60389     +   end;
MPRINT(EM_DIAGRAM):   end;
60390     +end;
MPRINT(EM_DIAGRAM):   end;
60391     +
60392     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
60393     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
60394     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
60395     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
60396     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
60397     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
60398     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
60399     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
60400     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
60401     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
60402     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
60403     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
60404     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60405     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60406     +end;
MPRINT(EM_DIAGRAM):   end;
60407     +else do;
MPRINT(EM_DIAGRAM):   else do;
60408     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
60409     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
60410     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60411     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
60412     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
60413     +   end;
MPRINT(EM_DIAGRAM):   end;
60414     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
60415     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
60416     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
60417     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
60418     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
60419     +   end;
MPRINT(EM_DIAGRAM):   end;
60420     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
60421     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
60422     +   end;
MPRINT(EM_DIAGRAM):   end;
60423     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
60424     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
60425     +   end;
MPRINT(EM_DIAGRAM):   end;
60426     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
60427     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
60428     +   end;
MPRINT(EM_DIAGRAM):   end;
60429     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60430     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
60431     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
60432     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
60433     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
60434     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60435     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60436     +   end;
MPRINT(EM_DIAGRAM):   end;
60437     +end;
MPRINT(EM_DIAGRAM):   end;
60438     +
60439     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
60440     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
60441     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
60442     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
60443     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
60444     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
60445     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
60446     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
60447     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
60448     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
60449     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
60450     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
60451     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
60452     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60453     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60454     +end;
MPRINT(EM_DIAGRAM):   end;
60455     +else do;
MPRINT(EM_DIAGRAM):   else do;
60456     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
60457     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
60458     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60459     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
60460     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
60461     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
60462     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
60463     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
60464     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60465     +         end;
MPRINT(EM_DIAGRAM):   end;
60466     +         else do;
MPRINT(EM_DIAGRAM):   else do;
60467     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
60468     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
60469     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60470     +            end;
MPRINT(EM_DIAGRAM):   end;
60471     +         end;
MPRINT(EM_DIAGRAM):   end;
60472     +      end;
MPRINT(EM_DIAGRAM):   end;
60473     +      else do;
MPRINT(EM_DIAGRAM):   else do;
60474     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
60475     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
60476     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60477     +         end;
MPRINT(EM_DIAGRAM):   end;
60478     +      end;
MPRINT(EM_DIAGRAM):   end;
60479     +   end;
MPRINT(EM_DIAGRAM):   end;
60480     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60481     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
60482     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
60483     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60484     +      end;
MPRINT(EM_DIAGRAM):   end;
60485     +      else do;
MPRINT(EM_DIAGRAM):   else do;
60486     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
60487     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
60488     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
60489     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
60490     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
60491     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60492     +         end;
MPRINT(EM_DIAGRAM):   end;
60493     +      end;
MPRINT(EM_DIAGRAM):   end;
60494     +   end;
MPRINT(EM_DIAGRAM):   end;
60495     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
60496     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
60497     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
60498     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
60499     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
60500     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60501     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60502     +   end;
MPRINT(EM_DIAGRAM):   end;
60503     +end;
MPRINT(EM_DIAGRAM):   end;
60504     +
60505     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60506     +*** Checking missing input Interval
60507     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
60508     +
60509     +IF NMISS(
60510     +   AcceptedCmpTotal ,
60511     +   Age ,
60512     +   Frq ,
60513     +   Income ,
60514     +   Kidhome ,
60515     +   MntFishProducts ,
60516     +   MntFruits ,
60517     +   MntGoldProds ,
60518     +   MntSweetProducts ,
60519     +   MonthsAsCustomer ,
60520     +   NumDealsPurchases ,
60521     +   NumWebVisitsMonth ,
60522     +   RFMstat ,
60523     +   RMntFrq ,
60524     +   Recency ,
60525     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
60526     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
60527     +
60528     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60529     +END;
MPRINT(EM_DIAGRAM):   END;
60530     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60531     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
60532     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60533     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
60534     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
60535     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
60536     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
60537     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
60538     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
60539     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
60540     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
60541     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
60542     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
60543     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
60544     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
60545     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
60546     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
60547     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
60548     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
60549     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
60550     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
60551     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
60552     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
60553     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
60554     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
60555     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
60556     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
60557     +END;
MPRINT(EM_DIAGRAM):   END;
60558     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
60559     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
60560     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
60561     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
60562     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
60563     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
60564     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
60565     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
60566     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
60567     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
60568     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
60569     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
60570     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
60571     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
60572     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
60573     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
60574     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
60575     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
60576     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
60577     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
60578     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
60579     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
60580     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
60581     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
60582     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
60583     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
60584     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
60585     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
60586     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
60587     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
60588     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
60589     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
60590     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
60591     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
60592     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
60593     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
60594     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
60595     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
60596     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
60597     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
60598     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
60599     +END;
MPRINT(EM_DIAGRAM):   END;
60600     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60601     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
60602     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60603     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60604     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
60605     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60606     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60607     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
60608     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60609     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
60610     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
60611     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
60612     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
60613     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
60614     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
60615     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
60616     +          +     0.07696704519183 * S_MonthsAsCustomer
60617     +          +     0.06885982009617 * S_NumDealsPurchases
60618     +          +     0.18284147478918 * S_NumWebVisitsMonth
60619     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
60620     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
60621     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
60622     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
60623     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
60624     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
60625     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
60626     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
60627     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
60628     +          +     0.19400730773464 * S_MonthsAsCustomer
60629     +          +    -1.36455521037197 * S_NumDealsPurchases
60630     +          +    -1.07068059346196 * S_NumWebVisitsMonth
60631     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
60632     +        S_RMntFrq  +     1.36066079800227 * S_Recency
60633     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
60634     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
60635     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
60636     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
60637     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
60638     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
60639     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
60640     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
60641     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
60642     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
60643     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
60644     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
60645     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
60646     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
60647     +          +     0.23432241402098 * Marital_StatusDivorced
60648     +          +    -0.46302700269027 * Marital_StatusMarried
60649     +          +      0.4032168653504 * Marital_StatusSingle
60650     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
60651     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
60652     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
60653     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
60654     +          +    -0.31347503340603 * Marital_StatusDivorced
60655     +          +    -0.20319530959178 * Marital_StatusMarried
60656     +          +     0.48298350411196 * Marital_StatusSingle
60657     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
60658     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
60659     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
60660     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
60661     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
60662     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
60663     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
60664     +END;
MPRINT(EM_DIAGRAM):   END;
60665     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
60666     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
60667     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
60668     +END;
MPRINT(EM_DIAGRAM):   END;
60669     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60670     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
60671     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60672     +
60673     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
60674     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
60675     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
60676     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
60677     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
60678     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60679     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
60680     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
60681     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
60682     +end;
MPRINT(EM_DIAGRAM):   end;
60683     +else do;
MPRINT(EM_DIAGRAM):   else do;
60684     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
60685     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
60686     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
60687     +   end;
MPRINT(EM_DIAGRAM):   end;
60688     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
60689     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
60690     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
60691     +   end;
MPRINT(EM_DIAGRAM):   end;
60692     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60693     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
60694     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
60695     +   end;
MPRINT(EM_DIAGRAM):   end;
60696     +end;
MPRINT(EM_DIAGRAM):   end;
60697     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
60698     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
60699     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
60700     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
60701     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
60702     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
60703     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
60704     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
60705     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
60706     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
60707     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
60708     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
60709     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
60710     +END;
MPRINT(EM_DIAGRAM):   END;
60711     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
60712     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
60713     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
60714     +END;
MPRINT(EM_DIAGRAM):   END;
60715     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
60716     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
60717     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
60718     +END;
MPRINT(EM_DIAGRAM):   END;
60719     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
60720     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
60721     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
60722     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
60723     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
60724     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
60725     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
60726     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60727     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
60728     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60729     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
60730     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
60731     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
60732     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
60733     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
60734     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
60735     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
60736     +END;
MPRINT(EM_DIAGRAM):   END;
60737     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
60738     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
60739     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
60740     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
60741     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
60742     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60743     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
60744     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60745     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
60746     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
60747     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
60748     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
60749     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60750     +* Renaming Into variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural38;
60751     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60752     +length AutoNeural38_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural38_I_DepVar $32;
60753     +drop AutoNeural38_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_I_DepVar;
60754     +AutoNeural38_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural38_I_DepVar = I_DepVar;
60755     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60756     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
60757     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60758     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
60759     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
60760     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
60761     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60762     +* Ensmbl56: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 7 of 7;
60763     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60764     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60765     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
60766     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
60767     +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
60768     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60769     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
60770     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
60771     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
60772     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
60773     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
60774     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
60775     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
60776     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
60777     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
60778     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
60779     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
60780     +LENGTH _WARN_ $4
60781     +      F_DepVar  $ 12
60782     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
60783     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
60784     +
60785     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
60786     +
60787     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
60788     +
60789     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
60790     +
60791     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
60792     +
60793     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
60794     +
60795     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
60796     +
60797     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
60798     +
60799     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
60800     +
60801     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
60802     +
60803     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
60804     +
60805     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
60806     +
60807     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
60808     +
60809     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
60810     +
60811     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
60812     +
60813     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
60814     +
60815     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
60816     +
60817     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
60818     +
60819     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
60820     +
60821     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
60822     +
60823     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
60824     +
60825     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
60826     +
60827     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
60828     +
60829     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
60830     +
60831     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
60832     +
60833     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
60834     +
60835     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
60836     +
60837     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
60838     +
60839     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
60840     +
60841     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
60842     +
60843     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
60844     +
60845     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
60846     +
60847     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
60848     +
60849     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
60850     +
60851     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
60852     +
60853     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
60854     +
60855     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
60856     +
60857     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
60858     +
60859     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
60860     +
60861     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
60862     +
60863     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
60864     +
60865     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
60866     +
60867     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
60868     +
60869     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
60870     +
60871     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
60872     +
60873     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
60874     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
60875     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
60876     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
60877     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60878     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60879     +end;
MPRINT(EM_DIAGRAM):   end;
60880     +else do;
MPRINT(EM_DIAGRAM):   else do;
60881     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60882     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
60883     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60884     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60885     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
60886     +   end;
MPRINT(EM_DIAGRAM):   end;
60887     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60888     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
60889     +   end;
MPRINT(EM_DIAGRAM):   end;
60890     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60891     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
60892     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60893     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60894     +   end;
MPRINT(EM_DIAGRAM):   end;
60895     +end;
MPRINT(EM_DIAGRAM):   end;
60896     +
60897     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
60898     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
60899     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
60900     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
60901     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60902     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60903     +end;
MPRINT(EM_DIAGRAM):   end;
60904     +else do;
MPRINT(EM_DIAGRAM):   else do;
60905     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60906     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
60907     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60908     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60909     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
60910     +   end;
MPRINT(EM_DIAGRAM):   end;
60911     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60912     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
60913     +   end;
MPRINT(EM_DIAGRAM):   end;
60914     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60915     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
60916     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60917     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60918     +   end;
MPRINT(EM_DIAGRAM):   end;
60919     +end;
MPRINT(EM_DIAGRAM):   end;
60920     +
60921     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
60922     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
60923     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
60924     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
60925     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60926     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60927     +end;
MPRINT(EM_DIAGRAM):   end;
60928     +else do;
MPRINT(EM_DIAGRAM):   else do;
60929     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60930     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
60931     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60932     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60933     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
60934     +   end;
MPRINT(EM_DIAGRAM):   end;
60935     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60936     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
60937     +   end;
MPRINT(EM_DIAGRAM):   end;
60938     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60939     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
60940     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60941     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60942     +   end;
MPRINT(EM_DIAGRAM):   end;
60943     +end;
MPRINT(EM_DIAGRAM):   end;
60944     +
60945     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
60946     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
60947     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
60948     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
60949     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60950     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60951     +end;
MPRINT(EM_DIAGRAM):   end;
60952     +else do;
MPRINT(EM_DIAGRAM):   else do;
60953     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60954     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
60955     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60956     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60957     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
60958     +   end;
MPRINT(EM_DIAGRAM):   end;
60959     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60960     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
60961     +   end;
MPRINT(EM_DIAGRAM):   end;
60962     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60963     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
60964     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60965     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60966     +   end;
MPRINT(EM_DIAGRAM):   end;
60967     +end;
MPRINT(EM_DIAGRAM):   end;
60968     +
60969     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
60970     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
60971     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
60972     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
60973     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60974     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60975     +end;
MPRINT(EM_DIAGRAM):   end;
60976     +else do;
MPRINT(EM_DIAGRAM):   else do;
60977     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
60978     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
60979     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60980     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
60981     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
60982     +   end;
MPRINT(EM_DIAGRAM):   end;
60983     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
60984     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
60985     +   end;
MPRINT(EM_DIAGRAM):   end;
60986     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60987     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
60988     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60989     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60990     +   end;
MPRINT(EM_DIAGRAM):   end;
60991     +end;
MPRINT(EM_DIAGRAM):   end;
60992     +
60993     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
60994     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
60995     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
60996     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
60997     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60998     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60999     +end;
MPRINT(EM_DIAGRAM):   end;
61000     +else do;
MPRINT(EM_DIAGRAM):   else do;
61001     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61002     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
61003     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61004     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61005     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
61006     +   end;
MPRINT(EM_DIAGRAM):   end;
61007     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61008     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
61009     +   end;
MPRINT(EM_DIAGRAM):   end;
61010     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61011     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
61012     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61013     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61014     +   end;
MPRINT(EM_DIAGRAM):   end;
61015     +end;
MPRINT(EM_DIAGRAM):   end;
61016     +
61017     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
61018     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
61019     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
61020     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
61021     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61022     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61023     +end;
MPRINT(EM_DIAGRAM):   end;
61024     +else do;
MPRINT(EM_DIAGRAM):   else do;
61025     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61026     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
61027     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61028     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
61029     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
61030     +   end;
MPRINT(EM_DIAGRAM):   end;
61031     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
61032     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
61033     +   end;
MPRINT(EM_DIAGRAM):   end;
61034     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61035     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
61036     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61037     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61038     +   end;
MPRINT(EM_DIAGRAM):   end;
61039     +end;
MPRINT(EM_DIAGRAM):   end;
61040     +
61041     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
61042     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
61043     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
61044     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
61045     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
61046     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
61047     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
61048     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
61049     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
61050     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
61051     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
61052     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
61053     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61054     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61055     +end;
MPRINT(EM_DIAGRAM):   end;
61056     +else do;
MPRINT(EM_DIAGRAM):   else do;
61057     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
61058     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
61059     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61060     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
61061     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
61062     +   end;
MPRINT(EM_DIAGRAM):   end;
61063     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
61064     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
61065     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
61066     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
61067     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
61068     +   end;
MPRINT(EM_DIAGRAM):   end;
61069     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
61070     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
61071     +   end;
MPRINT(EM_DIAGRAM):   end;
61072     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
61073     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
61074     +   end;
MPRINT(EM_DIAGRAM):   end;
61075     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
61076     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
61077     +   end;
MPRINT(EM_DIAGRAM):   end;
61078     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61079     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
61080     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
61081     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
61082     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
61083     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61084     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61085     +   end;
MPRINT(EM_DIAGRAM):   end;
61086     +end;
MPRINT(EM_DIAGRAM):   end;
61087     +
61088     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
61089     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
61090     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
61091     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
61092     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
61093     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
61094     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
61095     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
61096     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
61097     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
61098     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
61099     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
61100     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
61101     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61102     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61103     +end;
MPRINT(EM_DIAGRAM):   end;
61104     +else do;
MPRINT(EM_DIAGRAM):   else do;
61105     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
61106     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
61107     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61108     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
61109     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
61110     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
61111     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
61112     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
61113     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61114     +         end;
MPRINT(EM_DIAGRAM):   end;
61115     +         else do;
MPRINT(EM_DIAGRAM):   else do;
61116     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
61117     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
61118     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61119     +            end;
MPRINT(EM_DIAGRAM):   end;
61120     +         end;
MPRINT(EM_DIAGRAM):   end;
61121     +      end;
MPRINT(EM_DIAGRAM):   end;
61122     +      else do;
MPRINT(EM_DIAGRAM):   else do;
61123     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
61124     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
61125     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61126     +         end;
MPRINT(EM_DIAGRAM):   end;
61127     +      end;
MPRINT(EM_DIAGRAM):   end;
61128     +   end;
MPRINT(EM_DIAGRAM):   end;
61129     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61130     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
61131     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
61132     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61133     +      end;
MPRINT(EM_DIAGRAM):   end;
61134     +      else do;
MPRINT(EM_DIAGRAM):   else do;
61135     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
61136     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
61137     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
61138     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
61139     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
61140     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61141     +         end;
MPRINT(EM_DIAGRAM):   end;
61142     +      end;
MPRINT(EM_DIAGRAM):   end;
61143     +   end;
MPRINT(EM_DIAGRAM):   end;
61144     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
61145     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
61146     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
61147     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
61148     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
61149     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61150     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61151     +   end;
MPRINT(EM_DIAGRAM):   end;
61152     +end;
MPRINT(EM_DIAGRAM):   end;
61153     +
61154     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61155     +*** Checking missing input Interval
61156     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
61157     +
61158     +IF NMISS(
61159     +   AcceptedCmpTotal ,
61160     +   Age ,
61161     +   Frq ,
61162     +   Income ,
61163     +   Kidhome ,
61164     +   MntFishProducts ,
61165     +   MntFruits ,
61166     +   MntGoldProds ,
61167     +   MntSweetProducts ,
61168     +   MonthsAsCustomer ,
61169     +   NumDealsPurchases ,
61170     +   NumWebVisitsMonth ,
61171     +   RFMstat ,
61172     +   RMntFrq ,
61173     +   Recency ,
61174     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
61175     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
61176     +
61177     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61178     +END;
MPRINT(EM_DIAGRAM):   END;
61179     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61180     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
61181     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61182     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61183     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
61184     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
61185     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
61186     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
61187     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
61188     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
61189     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
61190     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
61191     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
61192     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
61193     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
61194     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
61195     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
61196     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
61197     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
61198     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
61199     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
61200     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
61201     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
61202     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
61203     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
61204     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
61205     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
61206     +END;
MPRINT(EM_DIAGRAM):   END;
61207     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61208     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
61209     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
61210     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
61211     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
61212     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
61213     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
61214     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
61215     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
61216     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
61217     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
61218     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
61219     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
61220     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
61221     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
61222     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
61223     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
61224     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
61225     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
61226     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
61227     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
61228     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
61229     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
61230     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
61231     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
61232     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
61233     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
61234     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
61235     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
61236     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
61237     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
61238     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
61239     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
61240     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
61241     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
61242     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
61243     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
61244     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
61245     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
61246     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
61247     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
61248     +END;
MPRINT(EM_DIAGRAM):   END;
61249     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61250     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
61251     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61252     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61253     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
61254     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61255     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61256     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
61257     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61258     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61259     +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
61260     +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
61261     +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
61262     +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
61263     +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
61264     +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
61265     +          +    -0.01191239814261 * S_MonthsAsCustomer
61266     +          +      -0.307259983666 * S_NumDealsPurchases
61267     +          +    -0.23972300101674 * S_NumWebVisitsMonth
61268     +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
61269     +        S_RMntFrq  +     0.32671320165482 * S_Recency
61270     +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
61271     +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
61272     +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
61273     +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
61274     +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
61275     +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
61276     +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
61277     +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
61278     +        EducationGraduation  +    -0.14651231631393 * EducationMaster
61279     +          +     -0.0692762335753 * Marital_StatusDivorced
61280     +          +     0.02472293911071 * Marital_StatusMarried
61281     +          +     0.04038393550437 * Marital_StatusSingle
61282     +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
61283     +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
61284     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
61285     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
61286     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
61287     +END;
MPRINT(EM_DIAGRAM):   END;
61288     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61289     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
61290     +END;
MPRINT(EM_DIAGRAM):   END;
61291     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61292     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
61293     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61294     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61295     +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
61296     +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
61297     +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
61298     +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
61299     +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
61300     +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
61301     +          +     0.14524334187971 * S_MonthsAsCustomer
61302     +          +    -0.58464031025411 * S_NumDealsPurchases
61303     +          +    -0.10768856151333 * S_NumWebVisitsMonth
61304     +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
61305     +        S_RMntFrq  +    -0.04430281297191 * S_Recency
61306     +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
61307     +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
61308     +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
61309     +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
61310     +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
61311     +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
61312     +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
61313     +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
61314     +        EducationGraduation  +    -0.37768027773032 * EducationMaster
61315     +          +     0.07007941100006 * Marital_StatusDivorced
61316     +          +     -0.7850554528889 * Marital_StatusMarried
61317     +          +     1.17661634109847 * Marital_StatusSingle
61318     +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
61319     +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
61320     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
61321     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
61322     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
61323     +END;
MPRINT(EM_DIAGRAM):   END;
61324     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61325     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
61326     +END;
MPRINT(EM_DIAGRAM):   END;
61327     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61328     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
61329     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61330     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61331     +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
61332     +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
61333     +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
61334     +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
61335     +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
61336     +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
61337     +          +    -2.17154324602167 * S_MonthsAsCustomer
61338     +          +    -1.39930460918007 * S_NumDealsPurchases
61339     +          +    -0.16044576482901 * S_NumWebVisitsMonth
61340     +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
61341     +        S_RMntFrq  +    -0.73252715992964 * S_Recency
61342     +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
61343     +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
61344     +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
61345     +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
61346     +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
61347     +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
61348     +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
61349     +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
61350     +        EducationGraduation  +    -0.35403398893388 * EducationMaster
61351     +          +     0.83271778325587 * Marital_StatusDivorced
61352     +          +     0.79137899511518 * Marital_StatusMarried
61353     +          +    -0.51320080030576 * Marital_StatusSingle
61354     +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
61355     +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
61356     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
61357     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
61358     +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
61359     +END;
MPRINT(EM_DIAGRAM):   END;
61360     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61361     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
61362     +END;
MPRINT(EM_DIAGRAM):   END;
61363     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61364     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
61365     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61366     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61367     +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
61368     +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
61369     +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
61370     +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
61371     +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
61372     +END;
MPRINT(EM_DIAGRAM):   END;
61373     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61374     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
61375     +END;
MPRINT(EM_DIAGRAM):   END;
61376     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61377     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
61378     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61379     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61380     +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
61381     +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
61382     +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
61383     +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
61384     +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
61385     +END;
MPRINT(EM_DIAGRAM):   END;
61386     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61387     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
61388     +END;
MPRINT(EM_DIAGRAM):   END;
61389     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61390     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
61391     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61392     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61393     +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
61394     +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
61395     +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
61396     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
61397     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
61398     +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
61399     +END;
MPRINT(EM_DIAGRAM):   END;
61400     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61401     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
61402     +END;
MPRINT(EM_DIAGRAM):   END;
61403     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61404     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
61405     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61406     +
61407     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
61408     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
61409     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
61410     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
61411     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
61412     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61413     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
61414     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
61415     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
61416     +end;
MPRINT(EM_DIAGRAM):   end;
61417     +else do;
MPRINT(EM_DIAGRAM):   else do;
61418     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
61419     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
61420     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
61421     +   end;
MPRINT(EM_DIAGRAM):   end;
61422     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
61423     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
61424     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
61425     +   end;
MPRINT(EM_DIAGRAM):   end;
61426     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61427     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
61428     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
61429     +   end;
MPRINT(EM_DIAGRAM):   end;
61430     +end;
MPRINT(EM_DIAGRAM):   end;
61431     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61432     +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
61433     +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
61434     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
61435     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
61436     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
61437     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
61438     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
61439     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
61440     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
61441     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
61442     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
61443     +END;
MPRINT(EM_DIAGRAM):   END;
61444     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61445     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
61446     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
61447     +END;
MPRINT(EM_DIAGRAM):   END;
61448     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
61449     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
61450     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
61451     +END;
MPRINT(EM_DIAGRAM):   END;
61452     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
61453     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
61454     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
61455     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
61456     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
61457     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
61458     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
61459     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61460     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
61461     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61462     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
61463     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
61464     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
61465     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
61466     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
61467     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
61468     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
61469     +END;
MPRINT(EM_DIAGRAM):   END;
61470     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
61471     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
61472     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
61473     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
61474     +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
61475     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61476     +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
61477     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61478     +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
61479     +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
61480     +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
61481     +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
61482     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61483     +* Renaming Into variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural37;
61484     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61485     +length AutoNeural37_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural37_I_DepVar $32;
61486     +drop AutoNeural37_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_I_DepVar;
61487     +AutoNeural37_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural37_I_DepVar = I_DepVar;
61488     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61489     +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
61490     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61491     +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
61492     +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
61493     +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
61494     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61495     +* Ensmbl56: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Voting to produce predicted target;
61496     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61497     +array Ensmbl56_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl56_post{2} _temporary_;
61498     +array Ensmbl56_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl56_count{2} _temporary_;
61499     +array Ensmbl56_level{2} $32 _temporary_ (
61500     +"1"
61501     +"0"
61502     +);
MPRINT(EM_DIAGRAM):   array Ensmbl56_level{2} $32 _temporary_ ( "1" "0" );
61503     +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
61504     +Ensmbl56_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{i} = 0;
61505     +Ensmbl56_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{i} = 0;
61506     +end;
MPRINT(EM_DIAGRAM):   end;
61507     +if AutoNeural36_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural36_I_DepVar = Ensmbl56_level{1} then do;
61508     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
61509     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural36_P_DepVar1;
61510     +end;
MPRINT(EM_DIAGRAM):   end;
61511     +if AutoNeural35_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural35_I_DepVar = Ensmbl56_level{1} then do;
61512     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
61513     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural35_P_DepVar1;
61514     +end;
MPRINT(EM_DIAGRAM):   end;
61515     +if AutoNeural34_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural34_I_DepVar = Ensmbl56_level{1} then do;
61516     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
61517     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural34_P_DepVar1;
61518     +end;
MPRINT(EM_DIAGRAM):   end;
61519     +if AutoNeural40_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural40_I_DepVar = Ensmbl56_level{1} then do;
61520     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
61521     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural40_P_DepVar1;
61522     +end;
MPRINT(EM_DIAGRAM):   end;
61523     +if AutoNeural39_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural39_I_DepVar = Ensmbl56_level{1} then do;
61524     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
61525     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural39_P_DepVar1;
61526     +end;
MPRINT(EM_DIAGRAM):   end;
61527     +if AutoNeural38_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural38_I_DepVar = Ensmbl56_level{1} then do;
61528     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
61529     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural38_P_DepVar1;
61530     +end;
MPRINT(EM_DIAGRAM):   end;
61531     +if AutoNeural37_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural37_I_DepVar = Ensmbl56_level{1} then do;
61532     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
61533     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural37_P_DepVar1;
61534     +end;
MPRINT(EM_DIAGRAM):   end;
61535     +if AutoNeural36_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural36_I_DepVar = Ensmbl56_level{2} then do;
61536     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
61537     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural36_P_DepVar0;
61538     +end;
MPRINT(EM_DIAGRAM):   end;
61539     +if AutoNeural35_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural35_I_DepVar = Ensmbl56_level{2} then do;
61540     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
61541     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural35_P_DepVar0;
61542     +end;
MPRINT(EM_DIAGRAM):   end;
61543     +if AutoNeural34_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural34_I_DepVar = Ensmbl56_level{2} then do;
61544     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
61545     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural34_P_DepVar0;
61546     +end;
MPRINT(EM_DIAGRAM):   end;
61547     +if AutoNeural40_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural40_I_DepVar = Ensmbl56_level{2} then do;
61548     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
61549     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural40_P_DepVar0;
61550     +end;
MPRINT(EM_DIAGRAM):   end;
61551     +if AutoNeural39_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural39_I_DepVar = Ensmbl56_level{2} then do;
61552     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
61553     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural39_P_DepVar0;
61554     +end;
MPRINT(EM_DIAGRAM):   end;
61555     +if AutoNeural38_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural38_I_DepVar = Ensmbl56_level{2} then do;
61556     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
61557     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural38_P_DepVar0;
61558     +end;
MPRINT(EM_DIAGRAM):   end;
61559     +if AutoNeural37_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural37_I_DepVar = Ensmbl56_level{2} then do;
61560     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
61561     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural37_P_DepVar0;
61562     +end;
MPRINT(EM_DIAGRAM):   end;
61563     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61564     +* Ensmbl56: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Determine Into Variable;
61565     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61566     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
61567     +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
61568     +vote_count = max(
61569     +Ensmbl56_count{1} ,
61570     +Ensmbl56_count{2}
61571     +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl56_count{1} , Ensmbl56_count{2} );
61572     +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
61573     +if Ensmbl56_count{i}=vote_count and Ensmbl56_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl56_count{i}=vote_count and Ensmbl56_post{i}>vote_post then do;
61574     +I_DepVar = Ensmbl56_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl56_level{i};
61575     +vote_post = Ensmbl56_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl56_count{i};
61576     +end;
MPRINT(EM_DIAGRAM):   end;
61577     +end;
MPRINT(EM_DIAGRAM):   end;
61578     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61579     +* Ensmbl56: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Compute posterior vars using models predicting the chosen 
level;
61580     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61581     +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
61582     +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
61583     +if I_DepVar = AutoNeural36_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural36_I_DepVar then do;
61584     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural36_P_DepVar1;
61585     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural36_P_DepVar0;
61586     +end;
MPRINT(EM_DIAGRAM):   end;
61587     +if I_DepVar = AutoNeural35_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural35_I_DepVar then do;
61588     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural35_P_DepVar1;
61589     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural35_P_DepVar0;
61590     +end;
MPRINT(EM_DIAGRAM):   end;
61591     +if I_DepVar = AutoNeural34_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural34_I_DepVar then do;
61592     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural34_P_DepVar1;
61593     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural34_P_DepVar0;
61594     +end;
MPRINT(EM_DIAGRAM):   end;
61595     +if I_DepVar = AutoNeural40_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural40_I_DepVar then do;
61596     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural40_P_DepVar1;
61597     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural40_P_DepVar0;
61598     +end;
MPRINT(EM_DIAGRAM):   end;
61599     +if I_DepVar = AutoNeural39_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural39_I_DepVar then do;
61600     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural39_P_DepVar1;
61601     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural39_P_DepVar0;
61602     +end;
MPRINT(EM_DIAGRAM):   end;
61603     +if I_DepVar = AutoNeural38_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural38_I_DepVar then do;
61604     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural38_P_DepVar1;
61605     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural38_P_DepVar0;
61606     +end;
MPRINT(EM_DIAGRAM):   end;
61607     +if I_DepVar = AutoNeural37_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural37_I_DepVar then do;
61608     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural37_P_DepVar1;
61609     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural37_P_DepVar0;
61610     +end;
MPRINT(EM_DIAGRAM):   end;
61611     +* Ensmbl56: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Averaging posterior;
61612     +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
61613     +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
61614     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61615     +* Ensmbl56: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Producing Unformatted variable;
61616     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61617     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
61618     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
61619     +else
61620     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
61621     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61622     +* Ensmbl56: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing _WARN_ Variable;
61623     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61624     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
61625     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
61626     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
61627     +if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
61627    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
61628     +if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
61628    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
61629     +if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
61629    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
61630     +if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
61630    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
61631     +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
61631    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
61632     +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
61632    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
61633     +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
61633    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
61634     +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
61634    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
61635     +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
61635    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
61636     +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
61636    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
61637     +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
61637    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
61638     +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
61638    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
61639     +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
61639    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
61640     +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
61640    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
61641     +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
61641    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
61642     +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
61642    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
61643     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
61643    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
61644     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
61644    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
61645     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
61645    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
61646     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
61646    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
61647     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
61647    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
61648     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
61648    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
61649     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
61649    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
61650     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
61650    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
61651     +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
61651    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
61652     +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
61652    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
61653     +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
61653    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
61654     +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
61654    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
61655     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61656     +* Ensmbl56: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing Residual Vars;
61657     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61658     +if
61659     +F_DepVar NE '1'
61660     +AND F_DepVar NE '0'
61661     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
61662     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
61663     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
61664     +end;
MPRINT(EM_DIAGRAM):   end;
61665     +else do;
MPRINT(EM_DIAGRAM):   else do;
61666     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
61667     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
61668     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
61669     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
61670     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
61671     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
61672     +END;
MPRINT(EM_DIAGRAM):   END;
61673     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
61674      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL56_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
61675      quit;
61676      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
61677      filename emflow
61677    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring AUTONEURAL36_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61678      *------------------------------------------------------------*;
61679      * Ensmbl56: Scoring AUTONEURAL36_VALIDATE data;
61680      *------------------------------------------------------------*;
61681      data EMWS8.Ensmbl56_VALIDATE
61682      / view=EMWS8.Ensmbl56_VALIDATE
61683      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_VALIDATE / view=EMWS8.Ensmbl56_VALIDATE ;
61684      set EMWS8.AutoNeural36_VALIDATE
61685      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural36_VALIDATE ;
61686      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\EMFLOWSCORE.sas.
61687     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61688     +* Ensmbl56: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Combine model for DepVar;
61689     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61690     +* Ensmbl56: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 1 of 7;
61691     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61692     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61693     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
61694     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
61695     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
61696     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61697     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61698     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
61699     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
61700     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
61701     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61702     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61703     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
61704     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
61705     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
61706     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61707     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61708     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
61709     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
61710     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
61711     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61712     +
61713     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
61714     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
61714    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
61715     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
61716     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
61717     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
61718     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
61719     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
61720     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61721     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
61722     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
61723     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
61724     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61725     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61726     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
61727     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61728     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
61729     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
61730     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
61731     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61732     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
61733     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
61734     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
61735     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61736     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61737     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
61738     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
61739     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
61740     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61741     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61742     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
61743     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
61744     +* NODE: AutoNeural36;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural36;
61745     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61746     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
61747     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
61748     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
61749     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
61750     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
61751     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
61752     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
61753     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
61754     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
61755     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
61756     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
61757     +LENGTH _WARN_ $4
61758     +      F_DepVar  $ 12
61759     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
61760     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
61761     +
61762     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
61763     +
61764     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
61765     +
61766     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
61767     +
61768     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
61769     +
61770     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
61771     +
61772     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
61773     +
61774     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
61775     +
61776     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
61777     +
61778     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
61779     +
61780     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
61781     +
61782     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
61783     +
61784     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
61785     +
61786     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
61787     +
61788     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
61789     +
61790     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
61791     +
61792     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
61793     +
61794     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
61795     +
61796     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
61797     +
61798     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
61799     +
61800     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
61801     +
61802     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
61803     +
61804     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
61805     +
61806     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
61807     +
61808     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
61809     +
61810     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
61811     +
61812     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
61813     +
61814     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
61815     +
61816     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
61817     +
61818     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
61819     +
61820     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
61821     +
61822     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
61823     +
61824     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
61825     +
61826     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
61827     +
61828     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
61829     +
61830     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
61831     +
61832     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
61833     +
61834     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
61835     +
61836     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
61837     +
61838     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
61839     +
61840     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
61841     +
61842     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
61843     +
61844     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
61845     +
61846     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
61847     +
61848     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
61849     +
61850     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
61851     +
61852     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
61853     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
61854     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
61855     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
61856     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61857     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61858     +end;
MPRINT(EM_DIAGRAM):   end;
61859     +else do;
MPRINT(EM_DIAGRAM):   else do;
61860     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61861     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
61862     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61863     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61864     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
61865     +   end;
MPRINT(EM_DIAGRAM):   end;
61866     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61867     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
61868     +   end;
MPRINT(EM_DIAGRAM):   end;
61869     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61870     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
61871     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61872     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61873     +   end;
MPRINT(EM_DIAGRAM):   end;
61874     +end;
MPRINT(EM_DIAGRAM):   end;
61875     +
61876     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
61877     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
61878     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
61879     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
61880     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61881     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61882     +end;
MPRINT(EM_DIAGRAM):   end;
61883     +else do;
MPRINT(EM_DIAGRAM):   else do;
61884     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61885     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
61886     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61887     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61888     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
61889     +   end;
MPRINT(EM_DIAGRAM):   end;
61890     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61891     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
61892     +   end;
MPRINT(EM_DIAGRAM):   end;
61893     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61894     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
61895     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61896     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61897     +   end;
MPRINT(EM_DIAGRAM):   end;
61898     +end;
MPRINT(EM_DIAGRAM):   end;
61899     +
61900     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
61901     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
61902     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
61903     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
61904     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61905     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61906     +end;
MPRINT(EM_DIAGRAM):   end;
61907     +else do;
MPRINT(EM_DIAGRAM):   else do;
61908     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61909     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
61910     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61911     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61912     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
61913     +   end;
MPRINT(EM_DIAGRAM):   end;
61914     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61915     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
61916     +   end;
MPRINT(EM_DIAGRAM):   end;
61917     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61918     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
61919     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61920     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61921     +   end;
MPRINT(EM_DIAGRAM):   end;
61922     +end;
MPRINT(EM_DIAGRAM):   end;
61923     +
61924     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
61925     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
61926     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
61927     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
61928     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61929     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61930     +end;
MPRINT(EM_DIAGRAM):   end;
61931     +else do;
MPRINT(EM_DIAGRAM):   else do;
61932     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61933     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
61934     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61935     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61936     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
61937     +   end;
MPRINT(EM_DIAGRAM):   end;
61938     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61939     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
61940     +   end;
MPRINT(EM_DIAGRAM):   end;
61941     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61942     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
61943     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61944     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61945     +   end;
MPRINT(EM_DIAGRAM):   end;
61946     +end;
MPRINT(EM_DIAGRAM):   end;
61947     +
61948     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
61949     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
61950     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
61951     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
61952     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61953     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61954     +end;
MPRINT(EM_DIAGRAM):   end;
61955     +else do;
MPRINT(EM_DIAGRAM):   else do;
61956     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61957     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
61958     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61959     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61960     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
61961     +   end;
MPRINT(EM_DIAGRAM):   end;
61962     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61963     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
61964     +   end;
MPRINT(EM_DIAGRAM):   end;
61965     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61966     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
61967     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61968     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61969     +   end;
MPRINT(EM_DIAGRAM):   end;
61970     +end;
MPRINT(EM_DIAGRAM):   end;
61971     +
61972     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
61973     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
61974     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
61975     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
61976     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61977     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61978     +end;
MPRINT(EM_DIAGRAM):   end;
61979     +else do;
MPRINT(EM_DIAGRAM):   else do;
61980     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61981     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
61982     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61983     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61984     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
61985     +   end;
MPRINT(EM_DIAGRAM):   end;
61986     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61987     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
61988     +   end;
MPRINT(EM_DIAGRAM):   end;
61989     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61990     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
61991     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61992     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61993     +   end;
MPRINT(EM_DIAGRAM):   end;
61994     +end;
MPRINT(EM_DIAGRAM):   end;
61995     +
61996     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
61997     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
61998     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
61999     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
62000     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62001     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62002     +end;
MPRINT(EM_DIAGRAM):   end;
62003     +else do;
MPRINT(EM_DIAGRAM):   else do;
62004     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62005     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
62006     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62007     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
62008     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
62009     +   end;
MPRINT(EM_DIAGRAM):   end;
62010     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
62011     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
62012     +   end;
MPRINT(EM_DIAGRAM):   end;
62013     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62014     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
62015     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62016     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62017     +   end;
MPRINT(EM_DIAGRAM):   end;
62018     +end;
MPRINT(EM_DIAGRAM):   end;
62019     +
62020     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
62021     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
62022     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
62023     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
62024     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
62025     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
62026     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
62027     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
62028     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
62029     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
62030     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
62031     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
62032     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62033     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62034     +end;
MPRINT(EM_DIAGRAM):   end;
62035     +else do;
MPRINT(EM_DIAGRAM):   else do;
62036     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
62037     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
62038     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62039     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
62040     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
62041     +   end;
MPRINT(EM_DIAGRAM):   end;
62042     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
62043     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
62044     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
62045     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
62046     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
62047     +   end;
MPRINT(EM_DIAGRAM):   end;
62048     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
62049     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
62050     +   end;
MPRINT(EM_DIAGRAM):   end;
62051     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
62052     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
62053     +   end;
MPRINT(EM_DIAGRAM):   end;
62054     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
62055     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
62056     +   end;
MPRINT(EM_DIAGRAM):   end;
62057     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62058     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
62059     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
62060     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
62061     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
62062     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62063     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62064     +   end;
MPRINT(EM_DIAGRAM):   end;
62065     +end;
MPRINT(EM_DIAGRAM):   end;
62066     +
62067     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
62068     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
62069     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
62070     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
62071     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
62072     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
62073     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
62074     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
62075     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
62076     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
62077     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
62078     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
62079     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
62080     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62081     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62082     +end;
MPRINT(EM_DIAGRAM):   end;
62083     +else do;
MPRINT(EM_DIAGRAM):   else do;
62084     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
62085     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
62086     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62087     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
62088     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
62089     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
62090     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
62091     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
62092     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62093     +         end;
MPRINT(EM_DIAGRAM):   end;
62094     +         else do;
MPRINT(EM_DIAGRAM):   else do;
62095     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
62096     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
62097     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62098     +            end;
MPRINT(EM_DIAGRAM):   end;
62099     +         end;
MPRINT(EM_DIAGRAM):   end;
62100     +      end;
MPRINT(EM_DIAGRAM):   end;
62101     +      else do;
MPRINT(EM_DIAGRAM):   else do;
62102     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
62103     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
62104     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62105     +         end;
MPRINT(EM_DIAGRAM):   end;
62106     +      end;
MPRINT(EM_DIAGRAM):   end;
62107     +   end;
MPRINT(EM_DIAGRAM):   end;
62108     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62109     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
62110     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
62111     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62112     +      end;
MPRINT(EM_DIAGRAM):   end;
62113     +      else do;
MPRINT(EM_DIAGRAM):   else do;
62114     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
62115     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
62116     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
62117     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
62118     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
62119     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62120     +         end;
MPRINT(EM_DIAGRAM):   end;
62121     +      end;
MPRINT(EM_DIAGRAM):   end;
62122     +   end;
MPRINT(EM_DIAGRAM):   end;
62123     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
62124     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
62125     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
62126     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
62127     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
62128     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62129     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62130     +   end;
MPRINT(EM_DIAGRAM):   end;
62131     +end;
MPRINT(EM_DIAGRAM):   end;
62132     +
62133     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62134     +*** Checking missing input Interval
62135     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
62136     +
62137     +IF NMISS(
62138     +   AcceptedCmpTotal ,
62139     +   Age ,
62140     +   Frq ,
62141     +   Income ,
62142     +   Kidhome ,
62143     +   MntFishProducts ,
62144     +   MntFruits ,
62145     +   MntGoldProds ,
62146     +   MntSweetProducts ,
62147     +   MonthsAsCustomer ,
62148     +   NumDealsPurchases ,
62149     +   NumWebVisitsMonth ,
62150     +   RFMstat ,
62151     +   RMntFrq ,
62152     +   Recency ,
62153     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
62154     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
62155     +
62156     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62157     +END;
MPRINT(EM_DIAGRAM):   END;
62158     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62159     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
62160     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62161     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62162     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
62163     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
62164     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
62165     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
62166     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
62167     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
62168     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
62169     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
62170     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
62171     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
62172     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
62173     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
62174     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
62175     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
62176     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
62177     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
62178     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
62179     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
62180     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
62181     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
62182     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
62183     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
62184     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
62185     +END;
MPRINT(EM_DIAGRAM):   END;
62186     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62187     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
62188     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
62189     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
62190     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
62191     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
62192     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
62193     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
62194     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
62195     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
62196     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
62197     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
62198     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
62199     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
62200     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
62201     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
62202     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
62203     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
62204     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
62205     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
62206     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
62207     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
62208     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
62209     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
62210     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
62211     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
62212     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
62213     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
62214     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
62215     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
62216     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
62217     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
62218     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
62219     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
62220     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
62221     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
62222     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
62223     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
62224     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
62225     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
62226     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
62227     +END;
MPRINT(EM_DIAGRAM):   END;
62228     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62229     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
62230     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62231     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62232     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
62233     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62234     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62235     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
62236     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62237     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62238     +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
62239     +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
62240     +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
62241     +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
62242     +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
62243     +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
62244     +          +     1.47210732135355 * S_MonthsAsCustomer
62245     +          +     0.85741098948561 * S_NumDealsPurchases
62246     +          +     0.47124997442086 * S_NumWebVisitsMonth
62247     +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
62248     +        S_RMntFrq  +     0.42017826752434 * S_Recency
62249     +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
62250     +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
62251     +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
62252     +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
62253     +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
62254     +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
62255     +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
62256     +          +     0.74811152666015 * S_MonthsAsCustomer
62257     +          +    -0.13168708818154 * S_NumDealsPurchases
62258     +          +    -0.51935779196522 * S_NumWebVisitsMonth
62259     +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
62260     +        S_RMntFrq  +     1.96758846931972 * S_Recency
62261     +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
62262     +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
62263     +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
62264     +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
62265     +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
62266     +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
62267     +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
62268     +          +     0.11776941975292 * S_MonthsAsCustomer
62269     +          +    -0.69977862189457 * S_NumDealsPurchases
62270     +          +    -0.26676589341422 * S_NumWebVisitsMonth
62271     +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
62272     +        S_RMntFrq  +     1.53487074713045 * S_Recency
62273     +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
62274     +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
62275     +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
62276     +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
62277     +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
62278     +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
62279     +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
62280     +          +     0.46606320110885 * S_MonthsAsCustomer
62281     +          +     1.64885970718717 * S_NumDealsPurchases
62282     +          +     1.70233049691156 * S_NumWebVisitsMonth
62283     +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
62284     +        S_RMntFrq  +    -1.33025042025966 * S_Recency
62285     +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
62286     +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
62287     +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
62288     +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
62289     +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
62290     +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
62291     +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
62292     +          +     0.25703511103123 * S_MonthsAsCustomer
62293     +          +     0.81449309285524 * S_NumDealsPurchases
62294     +          +     0.65863550896078 * S_NumWebVisitsMonth
62295     +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
62296     +        S_RMntFrq  +     0.35298837231553 * S_Recency
62297     +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
62298     +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
62299     +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
62300     +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
62301     +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
62302     +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
62303     +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
62304     +          +     0.79681190434731 * S_MonthsAsCustomer
62305     +          +    -0.93973916927987 * S_NumDealsPurchases
62306     +          +     1.37415777280471 * S_NumWebVisitsMonth
62307     +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
62308     +        S_RMntFrq  +     0.25579910148098 * S_Recency
62309     +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
62310     +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
62311     +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
62312     +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
62313     +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
62314     +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
62315     +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
62316     +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
62317     +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
62318     +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
62319     +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
62320     +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
62321     +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
62322     +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
62323     +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
62324     +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
62325     +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
62326     +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
62327     +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
62328     +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
62329     +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
62330     +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
62331     +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
62332     +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
62333     +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
62334     +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
62335     +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
62336     +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
62337     +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
62338     +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
62339     +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
62340     +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
62341     +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
62342     +        EducationGraduation  +     0.53978142914157 * EducationMaster
62343     +          +    -0.28915302940579 * Marital_StatusDivorced
62344     +          +     0.36400858753372 * Marital_StatusMarried
62345     +          +     0.64088916620982 * Marital_StatusSingle
62346     +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
62347     +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
62348     +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
62349     +        EducationGraduation  +     0.31774696403611 * EducationMaster
62350     +          +    -0.48311224079569 * Marital_StatusDivorced
62351     +          +     0.78522892664414 * Marital_StatusMarried
62352     +          +    -0.52144588286939 * Marital_StatusSingle
62353     +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
62354     +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
62355     +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
62356     +        EducationGraduation  +     1.62119993408702 * EducationMaster
62357     +          +    -1.10138941531054 * Marital_StatusDivorced
62358     +          +     1.91098461544032 * Marital_StatusMarried
62359     +          +    -1.96662881570281 * Marital_StatusSingle
62360     +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
62361     +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
62362     +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
62363     +        EducationGraduation  +    -0.47265183904634 * EducationMaster
62364     +          +    -0.26938567401241 * Marital_StatusDivorced
62365     +          +      0.5252138734125 * Marital_StatusMarried
62366     +          +    -0.77744801183604 * Marital_StatusSingle
62367     +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
62368     +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
62369     +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
62370     +        EducationGraduation  +     1.34706628408556 * EducationMaster
62371     +          +    -0.49116995167497 * Marital_StatusDivorced
62372     +          +     1.22243596432371 * Marital_StatusMarried
62373     +          +    -1.22268267917833 * Marital_StatusSingle
62374     +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
62375     +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
62376     +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
62377     +        EducationGraduation  +     0.19530936178176 * EducationMaster
62378     +          +    -0.21134253419933 * Marital_StatusDivorced
62379     +          +     0.87168965818013 * Marital_StatusMarried
62380     +          +     0.07539748751767 * Marital_StatusSingle
62381     +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
62382     +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
62383     +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
62384     +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
62385     +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
62386     +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
62387     +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
62388     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
62389     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
62390     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
62391     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
62392     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
62393     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
62394     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
62395     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
62396     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
62397     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
62398     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
62399     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
62400     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
62401     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
62402     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
62403     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
62404     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
62405     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
62406     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
62407     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
62408     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
62409     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
62410     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
62411     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
62412     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
62413     +END;
MPRINT(EM_DIAGRAM):   END;
62414     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62415     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
62416     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
62417     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
62418     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
62419     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
62420     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
62421     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
62422     +END;
MPRINT(EM_DIAGRAM):   END;
62423     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62424     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
62425     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62426     +
62427     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
62428     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
62429     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
62430     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
62431     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
62432     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62433     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
62434     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
62435     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
62436     +end;
MPRINT(EM_DIAGRAM):   end;
62437     +else do;
MPRINT(EM_DIAGRAM):   else do;
62438     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
62439     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
62440     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
62441     +   end;
MPRINT(EM_DIAGRAM):   end;
62442     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
62443     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
62444     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
62445     +   end;
MPRINT(EM_DIAGRAM):   end;
62446     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62447     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
62448     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
62449     +   end;
MPRINT(EM_DIAGRAM):   end;
62450     +end;
MPRINT(EM_DIAGRAM):   end;
62451     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62452     +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
62453     +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
62454     +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
62455     +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
62456     +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
62457     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
62458     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
62459     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
62460     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
62461     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
62462     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
62463     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
62464     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
62465     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
62466     +END;
MPRINT(EM_DIAGRAM):   END;
62467     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62468     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
62469     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
62470     +END;
MPRINT(EM_DIAGRAM):   END;
62471     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
62472     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
62473     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
62474     +END;
MPRINT(EM_DIAGRAM):   END;
62475     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
62476     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
62477     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
62478     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
62479     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
62480     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
62481     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
62482     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62483     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
62484     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62485     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
62486     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
62487     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
62488     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
62489     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
62490     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
62491     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
62492     +END;
MPRINT(EM_DIAGRAM):   END;
62493     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
62494     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
62495     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
62496     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
62497     +* Renaming variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural36;
62498     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62499     +* Renaming Posterior variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural36;
62500     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62501     +drop AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar1;
62502     +AutoNeural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar1 = P_DepVar1;
62503     +drop AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar0;
62504     +AutoNeural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar0 = P_DepVar0;
62505     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62506     +* Renaming Into variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural36;
62507     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62508     +length AutoNeural36_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural36_I_DepVar $32;
62509     +drop AutoNeural36_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_I_DepVar;
62510     +AutoNeural36_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural36_I_DepVar = I_DepVar;
62511     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62512     +* Renaming _WARN_ variable for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural36;
62513     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62514     +length AutoNeural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural36_WARN_ $4;
62515     +drop AutoNeural36_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_WARN_;
62516     +AutoNeural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural36_WARN_ = _WARN_;
62517     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62518     +* Ensmbl56: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 2 of 7;
62519     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62520     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62521     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
62522     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
62523     +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
62524     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62525     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
62526     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
62527     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
62528     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
62529     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
62530     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
62531     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
62532     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
62533     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
62534     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
62535     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
62536     +LENGTH _WARN_ $4
62537     +      F_DepVar  $ 12
62538     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
62539     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
62540     +
62541     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
62542     +
62543     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
62544     +
62545     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
62546     +
62547     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
62548     +
62549     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
62550     +
62551     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
62552     +
62553     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
62554     +
62555     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
62556     +
62557     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
62558     +
62559     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
62560     +
62561     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
62562     +
62563     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
62564     +
62565     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
62566     +
62567     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
62568     +
62569     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
62570     +
62571     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
62572     +
62573     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
62574     +
62575     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
62576     +
62577     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
62578     +
62579     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
62580     +
62581     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
62582     +
62583     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
62584     +
62585     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
62586     +
62587     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
62588     +
62589     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
62590     +
62591     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
62592     +
62593     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
62594     +
62595     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
62596     +
62597     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
62598     +
62599     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
62600     +
62601     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
62602     +
62603     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
62604     +
62605     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
62606     +
62607     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
62608     +
62609     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
62610     +
62611     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
62612     +
62613     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
62614     +
62615     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
62616     +
62617     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
62618     +
62619     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
62620     +
62621     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
62622     +
62623     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
62624     +
62625     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
62626     +
62627     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
62628     +
62629     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
62630     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
62631     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
62632     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
62633     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62634     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62635     +end;
MPRINT(EM_DIAGRAM):   end;
62636     +else do;
MPRINT(EM_DIAGRAM):   else do;
62637     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62638     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
62639     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62640     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62641     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
62642     +   end;
MPRINT(EM_DIAGRAM):   end;
62643     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62644     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
62645     +   end;
MPRINT(EM_DIAGRAM):   end;
62646     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62647     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
62648     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62649     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62650     +   end;
MPRINT(EM_DIAGRAM):   end;
62651     +end;
MPRINT(EM_DIAGRAM):   end;
62652     +
62653     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
62654     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
62655     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
62656     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
62657     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62658     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62659     +end;
MPRINT(EM_DIAGRAM):   end;
62660     +else do;
MPRINT(EM_DIAGRAM):   else do;
62661     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62662     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
62663     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62664     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62665     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
62666     +   end;
MPRINT(EM_DIAGRAM):   end;
62667     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62668     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
62669     +   end;
MPRINT(EM_DIAGRAM):   end;
62670     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62671     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
62672     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62673     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62674     +   end;
MPRINT(EM_DIAGRAM):   end;
62675     +end;
MPRINT(EM_DIAGRAM):   end;
62676     +
62677     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
62678     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
62679     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
62680     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
62681     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62682     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62683     +end;
MPRINT(EM_DIAGRAM):   end;
62684     +else do;
MPRINT(EM_DIAGRAM):   else do;
62685     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62686     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
62687     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62688     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62689     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
62690     +   end;
MPRINT(EM_DIAGRAM):   end;
62691     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62692     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
62693     +   end;
MPRINT(EM_DIAGRAM):   end;
62694     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62695     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
62696     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62697     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62698     +   end;
MPRINT(EM_DIAGRAM):   end;
62699     +end;
MPRINT(EM_DIAGRAM):   end;
62700     +
62701     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
62702     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
62703     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
62704     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
62705     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62706     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62707     +end;
MPRINT(EM_DIAGRAM):   end;
62708     +else do;
MPRINT(EM_DIAGRAM):   else do;
62709     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62710     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
62711     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62712     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62713     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
62714     +   end;
MPRINT(EM_DIAGRAM):   end;
62715     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62716     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
62717     +   end;
MPRINT(EM_DIAGRAM):   end;
62718     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62719     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
62720     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62721     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62722     +   end;
MPRINT(EM_DIAGRAM):   end;
62723     +end;
MPRINT(EM_DIAGRAM):   end;
62724     +
62725     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
62726     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
62727     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
62728     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
62729     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62730     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62731     +end;
MPRINT(EM_DIAGRAM):   end;
62732     +else do;
MPRINT(EM_DIAGRAM):   else do;
62733     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62734     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
62735     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62736     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62737     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
62738     +   end;
MPRINT(EM_DIAGRAM):   end;
62739     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62740     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
62741     +   end;
MPRINT(EM_DIAGRAM):   end;
62742     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62743     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
62744     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62745     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62746     +   end;
MPRINT(EM_DIAGRAM):   end;
62747     +end;
MPRINT(EM_DIAGRAM):   end;
62748     +
62749     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
62750     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
62751     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
62752     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
62753     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62754     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62755     +end;
MPRINT(EM_DIAGRAM):   end;
62756     +else do;
MPRINT(EM_DIAGRAM):   else do;
62757     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62758     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
62759     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62760     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62761     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
62762     +   end;
MPRINT(EM_DIAGRAM):   end;
62763     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62764     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
62765     +   end;
MPRINT(EM_DIAGRAM):   end;
62766     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62767     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
62768     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62769     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62770     +   end;
MPRINT(EM_DIAGRAM):   end;
62771     +end;
MPRINT(EM_DIAGRAM):   end;
62772     +
62773     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
62774     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
62775     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
62776     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
62777     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62778     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62779     +end;
MPRINT(EM_DIAGRAM):   end;
62780     +else do;
MPRINT(EM_DIAGRAM):   else do;
62781     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62782     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
62783     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62784     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
62785     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
62786     +   end;
MPRINT(EM_DIAGRAM):   end;
62787     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
62788     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
62789     +   end;
MPRINT(EM_DIAGRAM):   end;
62790     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62791     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
62792     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62793     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62794     +   end;
MPRINT(EM_DIAGRAM):   end;
62795     +end;
MPRINT(EM_DIAGRAM):   end;
62796     +
62797     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
62798     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
62799     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
62800     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
62801     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
62802     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
62803     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
62804     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
62805     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
62806     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
62807     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
62808     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
62809     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62810     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62811     +end;
MPRINT(EM_DIAGRAM):   end;
62812     +else do;
MPRINT(EM_DIAGRAM):   else do;
62813     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
62814     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
62815     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62816     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
62817     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
62818     +   end;
MPRINT(EM_DIAGRAM):   end;
62819     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
62820     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
62821     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
62822     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
62823     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
62824     +   end;
MPRINT(EM_DIAGRAM):   end;
62825     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
62826     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
62827     +   end;
MPRINT(EM_DIAGRAM):   end;
62828     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
62829     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
62830     +   end;
MPRINT(EM_DIAGRAM):   end;
62831     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
62832     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
62833     +   end;
MPRINT(EM_DIAGRAM):   end;
62834     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62835     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
62836     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
62837     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
62838     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
62839     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62840     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62841     +   end;
MPRINT(EM_DIAGRAM):   end;
62842     +end;
MPRINT(EM_DIAGRAM):   end;
62843     +
62844     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
62845     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
62846     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
62847     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
62848     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
62849     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
62850     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
62851     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
62852     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
62853     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
62854     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
62855     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
62856     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
62857     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62858     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62859     +end;
MPRINT(EM_DIAGRAM):   end;
62860     +else do;
MPRINT(EM_DIAGRAM):   else do;
62861     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
62862     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
62863     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62864     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
62865     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
62866     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
62867     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
62868     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
62869     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62870     +         end;
MPRINT(EM_DIAGRAM):   end;
62871     +         else do;
MPRINT(EM_DIAGRAM):   else do;
62872     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
62873     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
62874     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62875     +            end;
MPRINT(EM_DIAGRAM):   end;
62876     +         end;
MPRINT(EM_DIAGRAM):   end;
62877     +      end;
MPRINT(EM_DIAGRAM):   end;
62878     +      else do;
MPRINT(EM_DIAGRAM):   else do;
62879     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
62880     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
62881     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62882     +         end;
MPRINT(EM_DIAGRAM):   end;
62883     +      end;
MPRINT(EM_DIAGRAM):   end;
62884     +   end;
MPRINT(EM_DIAGRAM):   end;
62885     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62886     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
62887     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
62888     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62889     +      end;
MPRINT(EM_DIAGRAM):   end;
62890     +      else do;
MPRINT(EM_DIAGRAM):   else do;
62891     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
62892     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
62893     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
62894     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
62895     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
62896     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62897     +         end;
MPRINT(EM_DIAGRAM):   end;
62898     +      end;
MPRINT(EM_DIAGRAM):   end;
62899     +   end;
MPRINT(EM_DIAGRAM):   end;
62900     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
62901     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
62902     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
62903     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
62904     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
62905     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62906     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62907     +   end;
MPRINT(EM_DIAGRAM):   end;
62908     +end;
MPRINT(EM_DIAGRAM):   end;
62909     +
62910     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62911     +*** Checking missing input Interval
62912     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
62913     +
62914     +IF NMISS(
62915     +   AcceptedCmpTotal ,
62916     +   Age ,
62917     +   Frq ,
62918     +   Income ,
62919     +   Kidhome ,
62920     +   MntFishProducts ,
62921     +   MntFruits ,
62922     +   MntGoldProds ,
62923     +   MntSweetProducts ,
62924     +   MonthsAsCustomer ,
62925     +   NumDealsPurchases ,
62926     +   NumWebVisitsMonth ,
62927     +   RFMstat ,
62928     +   RMntFrq ,
62929     +   Recency ,
62930     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
62931     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
62932     +
62933     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62934     +END;
MPRINT(EM_DIAGRAM):   END;
62935     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62936     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
62937     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62938     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62939     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
62940     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
62941     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
62942     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
62943     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
62944     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
62945     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
62946     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
62947     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
62948     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
62949     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
62950     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
62951     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
62952     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
62953     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
62954     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
62955     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
62956     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
62957     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
62958     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
62959     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
62960     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
62961     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
62962     +END;
MPRINT(EM_DIAGRAM):   END;
62963     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62964     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
62965     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
62966     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
62967     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
62968     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
62969     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
62970     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
62971     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
62972     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
62973     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
62974     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
62975     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
62976     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
62977     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
62978     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
62979     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
62980     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
62981     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
62982     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
62983     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
62984     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
62985     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
62986     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
62987     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
62988     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
62989     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
62990     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
62991     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
62992     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
62993     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
62994     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
62995     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
62996     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
62997     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
62998     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
62999     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
63000     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
63001     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
63002     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
63003     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
63004     +END;
MPRINT(EM_DIAGRAM):   END;
63005     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63006     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
63007     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63008     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63009     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
63010     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63011     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63012     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
63013     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63014     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
63015     +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
63016     +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
63017     +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
63018     +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
63019     +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
63020     +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
63021     +          +    -0.63886071804247 * S_MonthsAsCustomer
63022     +          +      2.3488612891037 * S_NumDealsPurchases
63023     +          +     2.32996461229282 * S_NumWebVisitsMonth
63024     +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
63025     +        S_RMntFrq  +    -3.18599476886695 * S_Recency
63026     +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
63027     +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
63028     +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
63029     +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
63030     +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
63031     +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
63032     +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
63033     +          +     0.67699646331113 * S_MonthsAsCustomer
63034     +          +     0.70523055739254 * S_NumDealsPurchases
63035     +          +    -2.06406682205141 * S_NumWebVisitsMonth
63036     +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
63037     +        S_RMntFrq  +      5.0273672656487 * S_Recency
63038     +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
63039     +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
63040     +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
63041     +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
63042     +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
63043     +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
63044     +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
63045     +          +    -0.53694216899543 * S_MonthsAsCustomer
63046     +          +     0.25908508836257 * S_NumDealsPurchases
63047     +          +    -1.18459231573601 * S_NumWebVisitsMonth
63048     +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
63049     +        S_RMntFrq  +    -1.22457627833901 * S_Recency
63050     +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
63051     +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
63052     +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
63053     +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
63054     +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
63055     +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
63056     +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
63057     +          +    -0.08931078748332 * S_MonthsAsCustomer
63058     +          +    -0.46561962814047 * S_NumDealsPurchases
63059     +          +    -0.12241295445297 * S_NumWebVisitsMonth
63060     +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
63061     +        S_RMntFrq  +     0.96804234233608 * S_Recency
63062     +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
63063     +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
63064     +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
63065     +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
63066     +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
63067     +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
63068     +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
63069     +          +     -0.9186653552138 * S_MonthsAsCustomer
63070     +          +     2.17624393037629 * S_NumDealsPurchases
63071     +          +    -0.41699900714758 * S_NumWebVisitsMonth
63072     +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
63073     +        S_RMntFrq  +    -0.28987089218356 * S_Recency
63074     +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
63075     +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
63076     +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
63077     +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
63078     +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
63079     +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
63080     +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
63081     +          +     1.32865070741283 * S_MonthsAsCustomer
63082     +          +      0.8173864987673 * S_NumDealsPurchases
63083     +          +     1.04804775338375 * S_NumWebVisitsMonth
63084     +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
63085     +        S_RMntFrq  +     0.08690587270493 * S_Recency
63086     +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
63087     +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
63088     +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
63089     +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
63090     +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
63091     +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
63092     +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
63093     +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
63094     +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
63095     +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
63096     +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
63097     +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
63098     +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
63099     +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
63100     +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
63101     +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
63102     +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
63103     +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
63104     +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
63105     +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
63106     +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
63107     +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
63108     +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
63109     +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
63110     +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
63111     +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
63112     +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
63113     +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
63114     +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
63115     +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
63116     +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
63117     +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
63118     +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
63119     +        EducationGraduation  +    -0.31624019107181 * EducationMaster
63120     +          +    -0.82783034099773 * Marital_StatusDivorced
63121     +          +     0.39651075241405 * Marital_StatusMarried
63122     +          +     0.17323156170107 * Marital_StatusSingle
63123     +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
63124     +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
63125     +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
63126     +        EducationGraduation  +    -0.05323450200928 * EducationMaster
63127     +          +    -2.42314580112302 * Marital_StatusDivorced
63128     +          +     1.72709251267075 * Marital_StatusMarried
63129     +          +    -0.94350561587168 * Marital_StatusSingle
63130     +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
63131     +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
63132     +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
63133     +        EducationGraduation  +    -1.41317064722862 * EducationMaster
63134     +          +    -1.25323701705333 * Marital_StatusDivorced
63135     +          +    -0.72618091015379 * Marital_StatusMarried
63136     +          +     0.20594885266863 * Marital_StatusSingle
63137     +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
63138     +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
63139     +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
63140     +        EducationGraduation  +     0.75559299844055 * EducationMaster
63141     +          +     -0.9159957275063 * Marital_StatusDivorced
63142     +          +     2.06164757358796 * Marital_StatusMarried
63143     +          +    -1.61544310412168 * Marital_StatusSingle
63144     +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
63145     +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
63146     +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
63147     +        EducationGraduation  +     0.27594869585414 * EducationMaster
63148     +          +    -0.72418104768251 * Marital_StatusDivorced
63149     +          +     0.51077116161056 * Marital_StatusMarried
63150     +          +     -2.0857896888723 * Marital_StatusSingle
63151     +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
63152     +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
63153     +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
63154     +        EducationGraduation  +     -0.7287361872795 * EducationMaster
63155     +          +     0.64139965212864 * Marital_StatusDivorced
63156     +          +    -1.52338846336783 * Marital_StatusMarried
63157     +          +     1.94794784762286 * Marital_StatusSingle
63158     +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
63159     +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
63160     +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
63161     +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
63162     +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
63163     +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
63164     +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
63165     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
63166     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
63167     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
63168     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
63169     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
63170     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
63171     +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
63172     +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
63173     +END;
MPRINT(EM_DIAGRAM):   END;
63174     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
63175     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
63176     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
63177     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
63178     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
63179     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
63180     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
63181     +END;
MPRINT(EM_DIAGRAM):   END;
63182     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63183     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
63184     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63185     +
63186     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
63187     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
63188     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
63189     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
63190     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
63191     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63192     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
63193     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
63194     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
63195     +end;
MPRINT(EM_DIAGRAM):   end;
63196     +else do;
MPRINT(EM_DIAGRAM):   else do;
63197     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
63198     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
63199     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
63200     +   end;
MPRINT(EM_DIAGRAM):   end;
63201     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
63202     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
63203     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
63204     +   end;
MPRINT(EM_DIAGRAM):   end;
63205     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63206     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
63207     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
63208     +   end;
MPRINT(EM_DIAGRAM):   end;
63209     +end;
MPRINT(EM_DIAGRAM):   end;
63210     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
63211     +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
63212     +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
63213     +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
63214     +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
63215     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
63216     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
63217     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
63218     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
63219     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
63220     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
63221     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
63222     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
63223     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
63224     +END;
MPRINT(EM_DIAGRAM):   END;
63225     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
63226     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
63227     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
63228     +END;
MPRINT(EM_DIAGRAM):   END;
63229     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
63230     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
63231     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
63232     +END;
MPRINT(EM_DIAGRAM):   END;
63233     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
63234     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
63235     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
63236     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
63237     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
63238     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
63239     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
63240     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63241     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
63242     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63243     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
63244     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
63245     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
63246     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
63247     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
63248     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
63249     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
63250     +END;
MPRINT(EM_DIAGRAM):   END;
63251     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
63252     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
63253     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
63254     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
63255     +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
63256     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63257     +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
63258     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63259     +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
63260     +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
63261     +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
63262     +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
63263     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63264     +* Renaming Into variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural35;
63265     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63266     +length AutoNeural35_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural35_I_DepVar $32;
63267     +drop AutoNeural35_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_I_DepVar;
63268     +AutoNeural35_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural35_I_DepVar = I_DepVar;
63269     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63270     +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
63271     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63272     +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
63273     +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
63274     +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
63275     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63276     +* Ensmbl56: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 3 of 7;
63277     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63278     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63279     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
63280     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
63281     +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
63282     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63283     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
63284     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
63285     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
63286     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
63287     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
63288     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
63289     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
63290     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
63291     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
63292     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
63293     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
63294     +LENGTH _WARN_ $4
63295     +      F_DepVar  $ 12
63296     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
63297     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
63298     +
63299     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
63300     +
63301     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
63302     +
63303     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
63304     +
63305     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
63306     +
63307     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
63308     +
63309     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
63310     +
63311     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
63312     +
63313     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
63314     +
63315     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
63316     +
63317     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
63318     +
63319     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
63320     +
63321     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
63322     +
63323     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
63324     +
63325     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
63326     +
63327     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
63328     +
63329     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
63330     +
63331     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
63332     +
63333     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
63334     +
63335     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
63336     +
63337     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
63338     +
63339     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
63340     +
63341     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
63342     +
63343     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
63344     +
63345     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
63346     +
63347     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
63348     +
63349     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
63350     +
63351     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
63352     +
63353     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
63354     +
63355     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
63356     +
63357     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
63358     +
63359     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
63360     +
63361     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
63362     +
63363     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
63364     +
63365     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
63366     +
63367     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
63368     +
63369     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
63370     +
63371     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
63372     +
63373     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
63374     +
63375     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
63376     +
63377     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
63378     +
63379     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
63380     +
63381     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
63382     +
63383     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
63384     +
63385     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
63386     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
63387     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
63388     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
63389     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63390     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63391     +end;
MPRINT(EM_DIAGRAM):   end;
63392     +else do;
MPRINT(EM_DIAGRAM):   else do;
63393     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63394     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
63395     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63396     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63397     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
63398     +   end;
MPRINT(EM_DIAGRAM):   end;
63399     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63400     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
63401     +   end;
MPRINT(EM_DIAGRAM):   end;
63402     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63403     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
63404     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63405     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63406     +   end;
MPRINT(EM_DIAGRAM):   end;
63407     +end;
MPRINT(EM_DIAGRAM):   end;
63408     +
63409     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
63410     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
63411     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
63412     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
63413     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63414     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63415     +end;
MPRINT(EM_DIAGRAM):   end;
63416     +else do;
MPRINT(EM_DIAGRAM):   else do;
63417     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63418     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
63419     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63420     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63421     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
63422     +   end;
MPRINT(EM_DIAGRAM):   end;
63423     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63424     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
63425     +   end;
MPRINT(EM_DIAGRAM):   end;
63426     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63427     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
63428     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63429     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63430     +   end;
MPRINT(EM_DIAGRAM):   end;
63431     +end;
MPRINT(EM_DIAGRAM):   end;
63432     +
63433     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
63434     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
63435     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
63436     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
63437     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63438     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63439     +end;
MPRINT(EM_DIAGRAM):   end;
63440     +else do;
MPRINT(EM_DIAGRAM):   else do;
63441     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63442     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
63443     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63444     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63445     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
63446     +   end;
MPRINT(EM_DIAGRAM):   end;
63447     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63448     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
63449     +   end;
MPRINT(EM_DIAGRAM):   end;
63450     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63451     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
63452     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63453     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63454     +   end;
MPRINT(EM_DIAGRAM):   end;
63455     +end;
MPRINT(EM_DIAGRAM):   end;
63456     +
63457     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
63458     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
63459     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
63460     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
63461     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63462     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63463     +end;
MPRINT(EM_DIAGRAM):   end;
63464     +else do;
MPRINT(EM_DIAGRAM):   else do;
63465     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63466     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
63467     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63468     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63469     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
63470     +   end;
MPRINT(EM_DIAGRAM):   end;
63471     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63472     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
63473     +   end;
MPRINT(EM_DIAGRAM):   end;
63474     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63475     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
63476     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63477     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63478     +   end;
MPRINT(EM_DIAGRAM):   end;
63479     +end;
MPRINT(EM_DIAGRAM):   end;
63480     +
63481     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
63482     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
63483     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
63484     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
63485     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63486     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63487     +end;
MPRINT(EM_DIAGRAM):   end;
63488     +else do;
MPRINT(EM_DIAGRAM):   else do;
63489     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63490     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
63491     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63492     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63493     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
63494     +   end;
MPRINT(EM_DIAGRAM):   end;
63495     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63496     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
63497     +   end;
MPRINT(EM_DIAGRAM):   end;
63498     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63499     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
63500     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63501     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63502     +   end;
MPRINT(EM_DIAGRAM):   end;
63503     +end;
MPRINT(EM_DIAGRAM):   end;
63504     +
63505     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
63506     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
63507     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
63508     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
63509     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63510     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63511     +end;
MPRINT(EM_DIAGRAM):   end;
63512     +else do;
MPRINT(EM_DIAGRAM):   else do;
63513     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63514     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
63515     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63516     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63517     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
63518     +   end;
MPRINT(EM_DIAGRAM):   end;
63519     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63520     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
63521     +   end;
MPRINT(EM_DIAGRAM):   end;
63522     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63523     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
63524     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63525     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63526     +   end;
MPRINT(EM_DIAGRAM):   end;
63527     +end;
MPRINT(EM_DIAGRAM):   end;
63528     +
63529     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
63530     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
63531     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
63532     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
63533     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63534     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63535     +end;
MPRINT(EM_DIAGRAM):   end;
63536     +else do;
MPRINT(EM_DIAGRAM):   else do;
63537     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63538     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
63539     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63540     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
63541     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
63542     +   end;
MPRINT(EM_DIAGRAM):   end;
63543     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
63544     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
63545     +   end;
MPRINT(EM_DIAGRAM):   end;
63546     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63547     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
63548     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63549     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63550     +   end;
MPRINT(EM_DIAGRAM):   end;
63551     +end;
MPRINT(EM_DIAGRAM):   end;
63552     +
63553     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
63554     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
63555     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
63556     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
63557     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
63558     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
63559     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
63560     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
63561     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
63562     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
63563     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
63564     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
63565     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63566     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63567     +end;
MPRINT(EM_DIAGRAM):   end;
63568     +else do;
MPRINT(EM_DIAGRAM):   else do;
63569     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
63570     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
63571     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63572     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
63573     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
63574     +   end;
MPRINT(EM_DIAGRAM):   end;
63575     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
63576     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
63577     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
63578     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
63579     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
63580     +   end;
MPRINT(EM_DIAGRAM):   end;
63581     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
63582     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
63583     +   end;
MPRINT(EM_DIAGRAM):   end;
63584     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
63585     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
63586     +   end;
MPRINT(EM_DIAGRAM):   end;
63587     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
63588     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
63589     +   end;
MPRINT(EM_DIAGRAM):   end;
63590     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63591     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
63592     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
63593     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
63594     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
63595     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63596     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63597     +   end;
MPRINT(EM_DIAGRAM):   end;
63598     +end;
MPRINT(EM_DIAGRAM):   end;
63599     +
63600     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
63601     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
63602     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
63603     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
63604     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
63605     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
63606     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
63607     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
63608     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
63609     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
63610     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
63611     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
63612     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
63613     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63614     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63615     +end;
MPRINT(EM_DIAGRAM):   end;
63616     +else do;
MPRINT(EM_DIAGRAM):   else do;
63617     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
63618     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
63619     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63620     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
63621     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
63622     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
63623     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
63624     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
63625     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63626     +         end;
MPRINT(EM_DIAGRAM):   end;
63627     +         else do;
MPRINT(EM_DIAGRAM):   else do;
63628     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
63629     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
63630     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63631     +            end;
MPRINT(EM_DIAGRAM):   end;
63632     +         end;
MPRINT(EM_DIAGRAM):   end;
63633     +      end;
MPRINT(EM_DIAGRAM):   end;
63634     +      else do;
MPRINT(EM_DIAGRAM):   else do;
63635     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
63636     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
63637     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63638     +         end;
MPRINT(EM_DIAGRAM):   end;
63639     +      end;
MPRINT(EM_DIAGRAM):   end;
63640     +   end;
MPRINT(EM_DIAGRAM):   end;
63641     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63642     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
63643     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
63644     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63645     +      end;
MPRINT(EM_DIAGRAM):   end;
63646     +      else do;
MPRINT(EM_DIAGRAM):   else do;
63647     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
63648     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
63649     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
63650     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
63651     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
63652     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63653     +         end;
MPRINT(EM_DIAGRAM):   end;
63654     +      end;
MPRINT(EM_DIAGRAM):   end;
63655     +   end;
MPRINT(EM_DIAGRAM):   end;
63656     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
63657     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
63658     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
63659     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
63660     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
63661     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63662     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63663     +   end;
MPRINT(EM_DIAGRAM):   end;
63664     +end;
MPRINT(EM_DIAGRAM):   end;
63665     +
63666     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63667     +*** Checking missing input Interval
63668     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
63669     +
63670     +IF NMISS(
63671     +   AcceptedCmpTotal ,
63672     +   Age ,
63673     +   Frq ,
63674     +   Income ,
63675     +   Kidhome ,
63676     +   MntFishProducts ,
63677     +   MntFruits ,
63678     +   MntGoldProds ,
63679     +   MntSweetProducts ,
63680     +   MonthsAsCustomer ,
63681     +   NumDealsPurchases ,
63682     +   NumWebVisitsMonth ,
63683     +   RFMstat ,
63684     +   RMntFrq ,
63685     +   Recency ,
63686     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
63687     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
63688     +
63689     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63690     +END;
MPRINT(EM_DIAGRAM):   END;
63691     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63692     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
63693     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63694     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
63695     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
63696     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
63697     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
63698     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
63699     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
63700     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
63701     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
63702     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
63703     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
63704     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
63705     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
63706     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
63707     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
63708     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
63709     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
63710     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
63711     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
63712     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
63713     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
63714     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
63715     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
63716     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
63717     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
63718     +END;
MPRINT(EM_DIAGRAM):   END;
63719     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
63720     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
63721     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
63722     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
63723     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
63724     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
63725     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
63726     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
63727     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
63728     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
63729     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
63730     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
63731     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
63732     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
63733     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
63734     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
63735     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
63736     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
63737     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
63738     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
63739     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
63740     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
63741     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
63742     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
63743     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
63744     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
63745     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
63746     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
63747     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
63748     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
63749     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
63750     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
63751     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
63752     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
63753     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
63754     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
63755     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
63756     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
63757     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
63758     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
63759     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
63760     +END;
MPRINT(EM_DIAGRAM):   END;
63761     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63762     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
63763     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63764     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63765     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
63766     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63767     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63768     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
63769     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63770     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
63771     +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
63772     +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
63773     +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
63774     +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
63775     +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
63776     +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
63777     +          +     0.04740894983714 * S_MonthsAsCustomer
63778     +          +     1.39008006467326 * S_NumDealsPurchases
63779     +          +     0.21608999126738 * S_NumWebVisitsMonth
63780     +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
63781     +        S_RMntFrq  +    -0.30830265825486 * S_Recency
63782     +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
63783     +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
63784     +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
63785     +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
63786     +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
63787     +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
63788     +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
63789     +          +     0.11090137331567 * S_MonthsAsCustomer
63790     +          +     0.22617410760471 * S_NumDealsPurchases
63791     +          +    -1.50612324994247 * S_NumWebVisitsMonth
63792     +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
63793     +        S_RMntFrq  +     1.36064773168913 * S_Recency
63794     +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
63795     +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
63796     +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
63797     +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
63798     +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
63799     +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
63800     +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
63801     +          +     1.12489244540865 * S_MonthsAsCustomer
63802     +          +     0.65186273365438 * S_NumDealsPurchases
63803     +          +    -2.32770073685469 * S_NumWebVisitsMonth
63804     +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
63805     +        S_RMntFrq  +     2.60277611818411 * S_Recency
63806     +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
63807     +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
63808     +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
63809     +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
63810     +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
63811     +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
63812     +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
63813     +          +     0.30886829972356 * S_MonthsAsCustomer
63814     +          +     0.65492907685123 * S_NumDealsPurchases
63815     +          +     0.10822300736498 * S_NumWebVisitsMonth
63816     +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
63817     +        S_RMntFrq  +     -0.7378392134822 * S_Recency
63818     +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
63819     +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
63820     +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
63821     +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
63822     +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
63823     +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
63824     +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
63825     +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
63826     +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
63827     +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
63828     +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
63829     +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
63830     +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
63831     +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
63832     +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
63833     +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
63834     +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
63835     +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
63836     +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
63837     +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
63838     +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
63839     +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
63840     +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
63841     +        EducationGraduation  +     0.30922934477029 * EducationMaster
63842     +          +     0.01556098790048 * Marital_StatusDivorced
63843     +          +     0.00512523764645 * Marital_StatusMarried
63844     +          +    -0.33980799511448 * Marital_StatusSingle
63845     +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
63846     +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
63847     +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
63848     +        EducationGraduation  +     0.69751348344321 * EducationMaster
63849     +          +     0.01069434029942 * Marital_StatusDivorced
63850     +          +      0.3116587285334 * Marital_StatusMarried
63851     +          +    -0.98635795023549 * Marital_StatusSingle
63852     +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
63853     +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
63854     +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
63855     +        EducationGraduation  +     -0.8155628950024 * EducationMaster
63856     +          +    -0.60393077836174 * Marital_StatusDivorced
63857     +          +    -0.18138878944937 * Marital_StatusMarried
63858     +          +     0.53013032587101 * Marital_StatusSingle
63859     +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
63860     +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
63861     +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
63862     +        EducationGraduation  +    -0.40675219343984 * EducationMaster
63863     +          +     0.43223311502025 * Marital_StatusDivorced
63864     +          +    -1.15741416919552 * Marital_StatusMarried
63865     +          +     0.83939799284264 * Marital_StatusSingle
63866     +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
63867     +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
63868     +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
63869     +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
63870     +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
63871     +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
63872     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
63873     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
63874     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
63875     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
63876     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
63877     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
63878     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
63879     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
63880     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
63881     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
63882     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
63883     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
63884     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
63885     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
63886     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
63887     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
63888     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
63889     +END;
MPRINT(EM_DIAGRAM):   END;
63890     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
63891     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
63892     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
63893     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
63894     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
63895     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
63896     +END;
MPRINT(EM_DIAGRAM):   END;
63897     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63898     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
63899     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63900     +
63901     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
63902     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
63903     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
63904     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
63905     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
63906     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63907     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
63908     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
63909     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
63910     +end;
MPRINT(EM_DIAGRAM):   end;
63911     +else do;
MPRINT(EM_DIAGRAM):   else do;
63912     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
63913     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
63914     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
63915     +   end;
MPRINT(EM_DIAGRAM):   end;
63916     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
63917     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
63918     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
63919     +   end;
MPRINT(EM_DIAGRAM):   end;
63920     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63921     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
63922     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
63923     +   end;
MPRINT(EM_DIAGRAM):   end;
63924     +end;
MPRINT(EM_DIAGRAM):   end;
63925     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
63926     +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
63927     +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
63928     +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
63929     +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
63930     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
63931     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
63932     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
63933     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
63934     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
63935     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
63936     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
63937     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
63938     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
63939     +END;
MPRINT(EM_DIAGRAM):   END;
63940     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
63941     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
63942     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
63943     +END;
MPRINT(EM_DIAGRAM):   END;
63944     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
63945     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
63946     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
63947     +END;
MPRINT(EM_DIAGRAM):   END;
63948     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
63949     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
63950     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
63951     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
63952     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
63953     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
63954     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
63955     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63956     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
63957     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63958     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
63959     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
63960     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
63961     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
63962     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
63963     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
63964     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
63965     +END;
MPRINT(EM_DIAGRAM):   END;
63966     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
63967     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
63968     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
63969     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
63970     +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
63971     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63972     +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
63973     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63974     +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
63975     +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
63976     +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
63977     +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
63978     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63979     +* Renaming Into variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural34;
63980     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63981     +length AutoNeural34_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural34_I_DepVar $32;
63982     +drop AutoNeural34_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_I_DepVar;
63983     +AutoNeural34_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural34_I_DepVar = I_DepVar;
63984     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63985     +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
63986     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63987     +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
63988     +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
63989     +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
63990     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63991     +* Ensmbl56: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 4 of 7;
63992     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63993     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63994     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
63995     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
63996     +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
63997     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63998     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
63999     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
64000     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
64001     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
64002     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
64003     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
64004     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
64005     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
64006     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
64007     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
64008     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
64009     +LENGTH _WARN_ $4
64010     +      F_DepVar  $ 12
64011     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
64012     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
64013     +
64014     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
64015     +
64016     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
64017     +
64018     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
64019     +
64020     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
64021     +
64022     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
64023     +
64024     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
64025     +
64026     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
64027     +
64028     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
64029     +
64030     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
64031     +
64032     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
64033     +
64034     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
64035     +
64036     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
64037     +
64038     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
64039     +
64040     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
64041     +
64042     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
64043     +
64044     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
64045     +
64046     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
64047     +
64048     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
64049     +
64050     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
64051     +
64052     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
64053     +
64054     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
64055     +
64056     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
64057     +
64058     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
64059     +
64060     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
64061     +
64062     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
64063     +
64064     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
64065     +
64066     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
64067     +
64068     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
64069     +
64070     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
64071     +
64072     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
64073     +
64074     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
64075     +
64076     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
64077     +
64078     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
64079     +
64080     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
64081     +
64082     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
64083     +
64084     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
64085     +
64086     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
64087     +
64088     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
64089     +
64090     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
64091     +
64092     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
64093     +
64094     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
64095     +
64096     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
64097     +
64098     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
64099     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
64100     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
64101     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
64102     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64103     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64104     +end;
MPRINT(EM_DIAGRAM):   end;
64105     +else do;
MPRINT(EM_DIAGRAM):   else do;
64106     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64107     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
64108     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64109     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64110     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
64111     +   end;
MPRINT(EM_DIAGRAM):   end;
64112     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64113     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
64114     +   end;
MPRINT(EM_DIAGRAM):   end;
64115     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64116     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
64117     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64118     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64119     +   end;
MPRINT(EM_DIAGRAM):   end;
64120     +end;
MPRINT(EM_DIAGRAM):   end;
64121     +
64122     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
64123     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
64124     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
64125     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
64126     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64127     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64128     +end;
MPRINT(EM_DIAGRAM):   end;
64129     +else do;
MPRINT(EM_DIAGRAM):   else do;
64130     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64131     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
64132     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64133     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64134     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
64135     +   end;
MPRINT(EM_DIAGRAM):   end;
64136     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64137     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
64138     +   end;
MPRINT(EM_DIAGRAM):   end;
64139     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64140     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
64141     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64142     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64143     +   end;
MPRINT(EM_DIAGRAM):   end;
64144     +end;
MPRINT(EM_DIAGRAM):   end;
64145     +
64146     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
64147     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
64148     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
64149     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
64150     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64151     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64152     +end;
MPRINT(EM_DIAGRAM):   end;
64153     +else do;
MPRINT(EM_DIAGRAM):   else do;
64154     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64155     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
64156     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64157     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64158     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
64159     +   end;
MPRINT(EM_DIAGRAM):   end;
64160     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64161     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
64162     +   end;
MPRINT(EM_DIAGRAM):   end;
64163     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64164     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
64165     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64166     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64167     +   end;
MPRINT(EM_DIAGRAM):   end;
64168     +end;
MPRINT(EM_DIAGRAM):   end;
64169     +
64170     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
64171     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
64172     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
64173     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
64174     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64175     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64176     +end;
MPRINT(EM_DIAGRAM):   end;
64177     +else do;
MPRINT(EM_DIAGRAM):   else do;
64178     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64179     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
64180     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64181     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64182     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
64183     +   end;
MPRINT(EM_DIAGRAM):   end;
64184     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64185     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
64186     +   end;
MPRINT(EM_DIAGRAM):   end;
64187     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64188     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
64189     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64190     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64191     +   end;
MPRINT(EM_DIAGRAM):   end;
64192     +end;
MPRINT(EM_DIAGRAM):   end;
64193     +
64194     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
64195     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
64196     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
64197     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
64198     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64199     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64200     +end;
MPRINT(EM_DIAGRAM):   end;
64201     +else do;
MPRINT(EM_DIAGRAM):   else do;
64202     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64203     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
64204     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64205     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64206     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
64207     +   end;
MPRINT(EM_DIAGRAM):   end;
64208     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64209     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
64210     +   end;
MPRINT(EM_DIAGRAM):   end;
64211     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64212     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
64213     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64214     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64215     +   end;
MPRINT(EM_DIAGRAM):   end;
64216     +end;
MPRINT(EM_DIAGRAM):   end;
64217     +
64218     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
64219     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
64220     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
64221     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
64222     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64223     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64224     +end;
MPRINT(EM_DIAGRAM):   end;
64225     +else do;
MPRINT(EM_DIAGRAM):   else do;
64226     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64227     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
64228     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64229     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64230     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
64231     +   end;
MPRINT(EM_DIAGRAM):   end;
64232     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64233     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
64234     +   end;
MPRINT(EM_DIAGRAM):   end;
64235     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64236     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
64237     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64238     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64239     +   end;
MPRINT(EM_DIAGRAM):   end;
64240     +end;
MPRINT(EM_DIAGRAM):   end;
64241     +
64242     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
64243     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
64244     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
64245     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
64246     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64247     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64248     +end;
MPRINT(EM_DIAGRAM):   end;
64249     +else do;
MPRINT(EM_DIAGRAM):   else do;
64250     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64251     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
64252     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64253     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
64254     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
64255     +   end;
MPRINT(EM_DIAGRAM):   end;
64256     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
64257     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
64258     +   end;
MPRINT(EM_DIAGRAM):   end;
64259     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64260     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
64261     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64262     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64263     +   end;
MPRINT(EM_DIAGRAM):   end;
64264     +end;
MPRINT(EM_DIAGRAM):   end;
64265     +
64266     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
64267     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
64268     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
64269     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
64270     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
64271     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
64272     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
64273     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
64274     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
64275     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
64276     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
64277     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
64278     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64279     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64280     +end;
MPRINT(EM_DIAGRAM):   end;
64281     +else do;
MPRINT(EM_DIAGRAM):   else do;
64282     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
64283     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
64284     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64285     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
64286     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
64287     +   end;
MPRINT(EM_DIAGRAM):   end;
64288     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
64289     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
64290     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
64291     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
64292     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
64293     +   end;
MPRINT(EM_DIAGRAM):   end;
64294     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
64295     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
64296     +   end;
MPRINT(EM_DIAGRAM):   end;
64297     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
64298     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
64299     +   end;
MPRINT(EM_DIAGRAM):   end;
64300     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
64301     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
64302     +   end;
MPRINT(EM_DIAGRAM):   end;
64303     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64304     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
64305     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
64306     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
64307     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
64308     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64309     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64310     +   end;
MPRINT(EM_DIAGRAM):   end;
64311     +end;
MPRINT(EM_DIAGRAM):   end;
64312     +
64313     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
64314     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
64315     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
64316     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
64317     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
64318     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
64319     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
64320     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
64321     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
64322     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
64323     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
64324     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
64325     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
64326     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64327     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64328     +end;
MPRINT(EM_DIAGRAM):   end;
64329     +else do;
MPRINT(EM_DIAGRAM):   else do;
64330     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
64331     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
64332     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64333     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
64334     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
64335     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
64336     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
64337     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
64338     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64339     +         end;
MPRINT(EM_DIAGRAM):   end;
64340     +         else do;
MPRINT(EM_DIAGRAM):   else do;
64341     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
64342     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
64343     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64344     +            end;
MPRINT(EM_DIAGRAM):   end;
64345     +         end;
MPRINT(EM_DIAGRAM):   end;
64346     +      end;
MPRINT(EM_DIAGRAM):   end;
64347     +      else do;
MPRINT(EM_DIAGRAM):   else do;
64348     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
64349     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
64350     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64351     +         end;
MPRINT(EM_DIAGRAM):   end;
64352     +      end;
MPRINT(EM_DIAGRAM):   end;
64353     +   end;
MPRINT(EM_DIAGRAM):   end;
64354     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64355     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
64356     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
64357     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64358     +      end;
MPRINT(EM_DIAGRAM):   end;
64359     +      else do;
MPRINT(EM_DIAGRAM):   else do;
64360     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
64361     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
64362     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
64363     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
64364     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
64365     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64366     +         end;
MPRINT(EM_DIAGRAM):   end;
64367     +      end;
MPRINT(EM_DIAGRAM):   end;
64368     +   end;
MPRINT(EM_DIAGRAM):   end;
64369     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
64370     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
64371     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
64372     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
64373     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
64374     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64375     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64376     +   end;
MPRINT(EM_DIAGRAM):   end;
64377     +end;
MPRINT(EM_DIAGRAM):   end;
64378     +
64379     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64380     +*** Checking missing input Interval
64381     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
64382     +
64383     +IF NMISS(
64384     +   AcceptedCmpTotal ,
64385     +   Age ,
64386     +   Frq ,
64387     +   Income ,
64388     +   Kidhome ,
64389     +   MntFishProducts ,
64390     +   MntFruits ,
64391     +   MntGoldProds ,
64392     +   MntSweetProducts ,
64393     +   MonthsAsCustomer ,
64394     +   NumDealsPurchases ,
64395     +   NumWebVisitsMonth ,
64396     +   RFMstat ,
64397     +   RMntFrq ,
64398     +   Recency ,
64399     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
64400     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
64401     +
64402     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64403     +END;
MPRINT(EM_DIAGRAM):   END;
64404     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64405     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
64406     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64407     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
64408     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
64409     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
64410     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
64411     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
64412     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
64413     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
64414     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
64415     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
64416     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
64417     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
64418     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
64419     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
64420     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
64421     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
64422     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
64423     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
64424     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
64425     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
64426     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
64427     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
64428     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
64429     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
64430     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
64431     +END;
MPRINT(EM_DIAGRAM):   END;
64432     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64433     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
64434     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
64435     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
64436     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
64437     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
64438     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
64439     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
64440     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
64441     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
64442     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
64443     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
64444     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
64445     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
64446     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
The SAS System

MntFishProducts ;
64447     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
64448     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
64449     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
64450     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
64451     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
64452     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
64453     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
64454     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
64455     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
64456     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
64457     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
64458     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
64459     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
64460     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
64461     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
64462     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
64463     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
64464     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
64465     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
64466     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
64467     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
64468     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
64469     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
64470     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
64471     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
64472     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
64473     +END;
MPRINT(EM_DIAGRAM):   END;
64474     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64475     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
64476     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64477     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64478     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
64479     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64480     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64481     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
64482     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64483     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
64484     +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
64485     +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
64486     +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
64487     +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
64488     +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
64489     +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
64490     +          +     -0.6473961304074 * S_MonthsAsCustomer
64491     +          +     0.68960902951007 * S_NumDealsPurchases
64492     +          +    -0.03600585273268 * S_NumWebVisitsMonth
64493     +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
64494     +        S_RMntFrq  +    -0.37413569649471 * S_Recency
64495     +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
64496     +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
64497     +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
64498     +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
64499     +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
64500     +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
64501     +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
64502     +          +    -0.70674764548268 * S_MonthsAsCustomer
64503     +          +     0.03761139203619 * S_NumDealsPurchases
64504     +          +    -0.69359662485747 * S_NumWebVisitsMonth
64505     +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
64506     +        S_RMntFrq  +    -1.62720417424557 * S_Recency
64507     +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
64508     +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
64509     +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
64510     +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
64511     +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
64512     +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
64513     +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
64514     +          +    -0.47559913836984 * S_MonthsAsCustomer
64515     +          +    -0.26961781245749 * S_NumDealsPurchases
64516     +          +    -0.67017962977412 * S_NumWebVisitsMonth
64517     +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
64518     +        S_RMntFrq  +     0.67120737584665 * S_Recency
64519     +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
64520     +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
64521     +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
64522     +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
64523     +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
64524     +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
64525     +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
64526     +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
64527     +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
64528     +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
64529     +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
64530     +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
64531     +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
64532     +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
64533     +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
64534     +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
64535     +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
64536     +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
64537     +        EducationGraduation  +     0.46172475127934 * EducationMaster
64538     +          +    -0.18858032329482 * Marital_StatusDivorced
64539     +          +     0.16067956508072 * Marital_StatusMarried
64540     +          +    -0.90926406046237 * Marital_StatusSingle
64541     +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
64542     +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
64543     +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
64544     +        EducationGraduation  +    -0.74629011053947 * EducationMaster
64545     +          +     0.71998738170149 * Marital_StatusDivorced
64546     +          +    -1.53543515752013 * Marital_StatusMarried
64547     +          +     0.44068743694663 * Marital_StatusSingle
64548     +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
64549     +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
64550     +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
64551     +        EducationGraduation  +     0.11252156068047 * EducationMaster
64552     +          +    -0.31683932084863 * Marital_StatusDivorced
64553     +          +     0.17674162427585 * Marital_StatusMarried
64554     +          +    -0.67064017247711 * Marital_StatusSingle
64555     +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
64556     +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
64557     +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
64558     +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
64559     +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
64560     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
64561     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
64562     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
64563     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
64564     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
64565     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
64566     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
64567     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
64568     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
64569     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
64570     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
64571     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
64572     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
64573     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
64574     +END;
MPRINT(EM_DIAGRAM):   END;
64575     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64576     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
64577     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
64578     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
64579     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
64580     +END;
MPRINT(EM_DIAGRAM):   END;
64581     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64582     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
64583     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64584     +
64585     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
64586     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
64587     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
64588     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
64589     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
64590     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64591     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
64592     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
64593     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
64594     +end;
MPRINT(EM_DIAGRAM):   end;
64595     +else do;
MPRINT(EM_DIAGRAM):   else do;
64596     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
64597     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
64598     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
64599     +   end;
MPRINT(EM_DIAGRAM):   end;
64600     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
64601     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
64602     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
64603     +   end;
MPRINT(EM_DIAGRAM):   end;
64604     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64605     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
64606     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
64607     +   end;
MPRINT(EM_DIAGRAM):   end;
64608     +end;
MPRINT(EM_DIAGRAM):   end;
64609     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
64610     +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
64611     +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
64612     +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
64613     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
64614     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
64615     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
64616     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
64617     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
64618     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
64619     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
64620     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
64621     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
64622     +END;
MPRINT(EM_DIAGRAM):   END;
64623     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64624     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
64625     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
64626     +END;
MPRINT(EM_DIAGRAM):   END;
64627     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
64628     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
64629     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
64630     +END;
MPRINT(EM_DIAGRAM):   END;
64631     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
64632     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
64633     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
64634     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
64635     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
64636     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
64637     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
64638     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64639     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
64640     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64641     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
64642     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
64643     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
64644     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
64645     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
64646     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
64647     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
64648     +END;
MPRINT(EM_DIAGRAM):   END;
64649     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
64650     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
64651     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
64652     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
64653     +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
64654     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64655     +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
64656     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64657     +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
64658     +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
64659     +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
64660     +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
64661     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64662     +* Renaming Into variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural40;
64663     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64664     +length AutoNeural40_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural40_I_DepVar $32;
64665     +drop AutoNeural40_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_I_DepVar;
64666     +AutoNeural40_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural40_I_DepVar = I_DepVar;
64667     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64668     +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
64669     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64670     +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
64671     +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
64672     +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
64673     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64674     +* Ensmbl56: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 5 of 7;
64675     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64676     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64677     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
64678     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
64679     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
64680     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64681     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
64682     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
64683     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
64684     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
64685     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
64686     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
64687     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
64688     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
64689     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
64690     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
64691     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
64692     +LENGTH _WARN_ $4
64693     +      F_DepVar  $ 12
64694     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
64695     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
64696     +
64697     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
64698     +
64699     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
64700     +
64701     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
64702     +
64703     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
64704     +
64705     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
64706     +
64707     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
64708     +
64709     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
64710     +
64711     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
64712     +
64713     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
64714     +
64715     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
64716     +
64717     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
64718     +
64719     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
64720     +
64721     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
64722     +
64723     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
64724     +
64725     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
64726     +
64727     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
64728     +
64729     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
64730     +
64731     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
64732     +
64733     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
64734     +
64735     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
64736     +
64737     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
64738     +
64739     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
64740     +
64741     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
64742     +
64743     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
64744     +
64745     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
64746     +
64747     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
64748     +
64749     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
64750     +
64751     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
64752     +
64753     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
64754     +
64755     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
64756     +
64757     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
64758     +
64759     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
64760     +
64761     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
64762     +
64763     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
64764     +
64765     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
64766     +
64767     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
64768     +
64769     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
64770     +
64771     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
64772     +
64773     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
64774     +
64775     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
64776     +
64777     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
64778     +
64779     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
64780     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
64781     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
64782     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
64783     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64784     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64785     +end;
MPRINT(EM_DIAGRAM):   end;
64786     +else do;
MPRINT(EM_DIAGRAM):   else do;
64787     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64788     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
64789     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64790     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64791     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
64792     +   end;
MPRINT(EM_DIAGRAM):   end;
64793     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64794     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
64795     +   end;
MPRINT(EM_DIAGRAM):   end;
64796     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64797     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
64798     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64799     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64800     +   end;
MPRINT(EM_DIAGRAM):   end;
64801     +end;
MPRINT(EM_DIAGRAM):   end;
64802     +
64803     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
64804     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
64805     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
64806     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
64807     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64808     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64809     +end;
MPRINT(EM_DIAGRAM):   end;
64810     +else do;
MPRINT(EM_DIAGRAM):   else do;
64811     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64812     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
64813     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64814     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64815     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
64816     +   end;
MPRINT(EM_DIAGRAM):   end;
64817     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64818     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
64819     +   end;
MPRINT(EM_DIAGRAM):   end;
64820     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64821     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
64822     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64823     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64824     +   end;
MPRINT(EM_DIAGRAM):   end;
64825     +end;
MPRINT(EM_DIAGRAM):   end;
64826     +
64827     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
64828     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
64829     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
64830     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
64831     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64832     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64833     +end;
MPRINT(EM_DIAGRAM):   end;
64834     +else do;
MPRINT(EM_DIAGRAM):   else do;
64835     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64836     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
64837     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64838     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64839     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
64840     +   end;
MPRINT(EM_DIAGRAM):   end;
64841     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64842     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
64843     +   end;
MPRINT(EM_DIAGRAM):   end;
64844     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64845     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
64846     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64847     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64848     +   end;
MPRINT(EM_DIAGRAM):   end;
64849     +end;
MPRINT(EM_DIAGRAM):   end;
64850     +
64851     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
64852     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
64853     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
64854     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
64855     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64856     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64857     +end;
MPRINT(EM_DIAGRAM):   end;
64858     +else do;
MPRINT(EM_DIAGRAM):   else do;
64859     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64860     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
64861     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64862     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64863     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
64864     +   end;
MPRINT(EM_DIAGRAM):   end;
64865     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64866     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
64867     +   end;
MPRINT(EM_DIAGRAM):   end;
64868     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64869     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
64870     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64871     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64872     +   end;
MPRINT(EM_DIAGRAM):   end;
64873     +end;
MPRINT(EM_DIAGRAM):   end;
64874     +
64875     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
64876     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
64877     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
64878     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
64879     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64880     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64881     +end;
MPRINT(EM_DIAGRAM):   end;
64882     +else do;
MPRINT(EM_DIAGRAM):   else do;
64883     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64884     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
64885     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64886     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64887     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
64888     +   end;
MPRINT(EM_DIAGRAM):   end;
64889     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64890     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
64891     +   end;
MPRINT(EM_DIAGRAM):   end;
64892     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64893     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
64894     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64895     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64896     +   end;
MPRINT(EM_DIAGRAM):   end;
64897     +end;
MPRINT(EM_DIAGRAM):   end;
64898     +
64899     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
64900     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
64901     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
64902     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
64903     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64904     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64905     +end;
MPRINT(EM_DIAGRAM):   end;
64906     +else do;
MPRINT(EM_DIAGRAM):   else do;
64907     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64908     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
64909     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64910     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64911     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
64912     +   end;
MPRINT(EM_DIAGRAM):   end;
64913     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64914     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
64915     +   end;
MPRINT(EM_DIAGRAM):   end;
64916     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64917     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
64918     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64919     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64920     +   end;
MPRINT(EM_DIAGRAM):   end;
64921     +end;
MPRINT(EM_DIAGRAM):   end;
64922     +
64923     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
64924     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
64925     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
64926     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
64927     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64928     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64929     +end;
MPRINT(EM_DIAGRAM):   end;
64930     +else do;
MPRINT(EM_DIAGRAM):   else do;
64931     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64932     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
64933     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64934     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
64935     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
64936     +   end;
MPRINT(EM_DIAGRAM):   end;
64937     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
64938     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
64939     +   end;
MPRINT(EM_DIAGRAM):   end;
64940     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64941     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
64942     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64943     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64944     +   end;
MPRINT(EM_DIAGRAM):   end;
64945     +end;
MPRINT(EM_DIAGRAM):   end;
64946     +
64947     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
64948     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
64949     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
64950     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
64951     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
64952     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
64953     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
64954     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
64955     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
64956     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
64957     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
64958     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
64959     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64960     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64961     +end;
MPRINT(EM_DIAGRAM):   end;
64962     +else do;
MPRINT(EM_DIAGRAM):   else do;
64963     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
64964     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
64965     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64966     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
64967     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
64968     +   end;
MPRINT(EM_DIAGRAM):   end;
64969     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
64970     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
64971     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
64972     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
64973     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
64974     +   end;
MPRINT(EM_DIAGRAM):   end;
64975     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
64976     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
64977     +   end;
MPRINT(EM_DIAGRAM):   end;
64978     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
64979     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
64980     +   end;
MPRINT(EM_DIAGRAM):   end;
64981     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
64982     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
64983     +   end;
MPRINT(EM_DIAGRAM):   end;
64984     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64985     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
64986     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
64987     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
64988     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
64989     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64990     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64991     +   end;
MPRINT(EM_DIAGRAM):   end;
64992     +end;
MPRINT(EM_DIAGRAM):   end;
64993     +
64994     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
64995     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
64996     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
64997     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
64998     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
64999     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
65000     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
65001     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
65002     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
65003     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
65004     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
65005     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
65006     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
65007     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65008     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65009     +end;
MPRINT(EM_DIAGRAM):   end;
65010     +else do;
MPRINT(EM_DIAGRAM):   else do;
65011     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
65012     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
65013     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65014     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
65015     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
65016     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
65017     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
65018     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
65019     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65020     +         end;
MPRINT(EM_DIAGRAM):   end;
65021     +         else do;
MPRINT(EM_DIAGRAM):   else do;
65022     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
65023     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
65024     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65025     +            end;
MPRINT(EM_DIAGRAM):   end;
65026     +         end;
MPRINT(EM_DIAGRAM):   end;
65027     +      end;
MPRINT(EM_DIAGRAM):   end;
65028     +      else do;
MPRINT(EM_DIAGRAM):   else do;
65029     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
65030     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
65031     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65032     +         end;
MPRINT(EM_DIAGRAM):   end;
65033     +      end;
MPRINT(EM_DIAGRAM):   end;
65034     +   end;
MPRINT(EM_DIAGRAM):   end;
65035     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65036     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
65037     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
65038     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65039     +      end;
MPRINT(EM_DIAGRAM):   end;
65040     +      else do;
MPRINT(EM_DIAGRAM):   else do;
65041     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
65042     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
65043     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
65044     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
65045     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
65046     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65047     +         end;
MPRINT(EM_DIAGRAM):   end;
65048     +      end;
MPRINT(EM_DIAGRAM):   end;
65049     +   end;
MPRINT(EM_DIAGRAM):   end;
65050     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
65051     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
65052     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
65053     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
65054     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
65055     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65056     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65057     +   end;
MPRINT(EM_DIAGRAM):   end;
65058     +end;
MPRINT(EM_DIAGRAM):   end;
65059     +
65060     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65061     +*** Checking missing input Interval
65062     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
65063     +
65064     +IF NMISS(
65065     +   AcceptedCmpTotal ,
65066     +   Age ,
65067     +   Frq ,
65068     +   Income ,
65069     +   Kidhome ,
65070     +   MntFishProducts ,
65071     +   MntFruits ,
65072     +   MntGoldProds ,
65073     +   MntSweetProducts ,
65074     +   MonthsAsCustomer ,
65075     +   NumDealsPurchases ,
65076     +   NumWebVisitsMonth ,
65077     +   RFMstat ,
65078     +   RMntFrq ,
65079     +   Recency ,
65080     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
65081     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
65082     +
65083     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65084     +END;
MPRINT(EM_DIAGRAM):   END;
65085     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65086     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
65087     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65088     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65089     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
65090     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
65091     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
65092     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
65093     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
65094     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
65095     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
65096     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
65097     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
65098     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
65099     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
65100     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
65101     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
65102     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
65103     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
65104     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
65105     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
65106     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
65107     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
65108     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
65109     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
65110     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
65111     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
65112     +END;
MPRINT(EM_DIAGRAM):   END;
65113     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65114     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
65115     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
65116     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
65117     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
65118     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
65119     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
65120     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
65121     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
65122     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
65123     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
65124     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
65125     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
65126     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
65127     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
65128     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
65129     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
65130     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
65131     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
65132     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
65133     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
65134     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
65135     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
65136     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
65137     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
65138     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
65139     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
65140     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
65141     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
65142     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
65143     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
65144     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
65145     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
65146     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
65147     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
65148     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
65149     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
65150     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
65151     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
65152     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
65153     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
65154     +END;
MPRINT(EM_DIAGRAM):   END;
65155     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65156     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
65157     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65158     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65159     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
65160     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65161     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65162     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
65163     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65164     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65165     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
65166     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
65167     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
65168     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
65169     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
65170     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
65171     +          +     -0.1740957673716 * S_MonthsAsCustomer
65172     +          +     0.66565026405117 * S_NumDealsPurchases
65173     +          +     0.43247206282836 * S_NumWebVisitsMonth
65174     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
65175     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
65176     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
65177     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
65178     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
65179     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
65180     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
65181     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
65182     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
65183     +          +    -0.06176784990963 * S_MonthsAsCustomer
65184     +          +    -0.11740415005833 * S_NumDealsPurchases
65185     +          +    -0.17084845478672 * S_NumWebVisitsMonth
65186     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
65187     +        S_RMntFrq  +     0.54983271222574 * S_Recency
65188     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
65189     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
65190     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
65191     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
65192     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
65193     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
65194     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
65195     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
65196     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
65197     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
65198     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
65199     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
65200     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
65201     +        EducationGraduation  +     0.22632282500966 * EducationMaster
65202     +          +     -0.0800438380883 * Marital_StatusDivorced
65203     +          +     0.44505766937623 * Marital_StatusMarried
65204     +          +    -0.57546515626468 * Marital_StatusSingle
65205     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
65206     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
65207     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
65208     +        EducationGraduation  +      0.0794165981215 * EducationMaster
65209     +          +    -0.20291653465543 * Marital_StatusDivorced
65210     +          +     0.39547414450617 * Marital_StatusMarried
65211     +          +    -0.37001331184001 * Marital_StatusSingle
65212     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
65213     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
65214     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
65215     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
65216     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
65217     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
65218     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
65219     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
65220     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
65221     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
65222     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
65223     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
65224     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
65225     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
65226     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
65227     +END;
MPRINT(EM_DIAGRAM):   END;
65228     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65229     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
65230     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
65231     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
65232     +END;
MPRINT(EM_DIAGRAM):   END;
65233     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65234     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
65235     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65236     +
65237     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
65238     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
65239     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
65240     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
65241     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
65242     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65243     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
65244     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
65245     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
65246     +end;
MPRINT(EM_DIAGRAM):   end;
65247     +else do;
MPRINT(EM_DIAGRAM):   else do;
65248     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
65249     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
65250     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
65251     +   end;
MPRINT(EM_DIAGRAM):   end;
65252     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
65253     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
65254     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
65255     +   end;
MPRINT(EM_DIAGRAM):   end;
65256     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65257     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
65258     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
65259     +   end;
MPRINT(EM_DIAGRAM):   end;
65260     +end;
MPRINT(EM_DIAGRAM):   end;
65261     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65262     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
65263     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
65264     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
65265     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
65266     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
65267     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
65268     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
65269     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
65270     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
65271     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
65272     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
65273     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
65274     +END;
MPRINT(EM_DIAGRAM):   END;
65275     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65276     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
65277     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
65278     +END;
MPRINT(EM_DIAGRAM):   END;
65279     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
65280     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
65281     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
65282     +END;
MPRINT(EM_DIAGRAM):   END;
65283     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
65284     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
65285     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
65286     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
65287     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
65288     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
65289     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
65290     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65291     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
65292     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65293     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
65294     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
65295     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
65296     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
65297     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
65298     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
65299     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
65300     +END;
MPRINT(EM_DIAGRAM):   END;
65301     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
65302     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
65303     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
65304     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
65305     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
65306     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65307     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
65308     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65309     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
65310     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
65311     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
65312     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
65313     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65314     +* Renaming Into variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural39;
65315     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65316     +length AutoNeural39_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural39_I_DepVar $32;
65317     +drop AutoNeural39_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_I_DepVar;
65318     +AutoNeural39_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural39_I_DepVar = I_DepVar;
65319     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65320     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
65321     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65322     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
65323     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
65324     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
65325     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65326     +* Ensmbl56: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 6 of 7;
65327     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65328     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65329     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
65330     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
65331     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
65332     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65333     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
65334     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
65335     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
65336     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
65337     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
65338     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
65339     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
65340     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
65341     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
65342     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
65343     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
65344     +LENGTH _WARN_ $4
65345     +      F_DepVar  $ 12
65346     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
65347     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
65348     +
65349     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
65350     +
65351     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
65352     +
65353     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
65354     +
65355     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
65356     +
65357     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
65358     +
65359     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
65360     +
65361     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
65362     +
65363     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
65364     +
65365     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
65366     +
65367     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
65368     +
65369     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
65370     +
65371     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
65372     +
65373     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
65374     +
65375     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
65376     +
65377     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
65378     +
65379     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
65380     +
65381     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
65382     +
65383     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
65384     +
65385     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
65386     +
65387     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
65388     +
65389     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
65390     +
65391     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
65392     +
65393     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
65394     +
65395     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
65396     +
65397     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
65398     +
65399     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
65400     +
65401     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
65402     +
65403     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
65404     +
65405     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
65406     +
65407     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
65408     +
65409     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
65410     +
65411     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
65412     +
65413     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
65414     +
65415     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
65416     +
65417     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
65418     +
65419     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
65420     +
65421     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
65422     +
65423     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
65424     +
65425     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
65426     +
65427     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
65428     +
65429     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
65430     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
65431     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
65432     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
65433     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65434     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65435     +end;
MPRINT(EM_DIAGRAM):   end;
65436     +else do;
MPRINT(EM_DIAGRAM):   else do;
65437     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65438     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
65439     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65440     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65441     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
65442     +   end;
MPRINT(EM_DIAGRAM):   end;
65443     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65444     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
65445     +   end;
MPRINT(EM_DIAGRAM):   end;
65446     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65447     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
65448     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65449     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65450     +   end;
MPRINT(EM_DIAGRAM):   end;
65451     +end;
MPRINT(EM_DIAGRAM):   end;
65452     +
65453     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
65454     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
65455     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
65456     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
65457     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65458     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65459     +end;
MPRINT(EM_DIAGRAM):   end;
65460     +else do;
MPRINT(EM_DIAGRAM):   else do;
65461     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65462     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
65463     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65464     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65465     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
65466     +   end;
MPRINT(EM_DIAGRAM):   end;
65467     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65468     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
65469     +   end;
MPRINT(EM_DIAGRAM):   end;
65470     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65471     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
65472     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65473     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65474     +   end;
MPRINT(EM_DIAGRAM):   end;
65475     +end;
MPRINT(EM_DIAGRAM):   end;
65476     +
65477     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
65478     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
65479     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
65480     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
65481     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65482     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65483     +end;
MPRINT(EM_DIAGRAM):   end;
65484     +else do;
MPRINT(EM_DIAGRAM):   else do;
65485     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65486     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
65487     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65488     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65489     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
65490     +   end;
MPRINT(EM_DIAGRAM):   end;
65491     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65492     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
65493     +   end;
MPRINT(EM_DIAGRAM):   end;
65494     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65495     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
65496     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65497     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65498     +   end;
MPRINT(EM_DIAGRAM):   end;
65499     +end;
MPRINT(EM_DIAGRAM):   end;
65500     +
65501     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
65502     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
65503     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
65504     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
65505     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65506     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65507     +end;
MPRINT(EM_DIAGRAM):   end;
65508     +else do;
MPRINT(EM_DIAGRAM):   else do;
65509     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65510     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
65511     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65512     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65513     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
65514     +   end;
MPRINT(EM_DIAGRAM):   end;
65515     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65516     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
65517     +   end;
MPRINT(EM_DIAGRAM):   end;
65518     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65519     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
65520     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65521     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65522     +   end;
MPRINT(EM_DIAGRAM):   end;
65523     +end;
MPRINT(EM_DIAGRAM):   end;
65524     +
65525     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
65526     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
65527     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
65528     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
65529     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65530     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65531     +end;
MPRINT(EM_DIAGRAM):   end;
65532     +else do;
MPRINT(EM_DIAGRAM):   else do;
65533     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65534     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
65535     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65536     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65537     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
65538     +   end;
MPRINT(EM_DIAGRAM):   end;
65539     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65540     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
65541     +   end;
MPRINT(EM_DIAGRAM):   end;
65542     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65543     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
65544     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65545     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65546     +   end;
MPRINT(EM_DIAGRAM):   end;
65547     +end;
MPRINT(EM_DIAGRAM):   end;
65548     +
65549     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
65550     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
65551     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
65552     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
65553     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65554     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65555     +end;
MPRINT(EM_DIAGRAM):   end;
65556     +else do;
MPRINT(EM_DIAGRAM):   else do;
65557     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65558     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
65559     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65560     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65561     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
65562     +   end;
MPRINT(EM_DIAGRAM):   end;
65563     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65564     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
65565     +   end;
MPRINT(EM_DIAGRAM):   end;
65566     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65567     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
65568     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65569     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65570     +   end;
MPRINT(EM_DIAGRAM):   end;
65571     +end;
MPRINT(EM_DIAGRAM):   end;
65572     +
65573     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
65574     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
65575     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
65576     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
65577     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65578     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65579     +end;
MPRINT(EM_DIAGRAM):   end;
65580     +else do;
MPRINT(EM_DIAGRAM):   else do;
65581     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65582     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
65583     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65584     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
65585     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
65586     +   end;
MPRINT(EM_DIAGRAM):   end;
65587     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
65588     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
65589     +   end;
MPRINT(EM_DIAGRAM):   end;
65590     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65591     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
65592     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65593     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65594     +   end;
MPRINT(EM_DIAGRAM):   end;
65595     +end;
MPRINT(EM_DIAGRAM):   end;
65596     +
65597     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
65598     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
65599     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
65600     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
65601     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
65602     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
65603     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
65604     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
65605     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
65606     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
65607     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
65608     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
65609     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65610     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65611     +end;
MPRINT(EM_DIAGRAM):   end;
65612     +else do;
MPRINT(EM_DIAGRAM):   else do;
65613     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
65614     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
65615     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65616     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
65617     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
65618     +   end;
MPRINT(EM_DIAGRAM):   end;
65619     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
65620     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
65621     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
65622     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
65623     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
65624     +   end;
MPRINT(EM_DIAGRAM):   end;
65625     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
65626     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
65627     +   end;
MPRINT(EM_DIAGRAM):   end;
65628     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
65629     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
65630     +   end;
MPRINT(EM_DIAGRAM):   end;
65631     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
65632     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
65633     +   end;
MPRINT(EM_DIAGRAM):   end;
65634     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65635     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
65636     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
65637     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
65638     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
65639     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65640     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65641     +   end;
MPRINT(EM_DIAGRAM):   end;
65642     +end;
MPRINT(EM_DIAGRAM):   end;
65643     +
65644     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
65645     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
65646     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
65647     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
65648     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
65649     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
65650     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
65651     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
65652     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
65653     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
65654     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
65655     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
65656     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
65657     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65658     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65659     +end;
MPRINT(EM_DIAGRAM):   end;
65660     +else do;
MPRINT(EM_DIAGRAM):   else do;
65661     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
65662     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
65663     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65664     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
65665     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
65666     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
65667     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
65668     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
65669     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65670     +         end;
MPRINT(EM_DIAGRAM):   end;
65671     +         else do;
MPRINT(EM_DIAGRAM):   else do;
65672     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
65673     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
65674     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65675     +            end;
MPRINT(EM_DIAGRAM):   end;
65676     +         end;
MPRINT(EM_DIAGRAM):   end;
65677     +      end;
MPRINT(EM_DIAGRAM):   end;
65678     +      else do;
MPRINT(EM_DIAGRAM):   else do;
65679     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
65680     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
65681     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65682     +         end;
MPRINT(EM_DIAGRAM):   end;
65683     +      end;
MPRINT(EM_DIAGRAM):   end;
65684     +   end;
MPRINT(EM_DIAGRAM):   end;
65685     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65686     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
65687     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
65688     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65689     +      end;
MPRINT(EM_DIAGRAM):   end;
65690     +      else do;
MPRINT(EM_DIAGRAM):   else do;
65691     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
65692     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
65693     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
65694     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
65695     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
65696     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65697     +         end;
MPRINT(EM_DIAGRAM):   end;
65698     +      end;
MPRINT(EM_DIAGRAM):   end;
65699     +   end;
MPRINT(EM_DIAGRAM):   end;
65700     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
65701     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
65702     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
65703     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
65704     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
65705     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65706     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65707     +   end;
MPRINT(EM_DIAGRAM):   end;
65708     +end;
MPRINT(EM_DIAGRAM):   end;
65709     +
65710     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65711     +*** Checking missing input Interval
65712     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
65713     +
65714     +IF NMISS(
65715     +   AcceptedCmpTotal ,
65716     +   Age ,
65717     +   Frq ,
65718     +   Income ,
65719     +   Kidhome ,
65720     +   MntFishProducts ,
65721     +   MntFruits ,
65722     +   MntGoldProds ,
65723     +   MntSweetProducts ,
65724     +   MonthsAsCustomer ,
65725     +   NumDealsPurchases ,
65726     +   NumWebVisitsMonth ,
65727     +   RFMstat ,
65728     +   RMntFrq ,
65729     +   Recency ,
65730     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
65731     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
65732     +
65733     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65734     +END;
MPRINT(EM_DIAGRAM):   END;
65735     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65736     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
65737     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65738     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65739     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
65740     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
65741     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
65742     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
65743     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
65744     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
65745     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
65746     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
65747     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
65748     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
65749     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
65750     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
65751     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
65752     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
65753     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
65754     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
65755     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
65756     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
65757     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
65758     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
65759     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
65760     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
65761     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
65762     +END;
MPRINT(EM_DIAGRAM):   END;
65763     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65764     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
65765     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
65766     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
65767     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
65768     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
65769     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
65770     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
65771     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
65772     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
65773     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
65774     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
65775     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
65776     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
65777     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
65778     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
65779     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
65780     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
65781     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
65782     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
65783     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
65784     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
65785     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
65786     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
65787     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
65788     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
65789     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
65790     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
65791     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
65792     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
65793     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
65794     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
65795     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
65796     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
65797     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
65798     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
65799     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
65800     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
65801     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
65802     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
65803     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
65804     +END;
MPRINT(EM_DIAGRAM):   END;
65805     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65806     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
65807     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65808     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65809     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
65810     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65811     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65812     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
65813     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65814     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65815     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
65816     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
65817     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
65818     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
65819     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
65820     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
65821     +          +     0.07696704519183 * S_MonthsAsCustomer
65822     +          +     0.06885982009617 * S_NumDealsPurchases
65823     +          +     0.18284147478918 * S_NumWebVisitsMonth
65824     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
65825     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
65826     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
65827     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
65828     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
65829     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
65830     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
65831     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
65832     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
65833     +          +     0.19400730773464 * S_MonthsAsCustomer
65834     +          +    -1.36455521037197 * S_NumDealsPurchases
65835     +          +    -1.07068059346196 * S_NumWebVisitsMonth
65836     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
65837     +        S_RMntFrq  +     1.36066079800227 * S_Recency
65838     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
65839     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
65840     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
65841     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
65842     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
65843     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
65844     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
65845     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
65846     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
65847     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
65848     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
65849     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
65850     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
65851     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
65852     +          +     0.23432241402098 * Marital_StatusDivorced
65853     +          +    -0.46302700269027 * Marital_StatusMarried
65854     +          +      0.4032168653504 * Marital_StatusSingle
65855     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
65856     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
65857     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
65858     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
65859     +          +    -0.31347503340603 * Marital_StatusDivorced
65860     +          +    -0.20319530959178 * Marital_StatusMarried
65861     +          +     0.48298350411196 * Marital_StatusSingle
65862     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
65863     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
65864     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
65865     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
65866     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
65867     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
65868     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
65869     +END;
MPRINT(EM_DIAGRAM):   END;
65870     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65871     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
65872     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
65873     +END;
MPRINT(EM_DIAGRAM):   END;
65874     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65875     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
65876     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65877     +
65878     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
65879     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
65880     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
65881     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
65882     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
65883     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65884     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
65885     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
65886     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
65887     +end;
MPRINT(EM_DIAGRAM):   end;
65888     +else do;
MPRINT(EM_DIAGRAM):   else do;
65889     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
65890     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
65891     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
65892     +   end;
MPRINT(EM_DIAGRAM):   end;
65893     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
65894     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
65895     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
65896     +   end;
MPRINT(EM_DIAGRAM):   end;
65897     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65898     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
65899     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
65900     +   end;
MPRINT(EM_DIAGRAM):   end;
65901     +end;
MPRINT(EM_DIAGRAM):   end;
65902     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65903     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
65904     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
65905     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
65906     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
65907     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
65908     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
65909     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
65910     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
65911     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
65912     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
65913     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
65914     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
65915     +END;
MPRINT(EM_DIAGRAM):   END;
65916     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65917     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
65918     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
65919     +END;
MPRINT(EM_DIAGRAM):   END;
65920     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
65921     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
65922     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
65923     +END;
MPRINT(EM_DIAGRAM):   END;
65924     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
65925     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
65926     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
65927     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
65928     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
65929     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
65930     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
65931     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65932     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
65933     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65934     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
65935     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
65936     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
65937     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
65938     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
65939     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
65940     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
65941     +END;
MPRINT(EM_DIAGRAM):   END;
65942     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
65943     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
65944     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
65945     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
65946     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
65947     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65948     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
65949     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65950     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
65951     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
65952     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
65953     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
65954     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65955     +* Renaming Into variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural38;
65956     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65957     +length AutoNeural38_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural38_I_DepVar $32;
65958     +drop AutoNeural38_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_I_DepVar;
65959     +AutoNeural38_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural38_I_DepVar = I_DepVar;
65960     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65961     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
65962     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65963     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
65964     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
65965     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
65966     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65967     +* Ensmbl56: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Scoring Code of model 7 of 7;
65968     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65969     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65970     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
65971     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
65972     +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
65973     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65974     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
65975     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
65976     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
65977     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
65978     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
65979     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
65980     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
65981     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
65982     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
65983     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
65984     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
65985     +LENGTH _WARN_ $4
65986     +      F_DepVar  $ 12
65987     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
65988     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
65989     +
65990     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
65991     +
65992     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
65993     +
65994     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
65995     +
65996     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
65997     +
65998     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
65999     +
66000     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
66001     +
66002     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
66003     +
66004     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
66005     +
66006     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
66007     +
66008     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
66009     +
66010     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
66011     +
66012     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
66013     +
66014     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
66015     +
66016     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
66017     +
66018     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
66019     +
66020     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
66021     +
66022     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
66023     +
66024     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
66025     +
66026     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
66027     +
66028     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
66029     +
66030     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
66031     +
66032     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
66033     +
66034     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
66035     +
66036     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
66037     +
66038     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
66039     +
66040     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
66041     +
66042     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
66043     +
66044     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
66045     +
66046     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
66047     +
66048     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
66049     +
66050     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
66051     +
66052     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
66053     +
66054     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
66055     +
66056     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
66057     +
66058     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
66059     +
66060     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
66061     +
66062     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
66063     +
66064     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
66065     +
66066     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
66067     +
66068     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
66069     +
66070     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
66071     +
66072     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
66073     +
66074     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
66075     +
66076     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
66077     +
66078     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
66079     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
66080     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
66081     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
66082     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66083     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66084     +end;
MPRINT(EM_DIAGRAM):   end;
66085     +else do;
MPRINT(EM_DIAGRAM):   else do;
66086     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66087     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
66088     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66089     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66090     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
66091     +   end;
MPRINT(EM_DIAGRAM):   end;
66092     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66093     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
66094     +   end;
MPRINT(EM_DIAGRAM):   end;
66095     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66096     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
66097     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66098     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66099     +   end;
MPRINT(EM_DIAGRAM):   end;
66100     +end;
MPRINT(EM_DIAGRAM):   end;
66101     +
66102     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
66103     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
66104     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
66105     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
66106     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66107     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66108     +end;
MPRINT(EM_DIAGRAM):   end;
66109     +else do;
MPRINT(EM_DIAGRAM):   else do;
66110     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66111     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
66112     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66113     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66114     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
66115     +   end;
MPRINT(EM_DIAGRAM):   end;
66116     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66117     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
66118     +   end;
MPRINT(EM_DIAGRAM):   end;
66119     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66120     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
66121     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66122     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66123     +   end;
MPRINT(EM_DIAGRAM):   end;
66124     +end;
MPRINT(EM_DIAGRAM):   end;
66125     +
66126     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
66127     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
66128     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
66129     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
66130     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66131     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66132     +end;
MPRINT(EM_DIAGRAM):   end;
66133     +else do;
MPRINT(EM_DIAGRAM):   else do;
66134     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66135     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
66136     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66137     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66138     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
66139     +   end;
MPRINT(EM_DIAGRAM):   end;
66140     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66141     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
66142     +   end;
MPRINT(EM_DIAGRAM):   end;
66143     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66144     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
66145     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66146     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66147     +   end;
MPRINT(EM_DIAGRAM):   end;
66148     +end;
MPRINT(EM_DIAGRAM):   end;
66149     +
66150     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
66151     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
66152     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
66153     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
66154     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66155     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66156     +end;
MPRINT(EM_DIAGRAM):   end;
66157     +else do;
MPRINT(EM_DIAGRAM):   else do;
66158     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66159     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
66160     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66161     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66162     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
66163     +   end;
MPRINT(EM_DIAGRAM):   end;
66164     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66165     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
66166     +   end;
MPRINT(EM_DIAGRAM):   end;
66167     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66168     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
66169     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66170     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66171     +   end;
MPRINT(EM_DIAGRAM):   end;
66172     +end;
MPRINT(EM_DIAGRAM):   end;
66173     +
66174     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
66175     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
66176     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
66177     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
66178     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66179     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66180     +end;
MPRINT(EM_DIAGRAM):   end;
66181     +else do;
MPRINT(EM_DIAGRAM):   else do;
66182     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66183     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
66184     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66185     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66186     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
66187     +   end;
MPRINT(EM_DIAGRAM):   end;
66188     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66189     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
66190     +   end;
MPRINT(EM_DIAGRAM):   end;
66191     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66192     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
66193     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66194     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66195     +   end;
MPRINT(EM_DIAGRAM):   end;
66196     +end;
MPRINT(EM_DIAGRAM):   end;
66197     +
66198     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
66199     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
66200     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
66201     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
66202     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66203     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66204     +end;
MPRINT(EM_DIAGRAM):   end;
66205     +else do;
MPRINT(EM_DIAGRAM):   else do;
66206     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66207     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
66208     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66209     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66210     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
66211     +   end;
MPRINT(EM_DIAGRAM):   end;
66212     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66213     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
66214     +   end;
MPRINT(EM_DIAGRAM):   end;
66215     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66216     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
66217     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66218     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66219     +   end;
MPRINT(EM_DIAGRAM):   end;
66220     +end;
MPRINT(EM_DIAGRAM):   end;
66221     +
66222     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
66223     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
66224     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
66225     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
66226     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66227     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66228     +end;
MPRINT(EM_DIAGRAM):   end;
66229     +else do;
MPRINT(EM_DIAGRAM):   else do;
66230     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66231     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
66232     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66233     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
66234     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
66235     +   end;
MPRINT(EM_DIAGRAM):   end;
66236     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
66237     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
66238     +   end;
MPRINT(EM_DIAGRAM):   end;
66239     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66240     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
66241     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66242     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66243     +   end;
MPRINT(EM_DIAGRAM):   end;
66244     +end;
MPRINT(EM_DIAGRAM):   end;
66245     +
66246     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
66247     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
66248     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
66249     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
66250     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
66251     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
66252     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
66253     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
66254     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
66255     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
66256     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
66257     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
66258     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66259     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66260     +end;
MPRINT(EM_DIAGRAM):   end;
66261     +else do;
MPRINT(EM_DIAGRAM):   else do;
66262     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
66263     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
66264     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66265     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
66266     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
66267     +   end;
MPRINT(EM_DIAGRAM):   end;
66268     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
66269     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
66270     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
66271     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
66272     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
66273     +   end;
MPRINT(EM_DIAGRAM):   end;
66274     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
66275     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
66276     +   end;
MPRINT(EM_DIAGRAM):   end;
66277     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
66278     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
66279     +   end;
MPRINT(EM_DIAGRAM):   end;
66280     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
66281     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
66282     +   end;
MPRINT(EM_DIAGRAM):   end;
66283     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66284     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
66285     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
66286     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
66287     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
66288     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66289     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66290     +   end;
MPRINT(EM_DIAGRAM):   end;
66291     +end;
MPRINT(EM_DIAGRAM):   end;
66292     +
66293     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
66294     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
66295     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
66296     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
66297     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
66298     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
66299     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
66300     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
66301     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
66302     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
66303     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
66304     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
66305     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
66306     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66307     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66308     +end;
MPRINT(EM_DIAGRAM):   end;
66309     +else do;
MPRINT(EM_DIAGRAM):   else do;
66310     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
66311     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
66312     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66313     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
66314     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
66315     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
66316     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
66317     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
66318     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66319     +         end;
MPRINT(EM_DIAGRAM):   end;
66320     +         else do;
MPRINT(EM_DIAGRAM):   else do;
66321     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
66322     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
66323     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66324     +            end;
MPRINT(EM_DIAGRAM):   end;
66325     +         end;
MPRINT(EM_DIAGRAM):   end;
66326     +      end;
MPRINT(EM_DIAGRAM):   end;
66327     +      else do;
MPRINT(EM_DIAGRAM):   else do;
66328     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
66329     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
66330     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66331     +         end;
MPRINT(EM_DIAGRAM):   end;
66332     +      end;
MPRINT(EM_DIAGRAM):   end;
66333     +   end;
MPRINT(EM_DIAGRAM):   end;
66334     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66335     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
66336     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
66337     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66338     +      end;
MPRINT(EM_DIAGRAM):   end;
66339     +      else do;
MPRINT(EM_DIAGRAM):   else do;
66340     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
66341     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
66342     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
66343     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
66344     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
66345     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66346     +         end;
MPRINT(EM_DIAGRAM):   end;
66347     +      end;
MPRINT(EM_DIAGRAM):   end;
66348     +   end;
MPRINT(EM_DIAGRAM):   end;
66349     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
66350     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
66351     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
66352     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
66353     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
66354     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66355     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66356     +   end;
MPRINT(EM_DIAGRAM):   end;
66357     +end;
MPRINT(EM_DIAGRAM):   end;
66358     +
66359     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66360     +*** Checking missing input Interval
66361     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
66362     +
66363     +IF NMISS(
66364     +   AcceptedCmpTotal ,
66365     +   Age ,
66366     +   Frq ,
66367     +   Income ,
66368     +   Kidhome ,
66369     +   MntFishProducts ,
66370     +   MntFruits ,
66371     +   MntGoldProds ,
66372     +   MntSweetProducts ,
66373     +   MonthsAsCustomer ,
66374     +   NumDealsPurchases ,
66375     +   NumWebVisitsMonth ,
66376     +   RFMstat ,
66377     +   RMntFrq ,
66378     +   Recency ,
66379     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
66380     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
66381     +
66382     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66383     +END;
MPRINT(EM_DIAGRAM):   END;
66384     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66385     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
66386     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66387     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66388     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
66389     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
66390     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
66391     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
66392     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
66393     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
66394     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
66395     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
66396     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
66397     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
66398     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
66399     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
66400     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
66401     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
66402     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
66403     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
66404     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
66405     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
66406     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
66407     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
66408     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
66409     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
66410     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
66411     +END;
MPRINT(EM_DIAGRAM):   END;
66412     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66413     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
66414     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
66415     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
66416     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
66417     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
66418     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
66419     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
66420     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
66421     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
66422     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
66423     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
66424     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
66425     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
66426     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
66427     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
66428     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
66429     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
66430     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
66431     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
66432     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
66433     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
66434     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
66435     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
66436     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
66437     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
66438     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
66439     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
66440     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
66441     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
66442     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
66443     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
66444     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
66445     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
66446     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
66447     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
66448     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
66449     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
66450     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
66451     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
66452     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
66453     +END;
MPRINT(EM_DIAGRAM):   END;
66454     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66455     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
66456     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66457     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66458     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
66459     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66460     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66461     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
66462     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66463     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66464     +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
66465     +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
66466     +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
66467     +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
66468     +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
66469     +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
66470     +          +    -0.01191239814261 * S_MonthsAsCustomer
66471     +          +      -0.307259983666 * S_NumDealsPurchases
66472     +          +    -0.23972300101674 * S_NumWebVisitsMonth
66473     +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
66474     +        S_RMntFrq  +     0.32671320165482 * S_Recency
66475     +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
66476     +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
66477     +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
66478     +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
66479     +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
66480     +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
66481     +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
66482     +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
66483     +        EducationGraduation  +    -0.14651231631393 * EducationMaster
66484     +          +     -0.0692762335753 * Marital_StatusDivorced
66485     +          +     0.02472293911071 * Marital_StatusMarried
66486     +          +     0.04038393550437 * Marital_StatusSingle
66487     +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
66488     +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
66489     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
66490     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
66491     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
66492     +END;
MPRINT(EM_DIAGRAM):   END;
66493     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66494     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
66495     +END;
MPRINT(EM_DIAGRAM):   END;
66496     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66497     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
66498     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66499     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66500     +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
66501     +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
66502     +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
66503     +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
66504     +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
66505     +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
66506     +          +     0.14524334187971 * S_MonthsAsCustomer
66507     +          +    -0.58464031025411 * S_NumDealsPurchases
66508     +          +    -0.10768856151333 * S_NumWebVisitsMonth
66509     +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
66510     +        S_RMntFrq  +    -0.04430281297191 * S_Recency
66511     +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
66512     +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
66513     +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
66514     +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
66515     +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
66516     +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
66517     +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
66518     +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
66519     +        EducationGraduation  +    -0.37768027773032 * EducationMaster
66520     +          +     0.07007941100006 * Marital_StatusDivorced
66521     +          +     -0.7850554528889 * Marital_StatusMarried
66522     +          +     1.17661634109847 * Marital_StatusSingle
66523     +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
66524     +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
66525     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
66526     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
66527     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
66528     +END;
MPRINT(EM_DIAGRAM):   END;
66529     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66530     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
66531     +END;
MPRINT(EM_DIAGRAM):   END;
66532     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66533     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
66534     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66535     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66536     +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
66537     +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
66538     +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
66539     +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
66540     +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
66541     +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
66542     +          +    -2.17154324602167 * S_MonthsAsCustomer
66543     +          +    -1.39930460918007 * S_NumDealsPurchases
66544     +          +    -0.16044576482901 * S_NumWebVisitsMonth
66545     +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
66546     +        S_RMntFrq  +    -0.73252715992964 * S_Recency
66547     +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
66548     +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
66549     +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
66550     +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
66551     +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
66552     +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
66553     +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
66554     +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
66555     +        EducationGraduation  +    -0.35403398893388 * EducationMaster
66556     +          +     0.83271778325587 * Marital_StatusDivorced
66557     +          +     0.79137899511518 * Marital_StatusMarried
66558     +          +    -0.51320080030576 * Marital_StatusSingle
66559     +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
66560     +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
66561     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
66562     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
66563     +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
66564     +END;
MPRINT(EM_DIAGRAM):   END;
66565     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66566     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
66567     +END;
MPRINT(EM_DIAGRAM):   END;
66568     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66569     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
66570     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66571     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66572     +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
66573     +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
66574     +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
66575     +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
66576     +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
66577     +END;
MPRINT(EM_DIAGRAM):   END;
66578     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66579     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
66580     +END;
MPRINT(EM_DIAGRAM):   END;
66581     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66582     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
66583     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66584     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66585     +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
66586     +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
66587     +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
66588     +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
66589     +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
66590     +END;
MPRINT(EM_DIAGRAM):   END;
66591     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66592     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
66593     +END;
MPRINT(EM_DIAGRAM):   END;
66594     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66595     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
66596     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66597     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66598     +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
66599     +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
66600     +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
66601     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
66602     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
66603     +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
66604     +END;
MPRINT(EM_DIAGRAM):   END;
66605     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66606     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
66607     +END;
MPRINT(EM_DIAGRAM):   END;
66608     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66609     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
66610     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66611     +
66612     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
66613     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
66614     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
66615     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
66616     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
66617     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66618     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
66619     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
66620     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
66621     +end;
MPRINT(EM_DIAGRAM):   end;
66622     +else do;
MPRINT(EM_DIAGRAM):   else do;
66623     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
66624     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
66625     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
66626     +   end;
MPRINT(EM_DIAGRAM):   end;
66627     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
66628     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
66629     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
66630     +   end;
MPRINT(EM_DIAGRAM):   end;
66631     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66632     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
66633     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
66634     +   end;
MPRINT(EM_DIAGRAM):   end;
66635     +end;
MPRINT(EM_DIAGRAM):   end;
66636     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66637     +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
66638     +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
66639     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
66640     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
66641     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
66642     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
66643     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
66644     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
66645     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
66646     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
66647     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
66648     +END;
MPRINT(EM_DIAGRAM):   END;
66649     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66650     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
66651     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
66652     +END;
MPRINT(EM_DIAGRAM):   END;
66653     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
66654     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
66655     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
66656     +END;
MPRINT(EM_DIAGRAM):   END;
66657     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
66658     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
66659     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
66660     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
66661     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
66662     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
66663     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
66664     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66665     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
66666     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66667     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
66668     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
66669     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
66670     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
66671     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
66672     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
66673     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
66674     +END;
MPRINT(EM_DIAGRAM):   END;
66675     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
66676     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
66677     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
66678     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
66679     +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
66680     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66681     +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
66682     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66683     +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
66684     +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
66685     +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
66686     +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
66687     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66688     +* Renaming Into variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural37;
66689     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66690     +length AutoNeural37_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural37_I_DepVar $32;
66691     +drop AutoNeural37_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_I_DepVar;
66692     +AutoNeural37_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural37_I_DepVar = I_DepVar;
66693     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66694     +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
66695     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66696     +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
66697     +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
66698     +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
66699     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66700     +* Ensmbl56: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Voting to produce predicted target;
66701     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66702     +array Ensmbl56_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl56_post{2} _temporary_;
66703     +array Ensmbl56_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl56_count{2} _temporary_;
66704     +array Ensmbl56_level{2} $32 _temporary_ (
66705     +"1"
66706     +"0"
66707     +);
MPRINT(EM_DIAGRAM):   array Ensmbl56_level{2} $32 _temporary_ ( "1" "0" );
66708     +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
66709     +Ensmbl56_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{i} = 0;
66710     +Ensmbl56_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{i} = 0;
66711     +end;
MPRINT(EM_DIAGRAM):   end;
66712     +if AutoNeural36_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural36_I_DepVar = Ensmbl56_level{1} then do;
66713     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
66714     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural36_P_DepVar1;
66715     +end;
MPRINT(EM_DIAGRAM):   end;
66716     +if AutoNeural35_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural35_I_DepVar = Ensmbl56_level{1} then do;
66717     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
66718     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural35_P_DepVar1;
66719     +end;
MPRINT(EM_DIAGRAM):   end;
66720     +if AutoNeural34_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural34_I_DepVar = Ensmbl56_level{1} then do;
66721     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
66722     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural34_P_DepVar1;
66723     +end;
MPRINT(EM_DIAGRAM):   end;
66724     +if AutoNeural40_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural40_I_DepVar = Ensmbl56_level{1} then do;
66725     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
66726     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural40_P_DepVar1;
66727     +end;
MPRINT(EM_DIAGRAM):   end;
66728     +if AutoNeural39_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural39_I_DepVar = Ensmbl56_level{1} then do;
66729     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
66730     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural39_P_DepVar1;
66731     +end;
MPRINT(EM_DIAGRAM):   end;
66732     +if AutoNeural38_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural38_I_DepVar = Ensmbl56_level{1} then do;
66733     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
66734     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural38_P_DepVar1;
66735     +end;
MPRINT(EM_DIAGRAM):   end;
66736     +if AutoNeural37_I_DepVar = Ensmbl56_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural37_I_DepVar = Ensmbl56_level{1} then do;
66737     +Ensmbl56_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{1} + 1;
66738     +Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{1}=Ensmbl56_post{1}+ AutoNeural37_P_DepVar1;
66739     +end;
MPRINT(EM_DIAGRAM):   end;
66740     +if AutoNeural36_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural36_I_DepVar = Ensmbl56_level{2} then do;
66741     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
66742     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural36_P_DepVar0;
66743     +end;
MPRINT(EM_DIAGRAM):   end;
66744     +if AutoNeural35_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural35_I_DepVar = Ensmbl56_level{2} then do;
66745     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
66746     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural35_P_DepVar0;
66747     +end;
MPRINT(EM_DIAGRAM):   end;
66748     +if AutoNeural34_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural34_I_DepVar = Ensmbl56_level{2} then do;
66749     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
66750     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural34_P_DepVar0;
66751     +end;
MPRINT(EM_DIAGRAM):   end;
66752     +if AutoNeural40_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural40_I_DepVar = Ensmbl56_level{2} then do;
66753     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
66754     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural40_P_DepVar0;
66755     +end;
MPRINT(EM_DIAGRAM):   end;
66756     +if AutoNeural39_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural39_I_DepVar = Ensmbl56_level{2} then do;
66757     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
66758     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural39_P_DepVar0;
66759     +end;
MPRINT(EM_DIAGRAM):   end;
66760     +if AutoNeural38_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural38_I_DepVar = Ensmbl56_level{2} then do;
66761     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
66762     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural38_P_DepVar0;
66763     +end;
MPRINT(EM_DIAGRAM):   end;
66764     +if AutoNeural37_I_DepVar = Ensmbl56_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural37_I_DepVar = Ensmbl56_level{2} then do;
66765     +Ensmbl56_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl56_count{2} + 1;
66766     +Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl56_post{2}=Ensmbl56_post{2}+ AutoNeural37_P_DepVar0;
66767     +end;
MPRINT(EM_DIAGRAM):   end;
66768     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66769     +* Ensmbl56: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Determine Into Variable;
66770     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66771     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
66772     +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
66773     +vote_count = max(
66774     +Ensmbl56_count{1} ,
66775     +Ensmbl56_count{2}
66776     +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl56_count{1} , Ensmbl56_count{2} );
66777     +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
66778     +if Ensmbl56_count{i}=vote_count and Ensmbl56_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl56_count{i}=vote_count and Ensmbl56_post{i}>vote_post then do;
66779     +I_DepVar = Ensmbl56_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl56_level{i};
66780     +vote_post = Ensmbl56_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl56_count{i};
66781     +end;
MPRINT(EM_DIAGRAM):   end;
66782     +end;
MPRINT(EM_DIAGRAM):   end;
66783     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66784     +* Ensmbl56: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Compute posterior vars using models predicting the chosen 
level;
66785     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66786     +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
66787     +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
66788     +if I_DepVar = AutoNeural36_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural36_I_DepVar then do;
66789     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural36_P_DepVar1;
66790     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural36_P_DepVar0;
66791     +end;
MPRINT(EM_DIAGRAM):   end;
66792     +if I_DepVar = AutoNeural35_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural35_I_DepVar then do;
66793     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural35_P_DepVar1;
66794     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural35_P_DepVar0;
66795     +end;
MPRINT(EM_DIAGRAM):   end;
66796     +if I_DepVar = AutoNeural34_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural34_I_DepVar then do;
66797     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural34_P_DepVar1;
66798     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural34_P_DepVar0;
66799     +end;
MPRINT(EM_DIAGRAM):   end;
66800     +if I_DepVar = AutoNeural40_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural40_I_DepVar then do;
66801     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural40_P_DepVar1;
66802     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural40_P_DepVar0;
66803     +end;
MPRINT(EM_DIAGRAM):   end;
66804     +if I_DepVar = AutoNeural39_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural39_I_DepVar then do;
66805     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural39_P_DepVar1;
66806     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural39_P_DepVar0;
66807     +end;
MPRINT(EM_DIAGRAM):   end;
66808     +if I_DepVar = AutoNeural38_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural38_I_DepVar then do;
66809     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural38_P_DepVar1;
66810     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural38_P_DepVar0;
66811     +end;
MPRINT(EM_DIAGRAM):   end;
66812     +if I_DepVar = AutoNeural37_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural37_I_DepVar then do;
66813     +P_DEPVAR1 = P_DEPVAR1 + AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural37_P_DepVar1;
66814     +P_DEPVAR0 = P_DEPVAR0 + AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural37_P_DepVar0;
66815     +end;
MPRINT(EM_DIAGRAM):   end;
66816     +* Ensmbl56: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Averaging posterior;
66817     +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
66818     +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
66819     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66820     +* Ensmbl56: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Producing Unformatted variable;
66821     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66822     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
66823     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
66824     +else
66825     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
66826     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66827     +* Ensmbl56: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing _WARN_ Variable;
66828     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66829     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
66830     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
66831     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
66832     +if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
66832    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
66833     +if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
66833    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
66834     +if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
66834    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
66835     +if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
66835    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
66836     +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
66836    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
66837     +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
66837    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
66838     +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
66838    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
66839     +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
66839    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
66840     +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
66840    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
66841     +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
66841    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
66842     +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
66842    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
66843     +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
66843    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
66844     +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
66844    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
66845     +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
66845    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
66846     +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
66846    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
66847     +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
66847    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
66848     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
66848    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
66849     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
66849    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
66850     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
66850    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
66851     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
66851    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
66852     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
66852    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
66853     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
66853    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
66854     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
66854    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
66855     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
66855    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
66856     +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
66856    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
66857     +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
66857    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
66858     +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
66858    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
66859     +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
66859    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
66860     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66861     +* Ensmbl56: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing Residual Vars;
66862     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66863     +if
66864     +F_DepVar NE '1'
66865     +AND F_DepVar NE '0'
66866     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
66867     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
66868     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
66869     +end;
MPRINT(EM_DIAGRAM):   end;
66870     +else do;
MPRINT(EM_DIAGRAM):   else do;
66871     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
66872     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
66873     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
66874     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
66875     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
66876     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
66877     +END;
MPRINT(EM_DIAGRAM):   END;
66878     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
66879      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL56_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL36_VALIDATE.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.35 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
66880      quit;
66881      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl56_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl56_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl56_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
66941      filename _pref
66941    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas";
66942      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
66943      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas.
66944     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
66945     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
66946     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
66947     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
66948     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
66949     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
66950     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
66951     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
66952     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
66953     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
66954     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
66955     +LENGTH _WARN_ $4
66956     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
66957     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
66958     +
66959     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
66960     +
66961     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
66962     +
66963     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
66964     +
66965     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
66966     +
66967     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
66968     +
66969     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
66970     +
66971     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
66972     +
66973     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
66974     +
66975     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
66976     +
66977     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
66978     +
66979     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
66980     +
66981     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
66982     +
66983     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
66984     +
66985     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
66986     +
66987     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
66988     +
66989     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
66990     +
66991     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
66992     +
66993     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
66994     +
66995     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
66996     +
66997     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
66998     +
66999     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
67000     +
67001     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
67002     +
67003     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
67004     +
67005     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
67006     +
67007     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
67008     +
67009     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
67010     +
67011     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
67012     +
67013     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
67014     +
67015     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
67016     +
67017     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
67018     +
67019     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
67020     +
67021     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
67022     +
67023     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
67024     +
67025     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
67026     +
67027     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
67028     +
67029     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
67030     +
67031     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
67032     +
67033     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
67034     +
67035     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
67036     +
67037     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
67038     +
67039     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
67040     +
67041     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
67042     +
67043     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
67044     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
67045     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
67046     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
67047     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67048     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67049     +end;
MPRINT(EM_DIAGRAM):   end;
67050     +else do;
MPRINT(EM_DIAGRAM):   else do;
67051     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67052     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
67053     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67054     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67055     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
67056     +   end;
MPRINT(EM_DIAGRAM):   end;
67057     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67058     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
67059     +   end;
MPRINT(EM_DIAGRAM):   end;
67060     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67061     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
67062     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67063     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67064     +   end;
MPRINT(EM_DIAGRAM):   end;
67065     +end;
MPRINT(EM_DIAGRAM):   end;
67066     +
67067     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
67068     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
67069     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
67070     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
67071     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67072     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67073     +end;
MPRINT(EM_DIAGRAM):   end;
67074     +else do;
MPRINT(EM_DIAGRAM):   else do;
67075     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67076     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
67077     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67078     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67079     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
67080     +   end;
MPRINT(EM_DIAGRAM):   end;
67081     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67082     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
67083     +   end;
MPRINT(EM_DIAGRAM):   end;
67084     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67085     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
67086     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67087     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67088     +   end;
MPRINT(EM_DIAGRAM):   end;
67089     +end;
MPRINT(EM_DIAGRAM):   end;
67090     +
67091     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
67092     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
67093     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
67094     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
67095     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67096     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67097     +end;
MPRINT(EM_DIAGRAM):   end;
67098     +else do;
MPRINT(EM_DIAGRAM):   else do;
67099     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67100     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
67101     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67102     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67103     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
67104     +   end;
MPRINT(EM_DIAGRAM):   end;
67105     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67106     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
67107     +   end;
MPRINT(EM_DIAGRAM):   end;
67108     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67109     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
67110     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67111     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67112     +   end;
MPRINT(EM_DIAGRAM):   end;
67113     +end;
MPRINT(EM_DIAGRAM):   end;
67114     +
67115     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
67116     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
67117     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
67118     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
67119     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67120     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67121     +end;
MPRINT(EM_DIAGRAM):   end;
67122     +else do;
MPRINT(EM_DIAGRAM):   else do;
67123     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67124     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
67125     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67126     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67127     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
67128     +   end;
MPRINT(EM_DIAGRAM):   end;
67129     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67130     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
67131     +   end;
MPRINT(EM_DIAGRAM):   end;
67132     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67133     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
67134     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67135     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67136     +   end;
MPRINT(EM_DIAGRAM):   end;
67137     +end;
MPRINT(EM_DIAGRAM):   end;
67138     +
67139     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
67140     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
67141     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
67142     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
67143     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67144     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67145     +end;
MPRINT(EM_DIAGRAM):   end;
67146     +else do;
MPRINT(EM_DIAGRAM):   else do;
67147     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67148     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
67149     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67150     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67151     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
67152     +   end;
MPRINT(EM_DIAGRAM):   end;
67153     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67154     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
67155     +   end;
MPRINT(EM_DIAGRAM):   end;
67156     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67157     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
67158     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67159     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67160     +   end;
MPRINT(EM_DIAGRAM):   end;
67161     +end;
MPRINT(EM_DIAGRAM):   end;
67162     +
67163     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
67164     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
67165     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
67166     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
67167     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67168     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67169     +end;
MPRINT(EM_DIAGRAM):   end;
67170     +else do;
MPRINT(EM_DIAGRAM):   else do;
67171     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67172     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
67173     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67174     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67175     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
67176     +   end;
MPRINT(EM_DIAGRAM):   end;
67177     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67178     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
67179     +   end;
MPRINT(EM_DIAGRAM):   end;
67180     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67181     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
67182     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67183     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67184     +   end;
MPRINT(EM_DIAGRAM):   end;
67185     +end;
MPRINT(EM_DIAGRAM):   end;
67186     +
67187     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
67188     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
67189     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
67190     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
67191     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67192     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67193     +end;
MPRINT(EM_DIAGRAM):   end;
67194     +else do;
MPRINT(EM_DIAGRAM):   else do;
67195     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67196     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
67197     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67198     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
67199     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
67200     +   end;
MPRINT(EM_DIAGRAM):   end;
67201     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
67202     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
67203     +   end;
MPRINT(EM_DIAGRAM):   end;
67204     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67205     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
67206     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67207     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67208     +   end;
MPRINT(EM_DIAGRAM):   end;
67209     +end;
MPRINT(EM_DIAGRAM):   end;
67210     +
67211     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
67212     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
67213     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
67214     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
67215     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
67216     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
67217     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
67218     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
67219     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
67220     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
67221     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
67222     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
67223     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67224     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67225     +end;
MPRINT(EM_DIAGRAM):   end;
67226     +else do;
MPRINT(EM_DIAGRAM):   else do;
67227     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
67228     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
67229     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67230     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
67231     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
67232     +   end;
MPRINT(EM_DIAGRAM):   end;
67233     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
67234     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
67235     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
67236     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
67237     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
67238     +   end;
MPRINT(EM_DIAGRAM):   end;
67239     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
67240     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
67241     +   end;
MPRINT(EM_DIAGRAM):   end;
67242     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
67243     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
67244     +   end;
MPRINT(EM_DIAGRAM):   end;
67245     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
67246     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
67247     +   end;
MPRINT(EM_DIAGRAM):   end;
67248     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67249     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
67250     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
67251     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
67252     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
67253     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67254     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67255     +   end;
MPRINT(EM_DIAGRAM):   end;
67256     +end;
MPRINT(EM_DIAGRAM):   end;
67257     +
67258     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
67259     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
67260     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
67261     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
67262     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
67263     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
67264     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
67265     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
67266     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
67267     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
67268     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
67269     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
67270     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
67271     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67272     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67273     +end;
MPRINT(EM_DIAGRAM):   end;
67274     +else do;
MPRINT(EM_DIAGRAM):   else do;
67275     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
67276     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
67277     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67278     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
67279     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
67280     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
67281     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
67282     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
67283     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67284     +         end;
MPRINT(EM_DIAGRAM):   end;
67285     +         else do;
MPRINT(EM_DIAGRAM):   else do;
67286     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
67287     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
67288     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67289     +            end;
MPRINT(EM_DIAGRAM):   end;
67290     +         end;
MPRINT(EM_DIAGRAM):   end;
67291     +      end;
MPRINT(EM_DIAGRAM):   end;
67292     +      else do;
MPRINT(EM_DIAGRAM):   else do;
67293     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
67294     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
67295     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67296     +         end;
MPRINT(EM_DIAGRAM):   end;
67297     +      end;
MPRINT(EM_DIAGRAM):   end;
67298     +   end;
MPRINT(EM_DIAGRAM):   end;
67299     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67300     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
67301     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
67302     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67303     +      end;
MPRINT(EM_DIAGRAM):   end;
67304     +      else do;
MPRINT(EM_DIAGRAM):   else do;
67305     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
67306     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
67307     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
67308     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
67309     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
67310     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67311     +         end;
MPRINT(EM_DIAGRAM):   end;
67312     +      end;
MPRINT(EM_DIAGRAM):   end;
67313     +   end;
MPRINT(EM_DIAGRAM):   end;
67314     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
67315     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
67316     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
67317     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
67318     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
67319     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67320     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67321     +   end;
MPRINT(EM_DIAGRAM):   end;
67322     +end;
MPRINT(EM_DIAGRAM):   end;
67323     +
67324     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67325     +*** Checking missing input Interval
67326     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
67327     +
67328     +IF NMISS(
67329     +   AcceptedCmpTotal ,
67330     +   Age ,
67331     +   Frq ,
67332     +   Income ,
67333     +   Kidhome ,
67334     +   MntFishProducts ,
67335     +   MntFruits ,
67336     +   MntGoldProds ,
67337     +   MntSweetProducts ,
67338     +   MonthsAsCustomer ,
67339     +   NumDealsPurchases ,
67340     +   NumWebVisitsMonth ,
67341     +   RFMstat ,
67342     +   RMntFrq ,
67343     +   Recency ,
67344     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
67345     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
67346     +
67347     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67348     +END;
MPRINT(EM_DIAGRAM):   END;
67349     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67350     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
67351     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67352     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
67353     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
67354     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
67355     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
67356     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
67357     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
67358     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
67359     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
67360     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
67361     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
67362     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
67363     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
67364     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
67365     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
67366     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
67367     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
67368     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
67369     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
67370     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
67371     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
67372     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
67373     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
67374     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
67375     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
67376     +END;
MPRINT(EM_DIAGRAM):   END;
67377     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
67378     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
67379     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
67380     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
67381     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
67382     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
67383     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
67384     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
67385     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
67386     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
67387     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
67388     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
67389     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
67390     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
67391     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
67392     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
67393     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
67394     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
67395     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
67396     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
67397     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
67398     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
67399     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
67400     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
67401     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
67402     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
67403     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
67404     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
67405     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
67406     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
67407     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
67408     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
67409     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
67410     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
67411     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
67412     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
67413     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
67414     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
67415     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
67416     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
67417     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
67418     +END;
MPRINT(EM_DIAGRAM):   END;
67419     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67420     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
67421     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67422     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67423     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
67424     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67425     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67426     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
67427     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67428     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
67429     +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
67430     +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
67431     +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
67432     +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
67433     +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
67434     +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
67435     +          +     1.47210732135355 * S_MonthsAsCustomer
67436     +          +     0.85741098948561 * S_NumDealsPurchases
67437     +          +     0.47124997442086 * S_NumWebVisitsMonth
67438     +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
67439     +        S_RMntFrq  +     0.42017826752434 * S_Recency
67440     +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
67441     +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
67442     +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
67443     +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
67444     +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
67445     +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
67446     +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
67447     +          +     0.74811152666015 * S_MonthsAsCustomer
67448     +          +    -0.13168708818154 * S_NumDealsPurchases
67449     +          +    -0.51935779196522 * S_NumWebVisitsMonth
67450     +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
67451     +        S_RMntFrq  +     1.96758846931972 * S_Recency
67452     +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
67453     +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
67454     +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
67455     +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
67456     +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
67457     +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
67458     +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
67459     +          +     0.11776941975292 * S_MonthsAsCustomer
67460     +          +    -0.69977862189457 * S_NumDealsPurchases
67461     +          +    -0.26676589341422 * S_NumWebVisitsMonth
67462     +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
67463     +        S_RMntFrq  +     1.53487074713045 * S_Recency
67464     +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
67465     +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
67466     +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
67467     +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
67468     +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
67469     +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
67470     +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
67471     +          +     0.46606320110885 * S_MonthsAsCustomer
67472     +          +     1.64885970718717 * S_NumDealsPurchases
67473     +          +     1.70233049691156 * S_NumWebVisitsMonth
67474     +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
67475     +        S_RMntFrq  +    -1.33025042025966 * S_Recency
67476     +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
67477     +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
67478     +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
67479     +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
67480     +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
67481     +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
67482     +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
67483     +          +     0.25703511103123 * S_MonthsAsCustomer
67484     +          +     0.81449309285524 * S_NumDealsPurchases
67485     +          +     0.65863550896078 * S_NumWebVisitsMonth
67486     +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
67487     +        S_RMntFrq  +     0.35298837231553 * S_Recency
67488     +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
67489     +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
67490     +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
67491     +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
67492     +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
67493     +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
67494     +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
67495     +          +     0.79681190434731 * S_MonthsAsCustomer
67496     +          +    -0.93973916927987 * S_NumDealsPurchases
67497     +          +     1.37415777280471 * S_NumWebVisitsMonth
67498     +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
67499     +        S_RMntFrq  +     0.25579910148098 * S_Recency
67500     +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
67501     +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
67502     +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
67503     +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
67504     +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
67505     +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
67506     +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
67507     +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
67508     +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
67509     +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
67510     +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
67511     +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
67512     +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
67513     +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
67514     +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
67515     +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
67516     +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
67517     +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
67518     +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
67519     +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
67520     +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
67521     +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
67522     +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
67523     +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
67524     +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
67525     +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
67526     +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
67527     +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
67528     +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
67529     +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
67530     +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
67531     +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
67532     +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
67533     +        EducationGraduation  +     0.53978142914157 * EducationMaster
67534     +          +    -0.28915302940579 * Marital_StatusDivorced
67535     +          +     0.36400858753372 * Marital_StatusMarried
67536     +          +     0.64088916620982 * Marital_StatusSingle
67537     +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
67538     +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
67539     +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
67540     +        EducationGraduation  +     0.31774696403611 * EducationMaster
67541     +          +    -0.48311224079569 * Marital_StatusDivorced
67542     +          +     0.78522892664414 * Marital_StatusMarried
67543     +          +    -0.52144588286939 * Marital_StatusSingle
67544     +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
67545     +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
67546     +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
67547     +        EducationGraduation  +     1.62119993408702 * EducationMaster
67548     +          +    -1.10138941531054 * Marital_StatusDivorced
67549     +          +     1.91098461544032 * Marital_StatusMarried
67550     +          +    -1.96662881570281 * Marital_StatusSingle
67551     +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
67552     +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
67553     +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
67554     +        EducationGraduation  +    -0.47265183904634 * EducationMaster
67555     +          +    -0.26938567401241 * Marital_StatusDivorced
67556     +          +      0.5252138734125 * Marital_StatusMarried
67557     +          +    -0.77744801183604 * Marital_StatusSingle
67558     +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
67559     +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
67560     +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
67561     +        EducationGraduation  +     1.34706628408556 * EducationMaster
67562     +          +    -0.49116995167497 * Marital_StatusDivorced
67563     +          +     1.22243596432371 * Marital_StatusMarried
67564     +          +    -1.22268267917833 * Marital_StatusSingle
67565     +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
67566     +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
67567     +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
67568     +        EducationGraduation  +     0.19530936178176 * EducationMaster
67569     +          +    -0.21134253419933 * Marital_StatusDivorced
67570     +          +     0.87168965818013 * Marital_StatusMarried
67571     +          +     0.07539748751767 * Marital_StatusSingle
67572     +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
67573     +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
67574     +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
67575     +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
67576     +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
67577     +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
67578     +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
67579     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
67580     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
67581     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
67582     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
67583     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
67584     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
67585     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
67586     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
67587     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
67588     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
67589     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
67590     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
67591     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
67592     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
67593     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
67594     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
67595     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
67596     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
67597     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
67598     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
67599     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
67600     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
67601     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
67602     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
67603     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
67604     +END;
MPRINT(EM_DIAGRAM):   END;
67605     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
67606     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
67607     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
67608     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
67609     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
67610     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
67611     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
67612     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
67613     +END;
MPRINT(EM_DIAGRAM):   END;
67614     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67615     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
67616     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67617     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
67618     +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
67619     +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
67620     +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
67621     +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
67622     +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
67623     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
67624     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
67625     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
67626     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
67627     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
67628     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
67629     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
67630     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
67631     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
67632     +END;
MPRINT(EM_DIAGRAM):   END;
67633     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
67634     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
67635     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
67636     +END;
MPRINT(EM_DIAGRAM):   END;
67637     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
67638     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
67639     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
67640     +END;
MPRINT(EM_DIAGRAM):   END;
67641     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67642     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
67643     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67644     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
67645     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
67646     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
67647     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
67648     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
67649     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
67650     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
67651     +END;
MPRINT(EM_DIAGRAM):   END;
67652     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
67653     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
67654     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
67655     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
67656      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
67657      quit;
67658      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
67659      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
67660      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
67661      retain ID 2 Node "AutoNeural36";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural36";
67662      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
67663      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2595 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2595 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67664      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
67665      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67666      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2595 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2595 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67667      proc sort data=EMWS8.AutoNeural36_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural36_variableset out=_temp2(keep=NAME 
CREATOR);
67668      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67669      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL36_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

67670      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
67671      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
67672      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
67673      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67674      proc contents data=EMWS8.AutoNeural36_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural36_train out=_meta(keep=NAME) noprint;
67675      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

67676      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
67677      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67678      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67679      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
67680      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
67681      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67682      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 60 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 60 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67683      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
67684      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
67684    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1333 rows and 5 columns.

67685      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

67686      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
67687      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1333 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1333 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67688      filename _pref
67688    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
67689      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
67690      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
67691     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67692     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
67693     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67694     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
67695     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
67696     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
67697      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
67698      quit;
67699      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
67700      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
67701      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
67702      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
67703      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
67704      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67705      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
67706      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67707      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67708      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
67709      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67710      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67711      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
67712      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
67713      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
67714      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67715      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
67716      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

67717      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
67718      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67719      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67720      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
67721      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
67722      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67723      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67724      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
67725      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
67725    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

67726      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

67727      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
67728      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1337 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67729      filename _pref
67729    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
67730      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
67731      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
67732     +
67733     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
67734     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
67734    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
67735     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
67736     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
67737     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
67738     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
67739     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
67740      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
67741      quit;
67742      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
67743      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
67744      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
67745      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
67746      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
67747      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67748      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
67749      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67750      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67751      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
67752      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67753      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

67754      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
67755      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
67756      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
67757      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67758      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
67759      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67760      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
67761      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67762      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

67763      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
67764      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
67765      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67766      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67767      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
67768      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
67768    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

67769      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67770      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
67771      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1376 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67772      filename _pref
67772    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
67773      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
67774      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
67775     +
67776     +
67777     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
67778     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
67779     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
67780     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
67781     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
67782     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(EM_DIAGRAM):   /*-------------------------------------------------------------- * * 
name: dmnormcp.sas * update: 03Sep2002 * reference: * purpose: normalize category levels for 
EM scoring code * --------------------------------------------------------------*/
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
67783     +
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
67784     +
67785     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
67786     +drop _FILTERFMT2 ;
67787     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
67788     +length _FILTERNORM2  $32;
67789     +drop _FILTERNORM2 ;
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
67790     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
67791     +
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
67792     +
67793     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
67794     +drop _FILTERFMT3 ;
67795     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
67796     +length _FILTERNORM3  $32;
67797     +drop _FILTERNORM3 ;
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
67798     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
67799     +
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
67800     +
67801     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
67802     +drop _FILTERFMT4 ;
67803     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
67804     +length _FILTERNORM4  $32;
67805     +drop _FILTERNORM4 ;
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
67806     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
67807     +
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
67808     +
67809     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
67810     +drop _FILTERFMT5 ;
67811     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
67812     +length _FILTERNORM5  $32;
67813     +drop _FILTERNORM5 ;
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
67814     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
67815     +
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
67816     +
67817     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
67818     +drop _FILTERFMT6 ;
67819     +_FILTERFMT6= put(Complain,BEST.);
67820     +length _FILTERNORM6  $32;
67821     +drop _FILTERNORM6 ;
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
67822     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
67823     +
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
67824     +
67825     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
67826     +drop _FILTERFMT7 ;
67827     +_FILTERFMT7= put(Education,$10.0);
67828     +length _FILTERNORM7  $32;
67829     +drop _FILTERNORM7 ;
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
67830     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
67831     +
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
67832     +
67833     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
67834     +drop _FILTERFMT8 ;
67835     +_FILTERFMT8= put(Marital_Status,$8.0);
67836     +length _FILTERNORM8  $32;
67837     +drop _FILTERNORM8 ;
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
67838     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
67839     +if
67840     +_FILTERNORM1 not in ( '.')
67841     + and
67842     +_FILTERNORM2 not in ( '.')
67843     + and
67844     +_FILTERNORM3 not in ( '.')
67845     + and
67846     +_FILTERNORM4 not in ( '.')
67847     + and
67848     +_FILTERNORM5 not in ( '.')
67849     + and
67850     +_FILTERNORM6 not in ( '.')
67851     + and
67852     +_FILTERNORM7 not in ( ' ')
67853     + and
67854     +_FILTERNORM8 not in ( ' ')
67855     +and
67856     +( Dt_Customer ne .)
67857     +and ( Income ne . and (Income<=107000))
67858     +and ( Kidhome ne .)
67859     +and ( MntFishProducts ne .)
67860     +and ( MntFruits ne .)
67861     +and ( MntGoldProds ne .)
67862     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
67863     +and ( MntSweetProducts ne .)
67864     +and ( MntWines ne .)
67865     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
67866     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
67867     +and ( NumStorePurchases ne .)
67868     +and ( NumWebPurchases ne .)
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
67869     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
67870     +and ( Recency ne .)
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
67871     +and ( Teenhome ne .)
MPRINT(EM_DIAGRAM):   end;
67872     +and ( Year_Birth ne .)
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
67873     +then do;
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
67874     +if M_FILTER eq . then M_FILTER = 0;
67875     +else M_FILTER = M_FILTER + 0;
67876     +end;
67877     +else M_FILTER = 1;
67878     +label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
67879      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
67880      quit;
67881      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
67882      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
67883      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
67884      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
67885      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
67886      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67887      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
67888      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67889      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67890      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
67891      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67892      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

67893      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
67894      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
67895      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
67896      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67897      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
67898      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

67899      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
67900      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67901      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67902      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
67903      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
67904      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
67905      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67906      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
67907      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
67907    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

67908      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

67909      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
67910      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

67911      %macro varDept(fcmpdata=,id=);
67912      %global nobs&id scoreFlag&id;
67913      %let scoreFlag&id = 0;
67914      %if &id=1 or ^&fcmpStart %then %do;
67915      proc sort data=&fcmpdata out=_temp&id nodupkey;
67916      by NAME;
67917      where id=&id and LHS in( %let j=1;
67918      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
67919      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
67920      "&var" %let j = %eval(&j+1);
67921      %end;
67922      );
67923      run;
67924      %let dsid = %sysfunc(open(_temp&id));
67925      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
67926      %let dsid = %sysfunc(close(&dsid));
67927      %if &&nobs&id %then %do;
67928      %let scoreFlag&id = 1;
67929      %let fcmpStart = 1;
67930      %end;
67931      %else %let fcmpStart = 0;
67932      %end;
67933      %else %do;
67934      proc sort data=&fcmpdata out=_tempid;
67935      where id=&id;
67936      by LHS;
67937      run;
67938      %let dsid = %sysfunc(open(_tempid));
67939      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
67940      %let dsid = %sysfunc(close(&dsid));
67941      %if ^&&nobs&id %then %do;
67942      proc datasets lib=work nolist;
67943      delete _tempid;
67944      run;
67945      quit;
67946      %end;
67947      %else %do;
67948      data _tempAll;
67949      set %let j=%eval(&id-1);
67950      %do x=1 %to &j;
67951      %if &&nobs&x %then %do;
67952      _temp&x %end;
67953      %end;
67954      ;
67955      run;
67956      proc sql;
67957      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
67957    ! work._tempid p2 where p.name=p2.lhs;
67958      quit;
67959      data _temp&id;
67960      set _temp&id;
67961      where LHS ne '' and NAME ne '' and Node ne '';
67962      run;
67963      proc datasets lib=work nolist;
67964      delete _tempAll;
67965      run;
67966      %let dsid = %sysfunc(open(_temp&id));
67967      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
67968      %let dsid = %sysfunc(close(&dsid));
67969      %if ^&&nobs&id %then %do;
67970      proc datasets lib=work nolist;
67971      delete _temp&id;
67972      run;
67973      quit;
67974      %end;
67975      %else %do;
67976      %let scoreFlag&id = 1;
67977      data _temp&id;
67978      set _temp&id;
67979      where LHS ne NAME and node ne '';
67980      run;
67981      %let dsid = %sysfunc(open(_temp&id));
67982      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
67983      %let dsid = %sysfunc(close(&dsid));
67984      %if ^&&nobs&id %then %do;
67985      proc datasets lib=work nolist;
67986      delete _temp&id;
67987      run;
67988      quit;
67989      %end;
67990      %else %do;
67991      proc sort data=_temp&id nodupkey;
67992      by LHS NAME;
67993      run;
67994      %end;
67995      %end;
67996      %end;
67997      %end;
67998      %mend varDept;
67999      %macro optCode(outdata=fcmpdata);
68000      %global fcmpStart;
68001      %let fcmpStart = 0;
68002      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
68003      %let NumNodes=9;
68004      %do k=1 %to &NumNodes;
68005      %vardept(fcmpdata=&outdata, id=&k);
68006      %end;
68007      %mend optCode;
68008      %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 127 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 93 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 69 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

68009      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
68010      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
68011      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
68012      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68013      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
68014      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
68015      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
68016      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68017      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
68018      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
68018    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

68019      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68020      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
68021      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
68022      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68023      filename _pref
68023    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
68024      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
68025      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas.
68026     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
68027     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
68028     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
68029     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
68030     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
68031     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
68032     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
68033     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
68034     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
68035     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
68036     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
68037     +LENGTH _WARN_ $4
68038     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
68039     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
68040     +
68041     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
68042     +
68043     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
68044     +
68045     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
68046     +
68047     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
68048     +
68049     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
68050     +
68051     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
68052     +
68053     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
68054     +
68055     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
68056     +
68057     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
68058     +
68059     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
68060     +
68061     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
68062     +
68063     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
68064     +
68065     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
68066     +
68067     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
68068     +
68069     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
68070     +
68071     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
68072     +
68073     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
68074     +
68075     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
68076     +
68077     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
68078     +
68079     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
68080     +
68081     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
68082     +
68083     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
68084     +
68085     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
68086     +
68087     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
68088     +
68089     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
68090     +
68091     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
68092     +
68093     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
68094     +
68095     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
68096     +
68097     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
68098     +
68099     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
68100     +
68101     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
68102     +
68103     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
68104     +
68105     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
68106     +
68107     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
68108     +
68109     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
68110     +
68111     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
68112     +
68113     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
68114     +
68115     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
68116     +
68117     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
68118     +
68119     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
68120     +
68121     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
68122     +
68123     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
68124     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
68125     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
68126     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
68127     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68128     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68129     +end;
MPRINT(EM_DIAGRAM):   end;
68130     +else do;
MPRINT(EM_DIAGRAM):   else do;
68131     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68132     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
68133     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68134     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68135     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
68136     +   end;
MPRINT(EM_DIAGRAM):   end;
68137     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68138     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
68139     +   end;
MPRINT(EM_DIAGRAM):   end;
68140     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68141     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
68142     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68143     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68144     +   end;
MPRINT(EM_DIAGRAM):   end;
68145     +end;
MPRINT(EM_DIAGRAM):   end;
68146     +
68147     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
68148     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
68149     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
68150     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
68151     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68152     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68153     +end;
MPRINT(EM_DIAGRAM):   end;
68154     +else do;
MPRINT(EM_DIAGRAM):   else do;
68155     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68156     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
68157     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68158     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68159     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
68160     +   end;
MPRINT(EM_DIAGRAM):   end;
68161     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68162     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
68163     +   end;
MPRINT(EM_DIAGRAM):   end;
68164     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68165     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
68166     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68167     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68168     +   end;
MPRINT(EM_DIAGRAM):   end;
68169     +end;
MPRINT(EM_DIAGRAM):   end;
68170     +
68171     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
68172     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
68173     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
68174     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
68175     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68176     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68177     +end;
MPRINT(EM_DIAGRAM):   end;
68178     +else do;
MPRINT(EM_DIAGRAM):   else do;
68179     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68180     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
68181     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68182     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68183     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
68184     +   end;
MPRINT(EM_DIAGRAM):   end;
68185     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68186     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
68187     +   end;
MPRINT(EM_DIAGRAM):   end;
68188     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68189     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
68190     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68191     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68192     +   end;
MPRINT(EM_DIAGRAM):   end;
68193     +end;
MPRINT(EM_DIAGRAM):   end;
68194     +
68195     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
68196     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
68197     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
68198     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
68199     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68200     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68201     +end;
MPRINT(EM_DIAGRAM):   end;
68202     +else do;
MPRINT(EM_DIAGRAM):   else do;
68203     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68204     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
68205     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68206     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68207     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
68208     +   end;
MPRINT(EM_DIAGRAM):   end;
68209     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68210     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
68211     +   end;
MPRINT(EM_DIAGRAM):   end;
68212     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68213     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
68214     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68215     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68216     +   end;
MPRINT(EM_DIAGRAM):   end;
68217     +end;
MPRINT(EM_DIAGRAM):   end;
68218     +
68219     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
68220     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
68221     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
68222     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
68223     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68224     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68225     +end;
MPRINT(EM_DIAGRAM):   end;
68226     +else do;
MPRINT(EM_DIAGRAM):   else do;
68227     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68228     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
68229     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68230     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68231     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
68232     +   end;
MPRINT(EM_DIAGRAM):   end;
68233     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68234     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
68235     +   end;
MPRINT(EM_DIAGRAM):   end;
68236     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68237     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
68238     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68239     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68240     +   end;
MPRINT(EM_DIAGRAM):   end;
68241     +end;
MPRINT(EM_DIAGRAM):   end;
68242     +
68243     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
68244     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
68245     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
68246     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
68247     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68248     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68249     +end;
MPRINT(EM_DIAGRAM):   end;
68250     +else do;
MPRINT(EM_DIAGRAM):   else do;
68251     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68252     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
68253     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68254     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68255     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
68256     +   end;
MPRINT(EM_DIAGRAM):   end;
68257     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68258     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
68259     +   end;
MPRINT(EM_DIAGRAM):   end;
68260     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68261     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
68262     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68263     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68264     +   end;
MPRINT(EM_DIAGRAM):   end;
68265     +end;
MPRINT(EM_DIAGRAM):   end;
68266     +
68267     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
68268     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
68269     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
68270     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
68271     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68272     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68273     +end;
MPRINT(EM_DIAGRAM):   end;
68274     +else do;
MPRINT(EM_DIAGRAM):   else do;
68275     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68276     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
68277     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68278     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
68279     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
68280     +   end;
MPRINT(EM_DIAGRAM):   end;
68281     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
68282     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
68283     +   end;
MPRINT(EM_DIAGRAM):   end;
68284     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68285     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
68286     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68287     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68288     +   end;
MPRINT(EM_DIAGRAM):   end;
68289     +end;
MPRINT(EM_DIAGRAM):   end;
68290     +
68291     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
68292     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
68293     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
68294     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
68295     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
68296     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
68297     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
68298     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
68299     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
68300     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
68301     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
68302     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
68303     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68304     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68305     +end;
MPRINT(EM_DIAGRAM):   end;
68306     +else do;
MPRINT(EM_DIAGRAM):   else do;
68307     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
68308     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
68309     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68310     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
68311     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
68312     +   end;
MPRINT(EM_DIAGRAM):   end;
68313     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
68314     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
68315     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
68316     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
68317     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
68318     +   end;
MPRINT(EM_DIAGRAM):   end;
68319     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
68320     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
68321     +   end;
MPRINT(EM_DIAGRAM):   end;
68322     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
68323     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
68324     +   end;
MPRINT(EM_DIAGRAM):   end;
68325     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
68326     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
68327     +   end;
MPRINT(EM_DIAGRAM):   end;
68328     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68329     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
68330     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
68331     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
68332     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
68333     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68334     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68335     +   end;
MPRINT(EM_DIAGRAM):   end;
68336     +end;
MPRINT(EM_DIAGRAM):   end;
68337     +
68338     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
68339     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
68340     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
68341     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
68342     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
68343     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
68344     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
68345     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
68346     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
68347     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
68348     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
68349     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
68350     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
68351     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68352     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68353     +end;
MPRINT(EM_DIAGRAM):   end;
68354     +else do;
MPRINT(EM_DIAGRAM):   else do;
68355     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
68356     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
68357     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68358     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
68359     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
68360     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
68361     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
68362     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
68363     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68364     +         end;
MPRINT(EM_DIAGRAM):   end;
68365     +         else do;
MPRINT(EM_DIAGRAM):   else do;
68366     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
68367     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
68368     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68369     +            end;
MPRINT(EM_DIAGRAM):   end;
68370     +         end;
MPRINT(EM_DIAGRAM):   end;
68371     +      end;
MPRINT(EM_DIAGRAM):   end;
68372     +      else do;
MPRINT(EM_DIAGRAM):   else do;
68373     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
68374     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
68375     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68376     +         end;
MPRINT(EM_DIAGRAM):   end;
68377     +      end;
MPRINT(EM_DIAGRAM):   end;
68378     +   end;
MPRINT(EM_DIAGRAM):   end;
68379     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68380     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
68381     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
68382     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68383     +      end;
MPRINT(EM_DIAGRAM):   end;
68384     +      else do;
MPRINT(EM_DIAGRAM):   else do;
68385     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
68386     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
68387     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
68388     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
68389     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
68390     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68391     +         end;
MPRINT(EM_DIAGRAM):   end;
68392     +      end;
MPRINT(EM_DIAGRAM):   end;
68393     +   end;
MPRINT(EM_DIAGRAM):   end;
68394     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
68395     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
68396     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
68397     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
68398     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
68399     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68400     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68401     +   end;
MPRINT(EM_DIAGRAM):   end;
68402     +end;
MPRINT(EM_DIAGRAM):   end;
68403     +
68404     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68405     +*** Checking missing input Interval
68406     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
68407     +
68408     +IF NMISS(
68409     +   AcceptedCmpTotal ,
68410     +   Age ,
68411     +   Frq ,
68412     +   Income ,
68413     +   Kidhome ,
68414     +   MntFishProducts ,
68415     +   MntFruits ,
68416     +   MntGoldProds ,
68417     +   MntSweetProducts ,
68418     +   MonthsAsCustomer ,
68419     +   NumDealsPurchases ,
68420     +   NumWebVisitsMonth ,
68421     +   RFMstat ,
68422     +   RMntFrq ,
68423     +   Recency ,
68424     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
68425     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
68426     +
68427     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68428     +END;
MPRINT(EM_DIAGRAM):   END;
68429     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68430     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
68431     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68432     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
68433     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
68434     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
68435     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
68436     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
68437     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
68438     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
68439     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
68440     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
68441     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
68442     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
68443     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
68444     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
68445     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
68446     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
68447     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
68448     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
68449     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
68450     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
68451     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
68452     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
68453     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
68454     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
68455     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
68456     +END;
MPRINT(EM_DIAGRAM):   END;
68457     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
68458     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
68459     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
68460     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
68461     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
68462     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
68463     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
68464     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
68465     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
68466     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
68467     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
68468     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
68469     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
68470     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
68471     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
68472     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
68473     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
68474     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
68475     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
68476     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
68477     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
68478     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
68479     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
68480     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
68481     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
68482     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
68483     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
68484     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
68485     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
68486     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
68487     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
68488     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
68489     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
68490     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
68491     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
68492     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
68493     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
68494     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
68495     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
68496     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
68497     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
68498     +END;
MPRINT(EM_DIAGRAM):   END;
68499     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68500     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
68501     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68502     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68503     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
68504     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68505     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68506     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
68507     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68508     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
68509     +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
68510     +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
68511     +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
68512     +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
68513     +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
68514     +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
68515     +          +    -0.63886071804247 * S_MonthsAsCustomer
68516     +          +      2.3488612891037 * S_NumDealsPurchases
68517     +          +     2.32996461229282 * S_NumWebVisitsMonth
68518     +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
68519     +        S_RMntFrq  +    -3.18599476886695 * S_Recency
68520     +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
68521     +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
68522     +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
68523     +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
68524     +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
68525     +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
68526     +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
68527     +          +     0.67699646331113 * S_MonthsAsCustomer
68528     +          +     0.70523055739254 * S_NumDealsPurchases
68529     +          +    -2.06406682205141 * S_NumWebVisitsMonth
68530     +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
68531     +        S_RMntFrq  +      5.0273672656487 * S_Recency
68532     +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
68533     +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
68534     +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
68535     +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
68536     +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
68537     +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
68538     +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
68539     +          +    -0.53694216899543 * S_MonthsAsCustomer
68540     +          +     0.25908508836257 * S_NumDealsPurchases
68541     +          +    -1.18459231573601 * S_NumWebVisitsMonth
68542     +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
68543     +        S_RMntFrq  +    -1.22457627833901 * S_Recency
68544     +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
68545     +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
68546     +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
68547     +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
68548     +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
68549     +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
68550     +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
68551     +          +    -0.08931078748332 * S_MonthsAsCustomer
68552     +          +    -0.46561962814047 * S_NumDealsPurchases
68553     +          +    -0.12241295445297 * S_NumWebVisitsMonth
68554     +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
68555     +        S_RMntFrq  +     0.96804234233608 * S_Recency
68556     +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
68557     +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
68558     +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
68559     +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
68560     +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
68561     +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
68562     +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
68563     +          +     -0.9186653552138 * S_MonthsAsCustomer
68564     +          +     2.17624393037629 * S_NumDealsPurchases
68565     +          +    -0.41699900714758 * S_NumWebVisitsMonth
68566     +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
68567     +        S_RMntFrq  +    -0.28987089218356 * S_Recency
68568     +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
68569     +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
68570     +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
68571     +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
68572     +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
68573     +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
68574     +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
68575     +          +     1.32865070741283 * S_MonthsAsCustomer
68576     +          +      0.8173864987673 * S_NumDealsPurchases
68577     +          +     1.04804775338375 * S_NumWebVisitsMonth
68578     +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
68579     +        S_RMntFrq  +     0.08690587270493 * S_Recency
68580     +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
68581     +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
68582     +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
68583     +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
68584     +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
68585     +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
68586     +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
68587     +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
68588     +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
68589     +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
68590     +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
68591     +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
68592     +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
68593     +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
68594     +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
68595     +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
68596     +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
68597     +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
68598     +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
68599     +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
68600     +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
68601     +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
68602     +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
68603     +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
68604     +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
68605     +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
68606     +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
68607     +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
68608     +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
68609     +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
68610     +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
68611     +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
68612     +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
68613     +        EducationGraduation  +    -0.31624019107181 * EducationMaster
68614     +          +    -0.82783034099773 * Marital_StatusDivorced
68615     +          +     0.39651075241405 * Marital_StatusMarried
68616     +          +     0.17323156170107 * Marital_StatusSingle
68617     +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
68618     +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
68619     +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
68620     +        EducationGraduation  +    -0.05323450200928 * EducationMaster
68621     +          +    -2.42314580112302 * Marital_StatusDivorced
68622     +          +     1.72709251267075 * Marital_StatusMarried
68623     +          +    -0.94350561587168 * Marital_StatusSingle
68624     +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
68625     +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
68626     +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
68627     +        EducationGraduation  +    -1.41317064722862 * EducationMaster
68628     +          +    -1.25323701705333 * Marital_StatusDivorced
68629     +          +    -0.72618091015379 * Marital_StatusMarried
68630     +          +     0.20594885266863 * Marital_StatusSingle
68631     +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
68632     +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
68633     +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
68634     +        EducationGraduation  +     0.75559299844055 * EducationMaster
68635     +          +     -0.9159957275063 * Marital_StatusDivorced
68636     +          +     2.06164757358796 * Marital_StatusMarried
68637     +          +    -1.61544310412168 * Marital_StatusSingle
68638     +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
68639     +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
68640     +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
68641     +        EducationGraduation  +     0.27594869585414 * EducationMaster
68642     +          +    -0.72418104768251 * Marital_StatusDivorced
68643     +          +     0.51077116161056 * Marital_StatusMarried
68644     +          +     -2.0857896888723 * Marital_StatusSingle
68645     +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
68646     +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
68647     +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
68648     +        EducationGraduation  +     -0.7287361872795 * EducationMaster
68649     +          +     0.64139965212864 * Marital_StatusDivorced
68650     +          +    -1.52338846336783 * Marital_StatusMarried
68651     +          +     1.94794784762286 * Marital_StatusSingle
68652     +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
68653     +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
68654     +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
68655     +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
68656     +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
68657     +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
68658     +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
68659     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
68660     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
68661     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
68662     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
68663     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
68664     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
68665     +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
68666     +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
68667     +END;
MPRINT(EM_DIAGRAM):   END;
68668     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
68669     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
68670     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
68671     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
68672     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
68673     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
68674     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
68675     +END;
MPRINT(EM_DIAGRAM):   END;
68676     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68677     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
68678     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68679     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
68680     +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
68681     +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
68682     +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
68683     +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
68684     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
68685     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
68686     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
68687     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
68688     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
68689     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
68690     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
68691     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
68692     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
68693     +END;
MPRINT(EM_DIAGRAM):   END;
68694     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
68695     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
68696     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
68697     +END;
MPRINT(EM_DIAGRAM):   END;
68698     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
68699     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
68700     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
68701     +END;
MPRINT(EM_DIAGRAM):   END;
68702     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68703     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
68704     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68705     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
68706     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
68707     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
68708     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
68709     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
68710     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
68711     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
68712     +END;
MPRINT(EM_DIAGRAM):   END;
68713     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
68714     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
68715     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
68716     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
68717      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
68718      quit;
68719      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
68720      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
68721      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
68722      retain ID 2 Node "AutoNeural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural35";
68723      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
68724      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2235 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2235 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68725      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
68726      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68727      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2235 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2235 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68728      proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME 
CREATOR);
68729      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68730      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68731      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
68732      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
68733      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
68734      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68735      proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
68736      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68737      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
68738      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68739      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68740      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
68741      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
68742      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68743      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68744      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
68745      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
68745    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1184 rows and 5 columns.

68746      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68747      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
68748      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1184 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68749      filename _pref
68749    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
68750      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
68751      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
68752     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68753     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
68754     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68755     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
68756     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
68757     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
68758      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
68759      quit;
68760      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
68761      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
68762      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
68763      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
68764      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
68765      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68766      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
68767      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68768      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68769      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
68770      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68771      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68772      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
68773      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
68774      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
68775      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68776      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
68777      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68778      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
68779      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68780      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68781      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
68782      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
68783      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68784      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68785      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
68786      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
68786    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

68787      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68788      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
68789      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1188 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68790      filename _pref
68790    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
68791      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
68792      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
68793     +
68794     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
68795     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
68795    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
68796     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
68797     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
68798     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
68799     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
68800     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
68801      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
68802      quit;
68803      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
68804      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
68805      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
68806      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
68807      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
68808      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68809      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
68810      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68811      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68812      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
68813      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68814      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68815      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
68816      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
68817      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
68818      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68819      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
68820      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68821      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
68822      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68823      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68824      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
68825      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
68826      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68827      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68828      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
68829      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
68829    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

68830      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68831      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
68832      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1227 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68833      filename _pref
68833    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
68834      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
68835      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
68836     +
68837     +
68838     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
68839     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
68840     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
68841     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
68842     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
68843     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
68844     +
68845     +
68846     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
68847     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
68848     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
68849     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
68850     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
68851     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
68852     +
68853     +
68854     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
68855     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
68856     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
68857     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
68858     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
68859     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
68860     +
68861     +
68862     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
68863     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
68864     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
68865     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
68866     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
68867     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
68868     +
68869     +
68870     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
68871     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
68872     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
68873     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
68874     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
68875     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
68876     +
68877     +
68878     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
68879     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
68880     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
68881     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
68882     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
68883     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
68884     +
68885     +
68886     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
68887     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
68888     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
68889     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
68890     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
68891     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
68892     +
68893     +
68894     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
68895     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
68896     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
68897     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
68898     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
68899     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
68900     +if
68901     +_FILTERNORM1 not in ( '.')
68902     + and
68903     +_FILTERNORM2 not in ( '.')
68904     + and
68905     +_FILTERNORM3 not in ( '.')
68906     + and
68907     +_FILTERNORM4 not in ( '.')
68908     + and
68909     +_FILTERNORM5 not in ( '.')
68910     + and
68911     +_FILTERNORM6 not in ( '.')
68912     + and
68913     +_FILTERNORM7 not in ( ' ')
68914     + and
68915     +_FILTERNORM8 not in ( ' ')
68916     +and
68917     +( Dt_Customer ne .)
68918     +and ( Income ne . and (Income<=107000))
68919     +and ( Kidhome ne .)
68920     +and ( MntFishProducts ne .)
68921     +and ( MntFruits ne .)
68922     +and ( MntGoldProds ne .)
68923     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
68924     +and ( MntSweetProducts ne .)
68925     +and ( MntWines ne .)
68926     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
68927     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
68928     +and ( NumStorePurchases ne .)
68929     +and ( NumWebPurchases ne .)
68930     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
68931     +and ( Recency ne .)
68932     +and ( Teenhome ne .)
68933     +and ( Year_Birth ne .)
68934     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
68935     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
68936     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
68937     +end;
MPRINT(EM_DIAGRAM):   end;
68938     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
68939     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
68940      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
68941      quit;
68942      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
68943      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
68944      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
68945      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
68946      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
68947      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68948      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
68949      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68950      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68951      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
68952      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68953      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68954      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
68955      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
68956      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
68957      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68958      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
68959      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68960      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
68961      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68962      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68963      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
68964      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
68965      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
68966      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68967      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
68968      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
68968    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

68969      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68970      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
68971      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1293 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68972      %macro varDept(fcmpdata=,id=);
68973      %global nobs&id scoreFlag&id;
68974      %let scoreFlag&id = 0;
68975      %if &id=1 or ^&fcmpStart %then %do;
68976      proc sort data=&fcmpdata out=_temp&id nodupkey;
68977      by NAME;
68978      where id=&id and LHS in( %let j=1;
68979      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
68980      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
68981      "&var" %let j = %eval(&j+1);
68982      %end;
68983      );
68984      run;
68985      %let dsid = %sysfunc(open(_temp&id));
68986      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
68987      %let dsid = %sysfunc(close(&dsid));
68988      %if &&nobs&id %then %do;
68989      %let scoreFlag&id = 1;
68990      %let fcmpStart = 1;
68991      %end;
68992      %else %let fcmpStart = 0;
68993      %end;
68994      %else %do;
68995      proc sort data=&fcmpdata out=_tempid;
68996      where id=&id;
68997      by LHS;
68998      run;
68999      %let dsid = %sysfunc(open(_tempid));
69000      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
69001      %let dsid = %sysfunc(close(&dsid));
69002      %if ^&&nobs&id %then %do;
69003      proc datasets lib=work nolist;
69004      delete _tempid;
69005      run;
69006      quit;
69007      %end;
69008      %else %do;
69009      data _tempAll;
69010      set %let j=%eval(&id-1);
69011      %do x=1 %to &j;
69012      %if &&nobs&x %then %do;
69013      _temp&x %end;
69014      %end;
69015      ;
69016      run;
69017      proc sql;
69018      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
69018    ! work._tempid p2 where p.name=p2.lhs;
69019      quit;
69020      data _temp&id;
69021      set _temp&id;
69022      where LHS ne '' and NAME ne '' and Node ne '';
69023      run;
69024      proc datasets lib=work nolist;
69025      delete _tempAll;
69026      run;
69027      %let dsid = %sysfunc(open(_temp&id));
69028      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
69029      %let dsid = %sysfunc(close(&dsid));
69030      %if ^&&nobs&id %then %do;
69031      proc datasets lib=work nolist;
69032      delete _temp&id;
69033      run;
69034      quit;
69035      %end;
69036      %else %do;
69037      %let scoreFlag&id = 1;
69038      data _temp&id;
69039      set _temp&id;
69040      where LHS ne NAME and node ne '';
69041      run;
69042      %let dsid = %sysfunc(open(_temp&id));
69043      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
69044      %let dsid = %sysfunc(close(&dsid));
69045      %if ^&&nobs&id %then %do;
69046      proc datasets lib=work nolist;
69047      delete _temp&id;
69048      run;
69049      quit;
69050      %end;
69051      %else %do;
69052      proc sort data=_temp&id nodupkey;
69053      by LHS NAME;
69054      run;
69055      %end;
69056      %end;
69057      %end;
69058      %end;
69059      %mend varDept;
69060      %macro optCode(outdata=fcmpdata);
69061      %global fcmpStart;
69062      %let fcmpStart = 0;
69063      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
69064      %let NumNodes=9;
69065      %do k=1 %to &NumNodes;
69066      %vardept(fcmpdata=&outdata, id=&k);
69067      %end;
69068      %mend optCode;
69069      %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 124 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 91 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
The SAS System

NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

69070      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
69071      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
69072      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
69073      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69074      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
69075      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
69076      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
69077      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69078      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
69079      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
69079    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

69080      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69081      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
69082      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
69083      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69084      filename _pref
69084    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
69085      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
69086      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas.
69087     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
69088     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
69089     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
69090     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
69091     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
69092     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
69093     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
69094     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
69095     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
69096     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
69097     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
69098     +LENGTH _WARN_ $4
69099     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
69100     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
69101     +
69102     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
69103     +
69104     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
69105     +
69106     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
69107     +
69108     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
69109     +
69110     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
69111     +
69112     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
69113     +
69114     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
69115     +
69116     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
69117     +
69118     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
69119     +
69120     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
69121     +
69122     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
69123     +
69124     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
69125     +
69126     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
69127     +
69128     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
69129     +
69130     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
69131     +
69132     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
69133     +
69134     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
69135     +
69136     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
69137     +
69138     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
69139     +
69140     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
69141     +
69142     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
69143     +
69144     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
69145     +
69146     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
69147     +
69148     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
69149     +
69150     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
69151     +
69152     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
69153     +
69154     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
69155     +
69156     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
69157     +
69158     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
69159     +
69160     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
69161     +
69162     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
69163     +
69164     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
69165     +
69166     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
69167     +
69168     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
69169     +
69170     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
69171     +
69172     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
69173     +
69174     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
69175     +
69176     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
69177     +
69178     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
69179     +
69180     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
69181     +
69182     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
69183     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
69184     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
69185     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
69186     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69187     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69188     +end;
MPRINT(EM_DIAGRAM):   end;
69189     +else do;
MPRINT(EM_DIAGRAM):   else do;
69190     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69191     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
69192     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69193     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69194     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
69195     +   end;
MPRINT(EM_DIAGRAM):   end;
69196     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69197     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
69198     +   end;
MPRINT(EM_DIAGRAM):   end;
69199     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69200     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
69201     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69202     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69203     +   end;
MPRINT(EM_DIAGRAM):   end;
69204     +end;
MPRINT(EM_DIAGRAM):   end;
69205     +
69206     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
69207     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
69208     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
69209     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
69210     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69211     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69212     +end;
MPRINT(EM_DIAGRAM):   end;
69213     +else do;
MPRINT(EM_DIAGRAM):   else do;
69214     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69215     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
69216     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69217     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69218     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
69219     +   end;
MPRINT(EM_DIAGRAM):   end;
69220     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69221     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
69222     +   end;
MPRINT(EM_DIAGRAM):   end;
69223     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69224     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
69225     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69226     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69227     +   end;
MPRINT(EM_DIAGRAM):   end;
69228     +end;
MPRINT(EM_DIAGRAM):   end;
69229     +
69230     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
69231     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
69232     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
69233     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
69234     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69235     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69236     +end;
MPRINT(EM_DIAGRAM):   end;
69237     +else do;
MPRINT(EM_DIAGRAM):   else do;
69238     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69239     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
69240     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69241     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69242     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
69243     +   end;
MPRINT(EM_DIAGRAM):   end;
69244     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69245     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
69246     +   end;
MPRINT(EM_DIAGRAM):   end;
69247     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69248     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
69249     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69250     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69251     +   end;
MPRINT(EM_DIAGRAM):   end;
69252     +end;
MPRINT(EM_DIAGRAM):   end;
69253     +
69254     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
69255     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
69256     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
69257     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
69258     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69259     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69260     +end;
MPRINT(EM_DIAGRAM):   end;
69261     +else do;
MPRINT(EM_DIAGRAM):   else do;
69262     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69263     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
69264     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69265     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69266     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
69267     +   end;
MPRINT(EM_DIAGRAM):   end;
69268     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69269     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
69270     +   end;
MPRINT(EM_DIAGRAM):   end;
69271     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69272     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
69273     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69274     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69275     +   end;
MPRINT(EM_DIAGRAM):   end;
69276     +end;
MPRINT(EM_DIAGRAM):   end;
69277     +
69278     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
69279     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
69280     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
69281     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
69282     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69283     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69284     +end;
MPRINT(EM_DIAGRAM):   end;
69285     +else do;
MPRINT(EM_DIAGRAM):   else do;
69286     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69287     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
69288     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69289     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69290     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
69291     +   end;
MPRINT(EM_DIAGRAM):   end;
69292     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69293     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
69294     +   end;
MPRINT(EM_DIAGRAM):   end;
69295     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69296     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
69297     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69298     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69299     +   end;
MPRINT(EM_DIAGRAM):   end;
69300     +end;
MPRINT(EM_DIAGRAM):   end;
69301     +
69302     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
69303     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
69304     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
69305     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
69306     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69307     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69308     +end;
MPRINT(EM_DIAGRAM):   end;
69309     +else do;
MPRINT(EM_DIAGRAM):   else do;
69310     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69311     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
69312     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69313     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69314     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
69315     +   end;
MPRINT(EM_DIAGRAM):   end;
69316     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69317     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
69318     +   end;
MPRINT(EM_DIAGRAM):   end;
69319     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69320     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
69321     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69322     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69323     +   end;
MPRINT(EM_DIAGRAM):   end;
69324     +end;
MPRINT(EM_DIAGRAM):   end;
69325     +
69326     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
69327     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
69328     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
69329     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
69330     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69331     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69332     +end;
MPRINT(EM_DIAGRAM):   end;
69333     +else do;
MPRINT(EM_DIAGRAM):   else do;
69334     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69335     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
69336     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69337     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
69338     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
69339     +   end;
MPRINT(EM_DIAGRAM):   end;
69340     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
69341     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
69342     +   end;
MPRINT(EM_DIAGRAM):   end;
69343     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69344     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
69345     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69346     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69347     +   end;
MPRINT(EM_DIAGRAM):   end;
69348     +end;
MPRINT(EM_DIAGRAM):   end;
69349     +
69350     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
69351     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
69352     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
69353     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
69354     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
69355     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
69356     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
69357     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
69358     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
69359     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
69360     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
69361     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
69362     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69363     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69364     +end;
MPRINT(EM_DIAGRAM):   end;
69365     +else do;
MPRINT(EM_DIAGRAM):   else do;
69366     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
69367     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
69368     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69369     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
69370     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
69371     +   end;
MPRINT(EM_DIAGRAM):   end;
69372     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
69373     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
69374     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
69375     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
69376     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
69377     +   end;
MPRINT(EM_DIAGRAM):   end;
69378     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
69379     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
69380     +   end;
MPRINT(EM_DIAGRAM):   end;
69381     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
69382     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
69383     +   end;
MPRINT(EM_DIAGRAM):   end;
69384     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
69385     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
69386     +   end;
MPRINT(EM_DIAGRAM):   end;
69387     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69388     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
69389     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
69390     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
69391     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
69392     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69393     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69394     +   end;
MPRINT(EM_DIAGRAM):   end;
69395     +end;
MPRINT(EM_DIAGRAM):   end;
69396     +
69397     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
69398     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
69399     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
69400     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
69401     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
69402     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
69403     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
69404     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
69405     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
69406     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
69407     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
69408     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
69409     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
69410     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69411     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69412     +end;
MPRINT(EM_DIAGRAM):   end;
69413     +else do;
MPRINT(EM_DIAGRAM):   else do;
69414     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
69415     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
69416     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69417     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
69418     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
69419     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
69420     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
69421     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
69422     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69423     +         end;
MPRINT(EM_DIAGRAM):   end;
69424     +         else do;
MPRINT(EM_DIAGRAM):   else do;
69425     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
69426     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
69427     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69428     +            end;
MPRINT(EM_DIAGRAM):   end;
69429     +         end;
MPRINT(EM_DIAGRAM):   end;
69430     +      end;
MPRINT(EM_DIAGRAM):   end;
69431     +      else do;
MPRINT(EM_DIAGRAM):   else do;
69432     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
69433     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
69434     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69435     +         end;
MPRINT(EM_DIAGRAM):   end;
69436     +      end;
MPRINT(EM_DIAGRAM):   end;
69437     +   end;
MPRINT(EM_DIAGRAM):   end;
69438     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69439     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
69440     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
69441     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69442     +      end;
MPRINT(EM_DIAGRAM):   end;
69443     +      else do;
MPRINT(EM_DIAGRAM):   else do;
69444     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
69445     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
69446     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
69447     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
69448     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
69449     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69450     +         end;
MPRINT(EM_DIAGRAM):   end;
69451     +      end;
MPRINT(EM_DIAGRAM):   end;
69452     +   end;
MPRINT(EM_DIAGRAM):   end;
69453     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
69454     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
69455     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
69456     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
69457     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
69458     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69459     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69460     +   end;
MPRINT(EM_DIAGRAM):   end;
69461     +end;
MPRINT(EM_DIAGRAM):   end;
69462     +
69463     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69464     +*** Checking missing input Interval
69465     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
69466     +
69467     +IF NMISS(
69468     +   AcceptedCmpTotal ,
69469     +   Age ,
69470     +   Frq ,
69471     +   Income ,
69472     +   Kidhome ,
69473     +   MntFishProducts ,
69474     +   MntFruits ,
69475     +   MntGoldProds ,
69476     +   MntSweetProducts ,
69477     +   MonthsAsCustomer ,
69478     +   NumDealsPurchases ,
69479     +   NumWebVisitsMonth ,
69480     +   RFMstat ,
69481     +   RMntFrq ,
69482     +   Recency ,
69483     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
69484     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
69485     +
69486     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69487     +END;
MPRINT(EM_DIAGRAM):   END;
69488     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69489     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
69490     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69491     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
69492     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
69493     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
69494     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
69495     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
69496     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
69497     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
69498     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
69499     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
69500     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
69501     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
69502     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
69503     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
69504     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
69505     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
69506     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
69507     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
69508     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
69509     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
69510     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
69511     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
69512     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
69513     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
69514     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
69515     +END;
MPRINT(EM_DIAGRAM):   END;
69516     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
69517     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
69518     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
69519     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
69520     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
69521     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
69522     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
69523     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
69524     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
69525     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
69526     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
69527     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
69528     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
69529     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
69530     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
69531     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
69532     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
69533     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
69534     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
69535     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
69536     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
69537     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
69538     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
69539     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
69540     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
69541     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
69542     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
69543     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
69544     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
69545     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
69546     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
69547     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
69548     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
69549     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
69550     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
69551     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
69552     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
69553     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
69554     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
69555     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
69556     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
69557     +END;
MPRINT(EM_DIAGRAM):   END;
69558     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69559     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
69560     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69561     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69562     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
69563     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69564     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69565     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
69566     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69567     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
69568     +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
69569     +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
69570     +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
69571     +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
69572     +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
69573     +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
69574     +          +     0.04740894983714 * S_MonthsAsCustomer
69575     +          +     1.39008006467326 * S_NumDealsPurchases
69576     +          +     0.21608999126738 * S_NumWebVisitsMonth
69577     +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
69578     +        S_RMntFrq  +    -0.30830265825486 * S_Recency
69579     +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
69580     +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
69581     +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
69582     +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
69583     +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
69584     +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
69585     +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
69586     +          +     0.11090137331567 * S_MonthsAsCustomer
69587     +          +     0.22617410760471 * S_NumDealsPurchases
69588     +          +    -1.50612324994247 * S_NumWebVisitsMonth
69589     +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
69590     +        S_RMntFrq  +     1.36064773168913 * S_Recency
69591     +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
69592     +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
69593     +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
69594     +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
69595     +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
69596     +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
69597     +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
69598     +          +     1.12489244540865 * S_MonthsAsCustomer
69599     +          +     0.65186273365438 * S_NumDealsPurchases
69600     +          +    -2.32770073685469 * S_NumWebVisitsMonth
69601     +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
69602     +        S_RMntFrq  +     2.60277611818411 * S_Recency
69603     +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
69604     +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
69605     +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
69606     +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
69607     +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
69608     +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
69609     +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
69610     +          +     0.30886829972356 * S_MonthsAsCustomer
69611     +          +     0.65492907685123 * S_NumDealsPurchases
69612     +          +     0.10822300736498 * S_NumWebVisitsMonth
69613     +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
69614     +        S_RMntFrq  +     -0.7378392134822 * S_Recency
69615     +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
69616     +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
69617     +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
69618     +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
69619     +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
69620     +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
69621     +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
69622     +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
69623     +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
69624     +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
69625     +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
69626     +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
69627     +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
69628     +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
69629     +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
69630     +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
69631     +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
69632     +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
69633     +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
69634     +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
69635     +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
69636     +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
69637     +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
69638     +        EducationGraduation  +     0.30922934477029 * EducationMaster
69639     +          +     0.01556098790048 * Marital_StatusDivorced
69640     +          +     0.00512523764645 * Marital_StatusMarried
69641     +          +    -0.33980799511448 * Marital_StatusSingle
69642     +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
69643     +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
69644     +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
69645     +        EducationGraduation  +     0.69751348344321 * EducationMaster
69646     +          +     0.01069434029942 * Marital_StatusDivorced
69647     +          +      0.3116587285334 * Marital_StatusMarried
69648     +          +    -0.98635795023549 * Marital_StatusSingle
69649     +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
69650     +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
69651     +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
69652     +        EducationGraduation  +     -0.8155628950024 * EducationMaster
69653     +          +    -0.60393077836174 * Marital_StatusDivorced
69654     +          +    -0.18138878944937 * Marital_StatusMarried
69655     +          +     0.53013032587101 * Marital_StatusSingle
69656     +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
69657     +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
69658     +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
69659     +        EducationGraduation  +    -0.40675219343984 * EducationMaster
69660     +          +     0.43223311502025 * Marital_StatusDivorced
69661     +          +    -1.15741416919552 * Marital_StatusMarried
69662     +          +     0.83939799284264 * Marital_StatusSingle
69663     +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
69664     +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
69665     +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
69666     +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
69667     +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
69668     +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
69669     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
69670     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
69671     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
69672     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
69673     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
69674     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
69675     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
69676     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
69677     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
69678     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
69679     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
69680     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
69681     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
69682     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
69683     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
69684     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
69685     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
69686     +END;
MPRINT(EM_DIAGRAM):   END;
69687     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
69688     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
69689     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
69690     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
69691     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
69692     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
69693     +END;
MPRINT(EM_DIAGRAM):   END;
69694     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69695     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
69696     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69697     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
69698     +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
69699     +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
69700     +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
69701     +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
69702     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
69703     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
69704     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
69705     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
69706     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
69707     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
69708     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
69709     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
69710     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
69711     +END;
MPRINT(EM_DIAGRAM):   END;
69712     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
69713     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
69714     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
69715     +END;
MPRINT(EM_DIAGRAM):   END;
69716     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
69717     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
69718     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
69719     +END;
MPRINT(EM_DIAGRAM):   END;
69720     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69721     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
69722     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69723     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
69724     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
69725     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
69726     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
69727     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
69728     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
69729     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
69730     +END;
MPRINT(EM_DIAGRAM):   END;
69731     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
69732     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
69733     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
69734     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
69735      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
69736      quit;
69737      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
69738      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
69739      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
69740      retain ID 2 Node "AutoNeural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural34";
69741      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
69742      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2187 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2187 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69743      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
69744      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69745      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2187 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2187 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69746      proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME 
CREATOR);
69747      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69748      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69749      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
69750      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
69751      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
69752      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69753      proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
69754      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69755      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
69756      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69757      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69758      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
69759      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
69760      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69761      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69762      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
69763      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
69763    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1157 rows and 5 columns.

69764      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69765      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
69766      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1157 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1157 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69767      filename _pref
69767    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
69768      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
69769      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
69770     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69771     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
69772     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69773     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
69774     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
69775     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
69776      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
69777      quit;
69778      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
69779      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
69780      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
69781      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
69782      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
69783      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

69784      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
69785      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69786      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69787      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
69788      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69789      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69790      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
69791      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
69792      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
69793      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69794      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
69795      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69796      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
69797      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69798      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69799      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
69800      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
69801      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69802      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69803      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
69804      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
69804    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

69805      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69806      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
69807      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1161 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69808      filename _pref
69808    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
69809      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
69810      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
69811     +
69812     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
69813     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
69813    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
69814     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
69815     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
69816     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
69817     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
69818     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
69819      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
69820      quit;
69821      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
69822      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
69823      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
69824      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
69825      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
69826      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69827      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
69828      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69829      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69830      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
69831      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69832      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69833      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
69834      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
69835      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
69836      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69837      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
69838      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69839      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
69840      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69841      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69842      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
69843      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
69844      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69845      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69846      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
69847      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
69847    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

69848      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69849      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
69850      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1200 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69851      filename _pref
69851    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
69852      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
69853      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
69854     +
69855     +
69856     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
69857     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
69858     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
69859     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
69860     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
69861     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69862     +
69863     +
69864     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
69865     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
69866     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
69867     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
69868     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
69869     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69870     +
69871     +
69872     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
69873     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
69874     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
69875     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
69876     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
69877     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69878     +
69879     +
69880     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
69881     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
69882     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
69883     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
69884     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
69885     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69886     +
69887     +
69888     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
69889     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
69890     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
69891     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
69892     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
69893     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69894     +
69895     +
69896     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
69897     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
69898     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
69899     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
69900     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
69901     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69902     +
69903     +
69904     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
69905     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
69906     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
69907     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
69908     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
69909     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69910     +
69911     +
69912     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
69913     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
69914     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
69915     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
69916     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
69917     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69918     +if
69919     +_FILTERNORM1 not in ( '.')
69920     + and
69921     +_FILTERNORM2 not in ( '.')
69922     + and
69923     +_FILTERNORM3 not in ( '.')
69924     + and
69925     +_FILTERNORM4 not in ( '.')
69926     + and
69927     +_FILTERNORM5 not in ( '.')
69928     + and
69929     +_FILTERNORM6 not in ( '.')
69930     + and
69931     +_FILTERNORM7 not in ( ' ')
69932     + and
69933     +_FILTERNORM8 not in ( ' ')
69934     +and
69935     +( Dt_Customer ne .)
69936     +and ( Income ne . and (Income<=107000))
69937     +and ( Kidhome ne .)
69938     +and ( MntFishProducts ne .)
69939     +and ( MntFruits ne .)
69940     +and ( MntGoldProds ne .)
69941     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
69942     +and ( MntSweetProducts ne .)
69943     +and ( MntWines ne .)
69944     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
69945     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
69946     +and ( NumStorePurchases ne .)
69947     +and ( NumWebPurchases ne .)
69948     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
69949     +and ( Recency ne .)
69950     +and ( Teenhome ne .)
69951     +and ( Year_Birth ne .)
69952     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
69953     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
69954     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
69955     +end;
MPRINT(EM_DIAGRAM):   end;
69956     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
69957     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
69958      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
69959      quit;
69960      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
69961      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
69962      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
69963      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
69964      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
69965      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69966      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
69967      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69968      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69969      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
69970      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69971      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69972      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
69973      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
69974      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
69975      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69976      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
69977      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69978      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
69979      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69980      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69981      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
69982      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
69983      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
69984      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69985      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
69986      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
69986    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

69987      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69988      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
69989      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1266 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69990      %macro varDept(fcmpdata=,id=);
69991      %global nobs&id scoreFlag&id;
69992      %let scoreFlag&id = 0;
69993      %if &id=1 or ^&fcmpStart %then %do;
69994      proc sort data=&fcmpdata out=_temp&id nodupkey;
69995      by NAME;
69996      where id=&id and LHS in( %let j=1;
69997      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
69998      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
69999      "&var" %let j = %eval(&j+1);
70000      %end;
70001      );
70002      run;
70003      %let dsid = %sysfunc(open(_temp&id));
70004      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
70005      %let dsid = %sysfunc(close(&dsid));
70006      %if &&nobs&id %then %do;
70007      %let scoreFlag&id = 1;
70008      %let fcmpStart = 1;
70009      %end;
70010      %else %let fcmpStart = 0;
70011      %end;
70012      %else %do;
70013      proc sort data=&fcmpdata out=_tempid;
70014      where id=&id;
70015      by LHS;
70016      run;
70017      %let dsid = %sysfunc(open(_tempid));
70018      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
70019      %let dsid = %sysfunc(close(&dsid));
70020      %if ^&&nobs&id %then %do;
70021      proc datasets lib=work nolist;
70022      delete _tempid;
70023      run;
70024      quit;
70025      %end;
70026      %else %do;
70027      data _tempAll;
70028      set %let j=%eval(&id-1);
70029      %do x=1 %to &j;
70030      %if &&nobs&x %then %do;
70031      _temp&x %end;
70032      %end;
70033      ;
70034      run;
70035      proc sql;
70036      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
70036    ! work._tempid p2 where p.name=p2.lhs;
70037      quit;
70038      data _temp&id;
70039      set _temp&id;
70040      where LHS ne '' and NAME ne '' and Node ne '';
70041      run;
70042      proc datasets lib=work nolist;
70043      delete _tempAll;
70044      run;
70045      %let dsid = %sysfunc(open(_temp&id));
70046      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
70047      %let dsid = %sysfunc(close(&dsid));
70048      %if ^&&nobs&id %then %do;
70049      proc datasets lib=work nolist;
70050      delete _temp&id;
70051      run;
70052      quit;
70053      %end;
70054      %else %do;
70055      %let scoreFlag&id = 1;
70056      data _temp&id;
70057      set _temp&id;
70058      where LHS ne NAME and node ne '';
70059      run;
70060      %let dsid = %sysfunc(open(_temp&id));
70061      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
70062      %let dsid = %sysfunc(close(&dsid));
70063      %if ^&&nobs&id %then %do;
70064      proc datasets lib=work nolist;
70065      delete _temp&id;
70066      run;
70067      quit;
70068      %end;
70069      %else %do;
70070      proc sort data=_temp&id nodupkey;
70071      by LHS NAME;
70072      run;
70073      %end;
70074      %end;
70075      %end;
70076      %end;
70077      %mend varDept;
70078      %macro optCode(outdata=fcmpdata);
70079      %global fcmpStart;
70080      %let fcmpStart = 0;
70081      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
70082      %let NumNodes=9;
70083      %do k=1 %to &NumNodes;
70084      %vardept(fcmpdata=&outdata, id=&k);
70085      %end;
70086      %mend optCode;
70087      %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 121 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 89 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 67 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

70088      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
70089      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
70090      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
70091      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70092      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
70093      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
70094      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
70095      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70096      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
70097      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
70097    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

70098      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70099      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
70100      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
70101      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70102      filename _pref
70102    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
70103      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
70104      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas.
70105     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
70106     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
70107     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
70108     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
70109     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
70110     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
70111     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
70112     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
70113     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
70114     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
70115     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
70116     +LENGTH _WARN_ $4
70117     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
70118     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
70119     +
70120     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
70121     +
70122     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
70123     +
70124     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
70125     +
70126     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
70127     +
70128     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
70129     +
70130     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
70131     +
70132     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
70133     +
70134     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
70135     +
70136     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
70137     +
70138     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
70139     +
70140     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
70141     +
70142     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
70143     +
70144     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
70145     +
70146     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
70147     +
70148     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
70149     +
70150     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
70151     +
70152     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
70153     +
70154     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
70155     +
70156     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
70157     +
70158     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
70159     +
70160     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
70161     +
70162     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
70163     +
70164     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
70165     +
70166     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
70167     +
70168     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
70169     +
70170     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
70171     +
70172     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
70173     +
70174     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
70175     +
70176     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
70177     +
70178     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
70179     +
70180     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
70181     +
70182     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
70183     +
70184     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
70185     +
70186     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
70187     +
70188     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
70189     +
70190     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
70191     +
70192     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
70193     +
70194     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
70195     +
70196     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
70197     +
70198     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
70199     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
70200     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
70201     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
70202     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70203     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70204     +end;
MPRINT(EM_DIAGRAM):   end;
70205     +else do;
MPRINT(EM_DIAGRAM):   else do;
70206     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70207     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
70208     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70209     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70210     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
70211     +   end;
MPRINT(EM_DIAGRAM):   end;
70212     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70213     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
70214     +   end;
MPRINT(EM_DIAGRAM):   end;
70215     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70216     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
70217     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70218     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70219     +   end;
MPRINT(EM_DIAGRAM):   end;
70220     +end;
MPRINT(EM_DIAGRAM):   end;
70221     +
70222     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
70223     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
70224     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
70225     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
70226     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70227     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70228     +end;
MPRINT(EM_DIAGRAM):   end;
70229     +else do;
MPRINT(EM_DIAGRAM):   else do;
70230     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70231     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
70232     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70233     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70234     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
70235     +   end;
MPRINT(EM_DIAGRAM):   end;
70236     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70237     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
70238     +   end;
MPRINT(EM_DIAGRAM):   end;
70239     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70240     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
70241     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70242     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70243     +   end;
MPRINT(EM_DIAGRAM):   end;
70244     +end;
MPRINT(EM_DIAGRAM):   end;
70245     +
70246     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
70247     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
70248     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
70249     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
70250     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70251     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70252     +end;
MPRINT(EM_DIAGRAM):   end;
70253     +else do;
MPRINT(EM_DIAGRAM):   else do;
70254     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70255     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
70256     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70257     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70258     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
70259     +   end;
MPRINT(EM_DIAGRAM):   end;
70260     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70261     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
70262     +   end;
MPRINT(EM_DIAGRAM):   end;
70263     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70264     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
70265     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70266     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70267     +   end;
MPRINT(EM_DIAGRAM):   end;
70268     +end;
MPRINT(EM_DIAGRAM):   end;
70269     +
70270     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
70271     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
70272     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
70273     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
70274     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70275     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70276     +end;
MPRINT(EM_DIAGRAM):   end;
70277     +else do;
MPRINT(EM_DIAGRAM):   else do;
70278     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70279     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
70280     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70281     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70282     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
70283     +   end;
MPRINT(EM_DIAGRAM):   end;
70284     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70285     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
70286     +   end;
MPRINT(EM_DIAGRAM):   end;
70287     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70288     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
70289     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70290     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70291     +   end;
MPRINT(EM_DIAGRAM):   end;
70292     +end;
MPRINT(EM_DIAGRAM):   end;
70293     +
70294     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
70295     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
70296     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
70297     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
70298     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70299     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70300     +end;
MPRINT(EM_DIAGRAM):   end;
70301     +else do;
MPRINT(EM_DIAGRAM):   else do;
70302     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70303     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
70304     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70305     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70306     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
70307     +   end;
MPRINT(EM_DIAGRAM):   end;
70308     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70309     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
70310     +   end;
MPRINT(EM_DIAGRAM):   end;
70311     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70312     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
70313     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70314     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70315     +   end;
MPRINT(EM_DIAGRAM):   end;
70316     +end;
MPRINT(EM_DIAGRAM):   end;
70317     +
70318     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
70319     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
70320     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
70321     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
70322     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70323     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70324     +end;
MPRINT(EM_DIAGRAM):   end;
70325     +else do;
MPRINT(EM_DIAGRAM):   else do;
70326     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70327     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
70328     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70329     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70330     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
70331     +   end;
MPRINT(EM_DIAGRAM):   end;
70332     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70333     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
70334     +   end;
MPRINT(EM_DIAGRAM):   end;
70335     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70336     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
70337     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70338     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70339     +   end;
MPRINT(EM_DIAGRAM):   end;
70340     +end;
MPRINT(EM_DIAGRAM):   end;
70341     +
70342     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
70343     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
70344     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
70345     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
70346     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70347     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70348     +end;
MPRINT(EM_DIAGRAM):   end;
70349     +else do;
MPRINT(EM_DIAGRAM):   else do;
70350     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70351     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
70352     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70353     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
70354     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
70355     +   end;
MPRINT(EM_DIAGRAM):   end;
70356     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
70357     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
70358     +   end;
MPRINT(EM_DIAGRAM):   end;
70359     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70360     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
70361     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70362     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70363     +   end;
MPRINT(EM_DIAGRAM):   end;
70364     +end;
MPRINT(EM_DIAGRAM):   end;
70365     +
70366     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
70367     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
70368     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70369     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
70370     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
70371     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
70372     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
70373     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
70374     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
70375     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
70376     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
70377     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
70378     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70379     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70380     +end;
MPRINT(EM_DIAGRAM):   end;
70381     +else do;
MPRINT(EM_DIAGRAM):   else do;
70382     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
70383     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
70384     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70385     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
70386     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
70387     +   end;
MPRINT(EM_DIAGRAM):   end;
70388     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
70389     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
70390     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
70391     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
70392     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
70393     +   end;
MPRINT(EM_DIAGRAM):   end;
70394     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
70395     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
70396     +   end;
MPRINT(EM_DIAGRAM):   end;
70397     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
70398     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
70399     +   end;
MPRINT(EM_DIAGRAM):   end;
70400     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
70401     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
70402     +   end;
MPRINT(EM_DIAGRAM):   end;
70403     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70404     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
70405     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
70406     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
70407     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
70408     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70409     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70410     +   end;
MPRINT(EM_DIAGRAM):   end;
70411     +end;
MPRINT(EM_DIAGRAM):   end;
70412     +
70413     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
70414     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
70415     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
70416     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70417     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
70418     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
70419     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
70420     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
70421     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
70422     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
70423     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
70424     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
70425     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
70426     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70427     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70428     +end;
MPRINT(EM_DIAGRAM):   end;
70429     +else do;
MPRINT(EM_DIAGRAM):   else do;
70430     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
70431     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
70432     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70433     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
70434     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
70435     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
70436     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
70437     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
70438     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70439     +         end;
MPRINT(EM_DIAGRAM):   end;
70440     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70441     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
70442     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
70443     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70444     +            end;
MPRINT(EM_DIAGRAM):   end;
70445     +         end;
MPRINT(EM_DIAGRAM):   end;
70446     +      end;
MPRINT(EM_DIAGRAM):   end;
70447     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70448     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
70449     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
70450     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70451     +         end;
MPRINT(EM_DIAGRAM):   end;
70452     +      end;
MPRINT(EM_DIAGRAM):   end;
70453     +   end;
MPRINT(EM_DIAGRAM):   end;
70454     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70455     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
70456     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
70457     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70458     +      end;
MPRINT(EM_DIAGRAM):   end;
70459     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70460     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
70461     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
70462     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
70463     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
70464     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
70465     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70466     +         end;
MPRINT(EM_DIAGRAM):   end;
70467     +      end;
MPRINT(EM_DIAGRAM):   end;
70468     +   end;
MPRINT(EM_DIAGRAM):   end;
70469     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
70470     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
70471     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
70472     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
70473     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
70474     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70475     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70476     +   end;
MPRINT(EM_DIAGRAM):   end;
70477     +end;
MPRINT(EM_DIAGRAM):   end;
70478     +
70479     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70480     +*** Checking missing input Interval
70481     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
70482     +
70483     +IF NMISS(
70484     +   AcceptedCmpTotal ,
70485     +   Age ,
70486     +   Frq ,
70487     +   Income ,
70488     +   Kidhome ,
70489     +   MntFishProducts ,
70490     +   MntFruits ,
70491     +   MntGoldProds ,
70492     +   MntSweetProducts ,
70493     +   MonthsAsCustomer ,
70494     +   NumDealsPurchases ,
70495     +   NumWebVisitsMonth ,
70496     +   RFMstat ,
70497     +   RMntFrq ,
70498     +   Recency ,
70499     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
70500     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
70501     +
70502     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70503     +END;
MPRINT(EM_DIAGRAM):   END;
70504     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70505     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
70506     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70507     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70508     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
70509     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
70510     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
70511     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
70512     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
70513     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
70514     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
70515     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
70516     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
70517     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
70518     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
70519     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
70520     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
70521     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
70522     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
70523     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70524     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
70525     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70526     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
70527     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70528     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
70529     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70530     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70531     +END;
MPRINT(EM_DIAGRAM):   END;
70532     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70533     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
70534     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
70535     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
70536     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
70537     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
70538     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
70539     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
70540     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
70541     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
70542     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
70543     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
70544     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
70545     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
70546     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
70547     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
70548     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
70549     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
70550     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
70551     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
70552     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
70553     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
70554     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
70555     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
70556     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
70557     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
70558     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
70559     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
70560     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70561     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
70562     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
70563     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70564     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
70565     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
70566     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70567     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
70568     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
70569     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
70570     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70571     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
70572     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70573     +END;
MPRINT(EM_DIAGRAM):   END;
70574     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70575     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
70576     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70577     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70578     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
70579     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70580     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70581     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
70582     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70583     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70584     +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
70585     +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
70586     +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
70587     +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
70588     +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
70589     +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
70590     +          +     -0.6473961304074 * S_MonthsAsCustomer
70591     +          +     0.68960902951007 * S_NumDealsPurchases
70592     +          +    -0.03600585273268 * S_NumWebVisitsMonth
70593     +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
70594     +        S_RMntFrq  +    -0.37413569649471 * S_Recency
70595     +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
70596     +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
70597     +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
70598     +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
70599     +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
70600     +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
70601     +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
70602     +          +    -0.70674764548268 * S_MonthsAsCustomer
70603     +          +     0.03761139203619 * S_NumDealsPurchases
70604     +          +    -0.69359662485747 * S_NumWebVisitsMonth
70605     +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
70606     +        S_RMntFrq  +    -1.62720417424557 * S_Recency
70607     +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
70608     +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
70609     +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
70610     +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
70611     +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
70612     +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
70613     +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
70614     +          +    -0.47559913836984 * S_MonthsAsCustomer
70615     +          +    -0.26961781245749 * S_NumDealsPurchases
70616     +          +    -0.67017962977412 * S_NumWebVisitsMonth
70617     +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
70618     +        S_RMntFrq  +     0.67120737584665 * S_Recency
70619     +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
70620     +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
70621     +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
70622     +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
70623     +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
70624     +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
70625     +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
70626     +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
70627     +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
70628     +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
70629     +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
70630     +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
70631     +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
70632     +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
70633     +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
70634     +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
70635     +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
70636     +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
70637     +        EducationGraduation  +     0.46172475127934 * EducationMaster
70638     +          +    -0.18858032329482 * Marital_StatusDivorced
70639     +          +     0.16067956508072 * Marital_StatusMarried
70640     +          +    -0.90926406046237 * Marital_StatusSingle
70641     +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
70642     +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
70643     +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
70644     +        EducationGraduation  +    -0.74629011053947 * EducationMaster
70645     +          +     0.71998738170149 * Marital_StatusDivorced
70646     +          +    -1.53543515752013 * Marital_StatusMarried
70647     +          +     0.44068743694663 * Marital_StatusSingle
70648     +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
70649     +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
70650     +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
70651     +        EducationGraduation  +     0.11252156068047 * EducationMaster
70652     +          +    -0.31683932084863 * Marital_StatusDivorced
70653     +          +     0.17674162427585 * Marital_StatusMarried
70654     +          +    -0.67064017247711 * Marital_StatusSingle
70655     +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
70656     +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
70657     +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
70658     +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
70659     +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
70660     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
70661     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
70662     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
70663     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
70664     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
70665     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
70666     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
70667     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
70668     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
70669     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
70670     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
70671     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
70672     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
70673     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
70674     +END;
MPRINT(EM_DIAGRAM):   END;
70675     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70676     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
70677     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
70678     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
70679     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
70680     +END;
MPRINT(EM_DIAGRAM):   END;
70681     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70682     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
70683     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70684     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70685     +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
70686     +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
70687     +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
70688     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
70689     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
70690     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
70691     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
70692     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
70693     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
70694     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
70695     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
70696     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
70697     +END;
MPRINT(EM_DIAGRAM):   END;
70698     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70699     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
70700     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
70701     +END;
MPRINT(EM_DIAGRAM):   END;
70702     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
70703     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
70704     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
70705     +END;
MPRINT(EM_DIAGRAM):   END;
70706     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70707     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
70708     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70709     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
70710     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
70711     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
70712     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
70713     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
70714     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
70715     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
70716     +END;
MPRINT(EM_DIAGRAM):   END;
70717     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
70718     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
70719     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
70720     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
70721      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
70722      quit;
70723      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
70724      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
70725      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
70726      retain ID 2 Node "AutoNeural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural40";
70727      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
70728      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70729      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
70730      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70731      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70732      proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME 
CREATOR);
70733      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70734      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70735      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
70736      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
70737      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
70738      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70739      proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
70740      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70741      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
70742      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70743      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70744      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
70745      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
70746      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70747      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70748      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
70749      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
70749    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1075 rows and 5 columns.

70750      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70751      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
70752      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1075 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1075 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70753      filename _pref
70753    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
70754      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
70755      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
70756     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70757     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
70758     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70759     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
70760     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
70761     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
70762      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
70763      quit;
70764      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
70765      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
70766      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
70767      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
70768      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
70769      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70770      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
70771      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70772      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70773      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
70774      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70775      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70776      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
70777      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
70778      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
70779      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70780      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
70781      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70782      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
70783      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70784      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70785      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
70786      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
70787      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70788      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70789      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
70790      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
70790    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

70791      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70792      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
70793      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70794      filename _pref
70794    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
70795      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
70796      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
70797     +
70798     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
70799     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
70799    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
70800     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
70801     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
70802     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
70803     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
70804     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
70805      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
70806      quit;
70807      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
70808      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
70809      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
70810      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
70811      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
70812      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70813      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
70814      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70815      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70816      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
70817      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70818      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70819      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
70820      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
70821      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
70822      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70823      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
70824      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70825      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
70826      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70827      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70828      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
70829      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
70830      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70831      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70832      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
70833      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
70833    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

70834      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70835      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
70836      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1118 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70837      filename _pref
70837    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
70838      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
70839      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
70840     +
70841     +
70842     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
70843     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
70844     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
70845     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
70846     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
70847     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70848     +
70849     +
70850     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
70851     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
70852     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
70853     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
70854     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
70855     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70856     +
70857     +
70858     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
70859     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
70860     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
70861     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
70862     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
70863     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70864     +
70865     +
70866     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
70867     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
70868     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
70869     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
70870     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
70871     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70872     +
70873     +
70874     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
70875     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
70876     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
70877     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
70878     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
70879     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70880     +
70881     +
70882     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
70883     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
70884     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
70885     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
70886     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
70887     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70888     +
70889     +
70890     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
70891     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
70892     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
70893     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
70894     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
70895     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70896     +
70897     +
70898     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
70899     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
70900     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
70901     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
70902     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
70903     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70904     +if
70905     +_FILTERNORM1 not in ( '.')
70906     + and
70907     +_FILTERNORM2 not in ( '.')
70908     + and
70909     +_FILTERNORM3 not in ( '.')
70910     + and
70911     +_FILTERNORM4 not in ( '.')
70912     + and
70913     +_FILTERNORM5 not in ( '.')
70914     + and
70915     +_FILTERNORM6 not in ( '.')
70916     + and
70917     +_FILTERNORM7 not in ( ' ')
70918     + and
70919     +_FILTERNORM8 not in ( ' ')
70920     +and
70921     +( Dt_Customer ne .)
70922     +and ( Income ne . and (Income<=107000))
70923     +and ( Kidhome ne .)
70924     +and ( MntFishProducts ne .)
70925     +and ( MntFruits ne .)
70926     +and ( MntGoldProds ne .)
70927     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
70928     +and ( MntSweetProducts ne .)
70929     +and ( MntWines ne .)
70930     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
70931     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
70932     +and ( NumStorePurchases ne .)
70933     +and ( NumWebPurchases ne .)
70934     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
70935     +and ( Recency ne .)
70936     +and ( Teenhome ne .)
70937     +and ( Year_Birth ne .)
70938     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
70939     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
70940     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
70941     +end;
MPRINT(EM_DIAGRAM):   end;
70942     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
70943     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
70944      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
70945      quit;
70946      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
70947      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
70948      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
70949      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
70950      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
70951      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70952      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
70953      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70954      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70955      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
70956      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70957      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70958      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
70959      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
70960      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
70961      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70962      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
70963      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

70964      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
70965      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70966      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70967      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
70968      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
70969      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
70970      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70971      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
70972      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
70972    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

70973      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70974      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
70975      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70976      %macro varDept(fcmpdata=,id=);
70977      %global nobs&id scoreFlag&id;
70978      %let scoreFlag&id = 0;
70979      %if &id=1 or ^&fcmpStart %then %do;
70980      proc sort data=&fcmpdata out=_temp&id nodupkey;
70981      by NAME;
70982      where id=&id and LHS in( %let j=1;
70983      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
70984      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
70985      "&var" %let j = %eval(&j+1);
70986      %end;
70987      );
70988      run;
70989      %let dsid = %sysfunc(open(_temp&id));
70990      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
70991      %let dsid = %sysfunc(close(&dsid));
70992      %if &&nobs&id %then %do;
70993      %let scoreFlag&id = 1;
70994      %let fcmpStart = 1;
70995      %end;
70996      %else %let fcmpStart = 0;
70997      %end;
70998      %else %do;
70999      proc sort data=&fcmpdata out=_tempid;
71000      where id=&id;
71001      by LHS;
71002      run;
71003      %let dsid = %sysfunc(open(_tempid));
71004      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
71005      %let dsid = %sysfunc(close(&dsid));
71006      %if ^&&nobs&id %then %do;
71007      proc datasets lib=work nolist;
71008      delete _tempid;
71009      run;
71010      quit;
71011      %end;
71012      %else %do;
71013      data _tempAll;
71014      set %let j=%eval(&id-1);
71015      %do x=1 %to &j;
71016      %if &&nobs&x %then %do;
71017      _temp&x %end;
71018      %end;
71019      ;
71020      run;
71021      proc sql;
71022      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
71022    ! work._tempid p2 where p.name=p2.lhs;
71023      quit;
71024      data _temp&id;
71025      set _temp&id;
71026      where LHS ne '' and NAME ne '' and Node ne '';
71027      run;
71028      proc datasets lib=work nolist;
71029      delete _tempAll;
71030      run;
71031      %let dsid = %sysfunc(open(_temp&id));
71032      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
71033      %let dsid = %sysfunc(close(&dsid));
71034      %if ^&&nobs&id %then %do;
71035      proc datasets lib=work nolist;
71036      delete _temp&id;
71037      run;
71038      quit;
71039      %end;
71040      %else %do;
71041      %let scoreFlag&id = 1;
71042      data _temp&id;
71043      set _temp&id;
71044      where LHS ne NAME and node ne '';
71045      run;
71046      %let dsid = %sysfunc(open(_temp&id));
71047      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
71048      %let dsid = %sysfunc(close(&dsid));
71049      %if ^&&nobs&id %then %do;
71050      proc datasets lib=work nolist;
71051      delete _temp&id;
71052      run;
71053      quit;
71054      %end;
71055      %else %do;
71056      proc sort data=_temp&id nodupkey;
71057      by LHS NAME;
71058      run;
71059      %end;
71060      %end;
71061      %end;
71062      %end;
71063      %mend varDept;
71064      %macro optCode(outdata=fcmpdata);
71065      %global fcmpStart;
71066      %let fcmpStart = 0;
71067      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
71068      %let NumNodes=9;
71069      %do k=1 %to &NumNodes;
71070      %vardept(fcmpdata=&outdata, id=&k);
71071      %end;
71072      %mend optCode;
71073      %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 118 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 87 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 66 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

71074      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
71075      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
71076      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
71077      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71078      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
71079      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
71080      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
71081      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

71082      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
71083      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
71083    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

71084      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71085      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
71086      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
71087      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

71088      filename _pref
71088    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
71089      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
71090      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
71091     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
71092     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
71093     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
71094     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
71095     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
71096     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
71097     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
71098     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
71099     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
71100     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
71101     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
71102     +LENGTH _WARN_ $4
71103     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
71104     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
71105     +
71106     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
71107     +
71108     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
71109     +
71110     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
71111     +
71112     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
71113     +
71114     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
71115     +
71116     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
71117     +
71118     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
71119     +
71120     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
71121     +
71122     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
71123     +
71124     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
71125     +
71126     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
71127     +
71128     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
71129     +
71130     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
71131     +
71132     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
71133     +
71134     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
71135     +
71136     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
71137     +
71138     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
71139     +
71140     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
71141     +
71142     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
71143     +
71144     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
71145     +
71146     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
71147     +
71148     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
71149     +
71150     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
71151     +
71152     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
71153     +
71154     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
71155     +
71156     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
71157     +
71158     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
71159     +
71160     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
71161     +
71162     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
71163     +
71164     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
71165     +
71166     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
71167     +
71168     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
71169     +
71170     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
71171     +
71172     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
71173     +
71174     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
71175     +
71176     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
71177     +
71178     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
71179     +
71180     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
71181     +
71182     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
71183     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
71184     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
71185     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
71186     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71187     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71188     +end;
MPRINT(EM_DIAGRAM):   end;
71189     +else do;
MPRINT(EM_DIAGRAM):   else do;
71190     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71191     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
71192     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71193     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71194     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
71195     +   end;
MPRINT(EM_DIAGRAM):   end;
71196     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71197     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
71198     +   end;
MPRINT(EM_DIAGRAM):   end;
71199     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71200     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
71201     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71202     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71203     +   end;
MPRINT(EM_DIAGRAM):   end;
71204     +end;
MPRINT(EM_DIAGRAM):   end;
71205     +
71206     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
71207     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
71208     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
71209     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
71210     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71211     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71212     +end;
MPRINT(EM_DIAGRAM):   end;
71213     +else do;
MPRINT(EM_DIAGRAM):   else do;
71214     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71215     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
71216     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71217     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71218     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
71219     +   end;
MPRINT(EM_DIAGRAM):   end;
71220     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71221     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
71222     +   end;
MPRINT(EM_DIAGRAM):   end;
71223     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71224     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
71225     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71226     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71227     +   end;
MPRINT(EM_DIAGRAM):   end;
71228     +end;
MPRINT(EM_DIAGRAM):   end;
71229     +
71230     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
71231     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
71232     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
71233     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
71234     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71235     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71236     +end;
MPRINT(EM_DIAGRAM):   end;
71237     +else do;
MPRINT(EM_DIAGRAM):   else do;
71238     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71239     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
71240     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71241     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71242     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
71243     +   end;
MPRINT(EM_DIAGRAM):   end;
71244     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71245     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
71246     +   end;
MPRINT(EM_DIAGRAM):   end;
71247     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71248     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
71249     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71250     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71251     +   end;
MPRINT(EM_DIAGRAM):   end;
71252     +end;
MPRINT(EM_DIAGRAM):   end;
71253     +
71254     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
71255     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
71256     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
71257     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
71258     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71259     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71260     +end;
MPRINT(EM_DIAGRAM):   end;
71261     +else do;
MPRINT(EM_DIAGRAM):   else do;
71262     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71263     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
71264     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71265     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71266     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
71267     +   end;
MPRINT(EM_DIAGRAM):   end;
71268     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71269     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
71270     +   end;
MPRINT(EM_DIAGRAM):   end;
71271     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71272     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
71273     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71274     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71275     +   end;
MPRINT(EM_DIAGRAM):   end;
71276     +end;
MPRINT(EM_DIAGRAM):   end;
71277     +
71278     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
71279     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
71280     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
71281     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
71282     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71283     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71284     +end;
MPRINT(EM_DIAGRAM):   end;
71285     +else do;
MPRINT(EM_DIAGRAM):   else do;
71286     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71287     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
71288     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71289     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71290     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
71291     +   end;
MPRINT(EM_DIAGRAM):   end;
71292     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71293     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
71294     +   end;
MPRINT(EM_DIAGRAM):   end;
71295     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71296     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
71297     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71298     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71299     +   end;
MPRINT(EM_DIAGRAM):   end;
71300     +end;
MPRINT(EM_DIAGRAM):   end;
71301     +
71302     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
71303     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
71304     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
71305     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
71306     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71307     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71308     +end;
MPRINT(EM_DIAGRAM):   end;
71309     +else do;
MPRINT(EM_DIAGRAM):   else do;
71310     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71311     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
71312     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71313     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71314     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
71315     +   end;
MPRINT(EM_DIAGRAM):   end;
71316     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71317     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
71318     +   end;
MPRINT(EM_DIAGRAM):   end;
71319     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71320     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
71321     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71322     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71323     +   end;
MPRINT(EM_DIAGRAM):   end;
71324     +end;
MPRINT(EM_DIAGRAM):   end;
71325     +
71326     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
71327     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
71328     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
71329     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
71330     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71331     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71332     +end;
MPRINT(EM_DIAGRAM):   end;
71333     +else do;
MPRINT(EM_DIAGRAM):   else do;
71334     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71335     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
71336     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71337     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
71338     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
71339     +   end;
MPRINT(EM_DIAGRAM):   end;
71340     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
71341     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
71342     +   end;
MPRINT(EM_DIAGRAM):   end;
71343     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71344     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
71345     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71346     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71347     +   end;
MPRINT(EM_DIAGRAM):   end;
71348     +end;
MPRINT(EM_DIAGRAM):   end;
71349     +
71350     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
71351     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
71352     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71353     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
71354     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
71355     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
71356     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
71357     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
71358     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
71359     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
71360     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
71361     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
71362     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71363     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71364     +end;
MPRINT(EM_DIAGRAM):   end;
71365     +else do;
MPRINT(EM_DIAGRAM):   else do;
71366     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
71367     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
71368     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71369     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
71370     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
71371     +   end;
MPRINT(EM_DIAGRAM):   end;
71372     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
71373     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
71374     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
71375     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
71376     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
71377     +   end;
MPRINT(EM_DIAGRAM):   end;
71378     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
71379     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
71380     +   end;
MPRINT(EM_DIAGRAM):   end;
71381     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
71382     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
71383     +   end;
MPRINT(EM_DIAGRAM):   end;
71384     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
71385     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
71386     +   end;
MPRINT(EM_DIAGRAM):   end;
71387     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71388     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
71389     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
71390     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
71391     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
71392     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71393     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71394     +   end;
MPRINT(EM_DIAGRAM):   end;
71395     +end;
MPRINT(EM_DIAGRAM):   end;
71396     +
71397     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
71398     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
71399     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
71400     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71401     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
71402     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
71403     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
71404     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
71405     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
71406     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
71407     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
71408     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
71409     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
71410     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71411     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71412     +end;
MPRINT(EM_DIAGRAM):   end;
71413     +else do;
MPRINT(EM_DIAGRAM):   else do;
71414     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
71415     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
71416     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71417     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
71418     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
71419     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
71420     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
71421     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
71422     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71423     +         end;
MPRINT(EM_DIAGRAM):   end;
71424     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71425     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
71426     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
71427     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71428     +            end;
MPRINT(EM_DIAGRAM):   end;
71429     +         end;
MPRINT(EM_DIAGRAM):   end;
71430     +      end;
MPRINT(EM_DIAGRAM):   end;
71431     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71432     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
71433     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
71434     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71435     +         end;
MPRINT(EM_DIAGRAM):   end;
71436     +      end;
MPRINT(EM_DIAGRAM):   end;
71437     +   end;
MPRINT(EM_DIAGRAM):   end;
71438     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71439     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
71440     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
71441     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71442     +      end;
MPRINT(EM_DIAGRAM):   end;
71443     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71444     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
71445     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
71446     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
71447     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
71448     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
71449     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71450     +         end;
MPRINT(EM_DIAGRAM):   end;
71451     +      end;
MPRINT(EM_DIAGRAM):   end;
71452     +   end;
MPRINT(EM_DIAGRAM):   end;
71453     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
71454     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
71455     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
71456     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
71457     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
71458     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71459     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71460     +   end;
MPRINT(EM_DIAGRAM):   end;
71461     +end;
MPRINT(EM_DIAGRAM):   end;
71462     +
71463     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71464     +*** Checking missing input Interval
71465     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
71466     +
71467     +IF NMISS(
71468     +   AcceptedCmpTotal ,
71469     +   Age ,
71470     +   Frq ,
71471     +   Income ,
71472     +   Kidhome ,
71473     +   MntFishProducts ,
71474     +   MntFruits ,
71475     +   MntGoldProds ,
71476     +   MntSweetProducts ,
71477     +   MonthsAsCustomer ,
71478     +   NumDealsPurchases ,
71479     +   NumWebVisitsMonth ,
71480     +   RFMstat ,
71481     +   RMntFrq ,
71482     +   Recency ,
71483     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
71484     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
71485     +
71486     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71487     +END;
MPRINT(EM_DIAGRAM):   END;
71488     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71489     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
71490     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71491     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71492     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
71493     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
71494     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
71495     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
71496     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
71497     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
71498     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
71499     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
71500     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
71501     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
71502     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
71503     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
71504     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
71505     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
71506     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
71507     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
71508     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
71509     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
71510     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
71511     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
71512     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
71513     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
71514     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
71515     +END;
MPRINT(EM_DIAGRAM):   END;
71516     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71517     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
71518     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
71519     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
71520     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
71521     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
71522     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
71523     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
71524     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
71525     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
71526     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
71527     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
71528     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
71529     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
71530     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
71531     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
71532     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
71533     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
71534     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
71535     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
71536     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
71537     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
71538     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
71539     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
71540     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
71541     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
71542     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
71543     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
71544     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
71545     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
71546     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
71547     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
71548     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
71549     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
71550     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
71551     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
71552     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
71553     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
71554     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
71555     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
71556     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
71557     +END;
MPRINT(EM_DIAGRAM):   END;
71558     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71559     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
71560     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71561     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71562     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
71563     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71564     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71565     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
71566     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71567     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71568     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
71569     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
71570     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
71571     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
71572     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
71573     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
71574     +          +     -0.1740957673716 * S_MonthsAsCustomer
71575     +          +     0.66565026405117 * S_NumDealsPurchases
71576     +          +     0.43247206282836 * S_NumWebVisitsMonth
71577     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
71578     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
71579     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
71580     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
71581     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
71582     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
71583     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
71584     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
71585     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
71586     +          +    -0.06176784990963 * S_MonthsAsCustomer
71587     +          +    -0.11740415005833 * S_NumDealsPurchases
71588     +          +    -0.17084845478672 * S_NumWebVisitsMonth
71589     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
71590     +        S_RMntFrq  +     0.54983271222574 * S_Recency
71591     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
71592     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
71593     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
71594     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
71595     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
71596     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
71597     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
71598     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
71599     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
71600     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
71601     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
71602     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
71603     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
71604     +        EducationGraduation  +     0.22632282500966 * EducationMaster
71605     +          +     -0.0800438380883 * Marital_StatusDivorced
71606     +          +     0.44505766937623 * Marital_StatusMarried
71607     +          +    -0.57546515626468 * Marital_StatusSingle
71608     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
71609     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
71610     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
71611     +        EducationGraduation  +      0.0794165981215 * EducationMaster
71612     +          +    -0.20291653465543 * Marital_StatusDivorced
71613     +          +     0.39547414450617 * Marital_StatusMarried
71614     +          +    -0.37001331184001 * Marital_StatusSingle
71615     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
71616     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
71617     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
71618     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
71619     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
71620     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
71621     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
71622     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
71623     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
71624     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
71625     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
71626     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
71627     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
71628     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
71629     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
71630     +END;
MPRINT(EM_DIAGRAM):   END;
71631     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71632     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
71633     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
71634     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
71635     +END;
MPRINT(EM_DIAGRAM):   END;
71636     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71637     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
71638     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71639     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71640     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
71641     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
71642     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
71643     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
71644     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
71645     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
71646     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
71647     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
71648     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
71649     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
71650     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
71651     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
71652     +END;
MPRINT(EM_DIAGRAM):   END;
71653     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71654     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
71655     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
71656     +END;
MPRINT(EM_DIAGRAM):   END;
71657     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
71658     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
71659     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
71660     +END;
MPRINT(EM_DIAGRAM):   END;
71661     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71662     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
71663     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71664     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
71665     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
71666     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
71667     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
71668     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
71669     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
71670     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
71671     +END;
MPRINT(EM_DIAGRAM):   END;
71672     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71673     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
71674     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71675     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71676      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71677      quit;
71678      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
71679      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
71680      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
71681      retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
71682      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
71683      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71684      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
71685      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71686      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71687      proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME 
CREATOR);
71688      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71689      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71690      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71691      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
71692      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
71693      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71694      proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
71695      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

71696      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
71697      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71698      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71699      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71700      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
71701      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71702      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

71703      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
71704      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
71704    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 997 rows and 5 columns.

71705      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71706      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
71707      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 997 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 997 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71708      filename _pref
71708    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
71709      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
71710      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
71711     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71712     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
71713     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71714     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
71715     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
71716     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71717      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71718      quit;
71719      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
71720      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
71721      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
71722      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
71723      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
71724      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71725      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
71726      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71727      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71728      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
71729      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71730      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71731      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71732      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
71733      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
71734      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71735      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
71736      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

71737      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
71738      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71739      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71740      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71741      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
71742      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71743      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71744      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
71745      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
71745    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

71746      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71747      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
71748      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1001 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71749      filename _pref
71749    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
71750      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
71751      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
71752     +
71753     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
71754     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
71754    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
71755     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
71756     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
71757     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
71758     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
71759     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71760      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71761      quit;
71762      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
71763      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
71764      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
71765      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
71766      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
71767      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71768      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
71769      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71770      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71771      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
71772      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71773      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71774      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71775      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
71776      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
71777      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71778      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
71779      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71780      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
71781      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71782      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71783      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71784      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
71785      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71786      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71787      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
71788      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
71788    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

71789      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71790      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
71791      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71792      filename _pref
71792    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
71793      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
71794      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
71795     +
71796     +
71797     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
71798     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
71799     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
71800     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
71801     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
71802     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71803     +
71804     +
71805     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
71806     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
71807     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
71808     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
71809     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
71810     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71811     +
71812     +
71813     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
71814     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
71815     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
71816     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
71817     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
71818     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71819     +
71820     +
71821     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
71822     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
71823     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
71824     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
71825     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
71826     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71827     +
71828     +
71829     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
71830     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
71831     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
71832     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
71833     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
71834     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71835     +
71836     +
71837     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
71838     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
71839     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
71840     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
71841     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
71842     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71843     +
71844     +
71845     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
71846     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
71847     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
71848     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
71849     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
71850     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71851     +
71852     +
71853     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
71854     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
71855     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
71856     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
71857     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
71858     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71859     +if
71860     +_FILTERNORM1 not in ( '.')
71861     + and
71862     +_FILTERNORM2 not in ( '.')
71863     + and
71864     +_FILTERNORM3 not in ( '.')
71865     + and
71866     +_FILTERNORM4 not in ( '.')
71867     + and
71868     +_FILTERNORM5 not in ( '.')
71869     + and
71870     +_FILTERNORM6 not in ( '.')
71871     + and
71872     +_FILTERNORM7 not in ( ' ')
71873     + and
71874     +_FILTERNORM8 not in ( ' ')
71875     +and
71876     +( Dt_Customer ne .)
71877     +and ( Income ne . and (Income<=107000))
71878     +and ( Kidhome ne .)
71879     +and ( MntFishProducts ne .)
71880     +and ( MntFruits ne .)
71881     +and ( MntGoldProds ne .)
71882     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
71883     +and ( MntSweetProducts ne .)
71884     +and ( MntWines ne .)
71885     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
71886     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
71887     +and ( NumStorePurchases ne .)
71888     +and ( NumWebPurchases ne .)
71889     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
71890     +and ( Recency ne .)
71891     +and ( Teenhome ne .)
71892     +and ( Year_Birth ne .)
71893     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
71894     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
71895     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
71896     +end;
MPRINT(EM_DIAGRAM):   end;
71897     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
71898     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71899      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71900      quit;
71901      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
71902      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
71903      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
71904      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
71905      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
71906      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71907      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
71908      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71909      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71910      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
71911      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71912      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71913      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71914      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
71915      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
71916      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71917      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
71918      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

71919      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
71920      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71921      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71922      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71923      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
71924      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71925      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71926      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
71927      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
71927    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

71928      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71929      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
71930      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1106 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71931      %macro varDept(fcmpdata=,id=);
71932      %global nobs&id scoreFlag&id;
71933      %let scoreFlag&id = 0;
71934      %if &id=1 or ^&fcmpStart %then %do;
71935      proc sort data=&fcmpdata out=_temp&id nodupkey;
71936      by NAME;
71937      where id=&id and LHS in( %let j=1;
71938      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
71939      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
71940      "&var" %let j = %eval(&j+1);
71941      %end;
71942      );
71943      run;
71944      %let dsid = %sysfunc(open(_temp&id));
71945      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
71946      %let dsid = %sysfunc(close(&dsid));
71947      %if &&nobs&id %then %do;
71948      %let scoreFlag&id = 1;
71949      %let fcmpStart = 1;
71950      %end;
71951      %else %let fcmpStart = 0;
71952      %end;
71953      %else %do;
71954      proc sort data=&fcmpdata out=_tempid;
71955      where id=&id;
71956      by LHS;
71957      run;
71958      %let dsid = %sysfunc(open(_tempid));
71959      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
71960      %let dsid = %sysfunc(close(&dsid));
71961      %if ^&&nobs&id %then %do;
71962      proc datasets lib=work nolist;
71963      delete _tempid;
71964      run;
71965      quit;
71966      %end;
71967      %else %do;
71968      data _tempAll;
71969      set %let j=%eval(&id-1);
71970      %do x=1 %to &j;
71971      %if &&nobs&x %then %do;
71972      _temp&x %end;
71973      %end;
71974      ;
71975      run;
71976      proc sql;
71977      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
71977    ! work._tempid p2 where p.name=p2.lhs;
71978      quit;
71979      data _temp&id;
71980      set _temp&id;
71981      where LHS ne '' and NAME ne '' and Node ne '';
71982      run;
71983      proc datasets lib=work nolist;
71984      delete _tempAll;
71985      run;
71986      %let dsid = %sysfunc(open(_temp&id));
71987      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
71988      %let dsid = %sysfunc(close(&dsid));
71989      %if ^&&nobs&id %then %do;
71990      proc datasets lib=work nolist;
71991      delete _temp&id;
71992      run;
71993      quit;
71994      %end;
71995      %else %do;
71996      %let scoreFlag&id = 1;
71997      data _temp&id;
71998      set _temp&id;
71999      where LHS ne NAME and node ne '';
72000      run;
72001      %let dsid = %sysfunc(open(_temp&id));
72002      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72003      %let dsid = %sysfunc(close(&dsid));
72004      %if ^&&nobs&id %then %do;
72005      proc datasets lib=work nolist;
72006      delete _temp&id;
72007      run;
72008      quit;
72009      %end;
72010      %else %do;
72011      proc sort data=_temp&id nodupkey;
72012      by LHS NAME;
72013      run;
72014      %end;
72015      %end;
72016      %end;
72017      %end;
72018      %mend varDept;
72019      %macro optCode(outdata=fcmpdata);
72020      %global fcmpStart;
72021      %let fcmpStart = 0;
72022      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
72023      %let NumNodes=9;
72024      %do k=1 %to &NumNodes;
72025      %vardept(fcmpdata=&outdata, id=&k);
72026      %end;
72027      %mend optCode;
72028      %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 115 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

72029      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
72030      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
72031      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
72032      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72033      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
72034      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
72035      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
72036      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72037      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72038      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
72038    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

72039      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72040      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
72041      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
72042      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72043      filename _pref
72043    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
72044      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72045      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
72046     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72047     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
72048     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72049     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
72050     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
72051     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
72052     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
72053     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
72054     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
72055     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
72056     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
72057     +LENGTH _WARN_ $4
72058     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
72059     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
72060     +
72061     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
72062     +
72063     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
72064     +
72065     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
72066     +
72067     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
72068     +
72069     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
72070     +
72071     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
72072     +
72073     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
72074     +
72075     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
72076     +
72077     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
72078     +
72079     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
72080     +
72081     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
72082     +
72083     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
72084     +
72085     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
72086     +
72087     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
72088     +
72089     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
72090     +
72091     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
72092     +
72093     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
72094     +
72095     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
72096     +
72097     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
72098     +
72099     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
72100     +
72101     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
72102     +
72103     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
72104     +
72105     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
72106     +
72107     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
72108     +
72109     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
72110     +
72111     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
72112     +
72113     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
72114     +
72115     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
72116     +
72117     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
72118     +
72119     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
72120     +
72121     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
72122     +
72123     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
72124     +
72125     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
72126     +
72127     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
72128     +
72129     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
72130     +
72131     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
72132     +
72133     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
72134     +
72135     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
72136     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
72137     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
72138     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
72139     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72140     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72141     +end;
MPRINT(EM_DIAGRAM):   end;
72142     +else do;
MPRINT(EM_DIAGRAM):   else do;
72143     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72144     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
72145     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72146     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72147     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
72148     +   end;
MPRINT(EM_DIAGRAM):   end;
72149     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72150     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
72151     +   end;
MPRINT(EM_DIAGRAM):   end;
72152     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72153     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
72154     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72155     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72156     +   end;
MPRINT(EM_DIAGRAM):   end;
72157     +end;
MPRINT(EM_DIAGRAM):   end;
72158     +
72159     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
72160     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
72161     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
72162     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
72163     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72164     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72165     +end;
MPRINT(EM_DIAGRAM):   end;
72166     +else do;
MPRINT(EM_DIAGRAM):   else do;
72167     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72168     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
72169     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72170     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72171     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
72172     +   end;
MPRINT(EM_DIAGRAM):   end;
72173     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72174     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
72175     +   end;
MPRINT(EM_DIAGRAM):   end;
72176     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72177     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
72178     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72179     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72180     +   end;
MPRINT(EM_DIAGRAM):   end;
72181     +end;
MPRINT(EM_DIAGRAM):   end;
72182     +
72183     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
72184     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
72185     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
72186     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
72187     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72188     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72189     +end;
MPRINT(EM_DIAGRAM):   end;
72190     +else do;
MPRINT(EM_DIAGRAM):   else do;
72191     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72192     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
72193     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72194     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72195     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
72196     +   end;
MPRINT(EM_DIAGRAM):   end;
72197     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72198     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
72199     +   end;
MPRINT(EM_DIAGRAM):   end;
72200     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72201     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
72202     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72203     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72204     +   end;
MPRINT(EM_DIAGRAM):   end;
72205     +end;
MPRINT(EM_DIAGRAM):   end;
72206     +
72207     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
72208     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
72209     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
72210     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
72211     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72212     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72213     +end;
MPRINT(EM_DIAGRAM):   end;
72214     +else do;
MPRINT(EM_DIAGRAM):   else do;
72215     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72216     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
72217     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72218     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72219     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
72220     +   end;
MPRINT(EM_DIAGRAM):   end;
72221     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72222     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
72223     +   end;
MPRINT(EM_DIAGRAM):   end;
72224     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72225     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
72226     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72227     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72228     +   end;
MPRINT(EM_DIAGRAM):   end;
72229     +end;
MPRINT(EM_DIAGRAM):   end;
72230     +
72231     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
72232     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
72233     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
72234     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
72235     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72236     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72237     +end;
MPRINT(EM_DIAGRAM):   end;
72238     +else do;
MPRINT(EM_DIAGRAM):   else do;
72239     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72240     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
72241     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72242     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72243     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
72244     +   end;
MPRINT(EM_DIAGRAM):   end;
72245     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72246     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
72247     +   end;
MPRINT(EM_DIAGRAM):   end;
72248     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72249     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
72250     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72251     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72252     +   end;
MPRINT(EM_DIAGRAM):   end;
72253     +end;
MPRINT(EM_DIAGRAM):   end;
72254     +
72255     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
72256     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
72257     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
72258     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
72259     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72260     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72261     +end;
MPRINT(EM_DIAGRAM):   end;
72262     +else do;
MPRINT(EM_DIAGRAM):   else do;
72263     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72264     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
72265     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72266     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72267     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
72268     +   end;
MPRINT(EM_DIAGRAM):   end;
72269     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72270     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
72271     +   end;
MPRINT(EM_DIAGRAM):   end;
72272     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72273     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
72274     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72275     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72276     +   end;
MPRINT(EM_DIAGRAM):   end;
72277     +end;
MPRINT(EM_DIAGRAM):   end;
72278     +
72279     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
72280     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
72281     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
72282     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
72283     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72284     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72285     +end;
MPRINT(EM_DIAGRAM):   end;
72286     +else do;
MPRINT(EM_DIAGRAM):   else do;
72287     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72288     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
72289     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72290     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
72291     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
72292     +   end;
MPRINT(EM_DIAGRAM):   end;
72293     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
72294     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
72295     +   end;
MPRINT(EM_DIAGRAM):   end;
72296     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72297     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
72298     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72299     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72300     +   end;
MPRINT(EM_DIAGRAM):   end;
72301     +end;
MPRINT(EM_DIAGRAM):   end;
72302     +
72303     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
72304     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
72305     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
72306     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
72307     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
72308     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
72309     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
72310     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
72311     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
72312     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
72313     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
72314     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
72315     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72316     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72317     +end;
MPRINT(EM_DIAGRAM):   end;
72318     +else do;
MPRINT(EM_DIAGRAM):   else do;
72319     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
72320     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
72321     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72322     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
72323     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
72324     +   end;
MPRINT(EM_DIAGRAM):   end;
72325     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
72326     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
72327     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
72328     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
72329     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
72330     +   end;
MPRINT(EM_DIAGRAM):   end;
72331     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
72332     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
72333     +   end;
MPRINT(EM_DIAGRAM):   end;
72334     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
72335     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
72336     +   end;
MPRINT(EM_DIAGRAM):   end;
72337     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
72338     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
72339     +   end;
MPRINT(EM_DIAGRAM):   end;
72340     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72341     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
72342     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
72343     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
72344     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
72345     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72346     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72347     +   end;
MPRINT(EM_DIAGRAM):   end;
72348     +end;
MPRINT(EM_DIAGRAM):   end;
72349     +
72350     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
72351     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
72352     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
72353     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
72354     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
72355     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
72356     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
72357     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
72358     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
72359     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
72360     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
72361     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
72362     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
72363     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72364     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72365     +end;
MPRINT(EM_DIAGRAM):   end;
72366     +else do;
MPRINT(EM_DIAGRAM):   else do;
72367     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
72368     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
72369     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72370     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
72371     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
72372     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
72373     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
72374     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
72375     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72376     +         end;
MPRINT(EM_DIAGRAM):   end;
72377     +         else do;
MPRINT(EM_DIAGRAM):   else do;
72378     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
72379     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
72380     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72381     +            end;
MPRINT(EM_DIAGRAM):   end;
72382     +         end;
MPRINT(EM_DIAGRAM):   end;
72383     +      end;
MPRINT(EM_DIAGRAM):   end;
72384     +      else do;
MPRINT(EM_DIAGRAM):   else do;
72385     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
72386     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
72387     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72388     +         end;
MPRINT(EM_DIAGRAM):   end;
72389     +      end;
MPRINT(EM_DIAGRAM):   end;
72390     +   end;
MPRINT(EM_DIAGRAM):   end;
72391     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72392     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
72393     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
72394     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72395     +      end;
MPRINT(EM_DIAGRAM):   end;
72396     +      else do;
MPRINT(EM_DIAGRAM):   else do;
72397     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
72398     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
72399     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
72400     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
72401     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
72402     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72403     +         end;
MPRINT(EM_DIAGRAM):   end;
72404     +      end;
MPRINT(EM_DIAGRAM):   end;
72405     +   end;
MPRINT(EM_DIAGRAM):   end;
72406     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
72407     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
72408     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
72409     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
72410     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
72411     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72412     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72413     +   end;
MPRINT(EM_DIAGRAM):   end;
72414     +end;
MPRINT(EM_DIAGRAM):   end;
72415     +
72416     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72417     +*** Checking missing input Interval
72418     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
72419     +
72420     +IF NMISS(
72421     +   AcceptedCmpTotal ,
72422     +   Age ,
72423     +   Frq ,
72424     +   Income ,
72425     +   Kidhome ,
72426     +   MntFishProducts ,
72427     +   MntFruits ,
72428     +   MntGoldProds ,
72429     +   MntSweetProducts ,
72430     +   MonthsAsCustomer ,
72431     +   NumDealsPurchases ,
72432     +   NumWebVisitsMonth ,
72433     +   RFMstat ,
72434     +   RMntFrq ,
72435     +   Recency ,
72436     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
72437     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
72438     +
72439     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72440     +END;
MPRINT(EM_DIAGRAM):   END;
72441     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72442     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
72443     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72444     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72445     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
72446     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
72447     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
72448     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
72449     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
72450     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
72451     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
72452     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
72453     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
72454     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
72455     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
72456     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
72457     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
72458     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
72459     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
72460     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
72461     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
72462     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
72463     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
72464     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
72465     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
72466     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
72467     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
72468     +END;
MPRINT(EM_DIAGRAM):   END;
72469     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72470     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
72471     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
72472     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
72473     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
72474     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
72475     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
72476     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
72477     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
72478     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
72479     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
72480     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
72481     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
72482     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
72483     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
72484     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
72485     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
72486     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
72487     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
72488     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
72489     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
72490     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
72491     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
72492     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
72493     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
72494     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
72495     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
72496     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
72497     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
72498     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
72499     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
72500     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
72501     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
72502     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
72503     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
72504     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
72505     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
72506     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
72507     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
72508     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
72509     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
72510     +END;
MPRINT(EM_DIAGRAM):   END;
72511     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72512     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
72513     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72514     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72515     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
72516     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72517     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72518     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
72519     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72520     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72521     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
72522     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
72523     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
72524     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
72525     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
72526     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
72527     +          +     0.07696704519183 * S_MonthsAsCustomer
72528     +          +     0.06885982009617 * S_NumDealsPurchases
72529     +          +     0.18284147478918 * S_NumWebVisitsMonth
72530     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
72531     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
72532     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
72533     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
72534     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
72535     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
72536     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
72537     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
72538     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
72539     +          +     0.19400730773464 * S_MonthsAsCustomer
72540     +          +    -1.36455521037197 * S_NumDealsPurchases
72541     +          +    -1.07068059346196 * S_NumWebVisitsMonth
72542     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
72543     +        S_RMntFrq  +     1.36066079800227 * S_Recency
72544     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
72545     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
72546     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
72547     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
72548     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
72549     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
72550     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
72551     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
72552     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
72553     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
72554     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
72555     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
72556     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
72557     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
72558     +          +     0.23432241402098 * Marital_StatusDivorced
72559     +          +    -0.46302700269027 * Marital_StatusMarried
72560     +          +      0.4032168653504 * Marital_StatusSingle
72561     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
72562     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
72563     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
72564     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
72565     +          +    -0.31347503340603 * Marital_StatusDivorced
72566     +          +    -0.20319530959178 * Marital_StatusMarried
72567     +          +     0.48298350411196 * Marital_StatusSingle
72568     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
72569     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
72570     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
72571     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
72572     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
72573     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
72574     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
72575     +END;
MPRINT(EM_DIAGRAM):   END;
72576     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72577     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
72578     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
72579     +END;
MPRINT(EM_DIAGRAM):   END;
72580     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72581     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
72582     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72583     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72584     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
72585     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
72586     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
72587     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
72588     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
72589     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
72590     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
72591     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
72592     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
72593     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
72594     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
72595     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
72596     +END;
MPRINT(EM_DIAGRAM):   END;
72597     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72598     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
72599     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
72600     +END;
MPRINT(EM_DIAGRAM):   END;
72601     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
72602     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
72603     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
72604     +END;
MPRINT(EM_DIAGRAM):   END;
72605     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72606     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
72607     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72608     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
72609     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
72610     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
72611     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
72612     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
72613     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
72614     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
72615     +END;
MPRINT(EM_DIAGRAM):   END;
72616     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
72617     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
72618     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
72619     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
72620      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
72621      quit;
72622      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
72623      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
72624      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
72625      retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
72626      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
72627      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72628      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
72629      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72630      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72631      proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME 
CREATOR);
72632      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72633      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72634      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72635      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72636      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72637      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72638      proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
72639      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

72640      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72641      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72642      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72643      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72644      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72645      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72646      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72647      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72648      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72648    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 936 rows and 5 columns.

72649      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72650      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
72651      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 936 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 936 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72652      filename _pref
72652    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
72653      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72654      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
72655     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72656     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
72657     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72658     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
72659     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
72660     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
72661      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
72662      quit;
72663      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
72664      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
72665      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
72666      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
72667      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
72668      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72669      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
72670      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72671      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72672      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
72673      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72674      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72675      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72676      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72677      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72678      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72679      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
72680      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

72681      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72682      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72683      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72684      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72685      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72686      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72687      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72688      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72689      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72689    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

72690      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72691      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
72692      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72693      filename _pref
72693    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
72694      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72695      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
72696     +
72697     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
72698     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
72698    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
72699     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
72700     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
72701     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
72702     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
72703     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
72704      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
72705      quit;
72706      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
72707      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
72708      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
72709      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
72710      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
72711      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72712      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
72713      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72714      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72715      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
72716      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72717      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72718      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72719      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72720      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72721      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72722      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
72723      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72724      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72725      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72726      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

72727      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72728      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72729      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72730      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72731      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72732      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72732    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

72733      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72734      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
72735      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 979 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72736      filename _pref
72736    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
72737      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72738      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
72739     +
72740     +
72741     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
72742     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
72743     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
72744     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
72745     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
72746     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72747     +
72748     +
72749     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
72750     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
72751     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
72752     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
72753     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
72754     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72755     +
72756     +
72757     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
72758     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
72759     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
72760     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
72761     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
72762     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72763     +
72764     +
72765     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
72766     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
72767     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
72768     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
72769     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
72770     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72771     +
72772     +
72773     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
72774     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
72775     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
72776     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
72777     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
72778     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72779     +
72780     +
72781     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
72782     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
72783     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
72784     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
72785     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
72786     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72787     +
72788     +
72789     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
72790     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
72791     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
72792     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
72793     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
72794     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72795     +
72796     +
72797     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
72798     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
72799     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
72800     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
72801     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
72802     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72803     +if
72804     +_FILTERNORM1 not in ( '.')
72805     + and
72806     +_FILTERNORM2 not in ( '.')
72807     + and
72808     +_FILTERNORM3 not in ( '.')
72809     + and
72810     +_FILTERNORM4 not in ( '.')
72811     + and
72812     +_FILTERNORM5 not in ( '.')
72813     + and
72814     +_FILTERNORM6 not in ( '.')
72815     + and
72816     +_FILTERNORM7 not in ( ' ')
72817     + and
72818     +_FILTERNORM8 not in ( ' ')
72819     +and
72820     +( Dt_Customer ne .)
72821     +and ( Income ne . and (Income<=107000))
72822     +and ( Kidhome ne .)
72823     +and ( MntFishProducts ne .)
72824     +and ( MntFruits ne .)
72825     +and ( MntGoldProds ne .)
72826     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
72827     +and ( MntSweetProducts ne .)
72828     +and ( MntWines ne .)
72829     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
72830     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
72831     +and ( NumStorePurchases ne .)
72832     +and ( NumWebPurchases ne .)
72833     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
72834     +and ( Recency ne .)
72835     +and ( Teenhome ne .)
72836     +and ( Year_Birth ne .)
72837     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
72838     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
72839     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
72840     +end;
MPRINT(EM_DIAGRAM):   end;
72841     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
72842     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
72843      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
72844      quit;
72845      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
72846      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
72847      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
72848      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
72849      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
72850      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72851      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
72852      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72853      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72854      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
72855      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72856      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72857      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72858      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72859      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72860      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72861      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
72862      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72863      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72864      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72865      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72866      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72867      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72868      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72869      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72870      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72871      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72871    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

72872      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72873      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
72874      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1045 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72875      %macro varDept(fcmpdata=,id=);
72876      %global nobs&id scoreFlag&id;
72877      %let scoreFlag&id = 0;
72878      %if &id=1 or ^&fcmpStart %then %do;
72879      proc sort data=&fcmpdata out=_temp&id nodupkey;
72880      by NAME;
72881      where id=&id and LHS in( %let j=1;
72882      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
72883      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
72884      "&var" %let j = %eval(&j+1);
72885      %end;
72886      );
72887      run;
72888      %let dsid = %sysfunc(open(_temp&id));
72889      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72890      %let dsid = %sysfunc(close(&dsid));
72891      %if &&nobs&id %then %do;
72892      %let scoreFlag&id = 1;
72893      %let fcmpStart = 1;
72894      %end;
72895      %else %let fcmpStart = 0;
72896      %end;
72897      %else %do;
72898      proc sort data=&fcmpdata out=_tempid;
72899      where id=&id;
72900      by LHS;
72901      run;
72902      %let dsid = %sysfunc(open(_tempid));
72903      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72904      %let dsid = %sysfunc(close(&dsid));
72905      %if ^&&nobs&id %then %do;
72906      proc datasets lib=work nolist;
72907      delete _tempid;
72908      run;
72909      quit;
72910      %end;
72911      %else %do;
72912      data _tempAll;
72913      set %let j=%eval(&id-1);
72914      %do x=1 %to &j;
72915      %if &&nobs&x %then %do;
The SAS System

72916      _temp&x %end;
72917      %end;
72918      ;
72919      run;
72920      proc sql;
72921      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
72921    ! work._tempid p2 where p.name=p2.lhs;
72922      quit;
72923      data _temp&id;
72924      set _temp&id;
72925      where LHS ne '' and NAME ne '' and Node ne '';
72926      run;
72927      proc datasets lib=work nolist;
72928      delete _tempAll;
72929      run;
72930      %let dsid = %sysfunc(open(_temp&id));
72931      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72932      %let dsid = %sysfunc(close(&dsid));
72933      %if ^&&nobs&id %then %do;
72934      proc datasets lib=work nolist;
72935      delete _temp&id;
72936      run;
72937      quit;
72938      %end;
72939      %else %do;
72940      %let scoreFlag&id = 1;
72941      data _temp&id;
72942      set _temp&id;
72943      where LHS ne NAME and node ne '';
72944      run;
72945      %let dsid = %sysfunc(open(_temp&id));
72946      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72947      %let dsid = %sysfunc(close(&dsid));
72948      %if ^&&nobs&id %then %do;
72949      proc datasets lib=work nolist;
72950      delete _temp&id;
72951      run;
72952      quit;
72953      %end;
72954      %else %do;
72955      proc sort data=_temp&id nodupkey;
72956      by LHS NAME;
72957      run;
72958      %end;
72959      %end;
72960      %end;
72961      %end;
72962      %mend varDept;
72963      %macro optCode(outdata=fcmpdata);
72964      %global fcmpStart;
72965      %let fcmpStart = 0;
72966      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
72967      %let NumNodes=9;
72968      %do k=1 %to &NumNodes;
72969      %vardept(fcmpdata=&outdata, id=&k);
72970      %end;
72971      %mend optCode;
72972      %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 112 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 29 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

72973      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
72974      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
72975      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
72976      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72977      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
72978      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
72979      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
72980      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72981      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72982      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
72982    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

72983      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72984      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
72985      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
72986      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72987      filename _pref
72987    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
72988      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72989      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas.
72990     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72991     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
72992     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72993     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
72994     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
72995     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
72996     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
72997     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
72998     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
72999     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
73000     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
73001     +LENGTH _WARN_ $4
73002     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
73003     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
73004     +
73005     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
73006     +
73007     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
73008     +
73009     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
73010     +
73011     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
73012     +
73013     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
73014     +
73015     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
73016     +
73017     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
73018     +
73019     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
73020     +
73021     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
73022     +
73023     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
73024     +
73025     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
73026     +
73027     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
73028     +
73029     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
73030     +
73031     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
73032     +
73033     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
73034     +
73035     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
73036     +
73037     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
73038     +
73039     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
73040     +
73041     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
73042     +
73043     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
73044     +
73045     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
73046     +
73047     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
73048     +
73049     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
73050     +
73051     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
73052     +
73053     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
73054     +
73055     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
73056     +
73057     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
73058     +
73059     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
73060     +
73061     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
73062     +
73063     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
73064     +
73065     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
73066     +
73067     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
73068     +
73069     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
73070     +
73071     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
73072     +
73073     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
73074     +
73075     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
73076     +
73077     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
73078     +
73079     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
73080     +
73081     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
73082     +
73083     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
73084     +
73085     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
73086     +
73087     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
73088     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
73089     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
73090     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
73091     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73092     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73093     +end;
MPRINT(EM_DIAGRAM):   end;
73094     +else do;
MPRINT(EM_DIAGRAM):   else do;
73095     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73096     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
73097     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73098     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73099     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
73100     +   end;
MPRINT(EM_DIAGRAM):   end;
73101     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73102     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
73103     +   end;
MPRINT(EM_DIAGRAM):   end;
73104     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73105     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
73106     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73107     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73108     +   end;
MPRINT(EM_DIAGRAM):   end;
73109     +end;
MPRINT(EM_DIAGRAM):   end;
73110     +
73111     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
73112     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
73113     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
73114     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
73115     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73116     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73117     +end;
MPRINT(EM_DIAGRAM):   end;
73118     +else do;
MPRINT(EM_DIAGRAM):   else do;
73119     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73120     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
73121     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73122     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73123     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
73124     +   end;
MPRINT(EM_DIAGRAM):   end;
73125     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73126     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
73127     +   end;
MPRINT(EM_DIAGRAM):   end;
73128     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73129     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
73130     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73131     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73132     +   end;
MPRINT(EM_DIAGRAM):   end;
73133     +end;
MPRINT(EM_DIAGRAM):   end;
73134     +
73135     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
73136     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
73137     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
73138     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
73139     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73140     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73141     +end;
MPRINT(EM_DIAGRAM):   end;
73142     +else do;
MPRINT(EM_DIAGRAM):   else do;
73143     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73144     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
73145     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73146     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73147     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
73148     +   end;
MPRINT(EM_DIAGRAM):   end;
73149     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73150     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
73151     +   end;
MPRINT(EM_DIAGRAM):   end;
73152     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73153     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
73154     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73155     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73156     +   end;
MPRINT(EM_DIAGRAM):   end;
73157     +end;
MPRINT(EM_DIAGRAM):   end;
73158     +
73159     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
73160     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
73161     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
73162     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
73163     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73164     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73165     +end;
MPRINT(EM_DIAGRAM):   end;
73166     +else do;
MPRINT(EM_DIAGRAM):   else do;
73167     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73168     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
73169     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73170     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73171     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
73172     +   end;
MPRINT(EM_DIAGRAM):   end;
73173     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73174     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
73175     +   end;
MPRINT(EM_DIAGRAM):   end;
73176     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73177     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
73178     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73179     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73180     +   end;
MPRINT(EM_DIAGRAM):   end;
73181     +end;
MPRINT(EM_DIAGRAM):   end;
73182     +
73183     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
73184     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
73185     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
73186     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
73187     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73188     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73189     +end;
MPRINT(EM_DIAGRAM):   end;
73190     +else do;
MPRINT(EM_DIAGRAM):   else do;
73191     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73192     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
73193     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73194     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73195     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
73196     +   end;
MPRINT(EM_DIAGRAM):   end;
73197     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73198     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
73199     +   end;
MPRINT(EM_DIAGRAM):   end;
73200     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73201     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
73202     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73203     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73204     +   end;
MPRINT(EM_DIAGRAM):   end;
73205     +end;
MPRINT(EM_DIAGRAM):   end;
73206     +
73207     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
73208     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
73209     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
73210     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
73211     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73212     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73213     +end;
MPRINT(EM_DIAGRAM):   end;
73214     +else do;
MPRINT(EM_DIAGRAM):   else do;
73215     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73216     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
73217     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73218     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73219     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
73220     +   end;
MPRINT(EM_DIAGRAM):   end;
73221     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73222     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
73223     +   end;
MPRINT(EM_DIAGRAM):   end;
73224     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73225     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
73226     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73227     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73228     +   end;
MPRINT(EM_DIAGRAM):   end;
73229     +end;
MPRINT(EM_DIAGRAM):   end;
73230     +
73231     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
73232     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
73233     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
73234     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
73235     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73236     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73237     +end;
MPRINT(EM_DIAGRAM):   end;
73238     +else do;
MPRINT(EM_DIAGRAM):   else do;
73239     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73240     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
73241     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73242     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
73243     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
73244     +   end;
MPRINT(EM_DIAGRAM):   end;
73245     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
73246     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
73247     +   end;
MPRINT(EM_DIAGRAM):   end;
73248     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73249     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
73250     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73251     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73252     +   end;
MPRINT(EM_DIAGRAM):   end;
73253     +end;
MPRINT(EM_DIAGRAM):   end;
73254     +
73255     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
73256     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
73257     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
73258     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
73259     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
73260     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
73261     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
73262     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
73263     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
73264     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
73265     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
73266     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
73267     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73268     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73269     +end;
MPRINT(EM_DIAGRAM):   end;
73270     +else do;
MPRINT(EM_DIAGRAM):   else do;
73271     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
73272     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
73273     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73274     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
73275     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
73276     +   end;
MPRINT(EM_DIAGRAM):   end;
73277     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
73278     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
73279     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
73280     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
73281     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
73282     +   end;
MPRINT(EM_DIAGRAM):   end;
73283     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
73284     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
73285     +   end;
MPRINT(EM_DIAGRAM):   end;
73286     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
73287     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
73288     +   end;
MPRINT(EM_DIAGRAM):   end;
73289     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
73290     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
73291     +   end;
MPRINT(EM_DIAGRAM):   end;
73292     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73293     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
73294     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
73295     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
73296     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
73297     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73298     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73299     +   end;
MPRINT(EM_DIAGRAM):   end;
73300     +end;
MPRINT(EM_DIAGRAM):   end;
73301     +
73302     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
73303     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
73304     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
73305     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
73306     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
73307     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
73308     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
73309     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
73310     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
73311     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
73312     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
73313     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
73314     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
73315     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73316     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73317     +end;
MPRINT(EM_DIAGRAM):   end;
73318     +else do;
MPRINT(EM_DIAGRAM):   else do;
73319     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
73320     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
73321     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73322     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
73323     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
73324     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
73325     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
73326     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
73327     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73328     +         end;
MPRINT(EM_DIAGRAM):   end;
73329     +         else do;
MPRINT(EM_DIAGRAM):   else do;
73330     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
73331     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
73332     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73333     +            end;
MPRINT(EM_DIAGRAM):   end;
73334     +         end;
MPRINT(EM_DIAGRAM):   end;
73335     +      end;
MPRINT(EM_DIAGRAM):   end;
73336     +      else do;
MPRINT(EM_DIAGRAM):   else do;
73337     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
73338     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
73339     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73340     +         end;
MPRINT(EM_DIAGRAM):   end;
73341     +      end;
MPRINT(EM_DIAGRAM):   end;
73342     +   end;
MPRINT(EM_DIAGRAM):   end;
73343     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73344     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
73345     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
73346     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73347     +      end;
MPRINT(EM_DIAGRAM):   end;
73348     +      else do;
MPRINT(EM_DIAGRAM):   else do;
73349     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
73350     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
73351     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
73352     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
73353     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
73354     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73355     +         end;
MPRINT(EM_DIAGRAM):   end;
73356     +      end;
MPRINT(EM_DIAGRAM):   end;
73357     +   end;
MPRINT(EM_DIAGRAM):   end;
73358     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
73359     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
73360     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
73361     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
73362     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
73363     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73364     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73365     +   end;
MPRINT(EM_DIAGRAM):   end;
73366     +end;
MPRINT(EM_DIAGRAM):   end;
73367     +
73368     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73369     +*** Checking missing input Interval
73370     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
73371     +
73372     +IF NMISS(
73373     +   AcceptedCmpTotal ,
73374     +   Age ,
73375     +   Frq ,
73376     +   Income ,
73377     +   Kidhome ,
73378     +   MntFishProducts ,
73379     +   MntFruits ,
73380     +   MntGoldProds ,
73381     +   MntSweetProducts ,
73382     +   MonthsAsCustomer ,
73383     +   NumDealsPurchases ,
73384     +   NumWebVisitsMonth ,
73385     +   RFMstat ,
73386     +   RMntFrq ,
73387     +   Recency ,
73388     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
73389     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
73390     +
73391     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73392     +END;
MPRINT(EM_DIAGRAM):   END;
73393     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73394     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
73395     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73396     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73397     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
73398     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
73399     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
73400     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
73401     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
73402     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
73403     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
73404     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
73405     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
73406     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
73407     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
73408     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
73409     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
73410     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
73411     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
73412     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
73413     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
73414     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
73415     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
73416     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
73417     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
73418     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
73419     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
73420     +END;
MPRINT(EM_DIAGRAM):   END;
73421     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73422     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
73423     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
73424     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
73425     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
73426     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
73427     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
73428     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
73429     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
73430     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
73431     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
73432     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
73433     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
73434     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
73435     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
73436     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
73437     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
73438     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
73439     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
73440     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
73441     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
73442     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
73443     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
73444     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
73445     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
73446     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
73447     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
73448     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
73449     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
73450     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
73451     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
73452     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
73453     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
73454     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
73455     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
73456     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
73457     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
73458     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
73459     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
73460     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
73461     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
73462     +END;
MPRINT(EM_DIAGRAM):   END;
73463     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73464     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
73465     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73466     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73467     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
73468     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73469     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73470     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
73471     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73472     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73473     +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
73474     +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
73475     +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
73476     +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
73477     +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
73478     +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
73479     +          +    -0.01191239814261 * S_MonthsAsCustomer
73480     +          +      -0.307259983666 * S_NumDealsPurchases
73481     +          +    -0.23972300101674 * S_NumWebVisitsMonth
73482     +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
73483     +        S_RMntFrq  +     0.32671320165482 * S_Recency
73484     +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
73485     +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
73486     +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
73487     +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
73488     +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
73489     +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
73490     +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
73491     +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
73492     +        EducationGraduation  +    -0.14651231631393 * EducationMaster
73493     +          +     -0.0692762335753 * Marital_StatusDivorced
73494     +          +     0.02472293911071 * Marital_StatusMarried
73495     +          +     0.04038393550437 * Marital_StatusSingle
73496     +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
73497     +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
73498     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
73499     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
73500     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
73501     +END;
MPRINT(EM_DIAGRAM):   END;
73502     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73503     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
73504     +END;
MPRINT(EM_DIAGRAM):   END;
73505     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73506     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
73507     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73508     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73509     +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
73510     +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
73511     +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
73512     +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
73513     +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
73514     +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
73515     +          +     0.14524334187971 * S_MonthsAsCustomer
73516     +          +    -0.58464031025411 * S_NumDealsPurchases
73517     +          +    -0.10768856151333 * S_NumWebVisitsMonth
73518     +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
73519     +        S_RMntFrq  +    -0.04430281297191 * S_Recency
73520     +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
73521     +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
73522     +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
73523     +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
73524     +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
73525     +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
73526     +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
73527     +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
73528     +        EducationGraduation  +    -0.37768027773032 * EducationMaster
73529     +          +     0.07007941100006 * Marital_StatusDivorced
73530     +          +     -0.7850554528889 * Marital_StatusMarried
73531     +          +     1.17661634109847 * Marital_StatusSingle
73532     +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
73533     +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
73534     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
73535     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
73536     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
73537     +END;
MPRINT(EM_DIAGRAM):   END;
73538     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73539     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
73540     +END;
MPRINT(EM_DIAGRAM):   END;
73541     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73542     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
73543     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73544     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73545     +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
73546     +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
73547     +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
73548     +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
73549     +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
73550     +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
73551     +          +    -2.17154324602167 * S_MonthsAsCustomer
73552     +          +    -1.39930460918007 * S_NumDealsPurchases
73553     +          +    -0.16044576482901 * S_NumWebVisitsMonth
73554     +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
73555     +        S_RMntFrq  +    -0.73252715992964 * S_Recency
73556     +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
73557     +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
73558     +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
73559     +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
73560     +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
73561     +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
73562     +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
73563     +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
73564     +        EducationGraduation  +    -0.35403398893388 * EducationMaster
73565     +          +     0.83271778325587 * Marital_StatusDivorced
73566     +          +     0.79137899511518 * Marital_StatusMarried
73567     +          +    -0.51320080030576 * Marital_StatusSingle
73568     +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
73569     +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
73570     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
73571     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
73572     +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
73573     +END;
MPRINT(EM_DIAGRAM):   END;
73574     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73575     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
73576     +END;
MPRINT(EM_DIAGRAM):   END;
73577     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73578     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
73579     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73580     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73581     +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
73582     +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
73583     +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
73584     +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
73585     +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
73586     +END;
MPRINT(EM_DIAGRAM):   END;
73587     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73588     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
73589     +END;
MPRINT(EM_DIAGRAM):   END;
73590     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73591     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
73592     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73593     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73594     +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
73595     +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
73596     +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
73597     +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
73598     +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
73599     +END;
MPRINT(EM_DIAGRAM):   END;
73600     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73601     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
73602     +END;
MPRINT(EM_DIAGRAM):   END;
73603     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73604     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
73605     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73606     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73607     +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
73608     +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
73609     +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
73610     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
73611     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
73612     +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
73613     +END;
MPRINT(EM_DIAGRAM):   END;
73614     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73615     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
73616     +END;
MPRINT(EM_DIAGRAM):   END;
73617     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73618     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
73619     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73620     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73621     +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
73622     +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
73623     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
73624     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
73625     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
73626     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
73627     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
73628     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
73629     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
73630     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
73631     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
73632     +END;
MPRINT(EM_DIAGRAM):   END;
73633     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73634     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
73635     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
73636     +END;
MPRINT(EM_DIAGRAM):   END;
73637     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
73638     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
73639     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
73640     +END;
MPRINT(EM_DIAGRAM):   END;
73641     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73642     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
73643     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73644     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
73645     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
73646     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
73647     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
73648     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
73649     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
73650     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
73651     +END;
MPRINT(EM_DIAGRAM):   END;
73652     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
73653     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
73654     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
73655     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
73656      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
73657      quit;
73658      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
73659      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
73660      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
73661      retain ID 2 Node "AutoNeural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural37";
73662      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
73663      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2279 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2279 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73664      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
73665      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73666      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2279 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2279 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73667      proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME 
CREATOR);
73668      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73669      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73670      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73671      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
73672      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
73673      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73674      proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
73675      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

73676      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
73677      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73678      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73679      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73680      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
73681      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73682      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73683      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73684      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
73684    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1206 rows and 5 columns.

73685      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73686      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
73687      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1206 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73688      filename _pref
73688    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
73689      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
73690      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
73691     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73692     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
73693     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73694     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
73695     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
73696     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
73697      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
73698      quit;
73699      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
73700      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
73701      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
73702      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
73703      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
73704      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73705      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
73706      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73707      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73708      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
73709      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73710      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73711      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73712      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
73713      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
73714      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73715      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
73716      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

73717      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
73718      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73719      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73720      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73721      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
73722      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73723      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73724      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73725      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
73725    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

73726      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73727      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
73728      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1210 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73729      filename _pref
73729    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
73730      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
73731      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
73732     +
73733     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
73734     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
73734    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
73735     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
73736     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
73737     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
73738     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
73739     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
73740      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
73741      quit;
73742      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
73743      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
73744      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
73745      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
73746      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
73747      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73748      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
73749      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73750      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73751      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
73752      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73753      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73754      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73755      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
73756      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
73757      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73758      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
73759      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73760      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
73761      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73762      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.21 seconds
      cpu time            0.00 seconds
      

73763      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73764      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
73765      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73766      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73767      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73768      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
73768    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

73769      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73770      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
73771      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73772      filename _pref
73772    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
73773      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
73774      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
73775     +
73776     +
73777     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
73778     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
73779     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
73780     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
73781     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
73782     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73783     +
73784     +
73785     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
73786     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
73787     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
73788     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
73789     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
73790     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73791     +
73792     +
73793     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
73794     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
73795     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
73796     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
73797     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
73798     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73799     +
73800     +
73801     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
73802     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
73803     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
73804     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
73805     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
73806     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73807     +
73808     +
73809     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
73810     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
73811     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
73812     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
73813     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
73814     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73815     +
73816     +
73817     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
73818     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
73819     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
73820     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
73821     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
73822     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73823     +
73824     +
73825     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
73826     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
73827     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
73828     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
73829     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
73830     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73831     +
73832     +
73833     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
73834     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
73835     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
73836     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
73837     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
73838     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73839     +if
73840     +_FILTERNORM1 not in ( '.')
73841     + and
73842     +_FILTERNORM2 not in ( '.')
73843     + and
73844     +_FILTERNORM3 not in ( '.')
73845     + and
73846     +_FILTERNORM4 not in ( '.')
73847     + and
73848     +_FILTERNORM5 not in ( '.')
73849     + and
73850     +_FILTERNORM6 not in ( '.')
73851     + and
73852     +_FILTERNORM7 not in ( ' ')
73853     + and
73854     +_FILTERNORM8 not in ( ' ')
73855     +and
73856     +( Dt_Customer ne .)
73857     +and ( Income ne . and (Income<=107000))
73858     +and ( Kidhome ne .)
73859     +and ( MntFishProducts ne .)
73860     +and ( MntFruits ne .)
73861     +and ( MntGoldProds ne .)
73862     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
73863     +and ( MntSweetProducts ne .)
73864     +and ( MntWines ne .)
73865     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
73866     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
73867     +and ( NumStorePurchases ne .)
73868     +and ( NumWebPurchases ne .)
73869     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
73870     +and ( Recency ne .)
73871     +and ( Teenhome ne .)
73872     +and ( Year_Birth ne .)
73873     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
73874     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
73875     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
73876     +end;
MPRINT(EM_DIAGRAM):   end;
73877     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
73878     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
73879      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
73880      quit;
73881      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
73882      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
73883      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
73884      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
73885      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
73886      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73887      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
73888      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73889      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73890      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
73891      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73892      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73893      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73894      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
73895      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
73896      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73897      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
73898      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

73899      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
73900      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73901      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73902      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73903      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
73904      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73905      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73906      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73907      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
73907    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

73908      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73909      proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl56_FCMP data=_tempx;
73910      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL56_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL56_FCMP has 1315 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73911      %macro varDept(fcmpdata=,id=);
73912      %global nobs&id scoreFlag&id;
73913      %let scoreFlag&id = 0;
73914      %if &id=1 or ^&fcmpStart %then %do;
73915      proc sort data=&fcmpdata out=_temp&id nodupkey;
73916      by NAME;
73917      where id=&id and LHS in( %let j=1;
73918      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
73919      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
73920      "&var" %let j = %eval(&j+1);
73921      %end;
73922      );
73923      run;
73924      %let dsid = %sysfunc(open(_temp&id));
73925      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73926      %let dsid = %sysfunc(close(&dsid));
73927      %if &&nobs&id %then %do;
73928      %let scoreFlag&id = 1;
73929      %let fcmpStart = 1;
73930      %end;
73931      %else %let fcmpStart = 0;
73932      %end;
73933      %else %do;
73934      proc sort data=&fcmpdata out=_tempid;
73935      where id=&id;
73936      by LHS;
73937      run;
73938      %let dsid = %sysfunc(open(_tempid));
73939      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73940      %let dsid = %sysfunc(close(&dsid));
73941      %if ^&&nobs&id %then %do;
73942      proc datasets lib=work nolist;
73943      delete _tempid;
73944      run;
73945      quit;
73946      %end;
73947      %else %do;
73948      data _tempAll;
73949      set %let j=%eval(&id-1);
73950      %do x=1 %to &j;
73951      %if &&nobs&x %then %do;
73952      _temp&x %end;
73953      %end;
73954      ;
73955      run;
73956      proc sql;
73957      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
73957    ! work._tempid p2 where p.name=p2.lhs;
73958      quit;
73959      data _temp&id;
73960      set _temp&id;
73961      where LHS ne '' and NAME ne '' and Node ne '';
73962      run;
73963      proc datasets lib=work nolist;
73964      delete _tempAll;
73965      run;
73966      %let dsid = %sysfunc(open(_temp&id));
73967      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73968      %let dsid = %sysfunc(close(&dsid));
73969      %if ^&&nobs&id %then %do;
73970      proc datasets lib=work nolist;
73971      delete _temp&id;
73972      run;
73973      quit;
73974      %end;
73975      %else %do;
73976      %let scoreFlag&id = 1;
73977      data _temp&id;
73978      set _temp&id;
73979      where LHS ne NAME and node ne '';
73980      run;
73981      %let dsid = %sysfunc(open(_temp&id));
73982      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73983      %let dsid = %sysfunc(close(&dsid));
73984      %if ^&&nobs&id %then %do;
73985      proc datasets lib=work nolist;
73986      delete _temp&id;
73987      run;
73988      quit;
73989      %end;
73990      %else %do;
73991      proc sort data=_temp&id nodupkey;
73992      by LHS NAME;
73993      run;
73994      %end;
73995      %end;
73996      %end;
73997      %end;
73998      %mend varDept;
73999      %macro optCode(outdata=fcmpdata);
74000      %global fcmpStart;
74001      %let fcmpStart = 0;
74002      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
74003      %let NumNodes=9;
74004      %do k=1 %to &NumNodes;
74005      %vardept(fcmpdata=&outdata, id=&k);
74006      %end;
74007      %mend optCode;
74008      %optcode(outData=EMWS8.Ensmbl56_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 124 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 91 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl56_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

74009      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
74010      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
74011      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
74012      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74013      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
74014      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
74015      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
74016      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74017      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
74018      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
74018    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

74019      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

74020      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
74021      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
74022      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74023      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
74024      * Ensmbl56: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Computing metadata for TRAIN data;
74025      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL56_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl56\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl56_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl56_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl56_TRAIN out=WORK.M0P930WG noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0P930WG;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0P930WG(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0P930WG;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0P930WG;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2PHI9HV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2PHI9HV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2PHI9HV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27_HQYW(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2PHI9HV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2PHI9HV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2PHI9HV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2PHI9HV;
MPRINT(EMADVISECOLUMNS):   set WORK.M2PHI9HV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural36_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural36_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl56";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl56";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl56: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl56";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
74345      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
74346      set EMWS8.Ensmbl56_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl56_EMINFO;
74347      where DATA='Ensmbl56' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl56' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
74348      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL56_EMINFO.
      WHERE (DATA='Ensmbl56') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74349      data EMWS8.Ensmbl56_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl56_EMINFO;
74350      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
74351      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
74352      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL56_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
74356      run;
74357      data EMWS8.Ensmbl56_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_EMINFO;
74358      set EMWS8.Ensmbl56_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl56_EMINFO WORK.MODELTEMP_INFO;
74359      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL56_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL56_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74360      proc sort data = EMWS8.Ensmbl56_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl56_EMINFO NOTHREADS;
74361      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
74362      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL56_EMINFO.
NOTE: The data set EMWS8.ENSMBL56_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74363      proc sort data = EMWS8.AutoNeural36_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural36_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
74364      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
74365      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL36_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74366      proc sort data = EMWS8.Ensmbl56_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl56_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
74367      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
74368      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL56_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74369      data EMWS8.Ensmbl56_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl56_EMINFO;
74370      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
74371      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
74372      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL56_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

74373      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
74374      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
74375      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
74376      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL56_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL56_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
