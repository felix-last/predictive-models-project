*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                10.16 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.12 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                10.12 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O32OW9GF
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O32OW9GF new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.12 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.12 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
2279688    proc freq data=EMWS8.AutoNeural20_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural20_VariableSet noprint;
2279689    table ROLE*LEVEL/out=WORK.AutoNeural20META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural20META;
2279690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL20_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL20META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2279691    proc print data=WORK.AutoNeural20META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural20META label noobs;
2279692    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2279693    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2279693  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2279693  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2279694    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2279695    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2279696    run;
 
NOTE: There were 6 observations read from the data set WORK.AUTONEURAL20META.
NOTE: The PROCEDURE PRINT printed page 2048.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2279697    title10;
MPRINT(EM_DIAGRAM):   title10;
2279698    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural20_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural20_DepVar_DD
out=EMWS8.AutoNeural20_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
2279745    data WORK.AutoNeural20_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural20_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2279746    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2279747    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2279747  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2279747  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2279748       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2279748  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2279748  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2279749    set EMWS8.AUTONEURAL20_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL20_DEPVAR_DM( where=(_TYPE_="TARGET"));
2279750    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2279751    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2279752    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2279753    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2279754    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2279755    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2279756    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2279757    end;
MPRINT(EM_DIAGRAM):   end;
2279758    output;
MPRINT(EM_DIAGRAM):   output;
2279759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL20_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2279760    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2279761    proc print data=WORK.AutoNeural20_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural20_EVENT noobs label;
2279762    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2279763    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2279764    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2279765    run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL20_EVENT.
NOTE: The PROCEDURE PRINT printed page 2049.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2279766    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2279767    proc print data = EMWS8.AutoNeural20_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural20_DepVar_DM noobs label;
2279768    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2279769    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2279770    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2279770  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2279770  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2279771    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2279772    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2279773    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL20_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2050.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2279774    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3R4GO_I;
MPRINT(EM_DIAGRAM):   set WORK.M3R4GO_I;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
2279783    data WORK.M3R4GO_I;
MPRINT(EM_DIAGRAM):    data WORK.M3R4GO_I;
2279784    set WORK.M3R4GO_I end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M3R4GO_I end=eof;
2279785    output;
MPRINT(EM_DIAGRAM):   output;
2279786    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
2279787    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
2279788    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
2279789    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
2279790    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
2279791    output;
MPRINT(EM_DIAGRAM):   output;
2279792    end;
MPRINT(EM_DIAGRAM):   end;
2279793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.M3R4GO_I.
NOTE: The data set WORK.M3R4GO_I has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL20_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
2279794    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2279795    * AutoNeural20: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Create decision matrix;
2279796    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279797    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
2279798      length   DepVar                           $  32
2279799               COUNT                                8
2279800               DATAPRIOR                            8
2279801               TRAINPRIOR                           8
2279802               DECPRIOR                             8
2279803               DECISION1                            8
2279804               DECISION2                            8
2279805               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
2279806
2279807      label    COUNT="Level Counts"
2279808               DATAPRIOR="Data Proportions"
2279809               TRAINPRIOR="Training Proportions"
2279810               DECPRIOR="Decision Priors"
2279811               DECISION1="1"
2279812               DECISION2="0"
2279813               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
2279814      format   COUNT 10.
2279815               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
2279816    DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
2279816  ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
2279817    output;
MPRINT(EM_DIAGRAM):   output;
2279818    DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
2279818  ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
2279819    output;
MPRINT(EM_DIAGRAM):   output;
2279820    ;
MPRINT(EM_DIAGRAM):   ;
2279821    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2279822    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2279823    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
2279824    label DECISION1= '1';
2279825    label DECISION2= '0';
2279826    run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
2279827    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
2279828    data EM_AutoNeural20;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural20;
2279829    set EMWS8.BINNING_TRAIN(keep=
2279830    DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts
2279831    GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases
2279832    GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
2279833    Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep= DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq
GRP_Recency Year_Birth );
2279834    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279835    *------------------------------------------------------------* ;
2279836    * AutoNeural20: DMDBClass Macro ;
2279837    *------------------------------------------------------------* ;
2279838    %macro DMDBClass;
2279839        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) GRP_Mnt(ASC)
2279840       GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC)
2279841       GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC)
2279842       GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
2279843    %mend DMDBClass;
2279844    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279845    * AutoNeural20: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: DMDBVar Macro ;
2279846    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279847    %macro DMDBVar;
2279848        Year_Birth
2279849    %mend DMDBVar;
2279850    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279851    * AutoNeural20: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Create DMDB;
2279852    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279853    proc dmdb batch data=WORK.EM_AutoNeural20
2279854    dmdbcat=WORK.AutoNeural20_DMDB
2279855    maxlevel = 513
2279856    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
2279857    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC)
GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC)
GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC)
GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
2279858    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
2279859    target
2279860    DepVar
2279861    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2279862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL20.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2279863    quit;
2279864    *--- end code ---*;
 
2279865    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2279866    * AutoNeural20: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Interval Inputs Macro ;
2279867    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279868    %macro INTINPUTS;
2279869        Year_Birth
2279870    %mend INTINPUTS;
2279871    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279872    * AutoNeural20: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Binary Inputs Macro ;
2279873    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279874    %macro BININPUTS;
2279875
2279876    %mend BININPUTS;
2279877    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279878    * AutoNeural20: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Nominal Inputs Macro ;
2279879    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279880    %macro NOMINPUTS;
2279881        GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts
2279882       GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases
2279883       GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
2279884    %mend NOMINPUTS;
2279885    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279886    * AutoNeural20: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Ordinal Inputs Macro ;
2279887    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2279888    %macro ORDINPUTS;
2279889
2279890    %mend ORDINPUTS;
2279891    * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
2279892    ;
MPRINT(EM_DIAGRAM):   ;
2279893    options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
2279894    options pagesize = 6000;
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
2279895    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
2279896    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2279897    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
2279898    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2279899    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
2279899  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
2279900    *;
 
2279901    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2279902    * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
2279903    ;
MPRINT(EM_DIAGRAM):   ;
2279904    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2279905    *;
MPRINT(EM_DIAGRAM):   *;
 
2279906    *;
MPRINT(EM_DIAGRAM):    *;
2279907    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2279908    validdata=EMWS8.BINNING_VALIDATE
2279909    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2279910    *;
MPRINT(EM_DIAGRAM):   *;
2279911    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2279912    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2279913    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2279914    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2279915    target DepVar / level=NOMINAL id=DepVar
2279916    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2279917    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2279918    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2279919    ;
MPRINT(EM_DIAGRAM):   ;
2279920    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2279921    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2279922    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2279923    *;
MPRINT(EM_DIAGRAM):   *;
2279924    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2279925    *;
MPRINT(EM_DIAGRAM):   *;
2279926    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2279927    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2279927  ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 58 observations and 56 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2279928    train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2279929    tech = Default;
2279930    ;
2279931    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.61 seconds
      cpu time            0.60 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.63 seconds
      cpu time            0.60 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2279932    *;
2279933    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2279934    var _iter_ _aic_ _averr_ _misc_
2279935    _vaverr_ _vmisc_
2279936    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2279937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2051.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2279938    *------------------------------------------------------------*;
2279939    * Extract best iteration;
2279940    ;
2279941    *------------------------------------------------------------*;
2279942    %global _iter;
2279943    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2279944    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2279945    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2279946    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2279947    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2279948    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2279949    end;
MPRINT(EM_DIAGRAM):   end;
2279950    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2279951    *;
 
2279952    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2279953    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2279954    if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
2279955    output;
MPRINT(EM_DIAGRAM):   output;
2279956    stop;
MPRINT(EM_DIAGRAM):   stop;
2279957    end;
MPRINT(EM_DIAGRAM):   end;
2279958    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2279959    *;
2279960    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2279961    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2279962    if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
2279963    output;
MPRINT(EM_DIAGRAM):   output;
2279964    stop;
MPRINT(EM_DIAGRAM):   stop;
2279965    end;
MPRINT(EM_DIAGRAM):   end;
2279966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2279967    *;
MPRINT(EM_DIAGRAM):    *;
2279968    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2279969    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2279969  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2279970    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2279971    var _iter_ _aic_ _averr_ _misc_
2279972    _vaverr_ _vmisc_
2279973    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2279974    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2052.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2279975    title9;
MPRINT(EM_DIAGRAM):   title9;
2279976    title10;
MPRINT(EM_DIAGRAM):   title10;
2279977    %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
2279978    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2279979    length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
2279980    label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
2279980  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
2279981    label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
2279981  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
2279982    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
2279982  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
2279983    label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
2279983  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
2279984    _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
2279985    _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
2279986    _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
2279987    set
2279988    _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
2279989    ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
2279990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2279991    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2279992    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2279993    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2279994    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2279995    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2279996    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2279997    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2279998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2279999    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
2280000    ;
MPRINT(EM_DIAGRAM):   ;
2280001    data WORK.SAVEDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3LN9T3V;
2280002    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
2280003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3LN9T3V has 1 observations and 56
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280004    data EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_BESTDS;
2280005    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
2280006    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_BESTDS has 1 observations and 56
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2280007    data WORK.BFITDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3LN9T3V;
2280008    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3LN9T3V has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280010    * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
2280011    ;
MPRINT(EM_DIAGRAM):   ;
2280012    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280013    set EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY;
2280014    _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
2280015    _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
2280016    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280017    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280018    ;
MPRINT(EM_DIAGRAM):   ;
2280019    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280020    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280021    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280022    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
2280023    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
2280024    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
2280025    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
2280026    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280027    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280028    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280030    *;
MPRINT(EM_DIAGRAM):    *;
2280031    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2280032    validdata=EMWS8.BINNING_VALIDATE
2280033    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2280034    *;
MPRINT(EM_DIAGRAM):   *;
2280035    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2280036    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2280037    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2280038    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2280039    target DepVar / level=NOMINAL id=DepVar
2280040    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2280041    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280042    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2280043    ;
MPRINT(EM_DIAGRAM):   ;
2280044    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280045    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2280046    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2280047    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2280048    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
2280049    *;
MPRINT(EM_DIAGRAM):   *;
2280050    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2280051    *;
MPRINT(EM_DIAGRAM):   *;
2280052    initial
2280053    ;
MPRINT(EM_DIAGRAM):   initial ;
2280054    *;
MPRINT(EM_DIAGRAM):   *;
2280055    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280056    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2280056  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 226 variables.
MPRINT(EM_DIAGRAM):   *;
2280057    prelim 20 outest=_anpre pretime=44 preiter=25
2280058    tech = Default
2280059    ;
2280060    *;
2280061    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280062    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2280062  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=899
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 226 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2280063    train estiter=1 outest=_anest outfit=_anfit maxtime=899 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2280064    tech = Default;
2280065    ;
2280066    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           12.52 seconds
      cpu time            12.27 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2053.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           12.53 seconds
      cpu time            12.29 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280067    *;
2280068    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2280069    var _iter_ _aic_ _averr_ _misc_
2280070    _vaverr_ _vmisc_
2280071    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2054.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280073    *------------------------------------------------------------*;
2280074    * Extract best iteration;
2280075    ;
2280076    *------------------------------------------------------------*;
2280077    %global _iter;
2280078    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2280079    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2280080    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2280081    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2280082    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2280083    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2280084    end;
MPRINT(EM_DIAGRAM):   end;
2280085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280086    *;
 
2280087    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2280088    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2280089    if _ITER_ eq 14 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 14 then do;
2280090    output;
MPRINT(EM_DIAGRAM):   output;
2280091    stop;
MPRINT(EM_DIAGRAM):   stop;
2280092    end;
MPRINT(EM_DIAGRAM):   end;
2280093    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 226
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280094    *;
2280095    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280096    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2280097    if _ITER_ eq 14 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 14 and _NAME_ eq "OVERALL" then do;
2280098    output;
MPRINT(EM_DIAGRAM):   output;
2280099    stop;
MPRINT(EM_DIAGRAM):   stop;
2280100    end;
MPRINT(EM_DIAGRAM):   end;
2280101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280102    *;
MPRINT(EM_DIAGRAM):    *;
2280103    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280104    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2280104  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2280105    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2280106    var _iter_ _aic_ _averr_ _misc_
2280107    _vaverr_ _vmisc_
2280108    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280109    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2055.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280110    title9;
MPRINT(EM_DIAGRAM):   title9;
2280111    title10;
MPRINT(EM_DIAGRAM):   title10;
2280112    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280113    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280114    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280115    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280116    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280117    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280118    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280120    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280121    ;
MPRINT(EM_DIAGRAM):   ;
2280122    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280123    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280124    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280125    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
2280126    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2280127    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
2280128    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
2280129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280130    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280131    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2280133    *;
MPRINT(EM_DIAGRAM):    *;
2280134    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2280135    validdata=EMWS8.BINNING_VALIDATE
2280136    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2280137    *;
MPRINT(EM_DIAGRAM):   *;
2280138    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2280139    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2280140    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2280141    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2280142    target DepVar / level=NOMINAL id=DepVar
2280143    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2280144    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280145    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2280146    ;
MPRINT(EM_DIAGRAM):   ;
2280147    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280148    Hidden 5 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SINE;
2280149    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2280150    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2280151    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
2280152    *;
MPRINT(EM_DIAGRAM):   *;
2280153    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2280154    *;
MPRINT(EM_DIAGRAM):   *;
2280155    initial
2280156    ;
MPRINT(EM_DIAGRAM):   initial ;
2280157    *;
MPRINT(EM_DIAGRAM):   *;
2280158    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280159    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2280159  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 226 variables.
MPRINT(EM_DIAGRAM):   *;
2280160    prelim 20 outest=_anpre pretime=44 preiter=25
2280161    tech = Default
2280162    ;
2280163    *;
2280164    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280165    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2280165  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=896
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 226 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2280166    train estiter=1 outest=_anest outfit=_anfit maxtime=896 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2280167    tech = Default;
2280168    ;
2280169    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           10.74 seconds
      cpu time            10.73 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2056.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           10.75 seconds
      cpu time            10.74 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280170    *;
2280171    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2280172    var _iter_ _aic_ _averr_ _misc_
2280173    _vaverr_ _vmisc_
2280174    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280175    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2057.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280176    *------------------------------------------------------------*;
2280177    * Extract best iteration;
2280178    ;
2280179    *------------------------------------------------------------*;
2280180    %global _iter;
2280181    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2280182    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2280183    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2280184    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2280185    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2280186    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2280187    end;
MPRINT(EM_DIAGRAM):   end;
2280188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280189    *;
 
2280190    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2280191    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2280192    if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
2280193    output;
MPRINT(EM_DIAGRAM):   output;
2280194    stop;
MPRINT(EM_DIAGRAM):   stop;
2280195    end;
MPRINT(EM_DIAGRAM):   end;
2280196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 226
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280197    *;
2280198    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280199    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2280200    if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
2280201    output;
MPRINT(EM_DIAGRAM):   output;
2280202    stop;
MPRINT(EM_DIAGRAM):   stop;
2280203    end;
MPRINT(EM_DIAGRAM):   end;
2280204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280205    *;
MPRINT(EM_DIAGRAM):    *;
2280206    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280207    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2280207  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2280208    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2280209    var _iter_ _aic_ _averr_ _misc_
2280210    _vaverr_ _vmisc_
2280211    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2058.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280213    title9;
MPRINT(EM_DIAGRAM):   title9;
2280214    title10;
MPRINT(EM_DIAGRAM):   title10;
2280215    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280216    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280217    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280219    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280220    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280221    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280223    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280224    ;
MPRINT(EM_DIAGRAM):   ;
2280225    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280226    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280227    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280228    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
2280229    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2280230    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
2280231    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
2280232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280233    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280234    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280236    *;
MPRINT(EM_DIAGRAM):    *;
2280237    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2280238    validdata=EMWS8.BINNING_VALIDATE
2280239    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2280240    *;
MPRINT(EM_DIAGRAM):   *;
2280241    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2280242    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2280243    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2280244    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2280245    target DepVar / level=NOMINAL id=DepVar
2280246    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2280247    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280248    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2280249    ;
MPRINT(EM_DIAGRAM):   ;
2280250    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280251    Hidden 5 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SOFTMAX;
2280252    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2280253    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2280254    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
2280255    *;
MPRINT(EM_DIAGRAM):   *;
2280256    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2280257    *;
MPRINT(EM_DIAGRAM):   *;
2280258    initial
2280259    ;
MPRINT(EM_DIAGRAM):   initial ;
2280260    *;
MPRINT(EM_DIAGRAM):   *;
2280261    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280262    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2280262  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 185 variables.
MPRINT(EM_DIAGRAM):   *;
2280263    prelim 20 outest=_anpre pretime=44 preiter=25
2280264    tech = Default
2280265    ;
2280266    *;
2280267    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280268    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2280268  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=894
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 185 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2280269    train estiter=1 outest=_anest outfit=_anfit maxtime=894 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2280270    tech = Default;
2280271    ;
2280272    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           12.34 seconds
      cpu time            12.27 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2059.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           12.34 seconds
      cpu time            12.27 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280273    *;
2280274    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2280275    var _iter_ _aic_ _averr_ _misc_
2280276    _vaverr_ _vmisc_
2280277    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2060.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280279    *------------------------------------------------------------*;
2280280    * Extract best iteration;
2280281    ;
2280282    *------------------------------------------------------------*;
2280283    %global _iter;
2280284    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2280285    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2280286    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2280287    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2280288    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2280289    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2280290    end;
MPRINT(EM_DIAGRAM):   end;
2280291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280292    *;
 
2280293    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2280294    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2280295    if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
2280296    output;
MPRINT(EM_DIAGRAM):   output;
2280297    stop;
MPRINT(EM_DIAGRAM):   stop;
2280298    end;
MPRINT(EM_DIAGRAM):   end;
2280299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 185
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280300    *;
2280301    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280302    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2280303    if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
2280304    output;
MPRINT(EM_DIAGRAM):   output;
2280305    stop;
MPRINT(EM_DIAGRAM):   stop;
2280306    end;
MPRINT(EM_DIAGRAM):   end;
2280307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280308    *;
MPRINT(EM_DIAGRAM):    *;
2280309    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280310    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2280310  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2280311    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2280312    var _iter_ _aic_ _averr_ _misc_
2280313    _vaverr_ _vmisc_
2280314    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2061.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280316    title9;
MPRINT(EM_DIAGRAM):   title9;
2280317    title10;
MPRINT(EM_DIAGRAM):   title10;
2280318    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280319    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280320    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280322    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280323    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280324    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280326    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280327    ;
MPRINT(EM_DIAGRAM):   ;
2280328    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280329    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280330    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280331    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
2280332    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2280333    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
2280334    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
2280335    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280336    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280337    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280339    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
2280340    ;
MPRINT(EM_DIAGRAM):   ;
2280341    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2280342    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2280343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280344    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280345    set WORK.BFITDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3LN9T3V;
2280346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3LN9T3V.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280347    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280348    ;
MPRINT(EM_DIAGRAM):   ;
2280349    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280350    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280351    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280352    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
2280353    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
2280354    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
2280355    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
2280356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280357    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280358    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280360    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280361    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280362    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280364    *;
MPRINT(EM_DIAGRAM):    *;
2280365    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2280366    validdata=EMWS8.BINNING_VALIDATE
2280367    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2280368    *;
MPRINT(EM_DIAGRAM):   *;
2280369    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2280370    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2280371    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2280372    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2280373    target DepVar / level=NOMINAL id=DepVar
2280374    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2280375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280376    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2280377    ;
MPRINT(EM_DIAGRAM):   ;
2280378    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280379    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2280380    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2280381    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280382    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2280383    ;
MPRINT(EM_DIAGRAM):   ;
2280384    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280385    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2280386    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2280387    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2280388    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
2280389    *;
MPRINT(EM_DIAGRAM):   *;
2280390    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2280391    *;
MPRINT(EM_DIAGRAM):   *;
2280392    initial
2280393    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 56 variables.
2280394    ;
MPRINT(EM_DIAGRAM):   ;
2280395    *;
MPRINT(EM_DIAGRAM):   *;
2280396    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280397    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2280397  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
2280398    prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 266 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 56 variables.
MPRINT(EM_DIAGRAM):   *;
2280399    tech = Default
2280400    inest = EMWS8.AutoNeural20_ESTDS bylabel
2280401    ;
2280402    *;
2280403    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280404    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2280404  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=890
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 266 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2280405    train estiter=1 outest=_anest outfit=_anfit maxtime=890 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2280406    tech = Default;
2280407    ;
2280408    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           15.20 seconds
      cpu time            14.91 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2062.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           15.21 seconds
      cpu time            14.91 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280409    *;
2280410    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2280411    var _iter_ _aic_ _averr_ _misc_
2280412    _vaverr_ _vmisc_
2280413    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2063.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280415    *------------------------------------------------------------*;
2280416    * Extract best iteration;
2280417    ;
2280418    *------------------------------------------------------------*;
2280419    %global _iter;
2280420    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2280421    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2280422    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2280423    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2280424    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2280425    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2280426    end;
MPRINT(EM_DIAGRAM):   end;
2280427    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280428    *;
 
2280429    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2280430    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2280431    if _ITER_ eq 10 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 then do;
2280432    output;
MPRINT(EM_DIAGRAM):   output;
2280433    stop;
MPRINT(EM_DIAGRAM):   stop;
2280434    end;
MPRINT(EM_DIAGRAM):   end;
2280435    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280436    *;
2280437    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280438    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2280439    if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
2280440    output;
MPRINT(EM_DIAGRAM):   output;
2280441    stop;
MPRINT(EM_DIAGRAM):   stop;
2280442    end;
MPRINT(EM_DIAGRAM):   end;
2280443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280444    *;
MPRINT(EM_DIAGRAM):    *;
2280445    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280446    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2280446  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2280447    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2280448    var _iter_ _aic_ _averr_ _misc_
2280449    _vaverr_ _vmisc_
2280450    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280451    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2064.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280452    title9;
MPRINT(EM_DIAGRAM):   title9;
2280453    title10;
MPRINT(EM_DIAGRAM):   title10;
2280454    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280455    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280456    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280458    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280459    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280460    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280462    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
2280463    ;
MPRINT(EM_DIAGRAM):   ;
2280464    data WORK.SAVEDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3LN9T3V;
2280465    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
2280466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3LN9T3V has 1 observations and 266
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280467    data EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_BESTDS;
2280468    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
2280469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_BESTDS has 1 observations and 266
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280470    data WORK.BFITDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3LN9T3V;
2280471    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280472    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3LN9T3V has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280473    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280474    ;
MPRINT(EM_DIAGRAM):   ;
2280475    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280476    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280477    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280478    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
2280479    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
2280480    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
2280481    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
2280482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280483    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280484    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280486    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
2280487    ;
MPRINT(EM_DIAGRAM):   ;
2280488    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2280489    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2280490    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280491    *;
MPRINT(EM_DIAGRAM):    *;
2280492    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2280493    validdata=EMWS8.BINNING_VALIDATE
2280494    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2280495    *;
MPRINT(EM_DIAGRAM):   *;
2280496    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2280497    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2280498    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2280499    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2280500    target DepVar / level=NOMINAL id=DepVar
2280501    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2280502    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280503    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2280504    ;
MPRINT(EM_DIAGRAM):   ;
2280505    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280506    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2280507    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2280508    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280509    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2280510    ;
MPRINT(EM_DIAGRAM):   ;
2280511    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280512    Hidden 5 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SINE;
2280513    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2280514    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2280515    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
2280516    *;
MPRINT(EM_DIAGRAM):   *;
2280517    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2280518    *;
MPRINT(EM_DIAGRAM):   *;
2280519    initial
2280520    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
2280521    ;
MPRINT(EM_DIAGRAM):   ;
2280522    *;
MPRINT(EM_DIAGRAM):   *;
2280523    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280524    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2280524  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
2280525    prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 266 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
MPRINT(EM_DIAGRAM):   *;
2280526    tech = Default
2280527    inest = EMWS8.AutoNeural20_ESTDS bylabel
2280528    ;
2280529    *;
2280530    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280531    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2280531  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=887
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 266 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2280532    train estiter=1 outest=_anest outfit=_anfit maxtime=887 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2280533    tech = Default;
2280534    ;
2280535    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.80 seconds
      cpu time            1.80 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2065.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.81 seconds
      cpu time            1.80 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280536    *;
2280537    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2280538    var _iter_ _aic_ _averr_ _misc_
2280539    _vaverr_ _vmisc_
2280540    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280541    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2066.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280542    *------------------------------------------------------------*;
2280543    * Extract best iteration;
2280544    ;
2280545    *------------------------------------------------------------*;
2280546    %global _iter;
2280547    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2280548    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2280549    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2280550    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2280551    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2280552    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2280553    end;
MPRINT(EM_DIAGRAM):   end;
2280554    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280555    *;
 
2280556    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2280557    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2280558    if _ITER_ eq 31 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 31 then do;
2280559    output;
MPRINT(EM_DIAGRAM):   output;
2280560    stop;
MPRINT(EM_DIAGRAM):   stop;
2280561    end;
MPRINT(EM_DIAGRAM):   end;
2280562    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280563    *;
2280564    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280565    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2280566    if _ITER_ eq 31 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 31 and _NAME_ eq "OVERALL" then do;
2280567    output;
MPRINT(EM_DIAGRAM):   output;
2280568    stop;
MPRINT(EM_DIAGRAM):   stop;
2280569    end;
MPRINT(EM_DIAGRAM):   end;
2280570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280571    *;
MPRINT(EM_DIAGRAM):    *;
2280572    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280573    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2280573  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2280574    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2280575    var _iter_ _aic_ _averr_ _misc_
2280576    _vaverr_ _vmisc_
2280577    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280578    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2067.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280579    title9;
MPRINT(EM_DIAGRAM):   title9;
2280580    title10;
MPRINT(EM_DIAGRAM):   title10;
2280581    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280582    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280583    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280585    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280586    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280587    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280589    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280590    ;
MPRINT(EM_DIAGRAM):   ;
2280591    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280592    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280593    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280594    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
2280595    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2280596    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
2280597    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
2280598    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280599    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280600    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280602    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
2280603    ;
MPRINT(EM_DIAGRAM):   ;
2280604    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2280605    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2280606    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280607    *;
MPRINT(EM_DIAGRAM):    *;
2280608    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2280609    validdata=EMWS8.BINNING_VALIDATE
2280610    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2280611    *;
MPRINT(EM_DIAGRAM):   *;
2280612    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2280613    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2280614    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2280615    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2280616    target DepVar / level=NOMINAL id=DepVar
2280617    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2280618    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280619    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2280620    ;
MPRINT(EM_DIAGRAM):   ;
2280621    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280622    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2280623    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2280624    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280625    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2280626    ;
MPRINT(EM_DIAGRAM):   ;
2280627    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280628    Hidden 5 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SOFTMAX;
2280629    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2280630    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2280631    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
2280632    *;
MPRINT(EM_DIAGRAM):   *;
2280633    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2280634    *;
MPRINT(EM_DIAGRAM):   *;
2280635    initial
2280636    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
2280637    ;
MPRINT(EM_DIAGRAM):   ;
2280638    *;
MPRINT(EM_DIAGRAM):   *;
2280639    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280640    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2280640  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
2280641    prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 225 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
MPRINT(EM_DIAGRAM):   *;
2280642    tech = Default
2280643    inest = EMWS8.AutoNeural20_ESTDS bylabel
2280644    ;
2280645    *;
2280646    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280647    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2280647  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=886
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 225 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2280648    train estiter=1 outest=_anest outfit=_anfit maxtime=886 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2280649    tech = Default;
2280650    ;
2280651    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.69 seconds
      cpu time            1.70 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2068.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.70 seconds
      cpu time            1.73 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280652    *;
2280653    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2280654    var _iter_ _aic_ _averr_ _misc_
2280655    _vaverr_ _vmisc_
2280656    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2069.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280658    *------------------------------------------------------------*;
2280659    * Extract best iteration;
2280660    ;
2280661    *------------------------------------------------------------*;
2280662    %global _iter;
2280663    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2280664    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2280665    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2280666    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2280667    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2280668    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2280669    end;
MPRINT(EM_DIAGRAM):   end;
2280670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280671    *;
 
2280672    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2280673    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2280674    if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
2280675    output;
MPRINT(EM_DIAGRAM):   output;
2280676    stop;
MPRINT(EM_DIAGRAM):   stop;
2280677    end;
MPRINT(EM_DIAGRAM):   end;
2280678    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 225
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280679    *;
2280680    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280681    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2280682    if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
2280683    output;
MPRINT(EM_DIAGRAM):   output;
2280684    stop;
MPRINT(EM_DIAGRAM):   stop;
2280685    end;
MPRINT(EM_DIAGRAM):   end;
2280686    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280687    *;
MPRINT(EM_DIAGRAM):    *;
2280688    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280689    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2280689  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2280690    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2280691    var _iter_ _aic_ _averr_ _misc_
2280692    _vaverr_ _vmisc_
2280693    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2070.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280695    title9;
MPRINT(EM_DIAGRAM):   title9;
2280696    title10;
MPRINT(EM_DIAGRAM):   title10;
2280697    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280698    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280699    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280700    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280701    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280702    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280703    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280704    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280705    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280706    ;
MPRINT(EM_DIAGRAM):   ;
2280707    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280708    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280709    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280710    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
2280711    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2280712    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
2280713    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
2280714    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280715    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280716    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280717    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280718    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
2280719    ;
MPRINT(EM_DIAGRAM):   ;
2280720    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2280721    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2280722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280723    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280724    set WORK.BFITDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3LN9T3V;
2280725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3LN9T3V.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280726    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280727    ;
MPRINT(EM_DIAGRAM):   ;
2280728    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280729    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280730    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280731    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
2280732    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
2280733    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
2280734    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
2280735    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280736    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280737    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280738    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280739    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280740    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280741    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280743    *;
MPRINT(EM_DIAGRAM):    *;
2280744    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2280745    validdata=EMWS8.BINNING_VALIDATE
2280746    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2280747    *;
MPRINT(EM_DIAGRAM):   *;
2280748    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2280749    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2280750    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2280751    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2280752    target DepVar / level=NOMINAL id=DepVar
2280753    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2280754    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280755    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2280756    ;
MPRINT(EM_DIAGRAM):   ;
2280757    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280758    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2280759    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2280760    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280761    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2280762    ;
MPRINT(EM_DIAGRAM):   ;
2280763    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280764    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2280765    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2280766    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2280767    Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
2280768    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
2280769    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
2280770    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280771    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
2280772    ;
MPRINT(EM_DIAGRAM):   ;
2280773    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280774    Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
2280775    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
2280776    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
2280777    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
2280778    *;
MPRINT(EM_DIAGRAM):   *;
2280779    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2280780    *;
MPRINT(EM_DIAGRAM):   *;
2280781    initial
2280782    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
2280783    ;
MPRINT(EM_DIAGRAM):   ;
2280784    *;
MPRINT(EM_DIAGRAM):   *;
2280785    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280786    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2280786  ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
2280787    prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 526 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 266
      variables.
MPRINT(EM_DIAGRAM):   *;
2280788    tech = Default
2280789    inest = EMWS8.AutoNeural20_ESTDS bylabel
2280790    ;
2280791    *;
2280792    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280793    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2280793  ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=886
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 526 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2280794    train estiter=1 outest=_anest outfit=_anfit maxtime=886 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2280795    tech = Default;
2280796    ;
2280797    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           30.89 seconds
      cpu time            30.73 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2071.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           30.90 seconds
      cpu time            30.74 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280798    *;
2280799    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2280800    var _iter_ _aic_ _averr_ _misc_
2280801    _vaverr_ _vmisc_
2280802    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2072.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280804    *------------------------------------------------------------*;
2280805    * Extract best iteration;
2280806    ;
2280807    *------------------------------------------------------------*;
2280808    %global _iter;
2280809    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2280810    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2280811    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2280812    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2280813    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2280814    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2280815    end;
MPRINT(EM_DIAGRAM):   end;
2280816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280817    *;
 
2280818    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2280819    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2280820    if _ITER_ eq 29 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 29 then do;
2280821    output;
MPRINT(EM_DIAGRAM):   output;
2280822    stop;
MPRINT(EM_DIAGRAM):   stop;
2280823    end;
MPRINT(EM_DIAGRAM):   end;
2280824    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280825    *;
2280826    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280827    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2280828    if _ITER_ eq 29 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 29 and _NAME_ eq "OVERALL" then do;
2280829    output;
MPRINT(EM_DIAGRAM):   output;
2280830    stop;
MPRINT(EM_DIAGRAM):   stop;
2280831    end;
MPRINT(EM_DIAGRAM):   end;
2280832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280833    *;
MPRINT(EM_DIAGRAM):    *;
2280834    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280835    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2280835  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2280836    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2280837    var _iter_ _aic_ _averr_ _misc_
2280838    _vaverr_ _vmisc_
2280839    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280840    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2073.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280841    title9;
MPRINT(EM_DIAGRAM):   title9;
2280842    title10;
MPRINT(EM_DIAGRAM):   title10;
2280843    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280844    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280845    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280846    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280847    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280848    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280849    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280851    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
2280852    ;
MPRINT(EM_DIAGRAM):   ;
2280853    data WORK.SAVEDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3LN9T3V;
2280854    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
2280855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3LN9T3V has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280856    data EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_BESTDS;
2280857    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
2280858    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_BESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280859    data WORK.BFITDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3LN9T3V;
2280860    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280861    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3LN9T3V has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280862    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280863    ;
MPRINT(EM_DIAGRAM):   ;
2280864    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280865    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280866    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280867    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
2280868    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
2280869    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
2280870    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
2280871    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280872    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280873    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2280874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280875    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
2280876    ;
MPRINT(EM_DIAGRAM):   ;
2280877    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2280878    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2280879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280880    *;
MPRINT(EM_DIAGRAM):    *;
2280881    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2280882    validdata=EMWS8.BINNING_VALIDATE
2280883    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2280884    *;
MPRINT(EM_DIAGRAM):   *;
2280885    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2280886    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2280887    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2280888    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2280889    target DepVar / level=NOMINAL id=DepVar
2280890    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2280891    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280892    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2280893    ;
MPRINT(EM_DIAGRAM):   ;
2280894    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280895    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2280896    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2280897    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280898    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2280899    ;
MPRINT(EM_DIAGRAM):   ;
2280900    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280901    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2280902    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2280903    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2280904    Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
2280905    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
2280906    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
2280907    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280908    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
2280909    ;
MPRINT(EM_DIAGRAM):   ;
2280910    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280911    Hidden 5 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SINE;
2280912    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
2280913    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
2280914    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
2280915    *;
MPRINT(EM_DIAGRAM):   *;
2280916    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2280917    *;
MPRINT(EM_DIAGRAM):   *;
2280918    initial
2280919    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
2280920    ;
MPRINT(EM_DIAGRAM):   ;
2280921    *;
MPRINT(EM_DIAGRAM):   *;
2280922    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280923    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2280923  ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
2280924    prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 526 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
MPRINT(EM_DIAGRAM):   *;
2280925    tech = Default
2280926    inest = EMWS8.AutoNeural20_ESTDS bylabel
2280927    ;
2280928    *;
2280929    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280930    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2280930  ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=878
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 526 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2280931    train estiter=1 outest=_anest outfit=_anfit maxtime=878 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2280932    tech = Default;
2280933    ;
2280934    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           3.08 seconds
      cpu time            3.08 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2074.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           3.08 seconds
      cpu time            3.08 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280935    *;
2280936    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2280937    var _iter_ _aic_ _averr_ _misc_
2280938    _vaverr_ _vmisc_
2280939    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280940    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2075.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2280941    *------------------------------------------------------------*;
2280942    * Extract best iteration;
2280943    ;
2280944    *------------------------------------------------------------*;
2280945    %global _iter;
2280946    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2280947    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2280948    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2280949    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2280950    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2280951    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2280952    end;
MPRINT(EM_DIAGRAM):   end;
2280953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280954    *;
 
2280955    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2280956    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2280957    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
2280958    output;
MPRINT(EM_DIAGRAM):   output;
2280959    stop;
MPRINT(EM_DIAGRAM):   stop;
2280960    end;
MPRINT(EM_DIAGRAM):   end;
2280961    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2280962    *;
2280963    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280964    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2280965    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
2280966    output;
MPRINT(EM_DIAGRAM):   output;
2280967    stop;
MPRINT(EM_DIAGRAM):   stop;
2280968    end;
MPRINT(EM_DIAGRAM):   end;
2280969    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2280970    *;
MPRINT(EM_DIAGRAM):    *;
2280971    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2280972    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2280972  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2280973    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2280974    var _iter_ _aic_ _averr_ _misc_
2280975    _vaverr_ _vmisc_
2280976    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2280977    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2076.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280978    title9;
MPRINT(EM_DIAGRAM):   title9;
2280979    title10;
MPRINT(EM_DIAGRAM):   title10;
2280980    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280981    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280982    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280983    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280984    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2280985    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280986    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2280987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280988    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2280989    ;
MPRINT(EM_DIAGRAM):   ;
2280990    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2280991    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2280992    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2280993    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
2280994    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2280995    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
2280996    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
2280997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2280998    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2280999    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2281000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281001    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
2281002    ;
MPRINT(EM_DIAGRAM):   ;
2281003    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2281004    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2281005    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281006    *;
MPRINT(EM_DIAGRAM):    *;
2281007    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2281008    validdata=EMWS8.BINNING_VALIDATE
2281009    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2281010    *;
MPRINT(EM_DIAGRAM):   *;
2281011    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2281012    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2281013    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2281014    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2281015    target DepVar / level=NOMINAL id=DepVar
2281016    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2281017    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281018    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2281019    ;
MPRINT(EM_DIAGRAM):   ;
2281020    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281021    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2281022    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2281023    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281024    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2281025    ;
MPRINT(EM_DIAGRAM):   ;
2281026    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281027    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2281028    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2281029    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2281030    Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
2281031    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
2281032    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
2281033    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281034    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
2281035    ;
MPRINT(EM_DIAGRAM):   ;
2281036    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281037    Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
2281038    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
2281039    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
2281040    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
2281041    *;
MPRINT(EM_DIAGRAM):   *;
2281042    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2281043    *;
MPRINT(EM_DIAGRAM):   *;
2281044    initial
2281045    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
2281046    ;
MPRINT(EM_DIAGRAM):   ;
2281047    *;
MPRINT(EM_DIAGRAM):   *;
2281048    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281049    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2281049  ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
2281050    prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 515 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
MPRINT(EM_DIAGRAM):   *;
2281051    tech = Default
2281052    inest = EMWS8.AutoNeural20_ESTDS bylabel
2281053    ;
2281054    *;
2281055    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281056    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2281056  ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=877
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 515 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2281057    train estiter=1 outest=_anest outfit=_anfit maxtime=877 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2281058    tech = Default;
2281059    ;
2281060    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           2.37 seconds
      cpu time            2.37 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2077.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.38 seconds
      cpu time            2.37 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281061    *;
2281062    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2281063    var _iter_ _aic_ _averr_ _misc_
2281064    _vaverr_ _vmisc_
2281065    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2078.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281067    *------------------------------------------------------------*;
2281068    * Extract best iteration;
2281069    ;
2281070    *------------------------------------------------------------*;
2281071    %global _iter;
2281072    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2281073    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2281074    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2281075    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2281076    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2281077    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2281078    end;
MPRINT(EM_DIAGRAM):   end;
2281079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281080    *;
 
2281081    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2281082    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2281083    if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
2281084    output;
MPRINT(EM_DIAGRAM):   output;
2281085    stop;
MPRINT(EM_DIAGRAM):   stop;
2281086    end;
MPRINT(EM_DIAGRAM):   end;
2281087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 515
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281088    *;
2281089    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281090    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2281091    if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
2281092    output;
MPRINT(EM_DIAGRAM):   output;
2281093    stop;
MPRINT(EM_DIAGRAM):   stop;
2281094    end;
MPRINT(EM_DIAGRAM):   end;
2281095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2281096    *;
MPRINT(EM_DIAGRAM):    *;
2281097    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281098    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2281098  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2281099    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2281100    var _iter_ _aic_ _averr_ _misc_
2281101    _vaverr_ _vmisc_
2281102    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281103    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2079.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281104    title9;
MPRINT(EM_DIAGRAM):   title9;
2281105    title10;
MPRINT(EM_DIAGRAM):   title10;
2281106    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281107    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281108    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281109    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2281110    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281111    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281112    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281114    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2281115    ;
MPRINT(EM_DIAGRAM):   ;
2281116    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281117    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281118    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2281119    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
2281120    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2281121    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
2281122    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
2281123    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281124    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2281125    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2281126    run;
The SAS System
 
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281127    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
2281128    ;
MPRINT(EM_DIAGRAM):   ;
2281129    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2281130    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2281131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281132    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281133    set WORK.BFITDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3LN9T3V;
2281134    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3LN9T3V.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281135    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2281136    ;
MPRINT(EM_DIAGRAM):   ;
2281137    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281138    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281139    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2281140    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
2281141    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
2281142    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
2281143    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
2281144    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281145    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2281146    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2281147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281148    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281149    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281150    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281151    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281152    *;
MPRINT(EM_DIAGRAM):    *;
2281153    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2281154    validdata=EMWS8.BINNING_VALIDATE
2281155    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2281156    *;
MPRINT(EM_DIAGRAM):   *;
2281157    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2281158    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2281159    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2281160    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2281161    target DepVar / level=NOMINAL id=DepVar
2281162    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2281163    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281164    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2281165    ;
MPRINT(EM_DIAGRAM):   ;
2281166    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281167    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2281168    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2281169    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281170    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2281171    ;
MPRINT(EM_DIAGRAM):   ;
2281172    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281173    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2281174    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2281175    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2281176    Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
2281177    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
2281178    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
2281179    Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
2281180    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
2281181    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
2281182    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281183    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
2281184    ;
MPRINT(EM_DIAGRAM):   ;
2281185    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281186    Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
2281187    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
2281188    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
2281189    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
2281190    Hidden 5 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=LOG;
2281191    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
2281192    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
2281193    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
2281194    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281195    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
2281196    ;
MPRINT(EM_DIAGRAM):   ;
2281197    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281198    Hidden 5 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=LOG;
2281199    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
2281200    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
2281201    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
2281202    *;
MPRINT(EM_DIAGRAM):   *;
2281203    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2281204    *;
MPRINT(EM_DIAGRAM):   *;
2281205    initial
2281206    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
2281207    ;
MPRINT(EM_DIAGRAM):   ;
2281208    *;
MPRINT(EM_DIAGRAM):   *;
2281209    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281210    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2281210  ! Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
2281211    prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 891 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
MPRINT(EM_DIAGRAM):   *;
2281212    tech = Default
2281213    inest = EMWS8.AutoNeural20_ESTDS bylabel
2281214    ;
2281215    *;
2281216    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281217    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2281217  ! Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=876
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 891 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2281218    train estiter=1 outest=_anest outfit=_anfit maxtime=876 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2281219    tech = Default;
2281220    ;
2281221    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           53.15 seconds
      cpu time            52.38 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2080.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           53.16 seconds
      cpu time            52.38 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281222    *;
2281223    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2281224    var _iter_ _aic_ _averr_ _misc_
2281225    _vaverr_ _vmisc_
2281226    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2081.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281228    *------------------------------------------------------------*;
2281229    * Extract best iteration;
2281230    ;
2281231    *------------------------------------------------------------*;
2281232    %global _iter;
2281233    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2281234    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2281235    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2281236    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2281237    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2281238    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2281239    end;
MPRINT(EM_DIAGRAM):   end;
2281240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281241    *;
 
2281242    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2281243    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2281244    if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
2281245    output;
MPRINT(EM_DIAGRAM):   output;
2281246    stop;
MPRINT(EM_DIAGRAM):   stop;
2281247    end;
MPRINT(EM_DIAGRAM):   end;
2281248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 891
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281249    *;
2281250    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281251    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2281252    if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
2281253    output;
MPRINT(EM_DIAGRAM):   output;
2281254    stop;
MPRINT(EM_DIAGRAM):   stop;
2281255    end;
MPRINT(EM_DIAGRAM):   end;
2281256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281257    *;
MPRINT(EM_DIAGRAM):    *;
2281258    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281259    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2281259  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2281260    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2281261    var _iter_ _aic_ _averr_ _misc_
2281262    _vaverr_ _vmisc_
2281263    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2082.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281265    title9;
MPRINT(EM_DIAGRAM):   title9;
2281266    title10;
MPRINT(EM_DIAGRAM):   title10;
2281267    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281268    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281269    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281271    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281272    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281273    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281275    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2281276    ;
MPRINT(EM_DIAGRAM):   ;
2281277    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281278    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281279    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2281280    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
2281281    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2281282    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
2281283    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
2281284    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281285    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2281286    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2281287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281288    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
2281289    ;
MPRINT(EM_DIAGRAM):   ;
2281290    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2281291    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2281292    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281293    *;
MPRINT(EM_DIAGRAM):    *;
2281294    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2281295    validdata=EMWS8.BINNING_VALIDATE
2281296    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2281297    *;
MPRINT(EM_DIAGRAM):   *;
2281298    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2281299    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2281300    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2281301    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2281302    target DepVar / level=NOMINAL id=DepVar
2281303    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2281304    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281305    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2281306    ;
MPRINT(EM_DIAGRAM):   ;
2281307    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281308    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2281309    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2281310    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281311    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2281312    ;
MPRINT(EM_DIAGRAM):   ;
2281313    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281314    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2281315    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2281316    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2281317    Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
2281318    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
2281319    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
2281320    Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
2281321    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
2281322    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
2281323    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281324    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
2281325    ;
MPRINT(EM_DIAGRAM):   ;
2281326    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281327    Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
2281328    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
2281329    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
2281330    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
2281331    Hidden 5 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=LOG;
2281332    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
2281333    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
2281334    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
2281335    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281336    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
2281337    ;
MPRINT(EM_DIAGRAM):   ;
2281338    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281339    Hidden 5 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SINE;
2281340    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
2281341    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
2281342    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
2281343    *;
MPRINT(EM_DIAGRAM):   *;
2281344    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2281345    *;
MPRINT(EM_DIAGRAM):   *;
2281346    initial
2281347    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
2281348    ;
MPRINT(EM_DIAGRAM):   ;
2281349    *;
MPRINT(EM_DIAGRAM):   *;
2281350    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281351    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2281351  ! Search # 4 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
2281352    prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 891 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
MPRINT(EM_DIAGRAM):   *;
2281353    tech = Default
2281354    inest = EMWS8.AutoNeural20_ESTDS bylabel
2281355    ;
2281356    *;
2281357    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281358    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2281358  ! Search # 4 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=863
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 891 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2281359    train estiter=1 outest=_anest outfit=_anfit maxtime=863 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2281360    tech = Default;
2281361    ;
2281362    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           51.26 seconds
      cpu time            50.90 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2083.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           51.27 seconds
      cpu time            50.90 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281363    *;
2281364    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2281365    var _iter_ _aic_ _averr_ _misc_
2281366    _vaverr_ _vmisc_
2281367    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281368    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2084.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281369    *------------------------------------------------------------*;
2281370    * Extract best iteration;
2281371    ;
2281372    *------------------------------------------------------------*;
2281373    %global _iter;
2281374    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2281375    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2281376    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2281377    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2281378    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2281379    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2281380    end;
MPRINT(EM_DIAGRAM):   end;
2281381    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281382    *;
 
2281383    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2281384    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2281385    if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
2281386    output;
MPRINT(EM_DIAGRAM):   output;
2281387    stop;
MPRINT(EM_DIAGRAM):   stop;
2281388    end;
MPRINT(EM_DIAGRAM):   end;
2281389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 891
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281390    *;
2281391    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281392    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2281393    if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
2281394    output;
MPRINT(EM_DIAGRAM):   output;
2281395    stop;
MPRINT(EM_DIAGRAM):   stop;
2281396    end;
MPRINT(EM_DIAGRAM):   end;
2281397    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281398    *;
MPRINT(EM_DIAGRAM):    *;
2281399    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281400    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2281400  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2281401    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2281402    var _iter_ _aic_ _averr_ _misc_
2281403    _vaverr_ _vmisc_
2281404    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281405    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2085.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281406    title9;
MPRINT(EM_DIAGRAM):   title9;
2281407    title10;
MPRINT(EM_DIAGRAM):   title10;
2281408    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281409    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281410    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281411    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2281412    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281413    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281414    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281415    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281416    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2281417    ;
MPRINT(EM_DIAGRAM):   ;
2281418    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281419    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281420    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2281421    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
2281422    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2281423    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
2281424    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
2281425    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281426    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2281427    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2281428    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2281429    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
2281430    ;
MPRINT(EM_DIAGRAM):   ;
2281431    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
2281432    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
2281433    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281434    *;
MPRINT(EM_DIAGRAM):    *;
2281435    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2281436    validdata=EMWS8.BINNING_VALIDATE
2281437    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2281438    *;
MPRINT(EM_DIAGRAM):   *;
2281439    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2281440    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2281441    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2281442    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2281443    target DepVar / level=NOMINAL id=DepVar
2281444    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2281445    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281446    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2281447    ;
MPRINT(EM_DIAGRAM):   ;
2281448    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281449    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2281450    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2281451    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281452    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2281453    ;
MPRINT(EM_DIAGRAM):   ;
2281454    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281455    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2281456    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2281457    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2281458    Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
2281459    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
2281460    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
2281461    Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
2281462    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
2281463    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
2281464    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281465    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
2281466    ;
MPRINT(EM_DIAGRAM):   ;
2281467    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281468    Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
2281469    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
2281470    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
2281471    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
2281472    Hidden 5 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=LOG;
2281473    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
2281474    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
2281475    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
2281476    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281477    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
2281478    ;
MPRINT(EM_DIAGRAM):   ;
2281479    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281480    Hidden 5 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SOFTMAX;
2281481    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
2281482    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
2281483    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
2281484    *;
MPRINT(EM_DIAGRAM):   *;
2281485    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2281486    *;
MPRINT(EM_DIAGRAM):   *;
2281487    initial
2281488    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
2281489    ;
MPRINT(EM_DIAGRAM):   ;
2281490    *;
MPRINT(EM_DIAGRAM):   *;
2281491    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281492    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2281492  ! Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
2281493    prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 880 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
MPRINT(EM_DIAGRAM):   *;
2281494    tech = Default
2281495    inest = EMWS8.AutoNeural20_ESTDS bylabel
2281496    ;
2281497    *;
2281498    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281499    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2281499  ! Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=850
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 880 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2281500    train estiter=1 outest=_anest outfit=_anfit maxtime=850 maxiter=50
MPRINT(EM_DIAGRAM):   run;
2281501    tech = Default;
2281502    ;
2281503    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           54.50 seconds
      cpu time            53.75 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2086.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           54.52 seconds
      cpu time            53.77 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281504    *;
2281505    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2281506    var _iter_ _aic_ _averr_ _misc_
2281507    _vaverr_ _vmisc_
2281508    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281509    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2087.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281510    *------------------------------------------------------------*;
2281511    * Extract best iteration;
2281512    ;
2281513    *------------------------------------------------------------*;
2281514    %global _iter;
2281515    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2281516    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2281517    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2281518    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2281519    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2281520    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2281521    end;
MPRINT(EM_DIAGRAM):   end;
2281522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281523    *;
 
2281524    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2281525    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2281526    if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
2281527    output;
MPRINT(EM_DIAGRAM):   output;
2281528    stop;
MPRINT(EM_DIAGRAM):   stop;
2281529    end;
MPRINT(EM_DIAGRAM):   end;
2281530    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 880
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281531    *;
2281532    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281533    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2281534    if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
2281535    output;
MPRINT(EM_DIAGRAM):   output;
2281536    stop;
MPRINT(EM_DIAGRAM):   stop;
2281537    end;
MPRINT(EM_DIAGRAM):   end;
2281538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281539    *;
MPRINT(EM_DIAGRAM):    *;
2281540    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281541    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2281541  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2281542    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2281543    var _iter_ _aic_ _averr_ _misc_
2281544    _vaverr_ _vmisc_
2281545    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2088.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281547    title9;
MPRINT(EM_DIAGRAM):   title9;
2281548    title10;
MPRINT(EM_DIAGRAM):   title10;
2281549    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281550    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281551    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281553    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
2281554    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281555    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
2281556    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281557    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2281558    ;
MPRINT(EM_DIAGRAM):   ;
2281559    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281560    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281561    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2281562    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
2281563    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
2281564    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
2281565    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
2281566    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281567    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2281568    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2281569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281570    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2281571    set WORK.SAVEDS_AUTONEUR_3LN9T3V;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_3LN9T3V;
2281572    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_3LN9T3V.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281573    *;
MPRINT(EM_DIAGRAM):    *;
2281574    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2281575    validdata=EMWS8.BINNING_VALIDATE
2281576    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2281577    *;
MPRINT(EM_DIAGRAM):   *;
2281578    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2281579    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2281580    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2281581    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2281582    target DepVar / level=NOMINAL id=DepVar
2281583    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2281584    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281585    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
2281586    ;
MPRINT(EM_DIAGRAM):   ;
2281587    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281588    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
2281589    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
2281590    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281591    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2281592    ;
MPRINT(EM_DIAGRAM):   ;
2281593    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281594    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2281595    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2281596    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2281597    Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
2281598    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
2281599    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
2281600    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281601    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
2281602    ;
MPRINT(EM_DIAGRAM):   ;
2281603    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281604    Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
2281605    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
2281606    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
2281607    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
2281608    *;
MPRINT(EM_DIAGRAM):   *;
2281609    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
2281610    *;
MPRINT(EM_DIAGRAM):   *;
2281611    initial
2281612    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
2281613    ;
MPRINT(EM_DIAGRAM):   ;
2281614    *;
MPRINT(EM_DIAGRAM):   *;
2281615    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281616    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
2281616  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
2281617    prelim 25 outest=_anpre pretime=33 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=33 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 526 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
MPRINT(EM_DIAGRAM):   *;
2281618    tech = Default
2281619    inest = EMWS8.AutoNeural20_ESTDS bylabel
2281620    ;
2281621    *;
2281622    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281623    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
2281623  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=836
maxiter=5 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 526 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
2281624    train estiter=1 outest=_anest outfit=_anfit maxtime=836 maxiter=5
MPRINT(EM_DIAGRAM):   run;
2281625    tech = Default;
2281626    ;
2281627    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.63 seconds
      cpu time            1.63 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 2089.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.64 seconds
      cpu time            1.65 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281628    *;
2281629    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
2281630    var _iter_ _aic_ _averr_ _misc_
2281631    _vaverr_ _vmisc_
2281632    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 2090.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281634    *------------------------------------------------------------*;
2281635    * Extract best iteration;
2281636    ;
2281637    *------------------------------------------------------------*;
2281638    %global _iter;
2281639    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2281640    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
2281641    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
2281642    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
2281643    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
2281644    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
2281645    end;
MPRINT(EM_DIAGRAM):   end;
2281646    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281647    *;
 
2281648    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
2281649    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
2281650    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
2281651    output;
MPRINT(EM_DIAGRAM):   output;
2281652    stop;
MPRINT(EM_DIAGRAM):   stop;
2281653    end;
MPRINT(EM_DIAGRAM):   end;
2281654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
2281655    *;
2281656    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281657    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
2281658    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
2281659    output;
MPRINT(EM_DIAGRAM):   output;
2281660    stop;
MPRINT(EM_DIAGRAM):   stop;
2281661    end;
MPRINT(EM_DIAGRAM):   end;
2281662    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281663    *;
MPRINT(EM_DIAGRAM):    *;
2281664    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
2281665    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
2281665  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
2281666    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
2281667    var _iter_ _aic_ _averr_ _misc_
2281668    _vaverr_ _vmisc_
2281669    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
2281670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 2091.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281671    title9;
MPRINT(EM_DIAGRAM):   title9;
2281672    title10;
MPRINT(EM_DIAGRAM):   title10;
2281673    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
2281674    ;
MPRINT(EM_DIAGRAM):   ;
2281675    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281676    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
2281677    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
2281678    _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
2281679    _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
2281680    _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
2281681    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
2281682    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2281683    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
2281684    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
2281685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281686    title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
2281687    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
2281687  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
2281688    proc print data=EMWS8.AutoNeural20_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_HISTORY noobs;
2281689    var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
2281690    _vaverr_ _vmisc_
2281691    ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
2281692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: The PROCEDURE PRINT printed page 2092.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2281693    data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
2281694    set EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY;
2281695    if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
2281696    if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
2281697    else neurons=5;
MPRINT(EM_DIAGRAM):   else neurons=5;
2281698    label neurons="%sysfunc(sasmsg(sashelp.dmine,
2281698  ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
2281699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 3 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281700    title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
2281701    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
2281701  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
2281702    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
2281702  ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
2281702  ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
2281703    proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
2281704    var _func_ _averr_
2281705    _vaverr_
2281706    neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
2281707    sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
2281708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 2093.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281709    title8;
MPRINT(EM_DIAGRAM):   title8;
2281710    title9;
MPRINT(EM_DIAGRAM):   title9;
2281711    title10;
MPRINT(EM_DIAGRAM):   title10;
2281712    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281713    * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
2281714    ;
MPRINT(EM_DIAGRAM):   ;
2281715    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281716    *;
MPRINT(EM_DIAGRAM):   *;
2281717    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
2281718    validdata=EMWS8.BINNING_VALIDATE
2281719    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
2281720    *;
MPRINT(EM_DIAGRAM):   *;
2281721    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2281722    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
2281723    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
2281724    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat
GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
2281725    target DepVar / level=NOMINAL id=DepVar
2281726    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
2281727    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281728    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
2281729    ;
MPRINT(EM_DIAGRAM):   ;
2281730    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281731    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
2281732    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
2281733    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
2281734    Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
2281735    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
2281736    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
2281737    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281738    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
2281739    ;
MPRINT(EM_DIAGRAM):   ;
2281740    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281741    Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
2281742    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
2281743    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
2281744    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
2281745    *;
MPRINT(EM_DIAGRAM):   *;
2281746    initial inest= EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 526
      variables.
2281747    train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
2281748    code
2281748  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\SCO
2281748  ! RECODE.sas"
2281749    group=AutoNeural20
2281750    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\SCORECODE.sas"
 group=AutoNeural20 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\SCORECODE.sas
      opened.
2281751    ;
MPRINT(EM_DIAGRAM):   ;
2281752    code
2281752  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\RES
2281752  ! IDUALSCORECODE.sas"
2281753    group=AutoNeural20
2281754    residual
2281755    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\RESIDUALSCOREC
ODE.sas" group=AutoNeural20 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\RESIDUALSCOREC
      ODE.sas opened.
2281756    ;
MPRINT(EM_DIAGRAM):   ;
2281757    score data=EMWS8.BINNING_TRAIN out=_NULL_
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
2281758    outfit=WORK.FIT1
2281759    role=TRAIN
2281760    outkey=EMWS8.AutoNeural20_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_NULL_
outfit=WORK.FIT1 role=TRAIN outkey=EMWS8.AutoNeural20_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL20_OUTKEY has 67 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_TRAIN has . observations and 59 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
2281761    score data=EMWS8.BINNING_VALIDATE out=_NULL_
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
2281762    outfit=WORK.FIT2
2281763    outkey=EMWS8.AutoNeural20_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural20_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL20_OUTKEY has 67 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
2281764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 16 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 59 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.28 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.27 seconds
      cpu time            0.28 seconds
 
 
2281765    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
2281766    merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
2281767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281768    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281769    * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
2281770    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
2281771    data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
2281771  ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
2281772    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
2281773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 518 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281774    proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
2281775    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
2281776    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 518 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2281777    proc transpose data=tempweight out=EMWS8.AutoNeural20_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural20_WEIGHTS;
2281778    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
2281779    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL20_WEIGHTS has 516 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2281780    data EMWS8.AutoNeural20_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_WEIGHTS;
2281781    set EMWS8.AutoNeural20_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_WEIGHTS;
2281782    FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
2281783    TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
2281784    WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
2281785    if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
2281786    label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
2281786  ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
2281786  ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
2281786  ! NOQUOTE))" WEIGHT =
2281787       "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
2281788    keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
2281789    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 516 observations read from the data set
      EMWS8.AUTONEURAL20_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL20_WEIGHTS has 511 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
2281790    * restore printing options;
2281791    ;
2281792    title10;
MPRINT(EM_DIAGRAM):   title10;
2281793    options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
2281794    options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
2281795    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
2281796    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2281797    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
2281798    *;
2281799    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2281800    delete EM_AutoNeural20;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural20;
2281801    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL20 (memtype=DATA).
2281802    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
2281803    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_HISTORY;
2281804    set EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY;
2281805    label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
2281806    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
2281806  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
2281807    _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
2281808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS8.AUTONEURAL20_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 18 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.16 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.16 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O14OCE6O
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O14OCE6O new;
MPRINT(EM_DIAGRAM):   run;
2281910    filename emflow
2281910  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281911    *------------------------------------------------------------*;
2281912    * AutoNeural20: Scoring DATA data;
2281913    *------------------------------------------------------------*;
2281914    data EMWS8.AutoNeural20_TRAIN
2281915    / view=EMWS8.AutoNeural20_TRAIN
2281916    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_TRAIN / view=EMWS8.AutoNeural20_TRAIN ;
2281917    set EMWS8.BINNING_TRAIN
2281918    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
2281919    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas.
2281920   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2281921   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2281922   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2281923   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2281924   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2281925   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2281926   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2281927   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2281928   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2281929   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2281930   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2281931   +LENGTH _WARN_ $4
2281932   +      F_DepVar  $ 12
2281933   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2281934   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
2281935   +
2281936   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
2281937   +
2281938   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
2281939   +
2281940   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
2281941   +
2281942   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
2281943   +
2281944   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
2281945   +
2281946   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
2281947   +
2281948   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
2281949   +
2281950   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
2281951   +
2281952   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
2281953   +
2281954   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
2281955   +
2281956   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
2281957   +
2281958   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
2281959   +
2281960   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
2281961   +
2281962   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
2281963   +
2281964   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
2281965   +
2281966   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
2281967   +
2281968   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
2281969   +
2281970   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
2281971   +
2281972   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
2281973   +
2281974   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
2281975   +
2281976   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
2281977   +
2281978   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
2281979   +
2281980   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
2281981   +
2281982   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
2281983   +
2281984   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
2281985   +
2281986   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
2281987   +
2281988   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
2281989   +
2281990   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
2281991   +
2281992   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
2281993   +
2281994   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
2281995   +
2281996   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
2281997   +
2281998   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
2281999   +
2282000   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
2282001   +
2282002   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
2282003   +
2282004   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
2282005   +
2282006   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
2282007   +
2282008   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
2282009   +
2282010   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
2282011   +
2282012   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
2282013   +
2282014   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2282015   +
2282016   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2282017   +
2282018   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2282019   +
2282020   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2282021   +
2282022   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2282023   +
2282024   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2282025   +
2282026   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2282027   +
2282028   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2282029   +
2282030   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2282031   +
2282032   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2282033   +
2282034   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2282035   +
2282036   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2282037   +
2282038   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2282039   +
2282040   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2282041   +
2282042   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2282043   +
2282044   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2282045   +
2282046   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2282047   +
2282048   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2282049   +
2282050   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2282051   +
2282052   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2282053   +
2282054   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2282055   +
2282056   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2282057   +
2282058   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2282059   +
2282060   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
2282061   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
2282062   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
2282063   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2282064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282066   +end;
MPRINT(EM_DIAGRAM):   end;
2282067   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282069   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
2282070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282071   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
2282072   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
2282073   +   end;
MPRINT(EM_DIAGRAM):   end;
2282074   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282075   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
2282076   +   end;
MPRINT(EM_DIAGRAM):   end;
2282077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282078   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2282079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282081   +   end;
MPRINT(EM_DIAGRAM):   end;
2282082   +end;
MPRINT(EM_DIAGRAM):   end;
2282083   +
2282084   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
2282085   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
2282086   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
2282087   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2282088   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2282089   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2282090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282092   +end;
MPRINT(EM_DIAGRAM):   end;
2282093   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282094   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282095   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
2282096   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282097   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2282098   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
2282099   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
2282100   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
2282101   +   end;
MPRINT(EM_DIAGRAM):   end;
2282102   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282103   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2282104   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
2282105   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2282106   +   end;
MPRINT(EM_DIAGRAM):   end;
2282107   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282108   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2282109   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2282110   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
2282111   +   end;
MPRINT(EM_DIAGRAM):   end;
2282112   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282113   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
2282114   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2282115   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2282116   +   end;
MPRINT(EM_DIAGRAM):   end;
2282117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282118   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2282119   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2282120   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2282121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282123   +   end;
MPRINT(EM_DIAGRAM):   end;
2282124   +end;
MPRINT(EM_DIAGRAM):   end;
2282125   +
2282126   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
2282127   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
2282128   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
2282129   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2282130   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2282131   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2282132   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282133   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282134   +end;
MPRINT(EM_DIAGRAM):   end;
2282135   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282136   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282137   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
2282138   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282139   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2282140   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
2282141   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
2282142   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
2282143   +   end;
MPRINT(EM_DIAGRAM):   end;
2282144   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282145   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2282146   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2282147   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
2282148   +   end;
MPRINT(EM_DIAGRAM):   end;
2282149   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282150   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2282151   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
2282152   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2282153   +   end;
MPRINT(EM_DIAGRAM):   end;
2282154   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282155   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
2282156   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2282157   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2282158   +   end;
MPRINT(EM_DIAGRAM):   end;
2282159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282160   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2282161   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2282162   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2282163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282165   +   end;
MPRINT(EM_DIAGRAM):   end;
2282166   +end;
MPRINT(EM_DIAGRAM):   end;
2282167   +
2282168   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
2282169   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
2282170   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
2282171   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2282172   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2282173   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2282174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282176   +end;
MPRINT(EM_DIAGRAM):   end;
2282177   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282179   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
2282180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282181   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282182   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2282183   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
2282184   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2282185   +   end;
MPRINT(EM_DIAGRAM):   end;
2282186   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282187   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
2282188   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
2282189   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
2282190   +   end;
MPRINT(EM_DIAGRAM):   end;
2282191   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282192   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2282193   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2282194   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
2282195   +   end;
MPRINT(EM_DIAGRAM):   end;
2282196   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282197   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
2282198   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2282199   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2282200   +   end;
MPRINT(EM_DIAGRAM):   end;
2282201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282202   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2282203   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2282204   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2282205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282207   +   end;
MPRINT(EM_DIAGRAM):   end;
2282208   +end;
MPRINT(EM_DIAGRAM):   end;
2282209   +
2282210   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
2282211   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
2282212   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
2282213   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2282214   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2282215   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2282216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282218   +end;
MPRINT(EM_DIAGRAM):   end;
2282219   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282221   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
2282222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282223   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282224   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2282225   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
2282226   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2282227   +   end;
MPRINT(EM_DIAGRAM):   end;
2282228   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282229   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
2282230   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
2282231   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
2282232   +   end;
MPRINT(EM_DIAGRAM):   end;
2282233   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282234   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2282235   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2282236   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
2282237   +   end;
MPRINT(EM_DIAGRAM):   end;
2282238   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282239   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
2282240   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2282241   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2282242   +   end;
MPRINT(EM_DIAGRAM):   end;
2282243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282244   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2282245   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2282246   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2282247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282249   +   end;
MPRINT(EM_DIAGRAM):   end;
2282250   +end;
MPRINT(EM_DIAGRAM):   end;
2282251   +
2282252   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
2282253   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
2282254   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
2282255   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2282256   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2282257   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2282258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282260   +end;
MPRINT(EM_DIAGRAM):   end;
2282261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282263   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
2282264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282265   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282266   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2282267   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
2282268   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2282269   +   end;
MPRINT(EM_DIAGRAM):   end;
2282270   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282271   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2282272   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2282273   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
2282274   +   end;
MPRINT(EM_DIAGRAM):   end;
2282275   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282276   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
2282277   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
2282278   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
2282279   +   end;
MPRINT(EM_DIAGRAM):   end;
2282280   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282281   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
2282282   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2282283   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2282284   +   end;
MPRINT(EM_DIAGRAM):   end;
2282285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282286   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2282287   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2282288   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2282289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282291   +   end;
MPRINT(EM_DIAGRAM):   end;
2282292   +end;
MPRINT(EM_DIAGRAM):   end;
2282293   +
2282294   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
2282295   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
2282296   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
2282297   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2282298   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2282299   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2282300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282302   +end;
MPRINT(EM_DIAGRAM):   end;
2282303   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282304   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282305   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
2282306   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282307   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282308   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2282309   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
2282310   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2282311   +   end;
MPRINT(EM_DIAGRAM):   end;
2282312   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282313   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2282314   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2282315   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
2282316   +   end;
MPRINT(EM_DIAGRAM):   end;
2282317   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282318   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
2282319   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
2282320   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
2282321   +   end;
MPRINT(EM_DIAGRAM):   end;
2282322   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282323   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
2282324   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2282325   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2282326   +   end;
MPRINT(EM_DIAGRAM):   end;
2282327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282328   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2282329   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2282330   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2282331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282333   +   end;
MPRINT(EM_DIAGRAM):   end;
2282334   +end;
MPRINT(EM_DIAGRAM):   end;
2282335   +
2282336   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
2282337   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
2282338   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
2282339   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2282340   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2282341   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2282342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282344   +end;
MPRINT(EM_DIAGRAM):   end;
2282345   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282346   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282347   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
2282348   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282349   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282350   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2282351   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
2282352   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2282353   +   end;
MPRINT(EM_DIAGRAM):   end;
2282354   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282355   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
2282356   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
2282357   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
2282358   +   end;
MPRINT(EM_DIAGRAM):   end;
2282359   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282360   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2282361   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2282362   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
2282363   +   end;
MPRINT(EM_DIAGRAM):   end;
2282364   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282365   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
2282366   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2282367   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2282368   +   end;
MPRINT(EM_DIAGRAM):   end;
2282369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282370   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2282371   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2282372   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2282373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282375   +   end;
MPRINT(EM_DIAGRAM):   end;
2282376   +end;
MPRINT(EM_DIAGRAM):   end;
2282377   +
2282378   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
2282379   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
2282380   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
2282381   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2282382   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2282383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282385   +end;
MPRINT(EM_DIAGRAM):   end;
2282386   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282388   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
2282389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282390   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282391   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
2282392   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
2282393   +   end;
MPRINT(EM_DIAGRAM):   end;
2282394   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282395   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
2282396   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
2282397   +   end;
MPRINT(EM_DIAGRAM):   end;
2282398   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282399   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
2282400   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
2282401   +   end;
MPRINT(EM_DIAGRAM):   end;
2282402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282403   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2282404   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2282405   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282406   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282407   +   end;
MPRINT(EM_DIAGRAM):   end;
2282408   +end;
MPRINT(EM_DIAGRAM):   end;
2282409   +
2282410   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
2282411   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
2282412   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
2282413   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2282414   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2282415   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2282416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282418   +end;
MPRINT(EM_DIAGRAM):   end;
2282419   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282421   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
2282422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282423   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2282424   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
2282425   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
2282426   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
2282427   +   end;
MPRINT(EM_DIAGRAM):   end;
2282428   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282429   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2282430   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2282431   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
2282432   +   end;
MPRINT(EM_DIAGRAM):   end;
2282433   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282434   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
2282435   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2282436   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2282437   +   end;
MPRINT(EM_DIAGRAM):   end;
2282438   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282439   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2282440   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
2282441   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2282442   +   end;
MPRINT(EM_DIAGRAM):   end;
2282443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282444   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2282445   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2282446   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2282447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282449   +   end;
MPRINT(EM_DIAGRAM):   end;
2282450   +end;
MPRINT(EM_DIAGRAM):   end;
2282451   +
2282452   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
2282453   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
2282454   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
2282455   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2282456   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2282457   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2282458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282460   +end;
MPRINT(EM_DIAGRAM):   end;
2282461   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282462   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282463   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
2282464   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282465   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282466   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2282467   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
2282468   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2282469   +   end;
MPRINT(EM_DIAGRAM):   end;
2282470   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282471   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
2282472   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
2282473   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
2282474   +   end;
MPRINT(EM_DIAGRAM):   end;
2282475   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282476   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2282477   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2282478   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
2282479   +   end;
MPRINT(EM_DIAGRAM):   end;
2282480   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282481   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
2282482   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2282483   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2282484   +   end;
MPRINT(EM_DIAGRAM):   end;
2282485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282486   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2282487   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2282488   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2282489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282491   +   end;
MPRINT(EM_DIAGRAM):   end;
2282492   +end;
MPRINT(EM_DIAGRAM):   end;
2282493   +
2282494   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
2282495   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
2282496   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
2282497   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2282498   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2282499   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2282500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282502   +end;
MPRINT(EM_DIAGRAM):   end;
2282503   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282505   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
2282506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282507   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
2282508   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2282509   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2282510   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
2282511   +   end;
MPRINT(EM_DIAGRAM):   end;
2282512   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282513   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2282514   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
2282515   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2282516   +   end;
MPRINT(EM_DIAGRAM):   end;
2282517   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282518   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
2282519   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
2282520   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
2282521   +   end;
MPRINT(EM_DIAGRAM):   end;
2282522   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282523   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
2282524   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2282525   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2282526   +   end;
MPRINT(EM_DIAGRAM):   end;
2282527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282528   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2282529   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2282530   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2282531   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282532   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282533   +   end;
MPRINT(EM_DIAGRAM):   end;
2282534   +end;
MPRINT(EM_DIAGRAM):   end;
2282535   +
2282536   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
2282537   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
2282538   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
2282539   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2282540   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2282541   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2282542   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282544   +end;
MPRINT(EM_DIAGRAM):   end;
2282545   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282546   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282547   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
2282548   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282549   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282550   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2282551   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
2282552   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2282553   +   end;
MPRINT(EM_DIAGRAM):   end;
2282554   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282555   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
2282556   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
2282557   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
2282558   +   end;
MPRINT(EM_DIAGRAM):   end;
2282559   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282560   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2282561   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2282562   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
2282563   +   end;
MPRINT(EM_DIAGRAM):   end;
2282564   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282565   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
2282566   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2282567   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2282568   +   end;
MPRINT(EM_DIAGRAM):   end;
2282569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282570   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2282571   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2282572   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2282573   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282574   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282575   +   end;
MPRINT(EM_DIAGRAM):   end;
2282576   +end;
MPRINT(EM_DIAGRAM):   end;
2282577   +
2282578   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
2282579   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
2282580   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
2282581   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2282582   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2282583   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2282584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282586   +end;
MPRINT(EM_DIAGRAM):   end;
2282587   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282589   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
2282590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282591   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2282592   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
2282593   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
2282594   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
2282595   +   end;
MPRINT(EM_DIAGRAM):   end;
2282596   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282597   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2282598   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2282599   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
2282600   +   end;
MPRINT(EM_DIAGRAM):   end;
2282601   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282602   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2282603   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
2282604   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2282605   +   end;
MPRINT(EM_DIAGRAM):   end;
2282606   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282607   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
2282608   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2282609   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2282610   +   end;
MPRINT(EM_DIAGRAM):   end;
2282611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282612   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2282613   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2282614   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2282615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282617   +   end;
MPRINT(EM_DIAGRAM):   end;
2282618   +end;
MPRINT(EM_DIAGRAM):   end;
2282619   +
2282620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282621   +*** Checking missing input Interval
2282622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2282623   +
2282624   +IF NMISS(
2282625   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
2282626   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2282627   +
2282628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282629   +END;
MPRINT(EM_DIAGRAM):   END;
2282630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282631   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2282632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282633   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282634   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2282635   +END;
MPRINT(EM_DIAGRAM):   END;
2282636   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282637   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
2282638   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
2282639   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2282640   +END;
MPRINT(EM_DIAGRAM):   END;
2282641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282642   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2282643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282645   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2282646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282647   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282648   +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
2282649   +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
2282650   +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
2282651   +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
2282652   +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
2282653   +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
2282654   +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
2282655   +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
2282656   +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
2282657   +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
2282658   +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
2282659   +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
2282660   +          +    -1.92253913417034 * GRP_MntFishProducts3
2282661   +          +     0.11236967036572 * GRP_MntFishProducts4
2282662   +          +     1.55117451498964 * GRP_MntGoldProds2
2282663   +          +    -2.17638819155912 * GRP_MntGoldProds3
2282664   +          +     1.12471370225173 * GRP_MntGoldProds4
2282665   +          +     0.73773441156548 * GRP_MntMeatProducts2
2282666   +          +     2.07738910661633 * GRP_MntMeatProducts3
2282667   +          +    -0.64280630173292 * GRP_MntMeatProducts4
2282668   +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
2282669   +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
2282670   +          +     0.27137671258246 * GRP_NumCatalogPurchases3
2282671   +          +     1.17769351442984 * GRP_NumCatalogPurchases4
2282672   +          +     1.22104662684375 * GRP_NumDistPurchases2
2282673   +          +      3.4956187335148 * GRP_NumDistPurchases3
2282674   +          +     1.44110988448724 * GRP_NumDistPurchases4
2282675   +          +    -0.15910531424988 * GRP_NumWebPurchases2
2282676   +          +      2.0651216353476 * GRP_NumWebPurchases3
2282677   +          +     1.88264340284474 * GRP_NumWebPurchases4
2282678   +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
2282679   +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
2282680   +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
2282681   +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
2282682   +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
2282683   +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 +
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 +
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 *
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 *
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 *
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 *
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 *
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 *
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 +
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 +
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 +
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 +
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 +
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 *
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 +
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 *
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
2282684   +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
2282685   +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
2282686   +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
2282687   +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
2282688   +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
2282689   +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
2282690   +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
2282691   +          +     0.69185352158005 * GRP_MntFishProducts3
2282692   +          +    -0.03493178084029 * GRP_MntFishProducts4
2282693   +          +     1.51100187776315 * GRP_MntGoldProds2
2282694   +          +     0.06501688279193 * GRP_MntGoldProds3
2282695   +          +    -0.39137744731231 * GRP_MntGoldProds4
2282696   +          +    -1.71718837423104 * GRP_MntMeatProducts2
2282697   +          +    -2.21915390243757 * GRP_MntMeatProducts3
2282698   +          +    -0.56748587906854 * GRP_MntMeatProducts4
2282699   +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
2282700   +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
2282701   +          +     1.48903401021544 * GRP_NumCatalogPurchases3
2282702   +          +     1.17263293507207 * GRP_NumCatalogPurchases4
2282703   +          +     1.51105230747578 * GRP_NumDistPurchases2
2282704   +          +     0.77634340058478 * GRP_NumDistPurchases3
2282705   +          +    -0.03088809375301 * GRP_NumDistPurchases4
2282706   +          +    -0.96601789395554 * GRP_NumWebPurchases2
2282707   +          +     0.85040977160083 * GRP_NumWebPurchases3
2282708   +          +     2.40308918299781 * GRP_NumWebPurchases4
2282709   +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
2282710   +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
2282711   +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
2282712   +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
2282713   +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
2282714   +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 +
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 +
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 *
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 *
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 +
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 +
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 +
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 +
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 *
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 *
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 *
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 *
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 *
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 +
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 *
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 +
2.66867988462295 * GRP_Recency4 ;
2282715   +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
2282716   +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
2282717   +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
2282718   +        GRP_Income2  +     1.18033291239845 * GRP_Income3
2282719   +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
2282720   +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
2282721   +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
2282722   +          +    -0.25133476006515 * GRP_MntFishProducts3
2282723   +          +     1.43382012526151 * GRP_MntFishProducts4
2282724   +          +      0.6587510367878 * GRP_MntGoldProds2
2282725   +          +    -2.29815972364167 * GRP_MntGoldProds3
2282726   +          +    -1.17878838514109 * GRP_MntGoldProds4
2282727   +          +    -1.45630165039671 * GRP_MntMeatProducts2
2282728   +          +    -0.11970663820977 * GRP_MntMeatProducts3
2282729   +          +    -0.76333182688138 * GRP_MntMeatProducts4
2282730   +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
2282731   +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
2282732   +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
2282733   +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
2282734   +          +    -0.83062872942088 * GRP_NumDistPurchases2
2282735   +          +      1.2644984519337 * GRP_NumDistPurchases3
2282736   +          +     0.62516412515385 * GRP_NumDistPurchases4
2282737   +          +    -0.91932392687811 * GRP_NumWebPurchases2
2282738   +          +     0.63985001179952 * GRP_NumWebPurchases3
2282739   +          +     0.11379774354586 * GRP_NumWebPurchases4
2282740   +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
2282741   +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
2282742   +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
2282743   +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
2282744   +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
2282745   +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 +
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 +
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 *
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 *
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 +
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 +
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 +
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 +
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 *
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 *
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 *
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 *
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 *
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 +
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 *
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 +
-1.63045870617841 * GRP_Recency4 ;
2282746   +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
2282747   +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
2282748   +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
2282749   +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
2282750   +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
2282751   +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
2282752   +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
2282753   +          +     0.25005234850524 * GRP_MntFishProducts3
2282754   +          +    -0.07970714752313 * GRP_MntFishProducts4
2282755   +          +     -0.7495440064059 * GRP_MntGoldProds2
2282756   +          +     -0.0659148563739 * GRP_MntGoldProds3
2282757   +          +    -1.42445075896946 * GRP_MntGoldProds4
2282758   +          +      0.1738975461322 * GRP_MntMeatProducts2
2282759   +          +    -2.24799164386156 * GRP_MntMeatProducts3
2282760   +          +    -1.67754357341899 * GRP_MntMeatProducts4
2282761   +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
2282762   +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
2282763   +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
2282764   +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
2282765   +          +    -0.48267351716569 * GRP_NumDistPurchases2
2282766   +          +     0.93211719554417 * GRP_NumDistPurchases3
2282767   +          +      1.1708430486506 * GRP_NumDistPurchases4
2282768   +          +     0.03811902892169 * GRP_NumWebPurchases2
2282769   +          +    -1.51477371309928 * GRP_NumWebPurchases3
2282770   +          +     1.07378297590898 * GRP_NumWebPurchases4
2282771   +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
2282772   +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
2282773   +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
2282774   +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
2282775   +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
2282776   +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 +
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 +
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 *
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 *
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 +
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 *
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 +
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 +
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 +
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 +
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 +
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 *
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 +
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 *
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
2282777   +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
2282778   +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
2282779   +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
2282780   +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
2282781   +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
2282782   +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
2282783   +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
2282784   +          +    -1.49559041774587 * GRP_MntFishProducts3
2282785   +          +     1.29292270443546 * GRP_MntFishProducts4
2282786   +          +     3.28109415592287 * GRP_MntGoldProds2
2282787   +          +     0.40523569115651 * GRP_MntGoldProds3
2282788   +          +        0.70305704265 * GRP_MntGoldProds4
2282789   +          +    -1.85351989681271 * GRP_MntMeatProducts2
2282790   +          +    -0.63625311683955 * GRP_MntMeatProducts3
2282791   +          +     0.27320544681113 * GRP_MntMeatProducts4
2282792   +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
2282793   +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
2282794   +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
2282795   +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
2282796   +          +    -1.40970961318877 * GRP_NumDistPurchases2
2282797   +          +     -2.5780841761751 * GRP_NumDistPurchases3
2282798   +          +    -0.35557998232484 * GRP_NumDistPurchases4
2282799   +          +     1.27746944985248 * GRP_NumWebPurchases2
2282800   +          +     0.69463977283169 * GRP_NumWebPurchases3
2282801   +          +    -0.54397813851169 * GRP_NumWebPurchases4
2282802   +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
2282803   +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
2282804   +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
2282805   +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
2282806   +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
2282807   +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 +
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 +
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 *
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 *
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 +
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 *
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 *
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 +
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 +
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 +
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 +
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 +
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 +
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 *
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
2282808   +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
2282809   +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
2282810   +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
2282811   +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
2282812   +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
2282813   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2282814   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2282815   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2282816   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2282817   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2282818   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2282819   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2282820   +END;
MPRINT(EM_DIAGRAM):   END;
2282821   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282822   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2282823   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2282824   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2282825   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2282826   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2282827   +END;
MPRINT(EM_DIAGRAM):   END;
2282828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282829   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2282830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282831   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282832   +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
2282833   +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
2282834   +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
2282835   +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
2282836   +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
2282837   +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
2282838   +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
2282839   +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
2282840   +        GRP_Income2  +      2.4308303101124 * GRP_Income3
2282841   +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
2282842   +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
2282843   +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
2282844   +          +     2.51364109656281 * GRP_MntFishProducts3
2282845   +          +    -1.42490007484769 * GRP_MntFishProducts4
2282846   +          +    -0.45125943648795 * GRP_MntGoldProds2
2282847   +          +     2.47102254724134 * GRP_MntGoldProds3
2282848   +          +     -1.9039173262792 * GRP_MntGoldProds4
2282849   +          +     0.19349291706995 * GRP_MntMeatProducts2
2282850   +          +     1.13475826324844 * GRP_MntMeatProducts3
2282851   +          +    -0.33642288502432 * GRP_MntMeatProducts4
2282852   +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
2282853   +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
2282854   +          +     0.15659125827236 * GRP_NumCatalogPurchases3
2282855   +          +     0.32817066335176 * GRP_NumCatalogPurchases4
2282856   +          +    -0.67313821415044 * GRP_NumDistPurchases2
2282857   +          +    -0.96239937857546 * GRP_NumDistPurchases3
2282858   +          +     0.32058507897383 * GRP_NumDistPurchases4
2282859   +          +     0.02503658374779 * GRP_NumWebPurchases2
2282860   +          +    -2.42182777667863 * GRP_NumWebPurchases3
2282861   +          +     1.09934791830799 * GRP_NumWebPurchases4
2282862   +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
2282863   +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
2282864   +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
2282865   +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
2282866   +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
2282867   +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 +
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 +
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 *
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 *
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 +
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 +
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 *
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 +
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 +
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 +
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 +
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 +
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 +
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 *
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
2282868   +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
2282869   +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
2282870   +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
2282871   +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
2282872   +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
2282873   +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
2282874   +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
2282875   +          +    -0.68769529687639 * GRP_MntFishProducts3
2282876   +          +     0.91046416847697 * GRP_MntFishProducts4
2282877   +          +     1.93581182421904 * GRP_MntGoldProds2
2282878   +          +     0.00795466624941 * GRP_MntGoldProds3
2282879   +          +    -0.22854189252742 * GRP_MntGoldProds4
2282880   +          +     0.51645804440055 * GRP_MntMeatProducts2
2282881   +          +    -0.73677565057958 * GRP_MntMeatProducts3
2282882   +          +    -3.38222954402665 * GRP_MntMeatProducts4
2282883   +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
2282884   +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
2282885   +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
2282886   +          +     0.92868654767551 * GRP_NumCatalogPurchases4
2282887   +          +    -0.18642581919214 * GRP_NumDistPurchases2
2282888   +          +     0.32117397006136 * GRP_NumDistPurchases3
2282889   +          +    -0.59059080451748 * GRP_NumDistPurchases4
2282890   +          +    -1.05057528699441 * GRP_NumWebPurchases2
2282891   +          +    -0.84936431958655 * GRP_NumWebPurchases3
2282892   +          +     0.43322339989668 * GRP_NumWebPurchases4
2282893   +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
2282894   +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
2282895   +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
2282896   +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
2282897   +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
2282898   +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 +
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 +
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 *
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 *
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 +
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 +
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 +
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 +
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 *
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 *
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 *
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 *
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 *
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 +
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 *
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 +
-0.17063922919112 * GRP_Recency4 ;
2282899   +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
2282900   +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
2282901   +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
2282902   +        GRP_Income2  +     2.06545795697617 * GRP_Income3
2282903   +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
2282904   +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
2282905   +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
2282906   +          +     -0.2747383185488 * GRP_MntFishProducts3
2282907   +          +     0.05699547232616 * GRP_MntFishProducts4
2282908   +          +     1.78340082221807 * GRP_MntGoldProds2
2282909   +          +    -0.21272258173805 * GRP_MntGoldProds3
2282910   +          +    -0.63881612523162 * GRP_MntGoldProds4
2282911   +          +     0.35743242018534 * GRP_MntMeatProducts2
2282912   +          +     0.39288166088974 * GRP_MntMeatProducts3
2282913   +          +     0.68623350973697 * GRP_MntMeatProducts4
2282914   +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
2282915   +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
2282916   +          +     0.38349558810511 * GRP_NumCatalogPurchases3
2282917   +          +     0.94944817324412 * GRP_NumCatalogPurchases4
2282918   +          +     0.87924710032772 * GRP_NumDistPurchases2
2282919   +          +     0.54658799433949 * GRP_NumDistPurchases3
2282920   +          +     1.85594529989185 * GRP_NumDistPurchases4
2282921   +          +    -0.66471569231333 * GRP_NumWebPurchases2
2282922   +          +    -0.59461900037355 * GRP_NumWebPurchases3
2282923   +          +     0.12806083458682 * GRP_NumWebPurchases4
2282924   +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
2282925   +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
2282926   +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
2282927   +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
2282928   +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
2282929   +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 +
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 +
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 *
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 *
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 +
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 +
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 +
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 +
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 +
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 *
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 *
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 *
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 *
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 *
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 +
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 *
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 +
-0.53617918353506 * GRP_Recency4 ;
2282930   +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
2282931   +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
2282932   +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
2282933   +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
2282934   +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
2282935   +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
2282936   +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
2282937   +          +    -0.50962348735329 * GRP_MntFishProducts3
2282938   +          +    -1.75841654964734 * GRP_MntFishProducts4
2282939   +          +     2.14839745385174 * GRP_MntGoldProds2
2282940   +          +      2.4716387157729 * GRP_MntGoldProds3
2282941   +          +     0.61286996367418 * GRP_MntGoldProds4
2282942   +          +     1.45427097683349 * GRP_MntMeatProducts2
2282943   +          +    -0.34990206215878 * GRP_MntMeatProducts3
2282944   +          +     2.25284175811484 * GRP_MntMeatProducts4
2282945   +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
2282946   +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
2282947   +          +     1.02272173939472 * GRP_NumCatalogPurchases3
2282948   +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
2282949   +          +    -0.44080685652484 * GRP_NumDistPurchases2
2282950   +          +     2.40613428385819 * GRP_NumDistPurchases3
2282951   +          +     0.26317801067025 * GRP_NumDistPurchases4
2282952   +          +     2.34961138802546 * GRP_NumWebPurchases2
2282953   +          +     2.35826990005342 * GRP_NumWebPurchases3
2282954   +          +     0.18496434892584 * GRP_NumWebPurchases4
2282955   +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
2282956   +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
2282957   +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
2282958   +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
2282959   +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
2282960   +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 +
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 +
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 *
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 *
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 +
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 *
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 +
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 +
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 +
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 +
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 +
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 *
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 +
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 *
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
2282961   +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
2282962   +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
2282963   +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
2282964   +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
2282965   +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
2282966   +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
2282967   +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
2282968   +          +     -2.3817205567109 * GRP_MntFishProducts3
2282969   +          +      1.4356293091772 * GRP_MntFishProducts4
2282970   +          +    -1.03209023546079 * GRP_MntGoldProds2
2282971   +          +     1.93949728331263 * GRP_MntGoldProds3
2282972   +          +     0.44849194130528 * GRP_MntGoldProds4
2282973   +          +     1.34973896956794 * GRP_MntMeatProducts2
2282974   +          +     1.40989126474294 * GRP_MntMeatProducts3
2282975   +          +     0.74435387703611 * GRP_MntMeatProducts4
2282976   +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
2282977   +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
2282978   +          +     1.65449574071289 * GRP_NumCatalogPurchases3
2282979   +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
2282980   +          +    -0.76749528874396 * GRP_NumDistPurchases2
2282981   +          +     1.83370965910825 * GRP_NumDistPurchases3
2282982   +          +    -0.73709156569506 * GRP_NumDistPurchases4
2282983   +          +     0.09215124428658 * GRP_NumWebPurchases2
2282984   +          +      1.0403096068891 * GRP_NumWebPurchases3
2282985   +          +     0.59317560741224 * GRP_NumWebPurchases4
2282986   +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
2282987   +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
2282988   +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
2282989   +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
2282990   +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
2282991   +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 +
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 +
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 *
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 *
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 +
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 +
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 *
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 +
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 +
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 +
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 +
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 +
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 *
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 +
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 *
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
2282992   +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
2282993   +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
2282994   +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
2282995   +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
2282996   +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
2282997   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2282998   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2282999   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2283000   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2283001   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2283002   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2283003   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2283004   +END;
MPRINT(EM_DIAGRAM):   END;
2283005   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283006   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2283007   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2283008   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2283009   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2283010   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2283011   +END;
MPRINT(EM_DIAGRAM):   END;
2283012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283013   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2283014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283015   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283016   +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
2283017   +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
2283018   +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 +
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
2283019   +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
2283020   +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
2283021   +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 +
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
2283022   +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
2283023   +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
2283024   +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 +
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
2283025   +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
2283026   +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
2283027   +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 +
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
2283028   +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
2283029   +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
2283030   +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 +
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
2283031   +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
2283032   +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
2283033   +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 *
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
2283034   +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
2283035   +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
2283036   +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
2283037   +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
2283038   +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
2283039   +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
2283040   +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
2283041   +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
2283042   +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 *
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
2283043   +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
2283044   +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
2283045   +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 *
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
2283046   +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
2283047   +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
2283048   +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
2283049   +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
2283050   +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
2283051   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2283052   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2283053   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2283054   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2283055   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2283056   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2283057   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2283058   +END;
MPRINT(EM_DIAGRAM):   END;
2283059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283060   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2283061   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2283062   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2283063   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2283064   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2283065   +END;
MPRINT(EM_DIAGRAM):   END;
2283066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283067   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2283068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283069   +
2283070   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2283071   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2283072   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2283073   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2283074   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2283075   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283076   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2283077   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2283078   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2283079   +end;
MPRINT(EM_DIAGRAM):   end;
2283080   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283081   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2283082   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2283083   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2283084   +   end;
MPRINT(EM_DIAGRAM):   end;
2283085   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2283086   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2283087   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2283088   +   end;
MPRINT(EM_DIAGRAM):   end;
2283089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283090   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2283091   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2283092   +   end;
MPRINT(EM_DIAGRAM):   end;
2283093   +end;
MPRINT(EM_DIAGRAM):   end;
2283094   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283095   +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
2283096   +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
2283097   +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 +
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
2283098   +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
2283099   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2283100   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2283101   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2283102   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2283103   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2283104   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2283105   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2283106   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2283107   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2283108   +END;
MPRINT(EM_DIAGRAM):   END;
2283109   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283110   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2283111   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2283112   +END;
MPRINT(EM_DIAGRAM):   END;
2283113   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2283114   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2283115   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2283116   +END;
MPRINT(EM_DIAGRAM):   END;
2283117   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2283118   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2283119   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2283120   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2283121   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2283122   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2283123   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2283124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283125   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2283126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283127   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2283128   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2283129   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2283130   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2283131   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2283132   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2283133   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2283134   +END;
MPRINT(EM_DIAGRAM):   END;
2283135   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2283136   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2283137   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2283138   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2283139    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL20_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2283140    quit;
2283141    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2283142    filename emflow
2283142  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283143    *------------------------------------------------------------*;
2283144    * AutoNeural20: Scoring VALIDATE data;
2283145    *------------------------------------------------------------*;
2283146    data EMWS8.AutoNeural20_VALIDATE
2283147    / view=EMWS8.AutoNeural20_VALIDATE
2283148    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_VALIDATE / view=EMWS8.AutoNeural20_VALIDATE ;
2283149    set EMWS8.BINNING_VALIDATE
2283150    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
2283151    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas.
2283152   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2283153   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2283154   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2283155   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2283156   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2283157   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2283158   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2283159   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2283160   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2283161   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2283162   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2283163   +LENGTH _WARN_ $4
2283164   +      F_DepVar  $ 12
2283165   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2283166   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
2283167   +
2283168   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
2283169   +
2283170   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
2283171   +
2283172   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
2283173   +
2283174   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
2283175   +
2283176   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
2283177   +
2283178   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
2283179   +
2283180   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
2283181   +
2283182   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
2283183   +
2283184   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
2283185   +
2283186   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
2283187   +
2283188   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
2283189   +
2283190   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
2283191   +
2283192   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
2283193   +
2283194   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
2283195   +
2283196   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
2283197   +
2283198   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
2283199   +
2283200   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
2283201   +
2283202   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
2283203   +
2283204   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
2283205   +
2283206   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
2283207   +
2283208   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
2283209   +
2283210   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
2283211   +
2283212   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
2283213   +
2283214   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
2283215   +
2283216   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
2283217   +
2283218   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
2283219   +
2283220   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
2283221   +
2283222   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
2283223   +
2283224   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
2283225   +
2283226   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
2283227   +
2283228   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
2283229   +
2283230   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
2283231   +
2283232   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
2283233   +
2283234   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
2283235   +
2283236   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
2283237   +
2283238   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
2283239   +
2283240   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
2283241   +
2283242   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
2283243   +
2283244   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
2283245   +
2283246   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2283247   +
2283248   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2283249   +
2283250   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2283251   +
2283252   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2283253   +
2283254   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2283255   +
2283256   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2283257   +
2283258   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2283259   +
2283260   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2283261   +
2283262   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2283263   +
2283264   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2283265   +
2283266   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2283267   +
2283268   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2283269   +
2283270   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2283271   +
2283272   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2283273   +
2283274   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2283275   +
2283276   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2283277   +
2283278   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2283279   +
2283280   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2283281   +
2283282   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2283283   +
2283284   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2283285   +
2283286   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2283287   +
2283288   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2283289   +
2283290   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2283291   +
2283292   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
2283293   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
2283294   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
2283295   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2283296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283298   +end;
MPRINT(EM_DIAGRAM):   end;
2283299   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283301   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
2283302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283303   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
2283304   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
2283305   +   end;
MPRINT(EM_DIAGRAM):   end;
2283306   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283307   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
2283308   +   end;
MPRINT(EM_DIAGRAM):   end;
2283309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283310   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2283311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283313   +   end;
MPRINT(EM_DIAGRAM):   end;
2283314   +end;
MPRINT(EM_DIAGRAM):   end;
2283315   +
2283316   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
2283317   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
2283318   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
2283319   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2283320   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2283321   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2283322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283324   +end;
MPRINT(EM_DIAGRAM):   end;
2283325   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283327   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
2283328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283329   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2283330   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
2283331   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
2283332   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
2283333   +   end;
MPRINT(EM_DIAGRAM):   end;
2283334   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283335   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2283336   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
2283337   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2283338   +   end;
MPRINT(EM_DIAGRAM):   end;
2283339   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283340   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2283341   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2283342   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
2283343   +   end;
MPRINT(EM_DIAGRAM):   end;
2283344   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283345   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
2283346   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2283347   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2283348   +   end;
MPRINT(EM_DIAGRAM):   end;
2283349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283350   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2283351   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2283352   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2283353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283355   +   end;
MPRINT(EM_DIAGRAM):   end;
2283356   +end;
MPRINT(EM_DIAGRAM):   end;
2283357   +
2283358   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
2283359   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
2283360   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
2283361   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2283362   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2283363   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2283364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283366   +end;
MPRINT(EM_DIAGRAM):   end;
2283367   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283369   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
2283370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283371   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2283372   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
2283373   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
2283374   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
2283375   +   end;
MPRINT(EM_DIAGRAM):   end;
2283376   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283377   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2283378   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2283379   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
2283380   +   end;
MPRINT(EM_DIAGRAM):   end;
2283381   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283382   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2283383   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
2283384   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2283385   +   end;
MPRINT(EM_DIAGRAM):   end;
2283386   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283387   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
2283388   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2283389   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2283390   +   end;
MPRINT(EM_DIAGRAM):   end;
2283391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283392   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2283393   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2283394   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2283395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283397   +   end;
MPRINT(EM_DIAGRAM):   end;
2283398   +end;
MPRINT(EM_DIAGRAM):   end;
2283399   +
2283400   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
2283401   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
2283402   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
2283403   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2283404   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2283405   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2283406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283408   +end;
MPRINT(EM_DIAGRAM):   end;
2283409   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283411   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
2283412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283413   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283414   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2283415   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
2283416   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2283417   +   end;
MPRINT(EM_DIAGRAM):   end;
2283418   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283419   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
2283420   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
2283421   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
2283422   +   end;
MPRINT(EM_DIAGRAM):   end;
2283423   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283424   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2283425   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2283426   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
2283427   +   end;
MPRINT(EM_DIAGRAM):   end;
2283428   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283429   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
2283430   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2283431   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2283432   +   end;
MPRINT(EM_DIAGRAM):   end;
2283433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283434   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2283435   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2283436   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2283437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283439   +   end;
MPRINT(EM_DIAGRAM):   end;
2283440   +end;
MPRINT(EM_DIAGRAM):   end;
2283441   +
2283442   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
2283443   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
2283444   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
2283445   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2283446   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2283447   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2283448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283450   +end;
MPRINT(EM_DIAGRAM):   end;
2283451   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283453   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
2283454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283455   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283456   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2283457   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
2283458   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2283459   +   end;
MPRINT(EM_DIAGRAM):   end;
2283460   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283461   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
2283462   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
2283463   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
2283464   +   end;
MPRINT(EM_DIAGRAM):   end;
2283465   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283466   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2283467   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2283468   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
2283469   +   end;
MPRINT(EM_DIAGRAM):   end;
2283470   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283471   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
2283472   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2283473   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2283474   +   end;
MPRINT(EM_DIAGRAM):   end;
2283475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283476   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2283477   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2283478   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2283479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283481   +   end;
MPRINT(EM_DIAGRAM):   end;
2283482   +end;
MPRINT(EM_DIAGRAM):   end;
2283483   +
2283484   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
2283485   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
2283486   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
2283487   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2283488   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2283489   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2283490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283492   +end;
MPRINT(EM_DIAGRAM):   end;
2283493   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283495   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
2283496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283497   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283498   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2283499   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
2283500   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2283501   +   end;
MPRINT(EM_DIAGRAM):   end;
2283502   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283503   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2283504   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2283505   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
2283506   +   end;
MPRINT(EM_DIAGRAM):   end;
2283507   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283508   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
2283509   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
2283510   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
2283511   +   end;
MPRINT(EM_DIAGRAM):   end;
2283512   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283513   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
2283514   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2283515   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2283516   +   end;
MPRINT(EM_DIAGRAM):   end;
2283517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283518   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2283519   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2283520   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2283521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283523   +   end;
MPRINT(EM_DIAGRAM):   end;
2283524   +end;
MPRINT(EM_DIAGRAM):   end;
2283525   +
2283526   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
2283527   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
2283528   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
2283529   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2283530   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2283531   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2283532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283534   +end;
MPRINT(EM_DIAGRAM):   end;
2283535   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283537   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
2283538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283539   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283540   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2283541   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
2283542   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2283543   +   end;
MPRINT(EM_DIAGRAM):   end;
2283544   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283545   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2283546   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2283547   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
2283548   +   end;
MPRINT(EM_DIAGRAM):   end;
2283549   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283550   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
2283551   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
2283552   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
2283553   +   end;
MPRINT(EM_DIAGRAM):   end;
2283554   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283555   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
2283556   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2283557   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2283558   +   end;
MPRINT(EM_DIAGRAM):   end;
2283559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283560   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2283561   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2283562   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2283563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283565   +   end;
MPRINT(EM_DIAGRAM):   end;
2283566   +end;
MPRINT(EM_DIAGRAM):   end;
2283567   +
2283568   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
2283569   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
2283570   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
2283571   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2283572   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2283573   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2283574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283576   +end;
MPRINT(EM_DIAGRAM):   end;
2283577   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283579   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
2283580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283581   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283582   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2283583   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
2283584   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2283585   +   end;
MPRINT(EM_DIAGRAM):   end;
2283586   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283587   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
2283588   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
2283589   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
2283590   +   end;
MPRINT(EM_DIAGRAM):   end;
2283591   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283592   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2283593   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2283594   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
2283595   +   end;
MPRINT(EM_DIAGRAM):   end;
2283596   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283597   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
2283598   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2283599   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2283600   +   end;
MPRINT(EM_DIAGRAM):   end;
2283601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283602   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2283603   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2283604   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2283605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283607   +   end;
MPRINT(EM_DIAGRAM):   end;
2283608   +end;
MPRINT(EM_DIAGRAM):   end;
2283609   +
2283610   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
2283611   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
2283612   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
2283613   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2283614   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2283615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283617   +end;
MPRINT(EM_DIAGRAM):   end;
2283618   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283620   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
2283621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283622   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283623   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
2283624   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
2283625   +   end;
MPRINT(EM_DIAGRAM):   end;
2283626   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283627   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
2283628   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
2283629   +   end;
MPRINT(EM_DIAGRAM):   end;
2283630   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283631   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
2283632   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
2283633   +   end;
MPRINT(EM_DIAGRAM):   end;
2283634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283635   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2283636   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2283637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283639   +   end;
MPRINT(EM_DIAGRAM):   end;
2283640   +end;
MPRINT(EM_DIAGRAM):   end;
2283641   +
2283642   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
2283643   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
2283644   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
2283645   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2283646   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2283647   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2283648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283650   +end;
MPRINT(EM_DIAGRAM):   end;
2283651   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283653   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
2283654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283655   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2283656   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
2283657   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
2283658   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
2283659   +   end;
MPRINT(EM_DIAGRAM):   end;
2283660   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283661   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2283662   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2283663   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
2283664   +   end;
MPRINT(EM_DIAGRAM):   end;
2283665   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283666   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
2283667   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2283668   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2283669   +   end;
MPRINT(EM_DIAGRAM):   end;
2283670   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283671   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2283672   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
2283673   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2283674   +   end;
MPRINT(EM_DIAGRAM):   end;
2283675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283676   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2283677   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2283678   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2283679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283681   +   end;
MPRINT(EM_DIAGRAM):   end;
2283682   +end;
MPRINT(EM_DIAGRAM):   end;
2283683   +
2283684   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
2283685   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
2283686   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
2283687   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2283688   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2283689   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2283690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283692   +end;
MPRINT(EM_DIAGRAM):   end;
2283693   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283694   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283695   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
2283696   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283697   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283698   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2283699   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
2283700   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2283701   +   end;
MPRINT(EM_DIAGRAM):   end;
2283702   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283703   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
2283704   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
2283705   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
2283706   +   end;
MPRINT(EM_DIAGRAM):   end;
2283707   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283708   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2283709   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2283710   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
2283711   +   end;
MPRINT(EM_DIAGRAM):   end;
2283712   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283713   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
2283714   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2283715   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2283716   +   end;
MPRINT(EM_DIAGRAM):   end;
2283717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283718   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2283719   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2283720   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2283721   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283722   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283723   +   end;
MPRINT(EM_DIAGRAM):   end;
2283724   +end;
MPRINT(EM_DIAGRAM):   end;
2283725   +
2283726   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
2283727   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
2283728   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
2283729   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2283730   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2283731   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2283732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283734   +end;
MPRINT(EM_DIAGRAM):   end;
2283735   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283736   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283737   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
2283738   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283739   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
2283740   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2283741   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2283742   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
2283743   +   end;
MPRINT(EM_DIAGRAM):   end;
2283744   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283745   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2283746   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
2283747   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2283748   +   end;
MPRINT(EM_DIAGRAM):   end;
2283749   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283750   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
2283751   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
2283752   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
2283753   +   end;
MPRINT(EM_DIAGRAM):   end;
2283754   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283755   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
2283756   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2283757   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2283758   +   end;
MPRINT(EM_DIAGRAM):   end;
2283759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283760   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2283761   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2283762   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2283763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283765   +   end;
MPRINT(EM_DIAGRAM):   end;
2283766   +end;
MPRINT(EM_DIAGRAM):   end;
2283767   +
2283768   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
2283769   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
2283770   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
2283771   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2283772   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2283773   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2283774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283776   +end;
MPRINT(EM_DIAGRAM):   end;
2283777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283779   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
2283780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283781   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283782   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2283783   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
2283784   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2283785   +   end;
MPRINT(EM_DIAGRAM):   end;
2283786   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283787   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
2283788   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
2283789   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
2283790   +   end;
MPRINT(EM_DIAGRAM):   end;
2283791   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283792   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2283793   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2283794   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
2283795   +   end;
MPRINT(EM_DIAGRAM):   end;
2283796   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283797   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
2283798   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2283799   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2283800   +   end;
MPRINT(EM_DIAGRAM):   end;
2283801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283802   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2283803   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2283804   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2283805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283807   +   end;
MPRINT(EM_DIAGRAM):   end;
2283808   +end;
MPRINT(EM_DIAGRAM):   end;
2283809   +
2283810   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
2283811   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
2283812   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
2283813   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2283814   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2283815   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2283816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283818   +end;
MPRINT(EM_DIAGRAM):   end;
2283819   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283821   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
2283822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283823   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2283824   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
2283825   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
2283826   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
2283827   +   end;
MPRINT(EM_DIAGRAM):   end;
2283828   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283829   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2283830   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2283831   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
2283832   +   end;
MPRINT(EM_DIAGRAM):   end;
2283833   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283834   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2283835   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
2283836   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2283837   +   end;
MPRINT(EM_DIAGRAM):   end;
2283838   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283839   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
2283840   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2283841   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2283842   +   end;
MPRINT(EM_DIAGRAM):   end;
2283843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283844   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2283845   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2283846   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2283847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283849   +   end;
MPRINT(EM_DIAGRAM):   end;
2283850   +end;
MPRINT(EM_DIAGRAM):   end;
2283851   +
2283852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283853   +*** Checking missing input Interval
2283854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2283855   +
2283856   +IF NMISS(
2283857   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
2283858   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2283859   +
2283860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283861   +END;
MPRINT(EM_DIAGRAM):   END;
2283862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283863   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2283864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283865   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283866   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2283867   +END;
MPRINT(EM_DIAGRAM):   END;
2283868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283869   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
2283870   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
2283871   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2283872   +END;
MPRINT(EM_DIAGRAM):   END;
2283873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283874   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2283875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283877   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2283878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283879   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283880   +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
2283881   +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
2283882   +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
2283883   +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
2283884   +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
2283885   +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
2283886   +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
2283887   +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
2283888   +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
2283889   +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
2283890   +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
2283891   +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
2283892   +          +    -1.92253913417034 * GRP_MntFishProducts3
2283893   +          +     0.11236967036572 * GRP_MntFishProducts4
2283894   +          +     1.55117451498964 * GRP_MntGoldProds2
2283895   +          +    -2.17638819155912 * GRP_MntGoldProds3
2283896   +          +     1.12471370225173 * GRP_MntGoldProds4
2283897   +          +     0.73773441156548 * GRP_MntMeatProducts2
2283898   +          +     2.07738910661633 * GRP_MntMeatProducts3
2283899   +          +    -0.64280630173292 * GRP_MntMeatProducts4
2283900   +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
2283901   +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
2283902   +          +     0.27137671258246 * GRP_NumCatalogPurchases3
2283903   +          +     1.17769351442984 * GRP_NumCatalogPurchases4
2283904   +          +     1.22104662684375 * GRP_NumDistPurchases2
2283905   +          +      3.4956187335148 * GRP_NumDistPurchases3
2283906   +          +     1.44110988448724 * GRP_NumDistPurchases4
2283907   +          +    -0.15910531424988 * GRP_NumWebPurchases2
2283908   +          +      2.0651216353476 * GRP_NumWebPurchases3
2283909   +          +     1.88264340284474 * GRP_NumWebPurchases4
2283910   +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
2283911   +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
2283912   +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
2283913   +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
2283914   +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
2283915   +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 +
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 +
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 *
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 *
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 *
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 *
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 *
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 *
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 +
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 +
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 +
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 +
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 +
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 *
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 +
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 *
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
2283916   +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
2283917   +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
2283918   +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
2283919   +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
2283920   +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
2283921   +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
2283922   +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
2283923   +          +     0.69185352158005 * GRP_MntFishProducts3
2283924   +          +    -0.03493178084029 * GRP_MntFishProducts4
2283925   +          +     1.51100187776315 * GRP_MntGoldProds2
2283926   +          +     0.06501688279193 * GRP_MntGoldProds3
2283927   +          +    -0.39137744731231 * GRP_MntGoldProds4
2283928   +          +    -1.71718837423104 * GRP_MntMeatProducts2
2283929   +          +    -2.21915390243757 * GRP_MntMeatProducts3
2283930   +          +    -0.56748587906854 * GRP_MntMeatProducts4
2283931   +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
2283932   +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
2283933   +          +     1.48903401021544 * GRP_NumCatalogPurchases3
2283934   +          +     1.17263293507207 * GRP_NumCatalogPurchases4
2283935   +          +     1.51105230747578 * GRP_NumDistPurchases2
2283936   +          +     0.77634340058478 * GRP_NumDistPurchases3
2283937   +          +    -0.03088809375301 * GRP_NumDistPurchases4
2283938   +          +    -0.96601789395554 * GRP_NumWebPurchases2
2283939   +          +     0.85040977160083 * GRP_NumWebPurchases3
2283940   +          +     2.40308918299781 * GRP_NumWebPurchases4
2283941   +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
2283942   +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
2283943   +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
2283944   +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
2283945   +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
2283946   +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 +
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 +
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 *
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 *
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 +
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 +
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 +
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 +
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 *
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 *
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 *
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 *
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 *
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 +
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 *
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 +
2.66867988462295 * GRP_Recency4 ;
2283947   +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
2283948   +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
2283949   +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
2283950   +        GRP_Income2  +     1.18033291239845 * GRP_Income3
2283951   +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
2283952   +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
2283953   +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
2283954   +          +    -0.25133476006515 * GRP_MntFishProducts3
2283955   +          +     1.43382012526151 * GRP_MntFishProducts4
2283956   +          +      0.6587510367878 * GRP_MntGoldProds2
2283957   +          +    -2.29815972364167 * GRP_MntGoldProds3
2283958   +          +    -1.17878838514109 * GRP_MntGoldProds4
2283959   +          +    -1.45630165039671 * GRP_MntMeatProducts2
2283960   +          +    -0.11970663820977 * GRP_MntMeatProducts3
2283961   +          +    -0.76333182688138 * GRP_MntMeatProducts4
2283962   +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
2283963   +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
2283964   +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
2283965   +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
2283966   +          +    -0.83062872942088 * GRP_NumDistPurchases2
2283967   +          +      1.2644984519337 * GRP_NumDistPurchases3
2283968   +          +     0.62516412515385 * GRP_NumDistPurchases4
2283969   +          +    -0.91932392687811 * GRP_NumWebPurchases2
2283970   +          +     0.63985001179952 * GRP_NumWebPurchases3
2283971   +          +     0.11379774354586 * GRP_NumWebPurchases4
2283972   +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
2283973   +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
2283974   +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
2283975   +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
2283976   +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
2283977   +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 +
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 +
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 *
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 *
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 +
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 +
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 +
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 +
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 *
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 *
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 *
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 *
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 *
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 +
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 *
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 +
-1.63045870617841 * GRP_Recency4 ;
2283978   +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
2283979   +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
2283980   +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
2283981   +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
2283982   +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
2283983   +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
2283984   +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
2283985   +          +     0.25005234850524 * GRP_MntFishProducts3
2283986   +          +    -0.07970714752313 * GRP_MntFishProducts4
2283987   +          +     -0.7495440064059 * GRP_MntGoldProds2
2283988   +          +     -0.0659148563739 * GRP_MntGoldProds3
2283989   +          +    -1.42445075896946 * GRP_MntGoldProds4
2283990   +          +      0.1738975461322 * GRP_MntMeatProducts2
2283991   +          +    -2.24799164386156 * GRP_MntMeatProducts3
2283992   +          +    -1.67754357341899 * GRP_MntMeatProducts4
2283993   +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
2283994   +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
2283995   +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
2283996   +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
2283997   +          +    -0.48267351716569 * GRP_NumDistPurchases2
2283998   +          +     0.93211719554417 * GRP_NumDistPurchases3
2283999   +          +      1.1708430486506 * GRP_NumDistPurchases4
2284000   +          +     0.03811902892169 * GRP_NumWebPurchases2
2284001   +          +    -1.51477371309928 * GRP_NumWebPurchases3
2284002   +          +     1.07378297590898 * GRP_NumWebPurchases4
2284003   +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
2284004   +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
2284005   +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
2284006   +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
2284007   +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
2284008   +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 +
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 +
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 *
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 *
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 +
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 *
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 +
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 +
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 +
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 +
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 +
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 *
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 +
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 *
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
2284009   +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
2284010   +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
2284011   +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
2284012   +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
2284013   +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
2284014   +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
2284015   +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
2284016   +          +    -1.49559041774587 * GRP_MntFishProducts3
2284017   +          +     1.29292270443546 * GRP_MntFishProducts4
2284018   +          +     3.28109415592287 * GRP_MntGoldProds2
2284019   +          +     0.40523569115651 * GRP_MntGoldProds3
2284020   +          +        0.70305704265 * GRP_MntGoldProds4
2284021   +          +    -1.85351989681271 * GRP_MntMeatProducts2
2284022   +          +    -0.63625311683955 * GRP_MntMeatProducts3
2284023   +          +     0.27320544681113 * GRP_MntMeatProducts4
2284024   +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
2284025   +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
2284026   +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
2284027   +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
2284028   +          +    -1.40970961318877 * GRP_NumDistPurchases2
2284029   +          +     -2.5780841761751 * GRP_NumDistPurchases3
2284030   +          +    -0.35557998232484 * GRP_NumDistPurchases4
2284031   +          +     1.27746944985248 * GRP_NumWebPurchases2
2284032   +          +     0.69463977283169 * GRP_NumWebPurchases3
2284033   +          +    -0.54397813851169 * GRP_NumWebPurchases4
2284034   +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
2284035   +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
2284036   +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
2284037   +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
2284038   +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
2284039   +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 +
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 +
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 *
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 *
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 +
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 *
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 *
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 +
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 +
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 +
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 +
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 +
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 +
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 *
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
2284040   +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
2284041   +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
2284042   +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
2284043   +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
2284044   +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
2284045   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2284046   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2284047   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2284048   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2284049   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2284050   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2284051   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2284052   +END;
MPRINT(EM_DIAGRAM):   END;
2284053   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284054   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2284055   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2284056   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2284057   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2284058   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2284059   +END;
MPRINT(EM_DIAGRAM):   END;
2284060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284061   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2284062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284063   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284064   +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
2284065   +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
2284066   +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
2284067   +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
2284068   +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
2284069   +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
2284070   +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
2284071   +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
2284072   +        GRP_Income2  +      2.4308303101124 * GRP_Income3
2284073   +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
2284074   +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
2284075   +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
2284076   +          +     2.51364109656281 * GRP_MntFishProducts3
2284077   +          +    -1.42490007484769 * GRP_MntFishProducts4
2284078   +          +    -0.45125943648795 * GRP_MntGoldProds2
2284079   +          +     2.47102254724134 * GRP_MntGoldProds3
2284080   +          +     -1.9039173262792 * GRP_MntGoldProds4
2284081   +          +     0.19349291706995 * GRP_MntMeatProducts2
2284082   +          +     1.13475826324844 * GRP_MntMeatProducts3
2284083   +          +    -0.33642288502432 * GRP_MntMeatProducts4
2284084   +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
2284085   +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
2284086   +          +     0.15659125827236 * GRP_NumCatalogPurchases3
2284087   +          +     0.32817066335176 * GRP_NumCatalogPurchases4
2284088   +          +    -0.67313821415044 * GRP_NumDistPurchases2
2284089   +          +    -0.96239937857546 * GRP_NumDistPurchases3
2284090   +          +     0.32058507897383 * GRP_NumDistPurchases4
2284091   +          +     0.02503658374779 * GRP_NumWebPurchases2
2284092   +          +    -2.42182777667863 * GRP_NumWebPurchases3
2284093   +          +     1.09934791830799 * GRP_NumWebPurchases4
2284094   +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
2284095   +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
2284096   +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
2284097   +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
2284098   +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
2284099   +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 +
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 +
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 *
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 *
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 +
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 +
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 *
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 +
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 +
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 +
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 +
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 +
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 +
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 *
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
2284100   +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
2284101   +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
2284102   +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
2284103   +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
2284104   +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
2284105   +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
2284106   +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
2284107   +          +    -0.68769529687639 * GRP_MntFishProducts3
2284108   +          +     0.91046416847697 * GRP_MntFishProducts4
2284109   +          +     1.93581182421904 * GRP_MntGoldProds2
2284110   +          +     0.00795466624941 * GRP_MntGoldProds3
2284111   +          +    -0.22854189252742 * GRP_MntGoldProds4
2284112   +          +     0.51645804440055 * GRP_MntMeatProducts2
2284113   +          +    -0.73677565057958 * GRP_MntMeatProducts3
2284114   +          +    -3.38222954402665 * GRP_MntMeatProducts4
2284115   +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
2284116   +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
2284117   +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
2284118   +          +     0.92868654767551 * GRP_NumCatalogPurchases4
2284119   +          +    -0.18642581919214 * GRP_NumDistPurchases2
2284120   +          +     0.32117397006136 * GRP_NumDistPurchases3
2284121   +          +    -0.59059080451748 * GRP_NumDistPurchases4
2284122   +          +    -1.05057528699441 * GRP_NumWebPurchases2
2284123   +          +    -0.84936431958655 * GRP_NumWebPurchases3
2284124   +          +     0.43322339989668 * GRP_NumWebPurchases4
2284125   +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
2284126   +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
2284127   +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
2284128   +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
2284129   +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
2284130   +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 +
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 +
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 *
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 *
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 +
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 +
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 +
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 +
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 *
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 *
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 *
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 *
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 *
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 +
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 *
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 +
-0.17063922919112 * GRP_Recency4 ;
2284131   +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
2284132   +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
2284133   +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
2284134   +        GRP_Income2  +     2.06545795697617 * GRP_Income3
2284135   +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
2284136   +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
2284137   +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
2284138   +          +     -0.2747383185488 * GRP_MntFishProducts3
2284139   +          +     0.05699547232616 * GRP_MntFishProducts4
2284140   +          +     1.78340082221807 * GRP_MntGoldProds2
2284141   +          +    -0.21272258173805 * GRP_MntGoldProds3
2284142   +          +    -0.63881612523162 * GRP_MntGoldProds4
2284143   +          +     0.35743242018534 * GRP_MntMeatProducts2
2284144   +          +     0.39288166088974 * GRP_MntMeatProducts3
2284145   +          +     0.68623350973697 * GRP_MntMeatProducts4
2284146   +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
2284147   +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
2284148   +          +     0.38349558810511 * GRP_NumCatalogPurchases3
2284149   +          +     0.94944817324412 * GRP_NumCatalogPurchases4
2284150   +          +     0.87924710032772 * GRP_NumDistPurchases2
2284151   +          +     0.54658799433949 * GRP_NumDistPurchases3
2284152   +          +     1.85594529989185 * GRP_NumDistPurchases4
2284153   +          +    -0.66471569231333 * GRP_NumWebPurchases2
2284154   +          +    -0.59461900037355 * GRP_NumWebPurchases3
2284155   +          +     0.12806083458682 * GRP_NumWebPurchases4
2284156   +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
2284157   +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
2284158   +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
2284159   +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
2284160   +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
2284161   +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 +
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 +
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 *
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 *
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 +
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 +
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 +
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 +
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 +
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 *
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 *
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 *
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 *
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 *
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 +
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 *
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 +
-0.53617918353506 * GRP_Recency4 ;
2284162   +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
2284163   +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
2284164   +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
2284165   +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
2284166   +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
2284167   +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
2284168   +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
2284169   +          +    -0.50962348735329 * GRP_MntFishProducts3
2284170   +          +    -1.75841654964734 * GRP_MntFishProducts4
2284171   +          +     2.14839745385174 * GRP_MntGoldProds2
2284172   +          +      2.4716387157729 * GRP_MntGoldProds3
2284173   +          +     0.61286996367418 * GRP_MntGoldProds4
2284174   +          +     1.45427097683349 * GRP_MntMeatProducts2
2284175   +          +    -0.34990206215878 * GRP_MntMeatProducts3
2284176   +          +     2.25284175811484 * GRP_MntMeatProducts4
2284177   +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
2284178   +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
2284179   +          +     1.02272173939472 * GRP_NumCatalogPurchases3
2284180   +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
2284181   +          +    -0.44080685652484 * GRP_NumDistPurchases2
2284182   +          +     2.40613428385819 * GRP_NumDistPurchases3
2284183   +          +     0.26317801067025 * GRP_NumDistPurchases4
2284184   +          +     2.34961138802546 * GRP_NumWebPurchases2
2284185   +          +     2.35826990005342 * GRP_NumWebPurchases3
2284186   +          +     0.18496434892584 * GRP_NumWebPurchases4
2284187   +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
2284188   +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
2284189   +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
2284190   +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
2284191   +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
2284192   +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 +
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 +
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 *
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 *
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 +
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 *
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 +
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 +
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 +
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 +
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 +
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 *
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 +
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 *
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
2284193   +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
2284194   +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
2284195   +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
2284196   +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
2284197   +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
2284198   +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
2284199   +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
2284200   +          +     -2.3817205567109 * GRP_MntFishProducts3
2284201   +          +      1.4356293091772 * GRP_MntFishProducts4
2284202   +          +    -1.03209023546079 * GRP_MntGoldProds2
2284203   +          +     1.93949728331263 * GRP_MntGoldProds3
2284204   +          +     0.44849194130528 * GRP_MntGoldProds4
2284205   +          +     1.34973896956794 * GRP_MntMeatProducts2
2284206   +          +     1.40989126474294 * GRP_MntMeatProducts3
2284207   +          +     0.74435387703611 * GRP_MntMeatProducts4
2284208   +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
2284209   +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
2284210   +          +     1.65449574071289 * GRP_NumCatalogPurchases3
2284211   +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
2284212   +          +    -0.76749528874396 * GRP_NumDistPurchases2
2284213   +          +     1.83370965910825 * GRP_NumDistPurchases3
2284214   +          +    -0.73709156569506 * GRP_NumDistPurchases4
2284215   +          +     0.09215124428658 * GRP_NumWebPurchases2
2284216   +          +      1.0403096068891 * GRP_NumWebPurchases3
2284217   +          +     0.59317560741224 * GRP_NumWebPurchases4
2284218   +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
2284219   +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
2284220   +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
2284221   +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
2284222   +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
2284223   +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 +
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 +
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 *
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 *
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 +
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 +
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 *
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 +
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 +
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 +
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 +
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 +
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 *
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 +
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 *
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
2284224   +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
2284225   +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
2284226   +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
2284227   +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
2284228   +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
2284229   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2284230   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2284231   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2284232   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2284233   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2284234   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2284235   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2284236   +END;
MPRINT(EM_DIAGRAM):   END;
2284237   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284238   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2284239   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2284240   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2284241   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2284242   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2284243   +END;
MPRINT(EM_DIAGRAM):   END;
2284244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284245   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2284246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284247   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284248   +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
2284249   +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
2284250   +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 +
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
2284251   +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
2284252   +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
2284253   +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 +
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
2284254   +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
2284255   +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
2284256   +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 +
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
2284257   +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
2284258   +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
2284259   +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 +
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
2284260   +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
2284261   +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
2284262   +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 +
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
2284263   +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
2284264   +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
2284265   +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 *
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
2284266   +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
2284267   +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
2284268   +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
2284269   +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
2284270   +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
2284271   +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
2284272   +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
2284273   +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
2284274   +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 *
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
2284275   +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
2284276   +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
2284277   +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 *
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
2284278   +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
2284279   +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
2284280   +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
2284281   +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
2284282   +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
2284283   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2284284   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2284285   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2284286   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2284287   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2284288   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2284289   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2284290   +END;
MPRINT(EM_DIAGRAM):   END;
2284291   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284292   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2284293   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2284294   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2284295   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2284296   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2284297   +END;
MPRINT(EM_DIAGRAM):   END;
2284298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284299   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2284300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284301   +
2284302   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2284303   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2284304   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2284305   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2284306   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2284307   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284308   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2284309   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2284310   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2284311   +end;
MPRINT(EM_DIAGRAM):   end;
2284312   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284313   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2284314   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2284315   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2284316   +   end;
MPRINT(EM_DIAGRAM):   end;
2284317   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2284318   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2284319   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2284320   +   end;
MPRINT(EM_DIAGRAM):   end;
2284321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284322   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2284323   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2284324   +   end;
MPRINT(EM_DIAGRAM):   end;
2284325   +end;
MPRINT(EM_DIAGRAM):   end;
2284326   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284327   +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
2284328   +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
2284329   +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 +
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
2284330   +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
2284331   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2284332   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2284333   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2284334   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2284335   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2284336   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2284337   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2284338   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2284339   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2284340   +END;
MPRINT(EM_DIAGRAM):   END;
2284341   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284342   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2284343   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2284344   +END;
MPRINT(EM_DIAGRAM):   END;
2284345   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2284346   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2284347   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2284348   +END;
MPRINT(EM_DIAGRAM):   END;
2284349   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2284350   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2284351   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2284352   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2284353   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2284354   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2284355   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2284356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284357   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2284358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284359   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2284360   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2284361   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2284362   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2284363   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2284364   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2284365   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2284366   +END;
MPRINT(EM_DIAGRAM):   END;
2284367   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2284368   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2284369   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2284370   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2284371    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL20_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2284372    quit;
2284373    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2284374    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2284375    * AutoNeural20: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Computing metadata for TRAIN data;
2284376    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural20_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural20_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural20_TRAIN out=WORK.M0FXWB9W
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FXWB9W;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FXWB9W(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FXWB9W;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FXWB9W;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2T7S729 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BGKTG6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   set WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural20";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2284688    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2284689    set EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMINFO;
2284690    where DATA='AutoNeural20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural20' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
2284691    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
      WHERE (DATA='AutoNeural20') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284692    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMINFO;
2284693    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2284694    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2284695    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2284699    run;
2284700    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMINFO;
2284701    set EMWS8.AutoNeural20_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMINFO WORK.MODELTEMP_INFO;
2284702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284703    proc sort data = EMWS8.AutoNeural20_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural20_EMINFO NOTHREADS;
2284704    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2284705    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284706    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2284707    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2284708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284709    proc sort data = EMWS8.AutoNeural20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2284710    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2284711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284712    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMINFO;
2284713    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2284714    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2284715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284716    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2284717    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2284718    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2284719    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.AUTONEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL20_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.16 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                10.16 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0DNVOBL
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0DNVOBL new;
MPRINT(EM_DIAGRAM):   run;
2284743    proc sort data=EMWS8.AutoNeural20_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural20_OUTFIT nodupkey;
2284744    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
2284745    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL20_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284746    data EMWS8.AutoNeural20_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMOUTFIT(rename=(_NAME_=TARGET));
2284747    set EMWS8.AutoNeural20_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT(where=(_NAME_ eq 'OVERALL'));
2284748    label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
2284749    if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
2284750    drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
2284751    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL20_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284752    data EMWS8.AutoNeural20_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMOUTFIT;
2284753    set EMWS8.AutoNeural20_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMOUTFIT;
2284754    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2284755    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2284755  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2284756    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2284757    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284758    proc sort data=EMWS8.AutoNeural20_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural20_EMREPORTFIT nothreads;
2284759    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2284760    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL20_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2284761    %let _EMwarndup = 0;
2284762    %let _EMtargetdup =;
2284763    %let _EMASEtargetdup =;
2284764    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2284765    set EMWS8.AutoNeural20_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMOUTFIT;
2284766    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2284767    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2284768    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2284769    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2284770    end;
MPRINT(EM_DIAGRAM):   end;
2284771    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284772    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
2284773    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set EMWS8.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 50 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284775    proc sort data=EMWS8.AutoNeural20_VariableSet out=WORK.SUBSETVARSET(keep=NAME
2284775  ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural20_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2284776    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL20_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284778    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2284779    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2284780    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284781    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 48 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 50 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284782    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2284783    set EMWS8.AutoNeural20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_CMeta_TRAIN;
2284784    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2284784  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2284785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL20_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284786    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2284787    set EMWS8.AutoNeural20_TRAIN(keep=
2284788    F_DepVar
2284789    I_DepVar
2284790    P_DepVar0
2284791    P_DepVar1
2284792    R_DepVar0
2284793    R_DepVar1
2284794    U_DepVar
2284795    _WARN_
2284796    DepVar
2284797    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2284798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL20_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural20_2BHEL3D nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural20_2BHEL3D;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_2BHEL3D(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_2BHEL3D;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_2BHEL3D;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 1.9173738E-7 OVLMAX 0.9999987705 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2289064    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2289065    set EMWS8.AutoNeural20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_CMeta_TRAIN;
2289066    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2289066  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2289067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL20_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289068    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2289069    set EMWS8.AutoNeural20_VALIDATE(keep=
2289070    F_DepVar
2289071    I_DepVar
2289072    P_DepVar0
2289073    P_DepVar1
2289074    R_DepVar0
2289075    R_DepVar1
2289076    U_DepVar
2289077    _WARN_
2289078    DepVar
2289079    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2289080    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL20_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL20_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural20_30Q_JEL nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural20_30Q_JEL;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_30Q_JEL(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMCLASSIFICATION WORK.AutoNeural20_30Q_JEL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_30Q_JEL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 2.5239309E-7 OVLMAX 0.9999945269 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2293355    %let _cn = %sysfunc(getoption(CENTER));
2293356    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2293357    proc print data=EMWS8.AutoNeural20_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMREPORTFIT noobs label;
2293358    var STAT LABEL TRAIN
2293359    VALIDATE
2293360    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2293361    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2293362    title9 ' ';
The SAS System
 
MPRINT(EM_DIAGRAM):   title9 ' ';
2293363    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2293364    run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL20_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2094.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2293365    title10;
MPRINT(EM_DIAGRAM):   title10;
2293366    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2293367    proc sort data=EMWS8.AutoNeural20_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural20_EMCLASSIFICATION nothreads;
2293368    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2293369    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL20_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL20_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2293370    %let _cn = %sysfunc(getoption(CENTER));
2293371    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2293372    proc print data=EMWS8.AutoNeural20_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMCLASSIFICATION noobs label;
2293373    var from into pct_row pct_col count percent
2293374    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2293375    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2293376    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2293377    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2293378    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2293379    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2293380    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2293381    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2293382    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2293383    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2293384    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2293385    run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL20_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2095.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2293386    title9;
MPRINT(EM_DIAGRAM):   title9;
2293387    title10;
MPRINT(EM_DIAGRAM):   title10;
2293388    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2293389    %let _cn = %sysfunc(getoption(CENTER));
2293390    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2293391    data EMWS8.AutoNeural20_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMEVENTREPORT;
2293392    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2293392  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2293393    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2293393  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2293393  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2293393  ! FALSEEVENT
2293394    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2293394  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2293394  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2293395       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2293396    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2293397    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2293398    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2293399    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2293400    set EMWS8.AutoNeural20_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMEVENTREPORT;
2293401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL20_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL20_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2293402    proc print data=EMWS8.AutoNeural20_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMEVENTREPORT noobs label;
2293403    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2293404    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2293405    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2293406    run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL20_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 2096.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2293407    title10;
MPRINT(EM_DIAGRAM):   title10;
2293408    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2293409    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2293410    modify AutoNeural20_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural20_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2293411    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2293412    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2293412  ! ;
MPRINT(EM_DIAGRAM):   run;
2293413    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL20_EMRANK.DATA.
2293414    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.27 seconds
      cpu time            0.26 seconds
 
 
2293415    %let _cn = %sysfunc(getoption(CENTER));
2293416    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2293417    proc print data=EMWS8.AutoNeural20_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMRANK label noobs;
2293418    var
2293419    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2293420    by
2293421    notsorted DATAROLE
2293422    notsorted TARGET
2293423    notsorted TARGETLABEL
2293424    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2293425    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2293426    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2293427    run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL20_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2097.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2293428    title10;
MPRINT(EM_DIAGRAM):   title10;
2293429    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2293430    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2293431    modify AutoNeural20_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural20_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2293432    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2293432  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2293433    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2293433  ! ;
MPRINT(EM_DIAGRAM):   run;
2293434    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL20_EMSCOREDIST.DATA.
2293435    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
