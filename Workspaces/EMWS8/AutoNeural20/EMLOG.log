*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                16.57 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.54 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.54 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0SGOG7P
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0SGOG7P new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.54 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.54 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
1148966    proc freq data=EMWS8.AutoNeural20_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural20_VariableSet noprint;
1148967    table ROLE*LEVEL/out=WORK.AutoNeural20META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural20META;
1148968    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL20_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL20META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1148969    proc print data=WORK.AutoNeural20META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural20META label noobs;
1148970    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1148971    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1148971  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1148971  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1148972    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1148973    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1148974    run;
 
NOTE: There were 6 observations read from the data set WORK.AUTONEURAL20META.
NOTE: The PROCEDURE PRINT printed page 891.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1148975    title10;
MPRINT(EM_DIAGRAM):   title10;
1148976    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural20_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural20_DepVar_DD
out=EMWS8.AutoNeural20_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
1149023    data WORK.AutoNeural20_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural20_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1149024    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1149025    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1149025  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1149025  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1149026       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1149026  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1149026  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1149027    set EMWS8.AUTONEURAL20_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL20_DEPVAR_DM( where=(_TYPE_="TARGET"));
1149028    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1149029    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1149030    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1149031    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1149032    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1149033    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1149034    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1149035    end;
MPRINT(EM_DIAGRAM):   end;
1149036    output;
MPRINT(EM_DIAGRAM):   output;
1149037    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL20_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1149038    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1149039    proc print data=WORK.AutoNeural20_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural20_EVENT noobs label;
1149040    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1149041    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1149042    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1149043    run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL20_EVENT.
NOTE: The PROCEDURE PRINT printed page 892.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149044    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1149045    proc print data = EMWS8.AutoNeural20_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural20_DepVar_DM noobs label;
1149046    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1149047    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1149048    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1149048  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1149048  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1149049    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1149050    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1149051    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL20_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 893.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149052    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1O8O6GH;
MPRINT(EM_DIAGRAM):   set WORK.M1O8O6GH;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
1149061    data WORK.M1O8O6GH;
MPRINT(EM_DIAGRAM):    data WORK.M1O8O6GH;
1149062    set WORK.M1O8O6GH end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M1O8O6GH end=eof;
1149063    output;
MPRINT(EM_DIAGRAM):   output;
1149064    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
1149065    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
1149066    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
1149067    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
1149068    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
1149069    output;
MPRINT(EM_DIAGRAM):   output;
1149070    end;
MPRINT(EM_DIAGRAM):   end;
1149071    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M1O8O6GH.
NOTE: The data set WORK.M1O8O6GH has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL20_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
1149072    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1149073    * AutoNeural20: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Create decision matrix;
1149074    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149075    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
1149076      length   DepVar                           $  32
1149077               COUNT                                8
1149078               DATAPRIOR                            8
1149079               TRAINPRIOR                           8
1149080               DECPRIOR                             8
1149081               DECISION1                            8
1149082               DECISION2                            8
1149083               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
1149084
1149085      label    COUNT="Level Counts"
1149086               DATAPRIOR="Data Proportions"
1149087               TRAINPRIOR="Training Proportions"
1149088               DECPRIOR="Decision Priors"
1149089               DECISION1="1"
1149090               DECISION2="0"
1149091               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
1149092      format   COUNT 10.
1149093               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
1149094    DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
1149094  ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
1149095    output;
MPRINT(EM_DIAGRAM):   output;
1149096    DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
1149096  ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
1149097    output;
MPRINT(EM_DIAGRAM):   output;
1149098    ;
MPRINT(EM_DIAGRAM):   ;
1149099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149100    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1149101    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
1149102    label DECISION1= '1';
1149103    label DECISION2= '0';
1149104    run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
1149105    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1149106    data EM_AutoNeural20;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural20;
1149107    set EMWS8.BINNING_TRAIN(keep=
1149108    DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1149109    GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1149110    GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1149111    GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep= DepVar GRP_AcceptedCmp5
GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds
GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases
GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq
GRP_Recency Year_Birth );
1149112    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149113    *------------------------------------------------------------* ;
1149114    * AutoNeural20: DMDBClass Macro ;
1149115    *------------------------------------------------------------* ;
1149116    %macro DMDBClass;
1149117        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
1149118       GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
1149119       GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
1149120       GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
1149121       GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1149122    %mend DMDBClass;
1149123    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149124    * AutoNeural20: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: DMDBVar Macro ;
1149125    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149126    %macro DMDBVar;
1149127        Year_Birth
1149128    %mend DMDBVar;
1149129    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149130    * AutoNeural20: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Create DMDB;
1149131    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149132    proc dmdb batch data=WORK.EM_AutoNeural20
1149133    dmdbcat=WORK.AutoNeural20_DMDB
1149134    maxlevel = 513
1149135    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1149136    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1149137    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1149138    target
1149139    DepVar
1149140    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1149141    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL20.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1149142    quit;
1149143    *--- end code ---*;
 
1149144    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1149145    * AutoNeural20: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Interval Inputs Macro ;
1149146    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149147    %macro INTINPUTS;
1149148        Year_Birth
1149149    %mend INTINPUTS;
1149150    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149151    * AutoNeural20: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Binary Inputs Macro ;
1149152    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149153    %macro BININPUTS;
1149154
1149155    %mend BININPUTS;
1149156    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149157    * AutoNeural20: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Nominal Inputs Macro ;
1149158    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149159    %macro NOMINPUTS;
1149160        GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1149161       GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1149162       GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1149163       GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
1149164    %mend NOMINPUTS;
1149165    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149166    * AutoNeural20: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Ordinal Inputs Macro ;
1149167    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1149168    %macro ORDINPUTS;
1149169
1149170    %mend ORDINPUTS;
1149171    * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
1149172    ;
MPRINT(EM_DIAGRAM):   ;
1149173    options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
1149174    options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
1149175    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1149176    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1149177    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
1149178    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149179    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
1149179  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
1149180    *;
 
1149181    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149182    * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
1149183    ;
MPRINT(EM_DIAGRAM):   ;
1149184    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149185    *;
MPRINT(EM_DIAGRAM):   *;
 
1149186    *;
MPRINT(EM_DIAGRAM):    *;
1149187    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1149188    validdata=EMWS8.BINNING_VALIDATE
1149189    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1149190    *;
MPRINT(EM_DIAGRAM):   *;
1149191    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1149192    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1149193    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1149194    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1149195    target DepVar / level=NOMINAL id=DepVar
1149196    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1149197    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149198    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1149199    ;
MPRINT(EM_DIAGRAM):   ;
1149200    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149201    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1149202    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1149203    *;
MPRINT(EM_DIAGRAM):   *;
1149204    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1149205    *;
MPRINT(EM_DIAGRAM):   *;
1149206    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149207    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1149207  ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 144 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1149208    train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1149209    tech = Default;
1149210    ;
1149211    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.56 seconds
      cpu time            1.52 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.57 seconds
      cpu time            1.54 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149212    *;
1149213    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1149214    var _iter_ _aic_ _averr_ _misc_
1149215    _vaverr_ _vmisc_
1149216    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 894.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149218    *------------------------------------------------------------*;
1149219    * Extract best iteration;
1149220    ;
1149221    *------------------------------------------------------------*;
1149222    %global _iter;
1149223    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1149224    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1149225    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1149226    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1149227    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1149228    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1149229    end;
MPRINT(EM_DIAGRAM):   end;
1149230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149231    *;
 
1149232    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1149233    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1149234    if _ITER_ eq 49 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 then do;
1149235    output;
MPRINT(EM_DIAGRAM):   output;
1149236    stop;
MPRINT(EM_DIAGRAM):   stop;
1149237    end;
MPRINT(EM_DIAGRAM):   end;
1149238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149239    *;
1149240    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149241    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1149242    if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
1149243    output;
MPRINT(EM_DIAGRAM):   output;
1149244    stop;
MPRINT(EM_DIAGRAM):   stop;
1149245    end;
MPRINT(EM_DIAGRAM):   end;
1149246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149247    *;
MPRINT(EM_DIAGRAM):    *;
1149248    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149249    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1149249  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1149250    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
1149251    var _iter_ _aic_ _averr_ _misc_
1149252    _vaverr_ _vmisc_
1149253    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 895.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149255    title9;
MPRINT(EM_DIAGRAM):   title9;
1149256    title10;
MPRINT(EM_DIAGRAM):   title10;
1149257    %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
1149258    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149259    length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
1149260    label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
1149260  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
1149261    label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
1149261  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
1149262    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
1149262  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
1149263    label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
1149263  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
1149264    _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
1149265    _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
1149266    _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
1149267    set
1149268    _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
1149269    ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
1149270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149271    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149272    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149273    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149275    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149276    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149277    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149279    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1149280    ;
MPRINT(EM_DIAGRAM):   ;
1149281    data WORK.SAVEDS_AUTONEUR_3CNX1IX;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3CNX1IX;
1149282    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
1149283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3CNX1IX has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149284    data EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_BESTDS;
1149285    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
1149286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_BESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149287    data WORK.BFITDS_AUTONEUR_3CNX1IX;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3CNX1IX;
1149288    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149289    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3CNX1IX has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149290    * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
1149291    ;
MPRINT(EM_DIAGRAM):   ;
1149292    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149293    set EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY;
1149294    _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
1149295    _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
1149296    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149297    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1149298    ;
MPRINT(EM_DIAGRAM):   ;
1149299    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149300    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149301    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1149302    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1149303    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1149304    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1149305    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1149306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149307    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149308    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1149309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.38 seconds
      cpu time            0.00 seconds
 
 
1149310    *;
MPRINT(EM_DIAGRAM):    *;
1149311    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1149312    validdata=EMWS8.BINNING_VALIDATE
1149313    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1149314    *;
MPRINT(EM_DIAGRAM):   *;
1149315    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1149316    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1149317    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1149318    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1149319    target DepVar / level=NOMINAL id=DepVar
1149320    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1149321    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149322    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1149323    ;
MPRINT(EM_DIAGRAM):   ;
1149324    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149325    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
1149326    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1149327    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1149328    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1149329    *;
MPRINT(EM_DIAGRAM):   *;
1149330    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1149331    *;
MPRINT(EM_DIAGRAM):   *;
1149332    initial
1149333    ;
MPRINT(EM_DIAGRAM):   initial ;
1149334    *;
MPRINT(EM_DIAGRAM):   *;
1149335    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149336    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1149336  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 666 variables.
MPRINT(EM_DIAGRAM):   *;
1149337    prelim 20 outest=_anpre pretime=44 preiter=25
1149338    tech = Default
1149339    ;
1149340    *;
1149341    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149342    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1149342  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=899
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 666 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1149343    train estiter=1 outest=_anest outfit=_anfit maxtime=899 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1149344    tech = Default;
1149345    ;
1149346    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           27.70 seconds
      cpu time            27.47 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 896.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           27.70 seconds
      cpu time            27.47 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149347    *;
1149348    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1149349    var _iter_ _aic_ _averr_ _misc_
1149350    _vaverr_ _vmisc_
1149351    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 897.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149353    *------------------------------------------------------------*;
1149354    * Extract best iteration;
1149355    ;
1149356    *------------------------------------------------------------*;
1149357    %global _iter;
1149358    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1149359    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1149360    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1149361    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1149362    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1149363    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1149364    end;
MPRINT(EM_DIAGRAM):   end;
1149365    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149366    *;
 
1149367    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1149368    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1149369    if _ITER_ eq 10 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 then do;
1149370    output;
MPRINT(EM_DIAGRAM):   output;
1149371    stop;
MPRINT(EM_DIAGRAM):   stop;
1149372    end;
MPRINT(EM_DIAGRAM):   end;
1149373    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 666
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149374    *;
1149375    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149376    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1149377    if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
1149378    output;
MPRINT(EM_DIAGRAM):   output;
1149379    stop;
MPRINT(EM_DIAGRAM):   stop;
1149380    end;
MPRINT(EM_DIAGRAM):   end;
1149381    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149382    *;
MPRINT(EM_DIAGRAM):    *;
1149383    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149384    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1149384  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1149385    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
1149386    var _iter_ _aic_ _averr_ _misc_
1149387    _vaverr_ _vmisc_
1149388    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 898.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149390    title9;
MPRINT(EM_DIAGRAM):   title9;
1149391    title10;
MPRINT(EM_DIAGRAM):   title10;
1149392    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149393    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149394    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149395    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149396    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149397    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149398    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149400    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1149401    ;
MPRINT(EM_DIAGRAM):   ;
1149402    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149403    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149404    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1149405    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1149406    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1149407    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1149408    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1149409    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149410    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149411    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1149412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149413    *;
MPRINT(EM_DIAGRAM):    *;
1149414    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1149415    validdata=EMWS8.BINNING_VALIDATE
1149416    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1149417    *;
MPRINT(EM_DIAGRAM):   *;
1149418    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1149419    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1149420    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1149421    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1149422    target DepVar / level=NOMINAL id=DepVar
1149423    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1149424    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149425    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1149426    ;
MPRINT(EM_DIAGRAM):   ;
1149427    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149428    Hidden 5 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SINE;
1149429    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1149430    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1149431    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1149432    *;
MPRINT(EM_DIAGRAM):   *;
1149433    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1149434    *;
MPRINT(EM_DIAGRAM):   *;
1149435    initial
1149436    ;
MPRINT(EM_DIAGRAM):   initial ;
1149437    *;
MPRINT(EM_DIAGRAM):   *;
1149438    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149439    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1149439  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 666 variables.
MPRINT(EM_DIAGRAM):   *;
1149440    prelim 20 outest=_anpre pretime=44 preiter=25
1149441    tech = Default
1149442    ;
1149443    *;
1149444    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149445    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1149445  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 666 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1149446    train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1149447    tech = Default;
1149448    ;
1149449    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           23.76 seconds
      cpu time            23.58 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 899.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           23.77 seconds
      cpu time            23.58 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149450    *;
1149451    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1149452    var _iter_ _aic_ _averr_ _misc_
1149453    _vaverr_ _vmisc_
1149454    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 900.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149456    *------------------------------------------------------------*;
1149457    * Extract best iteration;
1149458    ;
1149459    *------------------------------------------------------------*;
1149460    %global _iter;
1149461    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1149462    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1149463    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1149464    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1149465    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1149466    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1149467    end;
MPRINT(EM_DIAGRAM):   end;
1149468    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149469    *;
 
1149470    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1149471    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1149472    if _ITER_ eq 8 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 then do;
1149473    output;
MPRINT(EM_DIAGRAM):   output;
1149474    stop;
MPRINT(EM_DIAGRAM):   stop;
1149475    end;
MPRINT(EM_DIAGRAM):   end;
1149476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 666
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149477    *;
1149478    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149479    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1149480    if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
1149481    output;
MPRINT(EM_DIAGRAM):   output;
1149482    stop;
MPRINT(EM_DIAGRAM):   stop;
1149483    end;
MPRINT(EM_DIAGRAM):   end;
1149484    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149485    *;
MPRINT(EM_DIAGRAM):    *;
1149486    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149487    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1149487  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1149488    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
1149489    var _iter_ _aic_ _averr_ _misc_
1149490    _vaverr_ _vmisc_
1149491    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149492    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 901.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149493    title9;
MPRINT(EM_DIAGRAM):   title9;
1149494    title10;
MPRINT(EM_DIAGRAM):   title10;
1149495    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149496    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149497    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149499    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149500    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149501    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149503    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1149504    ;
MPRINT(EM_DIAGRAM):   ;
1149505    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149506    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149507    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1149508    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1149509    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1149510    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1149511    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1149512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149513    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149514    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1149515    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149516    *;
MPRINT(EM_DIAGRAM):    *;
1149517    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1149518    validdata=EMWS8.BINNING_VALIDATE
1149519    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1149520    *;
MPRINT(EM_DIAGRAM):   *;
1149521    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1149522    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1149523    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1149524    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1149525    target DepVar / level=NOMINAL id=DepVar
1149526    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1149527    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149528    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1149529    ;
MPRINT(EM_DIAGRAM):   ;
1149530    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149531    Hidden 5 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SOFTMAX;
1149532    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1149533    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1149534    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1149535    *;
MPRINT(EM_DIAGRAM):   *;
1149536    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1149537    *;
MPRINT(EM_DIAGRAM):   *;
1149538    initial
1149539    ;
MPRINT(EM_DIAGRAM):   initial ;
1149540    *;
MPRINT(EM_DIAGRAM):   *;
1149541    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149542    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1149542  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 537 variables.
MPRINT(EM_DIAGRAM):   *;
1149543    prelim 20 outest=_anpre pretime=44 preiter=25
1149544    tech = Default
1149545    ;
1149546    *;
1149547    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149548    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1149548  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=886
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 537 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1149549    train estiter=1 outest=_anest outfit=_anfit maxtime=886 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1149550    tech = Default;
1149551    ;
1149552    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           24.42 seconds
      cpu time            24.08 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 902.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           24.43 seconds
      cpu time            24.08 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149553    *;
1149554    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1149555    var _iter_ _aic_ _averr_ _misc_
1149556    _vaverr_ _vmisc_
1149557    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149558    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 903.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149559    *------------------------------------------------------------*;
1149560    * Extract best iteration;
1149561    ;
1149562    *------------------------------------------------------------*;
1149563    %global _iter;
1149564    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1149565    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1149566    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1149567    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1149568    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1149569    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1149570    end;
MPRINT(EM_DIAGRAM):   end;
1149571    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149572    *;
 
1149573    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1149574    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1149575    if _ITER_ eq 40 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 40 then do;
1149576    output;
MPRINT(EM_DIAGRAM):   output;
1149577    stop;
MPRINT(EM_DIAGRAM):   stop;
1149578    end;
MPRINT(EM_DIAGRAM):   end;
1149579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 537
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149580    *;
1149581    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149582    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1149583    if _ITER_ eq 40 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 40 and _NAME_ eq "OVERALL" then do;
1149584    output;
MPRINT(EM_DIAGRAM):   output;
1149585    stop;
MPRINT(EM_DIAGRAM):   stop;
1149586    end;
MPRINT(EM_DIAGRAM):   end;
1149587    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 82 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149588    *;
MPRINT(EM_DIAGRAM):    *;
1149589    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149590    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1149590  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1149591    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
1149592    var _iter_ _aic_ _averr_ _misc_
1149593    _vaverr_ _vmisc_
1149594    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149595    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 904.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149596    title9;
MPRINT(EM_DIAGRAM):   title9;
1149597    title10;
MPRINT(EM_DIAGRAM):   title10;
1149598    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149599    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149600    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149602    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149603    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149604    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149606    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1149607    ;
MPRINT(EM_DIAGRAM):   ;
1149608    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149609    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149610    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1149611    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1149612    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1149613    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1149614    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1149615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149616    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149617    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1149618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149619    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1149620    ;
MPRINT(EM_DIAGRAM):   ;
1149621    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
1149622    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
1149623    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149624    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149625    set WORK.BFITDS_AUTONEUR_3CNX1IX;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3CNX1IX;
1149626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3CNX1IX.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149627    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1149628    ;
MPRINT(EM_DIAGRAM):   ;
1149629    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149630    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149631    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1149632    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1149633    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1149634    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1149635    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1149636    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149637    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149638    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1149639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149640    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149641    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149642    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149644    *;
MPRINT(EM_DIAGRAM):    *;
1149645    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1149646    validdata=EMWS8.BINNING_VALIDATE
1149647    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1149648    *;
MPRINT(EM_DIAGRAM):   *;
1149649    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1149650    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1149651    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1149652    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1149653    target DepVar / level=NOMINAL id=DepVar
1149654    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1149655    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149656    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1149657    ;
MPRINT(EM_DIAGRAM):   ;
1149658    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149659    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1149660    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1149661    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149662    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1149663    ;
MPRINT(EM_DIAGRAM):   ;
1149664    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149665    Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
1149666    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1149667    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1149668    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1149669    *;
MPRINT(EM_DIAGRAM):   *;
1149670    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1149671    *;
MPRINT(EM_DIAGRAM):   *;
1149672    initial
1149673    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
1149674    ;
MPRINT(EM_DIAGRAM):   ;
1149675    *;
MPRINT(EM_DIAGRAM):   *;
1149676    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149677    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1149677  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
1149678    prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 794 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1149679    tech = Default
1149680    inest = EMWS8.AutoNeural20_ESTDS bylabel
1149681    ;
1149682    *;
1149683    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149684    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1149684  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=880
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 794 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1149685    train estiter=1 outest=_anest outfit=_anfit maxtime=880 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1149686    tech = Default;
1149687    ;
1149688    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           35.15 seconds
      cpu time            34.75 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 905.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           35.16 seconds
      cpu time            34.77 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149689    *;
1149690    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1149691    var _iter_ _aic_ _averr_ _misc_
1149692    _vaverr_ _vmisc_
1149693    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 906.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149695    *------------------------------------------------------------*;
1149696    * Extract best iteration;
1149697    ;
1149698    *------------------------------------------------------------*;
1149699    %global _iter;
1149700    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1149701    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1149702    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1149703    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1149704    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1149705    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1149706    end;
MPRINT(EM_DIAGRAM):   end;
1149707    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149708    *;
 
1149709    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1149710    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1149711    if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
1149712    output;
MPRINT(EM_DIAGRAM):   output;
1149713    stop;
MPRINT(EM_DIAGRAM):   stop;
1149714    end;
MPRINT(EM_DIAGRAM):   end;
1149715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 794
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149716    *;
1149717    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149718    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1149719    if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
1149720    output;
MPRINT(EM_DIAGRAM):   output;
1149721    stop;
MPRINT(EM_DIAGRAM):   stop;
1149722    end;
MPRINT(EM_DIAGRAM):   end;
1149723    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149724    *;
MPRINT(EM_DIAGRAM):    *;
1149725    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149726    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1149726  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1149727    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
1149728    var _iter_ _aic_ _averr_ _misc_
1149729    _vaverr_ _vmisc_
1149730    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 907.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149732    title9;
MPRINT(EM_DIAGRAM):   title9;
1149733    title10;
MPRINT(EM_DIAGRAM):   title10;
1149734    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149735    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149736    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149737    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149738    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149739    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149740    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149741    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149742    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1149743    ;
MPRINT(EM_DIAGRAM):   ;
1149744    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149745    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149746    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1149747    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1149748    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1149749    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1149750    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1149751    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149752    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149753    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1149754    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149755    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1149756    ;
MPRINT(EM_DIAGRAM):   ;
1149757    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
1149758    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
1149759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149760    *;
MPRINT(EM_DIAGRAM):    *;
1149761    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1149762    validdata=EMWS8.BINNING_VALIDATE
1149763    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1149764    *;
MPRINT(EM_DIAGRAM):   *;
1149765    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1149766    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1149767    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1149768    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1149769    target DepVar / level=NOMINAL id=DepVar
1149770    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1149771    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149772    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1149773    ;
MPRINT(EM_DIAGRAM):   ;
1149774    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149775    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1149776    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1149777    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149778    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1149779    ;
MPRINT(EM_DIAGRAM):   ;
1149780    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149781    Hidden 5 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SINE;
1149782    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1149783    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1149784    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1149785    *;
MPRINT(EM_DIAGRAM):   *;
1149786    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1149787    *;
MPRINT(EM_DIAGRAM):   *;
1149788    initial
1149789    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
1149790    ;
MPRINT(EM_DIAGRAM):   ;
1149791    *;
MPRINT(EM_DIAGRAM):   *;
1149792    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149793    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1149793  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
1149794    prelim 20 outest=_anpre pretime=43 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=43 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 794 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1149795    tech = Default
1149796    inest = EMWS8.AutoNeural20_ESTDS bylabel
1149797    ;
1149798    *;
1149799    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149800    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1149800  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=871
maxiter=50 tech = Default;
NOTE: Convergence criterion (ABSCONV=0.0020529663) satisfied.
NOTE: The data set WORK._ANEST has 51 observations and 794 variables.
NOTE: The data set WORK._ANFIT has 100 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1149801    train estiter=1 outest=_anest outfit=_anfit maxtime=871 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1149802    tech = Default;
1149803    ;
1149804    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           33.10 seconds
      cpu time            32.88 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 908.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           33.11 seconds
      cpu time            32.90 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149805    *;
1149806    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1149807    var _iter_ _aic_ _averr_ _misc_
1149808    _vaverr_ _vmisc_
1149809    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 909.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149811    *------------------------------------------------------------*;
1149812    * Extract best iteration;
1149813    ;
1149814    *------------------------------------------------------------*;
1149815    %global _iter;
1149816    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1149817    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1149818    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1149819    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1149820    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1149821    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1149822    end;
MPRINT(EM_DIAGRAM):   end;
1149823    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149824    *;
 
1149825    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1149826    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1149827    if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
1149828    output;
MPRINT(EM_DIAGRAM):   output;
1149829    stop;
MPRINT(EM_DIAGRAM):   stop;
1149830    end;
MPRINT(EM_DIAGRAM):   end;
1149831    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 794
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149832    *;
1149833    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149834    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1149835    if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
1149836    output;
MPRINT(EM_DIAGRAM):   output;
1149837    stop;
MPRINT(EM_DIAGRAM):   stop;
1149838    end;
MPRINT(EM_DIAGRAM):   end;
1149839    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149840    *;
MPRINT(EM_DIAGRAM):    *;
1149841    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149842    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1149842  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1149843    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
1149844    var _iter_ _aic_ _averr_ _misc_
1149845    _vaverr_ _vmisc_
1149846    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 910.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149848    title9;
MPRINT(EM_DIAGRAM):   title9;
1149849    title10;
MPRINT(EM_DIAGRAM):   title10;
1149850    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149851    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149852    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149854    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149855    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149856    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149858    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1149859    ;
MPRINT(EM_DIAGRAM):   ;
1149860    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149861    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149862    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1149863    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1149864    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1149865    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1149866    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1149867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149868    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149869    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1149870    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149871    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1149872    ;
MPRINT(EM_DIAGRAM):   ;
1149873    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_ESTDS;
1149874    set EMWS8.AutoNeural20_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_BESTDS;
1149875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149876    *;
MPRINT(EM_DIAGRAM):    *;
1149877    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1149878    validdata=EMWS8.BINNING_VALIDATE
1149879    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1149880    *;
MPRINT(EM_DIAGRAM):   *;
1149881    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1149882    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1149883    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1149884    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1149885    target DepVar / level=NOMINAL id=DepVar
1149886    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1149887    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149888    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1149889    ;
MPRINT(EM_DIAGRAM):   ;
1149890    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149891    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1149892    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1149893    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149894    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1149895    ;
MPRINT(EM_DIAGRAM):   ;
1149896    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149897    Hidden 5 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SOFTMAX;
1149898    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1149899    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1149900    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1149901    *;
MPRINT(EM_DIAGRAM):   *;
1149902    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1149903    *;
MPRINT(EM_DIAGRAM):   *;
1149904    initial
1149905    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
1149906    ;
MPRINT(EM_DIAGRAM):   ;
1149907    *;
MPRINT(EM_DIAGRAM):   *;
1149908    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149909    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1149909  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
1149910    prelim 20 outest=_anpre pretime=43 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=43 preiter=25 tech =
Default inest = EMWS8.AutoNeural20_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 665 variables.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1149911    tech = Default
1149912    inest = EMWS8.AutoNeural20_ESTDS bylabel
1149913    ;
1149914    *;
1149915    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149916    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1149916  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=863
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 665 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1149917    train estiter=1 outest=_anest outfit=_anfit maxtime=863 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1149918    tech = Default;
1149919    ;
1149920    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           33.45 seconds
      cpu time            33.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 911.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           33.45 seconds
      cpu time            33.29 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149921    *;
1149922    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1149923    var _iter_ _aic_ _averr_ _misc_
1149924    _vaverr_ _vmisc_
1149925    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 912.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1149927    *------------------------------------------------------------*;
1149928    * Extract best iteration;
1149929    ;
1149930    *------------------------------------------------------------*;
1149931    %global _iter;
1149932    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1149933    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1149934    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1149935    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1149936    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1149937    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1149938    end;
MPRINT(EM_DIAGRAM):   end;
1149939    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149940    *;
 
1149941    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1149942    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1149943    if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
1149944    output;
MPRINT(EM_DIAGRAM):   output;
1149945    stop;
MPRINT(EM_DIAGRAM):   stop;
1149946    end;
MPRINT(EM_DIAGRAM):   end;
1149947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 665
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1149948    *;
1149949    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149950    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1149951    if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
1149952    output;
MPRINT(EM_DIAGRAM):   output;
1149953    stop;
MPRINT(EM_DIAGRAM):   stop;
1149954    end;
MPRINT(EM_DIAGRAM):   end;
1149955    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1149956    *;
MPRINT(EM_DIAGRAM):    *;
1149957    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1149958    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1149958  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1149959    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
1149960    var _iter_ _aic_ _averr_ _misc_
1149961    _vaverr_ _vmisc_
1149962    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1149963    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 913.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149964    title9;
MPRINT(EM_DIAGRAM):   title9;
1149965    title10;
MPRINT(EM_DIAGRAM):   title10;
1149966    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149967    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149968    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149969    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149970    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1149971    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149972    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1149973    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149974    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1149975    ;
MPRINT(EM_DIAGRAM):   ;
1149976    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1149977    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1149978    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1149979    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1149980    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1149981    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1149982    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1149983    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149984    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1149985    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1149986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149987    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1149988    set WORK.SAVEDS_AUTONEUR_3CNX1IX;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_3CNX1IX;
1149989    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_3CNX1IX.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1149990    *;
MPRINT(EM_DIAGRAM):    *;
1149991    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1149992    validdata=EMWS8.BINNING_VALIDATE
1149993    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1149994    *;
MPRINT(EM_DIAGRAM):   *;
1149995    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1149996    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1149997    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1149998    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1149999    target DepVar / level=NOMINAL id=DepVar
1150000    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1150001    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1150002    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1150003    ;
MPRINT(EM_DIAGRAM):   ;
1150004    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1150005    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1150006    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1150007    *;
MPRINT(EM_DIAGRAM):   *;
1150008    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1150009    *;
MPRINT(EM_DIAGRAM):   *;
1150010    initial
1150011    inest = EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
1150012    ;
MPRINT(EM_DIAGRAM):   ;
1150013    *;
MPRINT(EM_DIAGRAM):   *;
1150014    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1150015    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1150015  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1709
maxiter=5 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 144 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1150016    train estiter=1 outest=_anest outfit=_anfit maxtime=1709 maxiter=5
MPRINT(EM_DIAGRAM):   run;
1150017    tech = Default;
1150018    ;
1150019    run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.42 seconds
      cpu time            0.43 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.43 seconds
      cpu time            0.43 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1150020    *;
1150021    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1150022    var _iter_ _aic_ _averr_ _misc_
1150023    _vaverr_ _vmisc_
1150024    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1150025    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 914.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1150026    *------------------------------------------------------------*;
1150027    * Extract best iteration;
1150028    ;
1150029    *------------------------------------------------------------*;
1150030    %global _iter;
1150031    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1150032    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1150033    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1150034    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1150035    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1150036    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1150037    end;
MPRINT(EM_DIAGRAM):   end;
1150038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1150039    *;
 
1150040    data EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_ESTDS;
1150041    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1150042    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1150043    output;
MPRINT(EM_DIAGRAM):   output;
1150044    stop;
MPRINT(EM_DIAGRAM):   stop;
1150045    end;
MPRINT(EM_DIAGRAM):   end;
1150046    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1150047    *;
1150048    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1150049    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1150050    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1150051    output;
MPRINT(EM_DIAGRAM):   output;
1150052    stop;
MPRINT(EM_DIAGRAM):   stop;
1150053    end;
MPRINT(EM_DIAGRAM):   end;
1150054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1150055    *;
MPRINT(EM_DIAGRAM):    *;
1150056    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1150057    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1150057  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1150058    proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_OUTFIT noobs;
1150059    var _iter_ _aic_ _averr_ _misc_
1150060    _vaverr_ _vmisc_
1150061    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1150062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 915.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1150063    title9;
MPRINT(EM_DIAGRAM):   title9;
1150064    title10;
MPRINT(EM_DIAGRAM):   title10;
1150065    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1150066    ;
MPRINT(EM_DIAGRAM):   ;
1150067    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1150068    set EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT;
1150069    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1150070    _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
1150071    _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
1150072    _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
1150073    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1150074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1150075    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_HISTORY;
1150076    set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY EMWS8.AutoNeural20_OUTFIT;
1150077    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL20_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1150078    title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
1150079    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
1150079  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
1150080    proc print data=EMWS8.AutoNeural20_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_HISTORY noobs;
1150081    var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
1150082    _vaverr_ _vmisc_
1150083    ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
1150084    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: The PROCEDURE PRINT printed page 916.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1150085    data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
1150086    set EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY;
1150087    if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
1150088    if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
1150089    else neurons=5;
MPRINT(EM_DIAGRAM):   else neurons=5;
1150090    label neurons="%sysfunc(sasmsg(sashelp.dmine,
1150090  ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
1150091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL20_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 1 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1150092    title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
1150093    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
1150093  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
1150094    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
1150094  ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
1150094  ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
1150095    proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
1150096    var _func_ _averr_
1150097    _vaverr_
1150098    neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
1150099    sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
1150100    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 917.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1150101    title8;
MPRINT(EM_DIAGRAM):   title8;
1150102    title9;
MPRINT(EM_DIAGRAM):   title9;
1150103    title10;
MPRINT(EM_DIAGRAM):   title10;
1150104    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1150105    * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
1150106    ;
MPRINT(EM_DIAGRAM):   ;
1150107    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1150108    *;
MPRINT(EM_DIAGRAM):   *;
1150109    proc neural data=EM_AutoNeural20 dmdbcat=WORK.AutoNeural20_DMDB
1150110    validdata=EMWS8.BINNING_VALIDATE
1150111    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural20
dmdbcat=WORK.AutoNeural20_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1150112    *;
MPRINT(EM_DIAGRAM):   *;
1150113    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1150114    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1150115    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1150116    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1150117    target DepVar / level=NOMINAL id=DepVar
1150118    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1150119    *;
MPRINT(EM_DIAGRAM):   *;
1150120    initial inest= EMWS8.AutoNeural20_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural20_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL20_ESTDS has 1 observations and 144
      variables.
1150121    train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
1150122    code
1150122  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\SCO
1150122  ! RECODE.sas"
1150123    group=AutoNeural20
1150124    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\SCORECODE.sas"
 group=AutoNeural20 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\SCORECODE.sas
      opened.
1150125    ;
MPRINT(EM_DIAGRAM):   ;
1150126    code
1150126  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\RES
1150126  ! IDUALSCORECODE.sas"
1150127    group=AutoNeural20
1150128    residual
1150129    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\RESIDUALSCOREC
ODE.sas" group=AutoNeural20 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\RESIDUALSCOREC
      ODE.sas opened.
1150130    ;
MPRINT(EM_DIAGRAM):   ;
1150131    score data=EMWS8.BINNING_TRAIN out=_NULL_
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
1150132    outfit=WORK.FIT1
1150133    role=TRAIN
1150134    outkey=EMWS8.AutoNeural20_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_NULL_
outfit=WORK.FIT1 role=TRAIN outkey=EMWS8.AutoNeural20_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL20_OUTKEY has 140 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_TRAIN has . observations and 62 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
1150135    score data=EMWS8.BINNING_VALIDATE out=_NULL_
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
1150136    outfit=WORK.FIT2
1150137    outkey=EMWS8.AutoNeural20_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural20_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL20_OUTKEY has 140 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
1150138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL20 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.12 seconds
      cpu time            0.26 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.12 seconds
      cpu time            0.26 seconds
 
 
1150139    data EMWS8.AutoNeural20_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_OUTFIT;
1150140    merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
1150141    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1150142    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1150143    * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
1150144    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1150145    data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
1150145  ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
1150146    set EMWS8.AutoNeural20_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_ESTDS;
1150147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 136 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1150148    proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
1150149    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1150150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 136 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1150151    proc transpose data=tempweight out=EMWS8.AutoNeural20_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural20_WEIGHTS;
1150152    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1150153    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL20_WEIGHTS has 134 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1150154    data EMWS8.AutoNeural20_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_WEIGHTS;
1150155    set EMWS8.AutoNeural20_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_WEIGHTS;
1150156    FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
1150157    TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
1150158    WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
1150159    if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
1150160    label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
1150160  ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
1150160  ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
1150160  ! NOQUOTE))" WEIGHT =
1150161       "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
1150162    keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
1150163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 134 observations read from the data set
      EMWS8.AUTONEURAL20_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL20_WEIGHTS has 129 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
1150164    * restore printing options;
1150165    ;
1150166    title10;
MPRINT(EM_DIAGRAM):   title10;
1150167    options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
1150168    options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
1150169    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1150170    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1150171    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
1150172    *;
1150173    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1150174    delete EM_AutoNeural20;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural20;
1150175    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL20 (memtype=DATA).
1150176    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1150177    data EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_HISTORY;
1150178    set EMWS8.AutoNeural20_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_HISTORY;
1150179    label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
1150180    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
1150180  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
1150181    _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
1150182    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.AUTONEURAL20_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL20_HISTORY has 10 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.57 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.57 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2QEIK6R
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2QEIK6R new;
MPRINT(EM_DIAGRAM):   run;
1150284    filename emflow
1150284  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150285    *------------------------------------------------------------*;
1150286    * AutoNeural20: Scoring DATA data;
1150287    *------------------------------------------------------------*;
1150288    data EMWS8.AutoNeural20_TRAIN
1150289    / view=EMWS8.AutoNeural20_TRAIN
1150290    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_TRAIN / view=EMWS8.AutoNeural20_TRAIN ;
1150291    set EMWS8.BINNING_TRAIN
1150292    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
1150293    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas.
1150294   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1150295   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1150296   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1150297   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1150298   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1150299   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1150300   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1150301   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1150302   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1150303   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1150304   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1150305   +LENGTH _WARN_ $4
1150306   +      F_DepVar  $ 12
1150307   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1150308   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1150309   +
1150310   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1150311   +
1150312   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1150313   +
1150314   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1150315   +
1150316   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1150317   +
1150318   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1150319   +
1150320   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1150321   +
1150322   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1150323   +
1150324   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1150325   +
1150326   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1150327   +
1150328   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1150329   +
1150330   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1150331   +
1150332   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1150333   +
1150334   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1150335   +
1150336   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1150337   +
1150338   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1150339   +
1150340   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1150341   +
1150342   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1150343   +
1150344   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1150345   +
1150346   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1150347   +
1150348   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1150349   +
1150350   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1150351   +
1150352   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1150353   +
1150354   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1150355   +
1150356   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1150357   +
1150358   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1150359   +
1150360   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1150361   +
1150362   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1150363   +
1150364   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1150365   +
1150366   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1150367   +
1150368   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1150369   +
1150370   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1150371   +
1150372   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1150373   +
1150374   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1150375   +
1150376   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1150377   +
1150378   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1150379   +
1150380   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1150381   +
1150382   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1150383   +
1150384   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1150385   +
1150386   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1150387   +
1150388   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1150389   +
1150390   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1150391   +
1150392   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1150393   +
1150394   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1150395   +
1150396   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1150397   +
1150398   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1150399   +
1150400   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1150401   +
1150402   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1150403   +
1150404   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1150405   +
1150406   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1150407   +
1150408   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1150409   +
1150410   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1150411   +
1150412   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1150413   +
1150414   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1150415   +
1150416   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1150417   +
1150418   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1150419   +
1150420   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1150421   +
1150422   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1150423   +
1150424   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1150425   +
1150426   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1150427   +
1150428   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1150429   +
1150430   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1150431   +
1150432   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1150433   +
1150434   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1150435   +
1150436   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1150437   +
1150438   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1150439   +
1150440   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1150441   +
1150442   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1150443   +
1150444   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1150445   +
1150446   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1150447   +
1150448   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1150449   +
1150450   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1150451   +
1150452   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1150453   +
1150454   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1150455   +
1150456   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1150457   +
1150458   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1150459   +
1150460   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1150461   +
1150462   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1150463   +
1150464   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1150465   +
1150466   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1150467   +
1150468   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1150469   +
1150470   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1150471   +
1150472   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1150473   +
1150474   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1150475   +
1150476   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1150477   +
1150478   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1150479   +
1150480   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1150481   +
1150482   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1150483   +
1150484   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1150485   +
1150486   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1150487   +
1150488   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1150489   +
1150490   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1150491   +
1150492   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1150493   +
1150494   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1150495   +
1150496   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1150497   +
1150498   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1150499   +
1150500   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1150501   +
1150502   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1150503   +
1150504   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1150505   +
1150506   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1150507   +
1150508   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1150509   +
1150510   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1150511   +
1150512   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1150513   +
1150514   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1150515   +
1150516   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1150517   +
1150518   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1150519   +
1150520   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1150521   +
1150522   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1150523   +
1150524   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1150525   +
1150526   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1150527   +
1150528   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1150529   +
1150530   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1150531   +
1150532   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1150533   +
1150534   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1150535   +
1150536   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1150537   +
1150538   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1150539   +
1150540   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1150541   +
1150542   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1150543   +
1150544   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1150545   +
1150546   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1150547   +
1150548   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1150549   +
1150550   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1150551   +
1150552   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1150553   +
1150554   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1150555   +
1150556   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1150557   +
1150558   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1150559   +
1150560   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1150561   +
1150562   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1150563   +
1150564   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1150565   +
1150566   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1150567   +
1150568   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1150569   +
1150570   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1150571   +
1150572   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1150573   +
1150574   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1150575   +
1150576   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1150577   +
1150578   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1150579   +
1150580   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1150581   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1150582   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1150583   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1150584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150586   +end;
MPRINT(EM_DIAGRAM):   end;
1150587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150589   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1150590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150591   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1150592   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1150593   +   end;
MPRINT(EM_DIAGRAM):   end;
1150594   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1150595   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1150596   +   end;
MPRINT(EM_DIAGRAM):   end;
1150597   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150598   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1150599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150601   +   end;
MPRINT(EM_DIAGRAM):   end;
1150602   +end;
MPRINT(EM_DIAGRAM):   end;
1150603   +
1150604   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1150605   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1150606   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1150607   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1150608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150610   +end;
MPRINT(EM_DIAGRAM):   end;
1150611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150613   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1150614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150615   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1150616   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1150617   +   end;
MPRINT(EM_DIAGRAM):   end;
1150618   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1150619   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1150620   +   end;
MPRINT(EM_DIAGRAM):   end;
1150621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150622   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1150623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150625   +   end;
MPRINT(EM_DIAGRAM):   end;
1150626   +end;
MPRINT(EM_DIAGRAM):   end;
1150627   +
1150628   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1150629   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1150630   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1150631   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1150632   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1150633   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1150634   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1150635   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1150636   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1150637   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1150638   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1150639   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1150640   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1150641   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1150642   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1150643   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1150644   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1150645   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1150646   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1150647   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1150648   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1150649   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1150650   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1150651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150653   +end;
MPRINT(EM_DIAGRAM):   end;
1150654   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150655   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150656   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1150657   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150658   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1150659   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1150660   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1150661   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1150662   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1150663   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1150664   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150665   +            end;
MPRINT(EM_DIAGRAM):   end;
1150666   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1150667   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1150668   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1150669   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1150670   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1150671   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1150672   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1150673   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1150674   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1150675   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1150676   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1150677   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150678   +               end;
MPRINT(EM_DIAGRAM):   end;
1150679   +            end;
MPRINT(EM_DIAGRAM):   end;
1150680   +         end;
MPRINT(EM_DIAGRAM):   end;
1150681   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150682   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1150683   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1150684   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150685   +            end;
MPRINT(EM_DIAGRAM):   end;
1150686   +         end;
MPRINT(EM_DIAGRAM):   end;
1150687   +      end;
MPRINT(EM_DIAGRAM):   end;
1150688   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1150689   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1150690   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1150691   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150692   +         end;
MPRINT(EM_DIAGRAM):   end;
1150693   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150694   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1150695   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1150696   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150697   +            end;
MPRINT(EM_DIAGRAM):   end;
1150698   +         end;
MPRINT(EM_DIAGRAM):   end;
1150699   +      end;
MPRINT(EM_DIAGRAM):   end;
1150700   +   end;
MPRINT(EM_DIAGRAM):   end;
1150701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150702   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1150703   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1150704   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1150705   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1150706   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150707   +            end;
MPRINT(EM_DIAGRAM):   end;
1150708   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1150709   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1150710   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1150711   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150712   +               end;
MPRINT(EM_DIAGRAM):   end;
1150713   +            end;
MPRINT(EM_DIAGRAM):   end;
1150714   +         end;
MPRINT(EM_DIAGRAM):   end;
1150715   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150716   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1150717   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1150718   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150719   +            end;
MPRINT(EM_DIAGRAM):   end;
1150720   +         end;
MPRINT(EM_DIAGRAM):   end;
1150721   +      end;
MPRINT(EM_DIAGRAM):   end;
1150722   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1150723   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1150724   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1150725   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150726   +         end;
MPRINT(EM_DIAGRAM):   end;
1150727   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150728   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1150729   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1150730   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150731   +            end;
MPRINT(EM_DIAGRAM):   end;
1150732   +         end;
MPRINT(EM_DIAGRAM):   end;
1150733   +      end;
MPRINT(EM_DIAGRAM):   end;
1150734   +   end;
MPRINT(EM_DIAGRAM):   end;
1150735   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1150736   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1150737   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1150738   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1150739   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1150740   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1150741   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1150742   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1150743   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1150744   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1150745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150747   +   end;
MPRINT(EM_DIAGRAM):   end;
1150748   +end;
MPRINT(EM_DIAGRAM):   end;
1150749   +
1150750   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1150751   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1150752   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1150753   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1150754   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1150755   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1150756   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1150757   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1150758   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1150759   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1150760   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1150761   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1150762   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1150763   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1150764   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1150765   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1150766   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1150767   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1150768   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1150769   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1150770   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1150771   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1150772   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1150773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150775   +end;
MPRINT(EM_DIAGRAM):   end;
1150776   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150778   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1150779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150780   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1150781   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1150782   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1150783   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1150784   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1150785   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1150786   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150787   +            end;
MPRINT(EM_DIAGRAM):   end;
1150788   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1150789   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1150790   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1150791   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1150792   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1150793   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1150794   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1150795   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1150796   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1150797   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1150798   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1150799   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150800   +               end;
MPRINT(EM_DIAGRAM):   end;
1150801   +            end;
MPRINT(EM_DIAGRAM):   end;
1150802   +         end;
MPRINT(EM_DIAGRAM):   end;
1150803   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150804   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1150805   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1150806   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150807   +            end;
MPRINT(EM_DIAGRAM):   end;
1150808   +         end;
MPRINT(EM_DIAGRAM):   end;
1150809   +      end;
MPRINT(EM_DIAGRAM):   end;
1150810   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1150811   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1150812   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1150813   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150814   +         end;
MPRINT(EM_DIAGRAM):   end;
1150815   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150816   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1150817   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1150818   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150819   +            end;
MPRINT(EM_DIAGRAM):   end;
1150820   +         end;
MPRINT(EM_DIAGRAM):   end;
1150821   +      end;
MPRINT(EM_DIAGRAM):   end;
1150822   +   end;
MPRINT(EM_DIAGRAM):   end;
1150823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150824   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1150825   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1150826   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1150827   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1150828   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150829   +            end;
MPRINT(EM_DIAGRAM):   end;
1150830   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1150831   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1150832   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1150833   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150834   +               end;
MPRINT(EM_DIAGRAM):   end;
1150835   +            end;
MPRINT(EM_DIAGRAM):   end;
1150836   +         end;
MPRINT(EM_DIAGRAM):   end;
1150837   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150838   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1150839   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1150840   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150841   +            end;
MPRINT(EM_DIAGRAM):   end;
1150842   +         end;
MPRINT(EM_DIAGRAM):   end;
1150843   +      end;
MPRINT(EM_DIAGRAM):   end;
1150844   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1150845   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1150846   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1150847   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150848   +         end;
MPRINT(EM_DIAGRAM):   end;
1150849   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150850   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1150851   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1150852   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150853   +            end;
MPRINT(EM_DIAGRAM):   end;
1150854   +         end;
MPRINT(EM_DIAGRAM):   end;
1150855   +      end;
MPRINT(EM_DIAGRAM):   end;
1150856   +   end;
MPRINT(EM_DIAGRAM):   end;
1150857   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1150858   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1150859   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1150860   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1150861   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1150862   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1150863   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1150864   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1150865   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1150866   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1150867   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150868   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150869   +   end;
MPRINT(EM_DIAGRAM):   end;
1150870   +end;
MPRINT(EM_DIAGRAM):   end;
1150871   +
1150872   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1150873   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1150874   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1150875   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1150876   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1150877   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1150878   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1150879   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1150880   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1150881   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1150882   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1150883   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1150884   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1150885   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1150886   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1150887   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1150888   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1150889   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1150890   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1150891   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1150892   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1150893   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1150894   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1150895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150897   +end;
MPRINT(EM_DIAGRAM):   end;
1150898   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150900   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1150901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150902   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1150903   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1150904   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1150905   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1150906   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1150907   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1150908   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150909   +            end;
MPRINT(EM_DIAGRAM):   end;
1150910   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1150911   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1150912   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1150913   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1150914   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1150915   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1150916   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1150917   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1150918   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1150919   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1150920   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1150921   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150922   +               end;
MPRINT(EM_DIAGRAM):   end;
1150923   +            end;
MPRINT(EM_DIAGRAM):   end;
1150924   +         end;
MPRINT(EM_DIAGRAM):   end;
1150925   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150926   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1150927   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1150928   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150929   +            end;
MPRINT(EM_DIAGRAM):   end;
1150930   +         end;
MPRINT(EM_DIAGRAM):   end;
1150931   +      end;
MPRINT(EM_DIAGRAM):   end;
1150932   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1150933   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1150934   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1150935   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150936   +         end;
MPRINT(EM_DIAGRAM):   end;
1150937   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150938   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1150939   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1150940   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150941   +            end;
MPRINT(EM_DIAGRAM):   end;
1150942   +         end;
MPRINT(EM_DIAGRAM):   end;
1150943   +      end;
MPRINT(EM_DIAGRAM):   end;
1150944   +   end;
MPRINT(EM_DIAGRAM):   end;
1150945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150946   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1150947   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1150948   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1150949   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1150950   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150951   +            end;
MPRINT(EM_DIAGRAM):   end;
1150952   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1150953   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1150954   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1150955   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150956   +               end;
MPRINT(EM_DIAGRAM):   end;
1150957   +            end;
MPRINT(EM_DIAGRAM):   end;
1150958   +         end;
MPRINT(EM_DIAGRAM):   end;
1150959   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150960   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1150961   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1150962   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150963   +            end;
MPRINT(EM_DIAGRAM):   end;
1150964   +         end;
MPRINT(EM_DIAGRAM):   end;
1150965   +      end;
MPRINT(EM_DIAGRAM):   end;
1150966   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1150967   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1150968   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1150969   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150970   +         end;
MPRINT(EM_DIAGRAM):   end;
1150971   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150972   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1150973   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1150974   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150975   +            end;
MPRINT(EM_DIAGRAM):   end;
1150976   +         end;
MPRINT(EM_DIAGRAM):   end;
1150977   +      end;
MPRINT(EM_DIAGRAM):   end;
1150978   +   end;
MPRINT(EM_DIAGRAM):   end;
1150979   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1150980   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1150981   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1150982   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1150983   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1150984   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1150985   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1150986   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1150987   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1150988   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1150989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150991   +   end;
MPRINT(EM_DIAGRAM):   end;
1150992   +end;
MPRINT(EM_DIAGRAM):   end;
1150993   +
1150994   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1150995   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1150996   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1150997   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1150998   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1150999   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1151000   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1151001   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1151002   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1151003   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1151004   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1151005   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1151006   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1151007   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1151008   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1151009   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1151010   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1151011   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1151012   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1151013   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1151014   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1151015   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1151016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151018   +end;
MPRINT(EM_DIAGRAM):   end;
1151019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151021   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1151022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151023   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151024   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1151025   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1151026   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1151027   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1151028   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1151029   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151030   +            end;
MPRINT(EM_DIAGRAM):   end;
1151031   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151032   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1151033   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1151034   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1151035   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1151036   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1151037   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1151038   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1151039   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1151040   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1151041   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151042   +               end;
MPRINT(EM_DIAGRAM):   end;
1151043   +            end;
MPRINT(EM_DIAGRAM):   end;
1151044   +         end;
MPRINT(EM_DIAGRAM):   end;
1151045   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151046   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151047   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1151048   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151049   +            end;
MPRINT(EM_DIAGRAM):   end;
1151050   +         end;
MPRINT(EM_DIAGRAM):   end;
1151051   +      end;
MPRINT(EM_DIAGRAM):   end;
1151052   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151053   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151054   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1151055   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151056   +         end;
MPRINT(EM_DIAGRAM):   end;
1151057   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151058   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151059   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1151060   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151061   +            end;
MPRINT(EM_DIAGRAM):   end;
1151062   +         end;
MPRINT(EM_DIAGRAM):   end;
1151063   +      end;
MPRINT(EM_DIAGRAM):   end;
1151064   +   end;
MPRINT(EM_DIAGRAM):   end;
1151065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151066   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151067   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151068   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1151069   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151070   +         end;
MPRINT(EM_DIAGRAM):   end;
1151071   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151072   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151073   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1151074   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151075   +            end;
MPRINT(EM_DIAGRAM):   end;
1151076   +         end;
MPRINT(EM_DIAGRAM):   end;
1151077   +      end;
MPRINT(EM_DIAGRAM):   end;
1151078   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151079   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151080   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1151081   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151082   +         end;
MPRINT(EM_DIAGRAM):   end;
1151083   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151084   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1151085   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1151086   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151087   +            end;
MPRINT(EM_DIAGRAM):   end;
1151088   +         end;
MPRINT(EM_DIAGRAM):   end;
1151089   +      end;
MPRINT(EM_DIAGRAM):   end;
1151090   +   end;
MPRINT(EM_DIAGRAM):   end;
1151091   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151092   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1151093   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1151094   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1151095   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1151096   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1151097   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1151098   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1151099   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1151100   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151101   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151102   +   end;
MPRINT(EM_DIAGRAM):   end;
1151103   +end;
MPRINT(EM_DIAGRAM):   end;
1151104   +
1151105   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1151106   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1151107   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1151108   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1151109   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151110   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1151111   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1151112   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1151113   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1151114   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1151115   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1151116   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1151117   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1151118   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1151119   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1151120   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1151121   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1151122   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1151123   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1151124   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1151125   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1151126   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1151127   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1151128   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1151129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151131   +end;
MPRINT(EM_DIAGRAM):   end;
1151132   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151133   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151134   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1151135   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151136   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151137   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1151138   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1151139   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1151140   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1151141   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1151142   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151143   +            end;
MPRINT(EM_DIAGRAM):   end;
1151144   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151145   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1151146   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1151147   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1151148   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1151149   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1151150   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1151151   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1151152   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1151153   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1151154   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1151155   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151156   +               end;
MPRINT(EM_DIAGRAM):   end;
1151157   +            end;
MPRINT(EM_DIAGRAM):   end;
1151158   +         end;
MPRINT(EM_DIAGRAM):   end;
1151159   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151160   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1151161   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1151162   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151163   +            end;
MPRINT(EM_DIAGRAM):   end;
1151164   +         end;
MPRINT(EM_DIAGRAM):   end;
1151165   +      end;
MPRINT(EM_DIAGRAM):   end;
1151166   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151167   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151168   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1151169   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151170   +         end;
MPRINT(EM_DIAGRAM):   end;
1151171   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151172   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151173   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1151174   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151175   +            end;
MPRINT(EM_DIAGRAM):   end;
1151176   +         end;
MPRINT(EM_DIAGRAM):   end;
1151177   +      end;
MPRINT(EM_DIAGRAM):   end;
1151178   +   end;
MPRINT(EM_DIAGRAM):   end;
1151179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151180   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151181   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1151182   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151183   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1151184   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151185   +            end;
MPRINT(EM_DIAGRAM):   end;
1151186   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151187   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151188   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1151189   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151190   +               end;
MPRINT(EM_DIAGRAM):   end;
1151191   +            end;
MPRINT(EM_DIAGRAM):   end;
1151192   +         end;
MPRINT(EM_DIAGRAM):   end;
1151193   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151194   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151195   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1151196   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151197   +            end;
MPRINT(EM_DIAGRAM):   end;
1151198   +         end;
MPRINT(EM_DIAGRAM):   end;
1151199   +      end;
MPRINT(EM_DIAGRAM):   end;
1151200   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151201   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151202   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1151203   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151204   +         end;
MPRINT(EM_DIAGRAM):   end;
1151205   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151206   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1151207   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1151208   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151209   +            end;
MPRINT(EM_DIAGRAM):   end;
1151210   +         end;
MPRINT(EM_DIAGRAM):   end;
1151211   +      end;
MPRINT(EM_DIAGRAM):   end;
1151212   +   end;
MPRINT(EM_DIAGRAM):   end;
1151213   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151214   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1151215   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1151216   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1151217   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1151218   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1151219   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1151220   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1151221   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1151222   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1151223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151225   +   end;
MPRINT(EM_DIAGRAM):   end;
1151226   +end;
MPRINT(EM_DIAGRAM):   end;
1151227   +
1151228   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1151229   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1151230   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1151231   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1151232   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151233   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1151234   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1151235   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1151236   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1151237   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1151238   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1151239   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1151240   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1151241   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1151242   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1151243   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1151244   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1151245   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1151246   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1151247   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1151248   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1151249   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1151250   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1151251   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1151252   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151253   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151254   +end;
MPRINT(EM_DIAGRAM):   end;
1151255   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151256   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151257   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1151258   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151259   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151260   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1151261   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1151262   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1151263   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1151264   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1151265   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151266   +            end;
MPRINT(EM_DIAGRAM):   end;
1151267   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151268   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1151269   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1151270   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1151271   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1151272   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1151273   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1151274   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1151275   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1151276   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1151277   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1151278   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151279   +               end;
MPRINT(EM_DIAGRAM):   end;
1151280   +            end;
MPRINT(EM_DIAGRAM):   end;
1151281   +         end;
MPRINT(EM_DIAGRAM):   end;
1151282   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151283   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1151284   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1151285   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151286   +            end;
MPRINT(EM_DIAGRAM):   end;
1151287   +         end;
MPRINT(EM_DIAGRAM):   end;
1151288   +      end;
MPRINT(EM_DIAGRAM):   end;
1151289   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151290   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151291   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1151292   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151293   +         end;
MPRINT(EM_DIAGRAM):   end;
1151294   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151295   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151296   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1151297   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151298   +            end;
MPRINT(EM_DIAGRAM):   end;
1151299   +         end;
MPRINT(EM_DIAGRAM):   end;
1151300   +      end;
MPRINT(EM_DIAGRAM):   end;
1151301   +   end;
MPRINT(EM_DIAGRAM):   end;
1151302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151303   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151304   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1151305   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151306   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1151307   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151308   +            end;
MPRINT(EM_DIAGRAM):   end;
1151309   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151310   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151311   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1151312   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151313   +               end;
MPRINT(EM_DIAGRAM):   end;
1151314   +            end;
MPRINT(EM_DIAGRAM):   end;
1151315   +         end;
MPRINT(EM_DIAGRAM):   end;
1151316   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151317   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151318   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1151319   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151320   +            end;
MPRINT(EM_DIAGRAM):   end;
1151321   +         end;
MPRINT(EM_DIAGRAM):   end;
1151322   +      end;
MPRINT(EM_DIAGRAM):   end;
1151323   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151324   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151325   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1151326   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151327   +         end;
MPRINT(EM_DIAGRAM):   end;
1151328   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151329   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1151330   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1151331   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151332   +            end;
MPRINT(EM_DIAGRAM):   end;
1151333   +         end;
MPRINT(EM_DIAGRAM):   end;
1151334   +      end;
MPRINT(EM_DIAGRAM):   end;
1151335   +   end;
MPRINT(EM_DIAGRAM):   end;
1151336   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151337   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1151338   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1151339   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1151340   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1151341   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1151342   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1151343   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1151344   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1151345   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1151346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151348   +   end;
MPRINT(EM_DIAGRAM):   end;
1151349   +end;
MPRINT(EM_DIAGRAM):   end;
1151350   +
1151351   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1151352   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1151353   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1151354   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1151355   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151356   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1151357   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1151358   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1151359   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1151360   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1151361   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1151362   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1151363   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1151364   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1151365   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1151366   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1151367   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1151368   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1151369   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1151370   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1151371   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1151372   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1151373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151375   +end;
MPRINT(EM_DIAGRAM):   end;
1151376   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151377   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151378   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1151379   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151380   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151381   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1151382   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1151383   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1151384   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1151385   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1151386   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151387   +            end;
MPRINT(EM_DIAGRAM):   end;
1151388   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151389   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1151390   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1151391   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1151392   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1151393   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1151394   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1151395   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1151396   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1151397   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1151398   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151399   +               end;
MPRINT(EM_DIAGRAM):   end;
1151400   +            end;
MPRINT(EM_DIAGRAM):   end;
1151401   +         end;
MPRINT(EM_DIAGRAM):   end;
1151402   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151403   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151404   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1151405   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151406   +            end;
MPRINT(EM_DIAGRAM):   end;
1151407   +         end;
MPRINT(EM_DIAGRAM):   end;
1151408   +      end;
MPRINT(EM_DIAGRAM):   end;
1151409   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151410   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151411   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1151412   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151413   +         end;
MPRINT(EM_DIAGRAM):   end;
1151414   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151415   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151416   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1151417   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151418   +            end;
MPRINT(EM_DIAGRAM):   end;
1151419   +         end;
MPRINT(EM_DIAGRAM):   end;
1151420   +      end;
MPRINT(EM_DIAGRAM):   end;
1151421   +   end;
MPRINT(EM_DIAGRAM):   end;
1151422   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151423   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151424   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151425   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1151426   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151427   +         end;
MPRINT(EM_DIAGRAM):   end;
1151428   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151429   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151430   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1151431   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151432   +            end;
MPRINT(EM_DIAGRAM):   end;
1151433   +         end;
MPRINT(EM_DIAGRAM):   end;
1151434   +      end;
MPRINT(EM_DIAGRAM):   end;
1151435   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151436   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151437   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1151438   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151439   +         end;
MPRINT(EM_DIAGRAM):   end;
1151440   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151441   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1151442   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1151443   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151444   +            end;
MPRINT(EM_DIAGRAM):   end;
1151445   +         end;
MPRINT(EM_DIAGRAM):   end;
1151446   +      end;
MPRINT(EM_DIAGRAM):   end;
1151447   +   end;
MPRINT(EM_DIAGRAM):   end;
1151448   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151449   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1151450   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1151451   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1151452   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1151453   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1151454   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1151455   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1151456   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1151457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151459   +   end;
MPRINT(EM_DIAGRAM):   end;
1151460   +end;
MPRINT(EM_DIAGRAM):   end;
1151461   +
1151462   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1151463   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1151464   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1151465   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151466   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1151467   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1151468   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1151469   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1151470   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1151471   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1151472   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1151473   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1151474   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1151475   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1151476   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1151477   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1151478   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1151479   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1151480   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1151481   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1151482   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1151483   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1151484   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1151485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151487   +end;
MPRINT(EM_DIAGRAM):   end;
1151488   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151489   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151490   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1151491   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151492   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151493   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1151494   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1151495   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1151496   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1151497   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1151498   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151499   +            end;
MPRINT(EM_DIAGRAM):   end;
1151500   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151501   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1151502   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1151503   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1151504   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1151505   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1151506   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1151507   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1151508   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1151509   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1151510   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1151511   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151512   +               end;
MPRINT(EM_DIAGRAM):   end;
1151513   +            end;
MPRINT(EM_DIAGRAM):   end;
1151514   +         end;
MPRINT(EM_DIAGRAM):   end;
1151515   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151516   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1151517   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1151518   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151519   +            end;
MPRINT(EM_DIAGRAM):   end;
1151520   +         end;
MPRINT(EM_DIAGRAM):   end;
1151521   +      end;
MPRINT(EM_DIAGRAM):   end;
1151522   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151523   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151524   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1151525   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151526   +         end;
MPRINT(EM_DIAGRAM):   end;
1151527   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151528   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151529   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1151530   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151531   +            end;
MPRINT(EM_DIAGRAM):   end;
1151532   +         end;
MPRINT(EM_DIAGRAM):   end;
1151533   +      end;
MPRINT(EM_DIAGRAM):   end;
1151534   +   end;
MPRINT(EM_DIAGRAM):   end;
1151535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151536   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151537   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1151538   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151539   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1151540   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151541   +            end;
MPRINT(EM_DIAGRAM):   end;
1151542   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151543   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151544   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1151545   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151546   +               end;
MPRINT(EM_DIAGRAM):   end;
1151547   +            end;
MPRINT(EM_DIAGRAM):   end;
1151548   +         end;
MPRINT(EM_DIAGRAM):   end;
1151549   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151550   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151551   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1151552   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151553   +            end;
MPRINT(EM_DIAGRAM):   end;
1151554   +         end;
MPRINT(EM_DIAGRAM):   end;
1151555   +      end;
MPRINT(EM_DIAGRAM):   end;
1151556   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151557   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151558   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1151559   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151560   +         end;
MPRINT(EM_DIAGRAM):   end;
1151561   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151562   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1151563   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1151564   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151565   +            end;
MPRINT(EM_DIAGRAM):   end;
1151566   +         end;
MPRINT(EM_DIAGRAM):   end;
1151567   +      end;
MPRINT(EM_DIAGRAM):   end;
1151568   +   end;
MPRINT(EM_DIAGRAM):   end;
1151569   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151570   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1151571   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1151572   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1151573   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1151574   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1151575   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1151576   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1151577   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1151578   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1151579   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151580   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151581   +   end;
MPRINT(EM_DIAGRAM):   end;
1151582   +end;
MPRINT(EM_DIAGRAM):   end;
1151583   +
1151584   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1151585   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1151586   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1151587   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1151588   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151589   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1151590   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1151591   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1151592   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1151593   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1151594   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1151595   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1151596   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1151597   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1151598   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1151599   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1151600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151602   +end;
MPRINT(EM_DIAGRAM):   end;
1151603   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151604   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151605   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1151606   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151607   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151608   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1151609   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1151610   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151611   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1151612   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151613   +         end;
MPRINT(EM_DIAGRAM):   end;
1151614   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151615   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151616   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1151617   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151618   +            end;
MPRINT(EM_DIAGRAM):   end;
1151619   +         end;
MPRINT(EM_DIAGRAM):   end;
1151620   +      end;
MPRINT(EM_DIAGRAM):   end;
1151621   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151622   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151623   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1151624   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151625   +         end;
MPRINT(EM_DIAGRAM):   end;
1151626   +      end;
MPRINT(EM_DIAGRAM):   end;
1151627   +   end;
MPRINT(EM_DIAGRAM):   end;
1151628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151629   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151630   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151631   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1151632   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151633   +         end;
MPRINT(EM_DIAGRAM):   end;
1151634   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151635   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151636   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1151637   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151638   +            end;
MPRINT(EM_DIAGRAM):   end;
1151639   +         end;
MPRINT(EM_DIAGRAM):   end;
1151640   +      end;
MPRINT(EM_DIAGRAM):   end;
1151641   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151642   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151643   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1151644   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1151645   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1151646   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1151647   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1151648   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151649   +         end;
MPRINT(EM_DIAGRAM):   end;
1151650   +      end;
MPRINT(EM_DIAGRAM):   end;
1151651   +   end;
MPRINT(EM_DIAGRAM):   end;
1151652   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151653   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1151654   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1151655   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1151656   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1151657   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1151658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151660   +   end;
MPRINT(EM_DIAGRAM):   end;
1151661   +end;
MPRINT(EM_DIAGRAM):   end;
1151662   +
1151663   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1151664   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1151665   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1151666   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1151667   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151668   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1151669   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1151670   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1151671   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1151672   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1151673   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1151674   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1151675   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1151676   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1151677   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1151678   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1151679   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1151680   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1151681   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1151682   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1151683   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1151684   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1151685   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1151686   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1151687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151689   +end;
MPRINT(EM_DIAGRAM):   end;
1151690   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151692   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1151693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151694   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151695   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1151696   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1151697   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1151698   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1151699   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1151700   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151701   +            end;
MPRINT(EM_DIAGRAM):   end;
1151702   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151703   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1151704   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1151705   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1151706   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1151707   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1151708   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1151709   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1151710   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1151711   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1151712   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1151713   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151714   +               end;
MPRINT(EM_DIAGRAM):   end;
1151715   +            end;
MPRINT(EM_DIAGRAM):   end;
1151716   +         end;
MPRINT(EM_DIAGRAM):   end;
1151717   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151718   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1151719   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1151720   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151721   +            end;
MPRINT(EM_DIAGRAM):   end;
1151722   +         end;
MPRINT(EM_DIAGRAM):   end;
1151723   +      end;
MPRINT(EM_DIAGRAM):   end;
1151724   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151725   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151726   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1151727   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151728   +         end;
MPRINT(EM_DIAGRAM):   end;
1151729   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151730   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151731   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1151732   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151733   +            end;
MPRINT(EM_DIAGRAM):   end;
1151734   +         end;
MPRINT(EM_DIAGRAM):   end;
1151735   +      end;
MPRINT(EM_DIAGRAM):   end;
1151736   +   end;
MPRINT(EM_DIAGRAM):   end;
1151737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151738   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151739   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1151740   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151741   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1151742   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151743   +            end;
MPRINT(EM_DIAGRAM):   end;
1151744   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1151745   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151746   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1151747   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151748   +               end;
MPRINT(EM_DIAGRAM):   end;
1151749   +            end;
MPRINT(EM_DIAGRAM):   end;
1151750   +         end;
MPRINT(EM_DIAGRAM):   end;
1151751   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151752   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151753   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1151754   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151755   +            end;
MPRINT(EM_DIAGRAM):   end;
1151756   +         end;
MPRINT(EM_DIAGRAM):   end;
1151757   +      end;
MPRINT(EM_DIAGRAM):   end;
1151758   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151759   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151760   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1151761   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151762   +         end;
MPRINT(EM_DIAGRAM):   end;
1151763   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151764   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1151765   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1151766   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151767   +            end;
MPRINT(EM_DIAGRAM):   end;
1151768   +         end;
MPRINT(EM_DIAGRAM):   end;
1151769   +      end;
MPRINT(EM_DIAGRAM):   end;
1151770   +   end;
MPRINT(EM_DIAGRAM):   end;
1151771   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151772   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1151773   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1151774   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1151775   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1151776   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1151777   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1151778   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1151779   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1151780   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1151781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151783   +   end;
MPRINT(EM_DIAGRAM):   end;
1151784   +end;
MPRINT(EM_DIAGRAM):   end;
1151785   +
1151786   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1151787   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1151788   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1151789   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1151790   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151791   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1151792   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1151793   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1151794   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1151795   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1151796   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1151797   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1151798   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1151799   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1151800   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1151801   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1151802   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1151803   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1151804   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1151805   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1151806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151808   +end;
MPRINT(EM_DIAGRAM):   end;
1151809   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151811   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1151812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151813   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151814   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1151815   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1151816   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1151817   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1151818   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151819   +         end;
MPRINT(EM_DIAGRAM):   end;
1151820   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151821   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151822   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1151823   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151824   +            end;
MPRINT(EM_DIAGRAM):   end;
1151825   +         end;
MPRINT(EM_DIAGRAM):   end;
1151826   +      end;
MPRINT(EM_DIAGRAM):   end;
1151827   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151828   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151829   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1151830   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151831   +         end;
MPRINT(EM_DIAGRAM):   end;
1151832   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151833   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151834   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1151835   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151836   +            end;
MPRINT(EM_DIAGRAM):   end;
1151837   +         end;
MPRINT(EM_DIAGRAM):   end;
1151838   +      end;
MPRINT(EM_DIAGRAM):   end;
1151839   +   end;
MPRINT(EM_DIAGRAM):   end;
1151840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151841   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151842   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151843   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1151844   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151845   +         end;
MPRINT(EM_DIAGRAM):   end;
1151846   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151847   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151848   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1151849   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151850   +            end;
MPRINT(EM_DIAGRAM):   end;
1151851   +         end;
MPRINT(EM_DIAGRAM):   end;
1151852   +      end;
MPRINT(EM_DIAGRAM):   end;
1151853   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151854   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151855   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1151856   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151857   +         end;
MPRINT(EM_DIAGRAM):   end;
1151858   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151859   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1151860   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1151861   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1151862   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1151863   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1151864   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1151865   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1151866   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1151867   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151868   +            end;
MPRINT(EM_DIAGRAM):   end;
1151869   +         end;
MPRINT(EM_DIAGRAM):   end;
1151870   +      end;
MPRINT(EM_DIAGRAM):   end;
1151871   +   end;
MPRINT(EM_DIAGRAM):   end;
1151872   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151873   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1151874   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1151875   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1151876   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1151877   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1151878   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1151879   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1151880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151882   +   end;
MPRINT(EM_DIAGRAM):   end;
1151883   +end;
MPRINT(EM_DIAGRAM):   end;
1151884   +
1151885   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1151886   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1151887   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1151888   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1151889   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151890   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1151891   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1151892   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1151893   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1151894   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1151895   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1151896   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1151897   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1151898   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1151899   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1151900   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1151901   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1151902   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1151903   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1151904   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1151905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151907   +end;
MPRINT(EM_DIAGRAM):   end;
1151908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151910   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1151911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151912   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151913   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1151914   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1151915   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1151916   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1151917   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151918   +         end;
MPRINT(EM_DIAGRAM):   end;
1151919   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151920   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1151921   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1151922   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151923   +            end;
MPRINT(EM_DIAGRAM):   end;
1151924   +         end;
MPRINT(EM_DIAGRAM):   end;
1151925   +      end;
MPRINT(EM_DIAGRAM):   end;
1151926   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151927   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1151928   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1151929   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151930   +         end;
MPRINT(EM_DIAGRAM):   end;
1151931   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151932   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1151933   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1151934   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151935   +            end;
MPRINT(EM_DIAGRAM):   end;
1151936   +         end;
MPRINT(EM_DIAGRAM):   end;
1151937   +      end;
MPRINT(EM_DIAGRAM):   end;
1151938   +   end;
MPRINT(EM_DIAGRAM):   end;
1151939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151940   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1151941   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1151942   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1151943   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151944   +         end;
MPRINT(EM_DIAGRAM):   end;
1151945   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151946   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1151947   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1151948   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151949   +            end;
MPRINT(EM_DIAGRAM):   end;
1151950   +         end;
MPRINT(EM_DIAGRAM):   end;
1151951   +      end;
MPRINT(EM_DIAGRAM):   end;
1151952   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151953   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1151954   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1151955   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151956   +         end;
MPRINT(EM_DIAGRAM):   end;
1151957   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151958   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1151959   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1151960   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1151961   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1151962   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1151963   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1151964   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1151965   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1151966   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151967   +            end;
MPRINT(EM_DIAGRAM):   end;
1151968   +         end;
MPRINT(EM_DIAGRAM):   end;
1151969   +      end;
MPRINT(EM_DIAGRAM):   end;
1151970   +   end;
MPRINT(EM_DIAGRAM):   end;
1151971   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151972   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1151973   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1151974   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1151975   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1151976   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1151977   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1151978   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1151979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151981   +   end;
MPRINT(EM_DIAGRAM):   end;
1151982   +end;
MPRINT(EM_DIAGRAM):   end;
1151983   +
1151984   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1151985   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1151986   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1151987   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151988   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1151989   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1151990   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1151991   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1151992   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1151993   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1151994   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1151995   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1151996   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1151997   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1151998   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1151999   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1152000   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1152001   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1152002   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1152003   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1152004   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1152005   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1152006   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1152007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152009   +end;
MPRINT(EM_DIAGRAM):   end;
1152010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152012   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1152013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152014   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1152015   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1152016   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1152017   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1152018   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1152019   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1152020   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152021   +            end;
MPRINT(EM_DIAGRAM):   end;
1152022   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1152023   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1152024   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1152025   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1152026   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1152027   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1152028   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1152029   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1152030   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1152031   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1152032   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1152033   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152034   +               end;
MPRINT(EM_DIAGRAM):   end;
1152035   +            end;
MPRINT(EM_DIAGRAM):   end;
1152036   +         end;
MPRINT(EM_DIAGRAM):   end;
1152037   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152038   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1152039   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1152040   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152041   +            end;
MPRINT(EM_DIAGRAM):   end;
1152042   +         end;
MPRINT(EM_DIAGRAM):   end;
1152043   +      end;
MPRINT(EM_DIAGRAM):   end;
1152044   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152045   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1152046   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1152047   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152048   +         end;
MPRINT(EM_DIAGRAM):   end;
1152049   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152050   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1152051   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1152052   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152053   +            end;
MPRINT(EM_DIAGRAM):   end;
1152054   +         end;
MPRINT(EM_DIAGRAM):   end;
1152055   +      end;
MPRINT(EM_DIAGRAM):   end;
1152056   +   end;
MPRINT(EM_DIAGRAM):   end;
1152057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152058   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1152059   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1152060   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1152061   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1152062   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152063   +            end;
MPRINT(EM_DIAGRAM):   end;
1152064   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1152065   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1152066   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1152067   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152068   +               end;
MPRINT(EM_DIAGRAM):   end;
1152069   +            end;
MPRINT(EM_DIAGRAM):   end;
1152070   +         end;
MPRINT(EM_DIAGRAM):   end;
1152071   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152072   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1152073   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1152074   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152075   +            end;
MPRINT(EM_DIAGRAM):   end;
1152076   +         end;
MPRINT(EM_DIAGRAM):   end;
1152077   +      end;
MPRINT(EM_DIAGRAM):   end;
1152078   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152079   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1152080   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1152081   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152082   +         end;
MPRINT(EM_DIAGRAM):   end;
1152083   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152084   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1152085   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1152086   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152087   +            end;
MPRINT(EM_DIAGRAM):   end;
1152088   +         end;
MPRINT(EM_DIAGRAM):   end;
1152089   +      end;
MPRINT(EM_DIAGRAM):   end;
1152090   +   end;
MPRINT(EM_DIAGRAM):   end;
1152091   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1152092   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1152093   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1152094   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1152095   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1152096   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1152097   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1152098   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1152099   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1152100   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1152101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152103   +   end;
MPRINT(EM_DIAGRAM):   end;
1152104   +end;
MPRINT(EM_DIAGRAM):   end;
1152105   +
1152106   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1152107   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1152108   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1152109   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1152110   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1152111   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1152112   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1152113   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1152114   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1152115   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1152116   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1152117   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1152118   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1152119   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1152120   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1152121   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1152122   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1152123   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1152124   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1152125   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1152126   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1152127   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1152128   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1152129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152131   +end;
MPRINT(EM_DIAGRAM):   end;
1152132   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152133   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152134   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1152135   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152136   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1152137   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1152138   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1152139   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1152140   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1152141   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1152142   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152143   +            end;
MPRINT(EM_DIAGRAM):   end;
1152144   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1152145   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1152146   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1152147   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1152148   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1152149   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1152150   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1152151   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1152152   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1152153   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1152154   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1152155   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152156   +               end;
MPRINT(EM_DIAGRAM):   end;
1152157   +            end;
MPRINT(EM_DIAGRAM):   end;
1152158   +         end;
MPRINT(EM_DIAGRAM):   end;
1152159   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152160   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1152161   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1152162   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152163   +            end;
MPRINT(EM_DIAGRAM):   end;
1152164   +         end;
MPRINT(EM_DIAGRAM):   end;
1152165   +      end;
MPRINT(EM_DIAGRAM):   end;
1152166   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152167   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1152168   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1152169   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152170   +         end;
MPRINT(EM_DIAGRAM):   end;
1152171   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152172   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1152173   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1152174   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152175   +            end;
MPRINT(EM_DIAGRAM):   end;
1152176   +         end;
MPRINT(EM_DIAGRAM):   end;
1152177   +      end;
MPRINT(EM_DIAGRAM):   end;
1152178   +   end;
MPRINT(EM_DIAGRAM):   end;
1152179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152180   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1152181   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1152182   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1152183   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1152184   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152185   +            end;
MPRINT(EM_DIAGRAM):   end;
1152186   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1152187   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1152188   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1152189   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152190   +               end;
MPRINT(EM_DIAGRAM):   end;
1152191   +            end;
MPRINT(EM_DIAGRAM):   end;
1152192   +         end;
MPRINT(EM_DIAGRAM):   end;
1152193   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152194   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1152195   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1152196   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152197   +            end;
MPRINT(EM_DIAGRAM):   end;
1152198   +         end;
MPRINT(EM_DIAGRAM):   end;
1152199   +      end;
MPRINT(EM_DIAGRAM):   end;
1152200   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152201   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1152202   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1152203   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152204   +         end;
MPRINT(EM_DIAGRAM):   end;
1152205   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152206   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1152207   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1152208   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152209   +            end;
MPRINT(EM_DIAGRAM):   end;
1152210   +         end;
MPRINT(EM_DIAGRAM):   end;
1152211   +      end;
MPRINT(EM_DIAGRAM):   end;
1152212   +   end;
MPRINT(EM_DIAGRAM):   end;
1152213   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1152214   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1152215   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1152216   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1152217   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1152218   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1152219   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1152220   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1152221   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1152222   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1152223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152225   +   end;
MPRINT(EM_DIAGRAM):   end;
1152226   +end;
MPRINT(EM_DIAGRAM):   end;
1152227   +
1152228   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1152229   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1152230   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1152231   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1152232   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1152233   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1152234   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1152235   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1152236   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1152237   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1152238   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1152239   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1152240   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1152241   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1152242   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1152243   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1152244   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1152245   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1152246   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1152247   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1152248   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1152249   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1152250   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1152251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152253   +end;
MPRINT(EM_DIAGRAM):   end;
1152254   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152255   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152256   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1152257   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152258   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1152259   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1152260   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1152261   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1152262   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1152263   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1152264   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152265   +            end;
MPRINT(EM_DIAGRAM):   end;
1152266   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1152267   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1152268   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1152269   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1152270   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1152271   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1152272   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1152273   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1152274   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1152275   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1152276   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1152277   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152278   +               end;
MPRINT(EM_DIAGRAM):   end;
1152279   +            end;
MPRINT(EM_DIAGRAM):   end;
1152280   +         end;
MPRINT(EM_DIAGRAM):   end;
1152281   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152282   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1152283   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1152284   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152285   +            end;
MPRINT(EM_DIAGRAM):   end;
1152286   +         end;
MPRINT(EM_DIAGRAM):   end;
1152287   +      end;
MPRINT(EM_DIAGRAM):   end;
1152288   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152289   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1152290   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1152291   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152292   +         end;
MPRINT(EM_DIAGRAM):   end;
1152293   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152294   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1152295   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1152296   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152297   +            end;
MPRINT(EM_DIAGRAM):   end;
1152298   +         end;
MPRINT(EM_DIAGRAM):   end;
1152299   +      end;
MPRINT(EM_DIAGRAM):   end;
1152300   +   end;
MPRINT(EM_DIAGRAM):   end;
1152301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152302   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1152303   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1152304   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1152305   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1152306   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152307   +            end;
MPRINT(EM_DIAGRAM):   end;
1152308   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1152309   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1152310   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1152311   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152312   +               end;
MPRINT(EM_DIAGRAM):   end;
1152313   +            end;
MPRINT(EM_DIAGRAM):   end;
1152314   +         end;
MPRINT(EM_DIAGRAM):   end;
1152315   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152316   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1152317   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1152318   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152319   +            end;
MPRINT(EM_DIAGRAM):   end;
1152320   +         end;
MPRINT(EM_DIAGRAM):   end;
1152321   +      end;
MPRINT(EM_DIAGRAM):   end;
1152322   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152323   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1152324   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1152325   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152326   +         end;
MPRINT(EM_DIAGRAM):   end;
1152327   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152328   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1152329   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1152330   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152331   +            end;
MPRINT(EM_DIAGRAM):   end;
1152332   +         end;
MPRINT(EM_DIAGRAM):   end;
1152333   +      end;
MPRINT(EM_DIAGRAM):   end;
1152334   +   end;
MPRINT(EM_DIAGRAM):   end;
1152335   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1152336   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1152337   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1152338   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1152339   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1152340   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1152341   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1152342   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1152343   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1152344   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1152345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152347   +   end;
MPRINT(EM_DIAGRAM):   end;
1152348   +end;
MPRINT(EM_DIAGRAM):   end;
1152349   +
1152350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152351   +*** Checking missing input Interval
1152352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1152353   +
1152354   +IF NMISS(
1152355   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1152356   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1152357   +
1152358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152359   +END;
MPRINT(EM_DIAGRAM):   END;
1152360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152361   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1152362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152363   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1152364   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1152365   +END;
MPRINT(EM_DIAGRAM):   END;
1152366   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1152367   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1152368   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1152369   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1152370   +END;
MPRINT(EM_DIAGRAM):   END;
1152371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152372   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1152373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152375   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1152376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152377   +
1152378   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1152379   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1152380   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1152381   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1152382   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1152383   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152384   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1152385   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1152386   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1152387   +end;
MPRINT(EM_DIAGRAM):   end;
1152388   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152389   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1152390   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1152391   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1152392   +   end;
MPRINT(EM_DIAGRAM):   end;
1152393   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1152394   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1152395   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1152396   +   end;
MPRINT(EM_DIAGRAM):   end;
1152397   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152398   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1152399   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1152400   +   end;
MPRINT(EM_DIAGRAM):   end;
1152401   +end;
MPRINT(EM_DIAGRAM):   end;
1152402   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1152403   +   P_DepVar1  =     0.13041505791867 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13041505791867 * S_Year_Birth ;
1152404   +   P_DepVar1  = P_DepVar1  +    -0.81394914954047 * GRP_AcceptedCmp52
1152405   +          +    -1.57479065391046 * GRP_AcceptedCmpTotal3
1152406   +          +     0.55721665311121 * GRP_Frq2  +     2.03538591612101 * GRP_Frq3
1152407   +          +     1.71084973908714 * GRP_Frq4  +     0.93073119070526 * GRP_Frq5
1152408   +          +     0.58841250291933 * GRP_Frq6  +    -0.21635109021843 * GRP_Frq7
1152409   +          +      0.0213506254167 * GRP_Frq8  +    -1.30191697936168 * GRP_Frq9
1152410   +          +    -1.31179820046974 * GRP_Frq10  +    -1.08336033604841 *
1152411   +        GRP_Income2  +    -0.79871206076892 * GRP_Income3
1152412   +          +    -0.30315183422585 * GRP_Income4  +     0.82131408307175 *
1152413   +        GRP_Income5  +     0.48741274023405 * GRP_Income6
1152414   +          +    -0.50872786670529 * GRP_Income7  +     -0.8768319258445 *
1152415   +        GRP_Income8  +    -0.05749742206435 * GRP_Income9
1152416   +          +     0.62080590842343 * GRP_Income10  +     2.52780693320463 *
1152417   +        GRP_Mnt2  +     1.42753900899901 * GRP_Mnt3  +    -0.37486538648468 *
1152418   +        GRP_Mnt4  +    -0.70186702387476 * GRP_Mnt5  +    -1.09419855761909 *
1152419   +        GRP_Mnt6  +    -0.74794036813571 * GRP_Mnt7  +    -0.38086942027823 *
1152420   +        GRP_Mnt8  +    -0.14878906184572 * GRP_Mnt9  +     0.10029389010909 *
1152421   +        GRP_Mnt10  +     0.93741359799158 * GRP_MntFishProducts3
1152422   +          +     0.33815869767181 * GRP_MntFishProducts4
1152423   +          +     0.18521216857753 * GRP_MntFishProducts5
1152424   +          +    -0.17622093488116 * GRP_MntFishProducts6
1152425   +          +     0.10360579093666 * GRP_MntFishProducts7
1152426   +          +     0.67417645975591 * GRP_MntFishProducts8
1152427   +          +     -0.4949659833943 * GRP_MntFishProducts9
1152428   +          +    -0.53307075001864 * GRP_MntFishProducts10
1152429   +          +    -0.44965793048776 * GRP_MntGoldProds2
1152430   +          +     0.70029834666821 * GRP_MntGoldProds3
1152431   +          +     0.26643011384249 * GRP_MntGoldProds4
1152432   +          +      0.2416000208193 * GRP_MntGoldProds5
1152433   +          +    -0.16739557727601 * GRP_MntGoldProds6
1152434   +          +    -0.03966136377161 * GRP_MntGoldProds7
1152435   +          +    -0.14433335823753 * GRP_MntGoldProds8
1152436   +          +    -0.01379766565883 * GRP_MntGoldProds9
1152437   +          +    -0.47948207920798 * GRP_MntGoldProds10
1152438   +          +     -7.7797809223883 * GRP_MntMeatProducts2
1152439   +          +    -4.30448682283205 * GRP_MntMeatProducts3
1152440   +          +    -3.09196678122785 * GRP_MntMeatProducts4
1152441   +          +    -1.39782945162908 * GRP_MntMeatProducts5
1152442   +          +     0.98656746132259 * GRP_MntMeatProducts6
1152443   +          +     1.23570299146524 * GRP_MntMeatProducts7
1152444   +          +     2.63070630185363 * GRP_MntMeatProducts8
1152445   +          +     2.57140709387759 * GRP_MntMeatProducts9
1152446   +          +     3.88874807046828 * GRP_MntMeatProducts10
1152447   +          +     0.33174074042224 * GRP_MntSweetProducts3
1152448   +          +     0.69101850116915 * GRP_MntSweetProducts4
1152449   +          +     0.17295436074838 * GRP_MntSweetProducts5
1152450   +          +      0.0314089298439 * GRP_MntSweetProducts6
1152451   +          +     0.79474403533727 * GRP_MntSweetProducts7
1152452   +          +    -0.35030029933384 * GRP_MntSweetProducts8
1152453   +          +    -0.22491638984504 * GRP_MntSweetProducts9
1152454   +          +    -0.26300371563779 * GRP_MntSweetProducts10
1152455   +          +       4.623529533535 * GRP_MntWines2  +     3.38930591268617 *
1152456   +        GRP_MntWines3  +     2.86869681071208 * GRP_MntWines4
1152457   +          +     1.99919334553514 * GRP_MntWines5  +     0.51392642718101 *
1152458   +        GRP_MntWines6  +    -0.54295287328303 * GRP_MntWines7
1152459   +          +     -1.9404151310852 * GRP_MntWines8  +    -2.81755694441313 *
1152460   +        GRP_MntWines9  +    -3.65585472427726 * GRP_MntWines10
1152461   +          +    -6.48636650946379 * GRP_NumCatalogPurchases3
1152462   +          +    -2.42520952237724 * GRP_NumCatalogPurchases4
1152463   +          +     0.23992315717993 * GRP_NumCatalogPurchases5
1152464   +          +     1.78022371269645 * GRP_NumCatalogPurchases6
1152465   +          +     2.51919850869031 * GRP_NumCatalogPurchases7
1152466   +          +    -0.29160915509933 * GRP_NumDistPurchases2
1152467   +          +    -1.59386292237547 * GRP_NumDistPurchases3
1152468   +          +    -0.58149143918747 * GRP_NumDistPurchases4
1152469   +          +    -0.15227686380495 * GRP_NumDistPurchases5
1152470   +          +    -0.39776772752273 * GRP_NumDistPurchases6
1152471   +          +    -0.25189925687254 * GRP_NumDistPurchases7
1152472   +          +     -0.8006222944202 * GRP_NumDistPurchases8
1152473   +          +      1.1137088740435 * GRP_NumDistPurchases9
1152474   +          +     1.23069956311587 * GRP_NumDistPurchases10
1152475   +          +     0.00077574452293 * GRP_NumWebPurchases2
1152476   +          +     0.24159496564294 * GRP_NumWebPurchases3
1152477   +          +     0.30982055062128 * GRP_NumWebPurchases4
1152478   +          +     0.91413433678014 * GRP_NumWebPurchases5
1152479   +          +     0.47430505202684 * GRP_NumWebPurchases6
1152480   +          +     0.05910332727627 * GRP_NumWebPurchases7
1152481   +          +    -0.73591735479205 * GRP_NumWebPurchases8
1152482   +          +     -4.1347431929822 * GRP_NumWebVisitsMonth2
1152483   +          +    -2.56208193086546 * GRP_NumWebVisitsMonth3
1152484   +          +    -1.81937126717482 * GRP_NumWebVisitsMonth4
1152485   +          +    -0.77444924696859 * GRP_NumWebVisitsMonth5
1152486   +          +     0.82562856901811 * GRP_NumWebVisitsMonth6
1152487   +          +     1.04369947846006 * GRP_NumWebVisitsMonth7
1152488   +          +     2.55675009308953 * GRP_NumWebVisitsMonth8
1152489   +          +     0.20809605612831 * GRP_RFMstat2  +    -1.61430160476517 *
1152490   +        GRP_RFMstat3  +    -0.52301122119481 * GRP_RFMstat4
1152491   +          +    -0.55945361088087 * GRP_RFMstat5  +    -0.14424212281577 *
1152492   +        GRP_RFMstat6  +     1.05234320810026 * GRP_RFMstat7
1152493   +          +    -0.05407410464352 * GRP_RFMstat8  +    -0.01646632074069 *
1152494   +        GRP_RFMstat9  +     0.70828472822109 * GRP_RFMstat10
1152495   +          +      1.8726948284706 * GRP_RMntFrq2  +     1.05367221065359 *
1152496   +        GRP_RMntFrq3  +     1.16252388400818 * GRP_RMntFrq4
1152497   +          +    -0.68337506267394 * GRP_RMntFrq5  +    -0.30999632256804 *
1152498   +        GRP_RMntFrq6  +      -1.800352250825 * GRP_RMntFrq7
1152499   +          +    -1.53582014310476 * GRP_RMntFrq8  +    -0.07192943405375 *
1152500   +        GRP_RMntFrq9  +    -0.60583604685254 * GRP_RMntFrq10
1152501   +          +     3.84355692804923 * GRP_Recency2  +     2.89076929480023 *
1152502   +        GRP_Recency3  +     2.87026210399223 * GRP_Recency4
1152503   +          +     1.49685595027077 * GRP_Recency5  +    -0.07603609831014 *
1152504   +        GRP_Recency6  +    -0.44761807904964 * GRP_Recency7
1152505   +          +    -1.48577941891686 * GRP_Recency8  +    -1.45982970045671 *
1152506   +        GRP_Recency9  +     -3.5176122167203 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.81394914954047 * GRP_AcceptedCmp52 +
-1.57479065391046 * GRP_AcceptedCmpTotal3 + 0.55721665311121 * GRP_Frq2 + 2.03538591612101 *
GRP_Frq3 + 1.71084973908714 * GRP_Frq4 + 0.93073119070526 * GRP_Frq5 + 0.58841250291933 *
GRP_Frq6 + -0.21635109021843 * GRP_Frq7 + 0.0213506254167 * GRP_Frq8 + -1.30191697936168 *
GRP_Frq9 + -1.31179820046974 * GRP_Frq10 + -1.08336033604841 * GRP_Income2 + -0.79871206076892
* GRP_Income3 + -0.30315183422585 * GRP_Income4 + 0.82131408307175 * GRP_Income5 +
0.48741274023405 * GRP_Income6 + -0.50872786670529 * GRP_Income7 + -0.8768319258445 *
GRP_Income8 + -0.05749742206435 * GRP_Income9 + 0.62080590842343 * GRP_Income10 +
2.52780693320463 * GRP_Mnt2 + 1.42753900899901 * GRP_Mnt3 + -0.37486538648468 * GRP_Mnt4 +
-0.70186702387476 * GRP_Mnt5 + -1.09419855761909 * GRP_Mnt6 + -0.74794036813571 * GRP_Mnt7 +
-0.38086942027823 * GRP_Mnt8 + -0.14878906184572 * GRP_Mnt9 + 0.10029389010909 * GRP_Mnt10 +
0.93741359799158 * GRP_MntFishProducts3 + 0.33815869767181 * GRP_MntFishProducts4 +
0.18521216857753 * GRP_MntFishProducts5 + -0.17622093488116 * GRP_MntFishProducts6 +
0.10360579093666 * GRP_MntFishProducts7 + 0.67417645975591 * GRP_MntFishProducts8 +
-0.4949659833943 * GRP_MntFishProducts9 + -0.53307075001864 * GRP_MntFishProducts10 +
-0.44965793048776 * GRP_MntGoldProds2 + 0.70029834666821 * GRP_MntGoldProds3 +
0.26643011384249 * GRP_MntGoldProds4 + 0.2416000208193 * GRP_MntGoldProds5 + -0.16739557727601
* GRP_MntGoldProds6 + -0.03966136377161 * GRP_MntGoldProds7 + -0.14433335823753 *
GRP_MntGoldProds8 + -0.01379766565883 * GRP_MntGoldProds9 + -0.47948207920798 *
GRP_MntGoldProds10 + -7.7797809223883 * GRP_MntMeatProducts2 + -4.30448682283205 *
GRP_MntMeatProducts3 + -3.09196678122785 * GRP_MntMeatProducts4 + -1.39782945162908 *
GRP_MntMeatProducts5 + 0.98656746132259 * GRP_MntMeatProducts6 + 1.23570299146524 *
GRP_MntMeatProducts7 + 2.63070630185363 * GRP_MntMeatProducts8 + 2.57140709387759 *
GRP_MntMeatProducts9 + 3.88874807046828 * GRP_MntMeatProducts10 + 0.33174074042224 *
GRP_MntSweetProducts3 + 0.69101850116915 * GRP_MntSweetProducts4 + 0.17295436074838 *
GRP_MntSweetProducts5 + 0.0314089298439 * GRP_MntSweetProducts6 + 0.79474403533727 *
GRP_MntSweetProducts7 + -0.35030029933384 * GRP_MntSweetProducts8 + -0.22491638984504 *
GRP_MntSweetProducts9 + -0.26300371563779 * GRP_MntSweetProducts10 + 4.623529533535 *
GRP_MntWines2 + 3.38930591268617 * GRP_MntWines3 + 2.86869681071208 * GRP_MntWines4 +
1.99919334553514 * GRP_MntWines5 + 0.51392642718101 * GRP_MntWines6 + -0.54295287328303 *
GRP_MntWines7 + -1.9404151310852 * GRP_MntWines8 + -2.81755694441313 * GRP_MntWines9 +
-3.65585472427726 * GRP_MntWines10 + -6.48636650946379 * GRP_NumCatalogPurchases3 +
-2.42520952237724 * GRP_NumCatalogPurchases4 + 0.23992315717993 * GRP_NumCatalogPurchases5 +
1.78022371269645 * GRP_NumCatalogPurchases6 + 2.51919850869031 * GRP_NumCatalogPurchases7 +
-0.29160915509933 * GRP_NumDistPurchases2 + -1.59386292237547 * GRP_NumDistPurchases3 +
-0.58149143918747 * GRP_NumDistPurchases4 + -0.15227686380495 * GRP_NumDistPurchases5 +
-0.39776772752273 * GRP_NumDistPurchases6 + -0.25189925687254 * GRP_NumDistPurchases7 +
-0.8006222944202 * GRP_NumDistPurchases8 + 1.1137088740435 * GRP_NumDistPurchases9 +
1.23069956311587 * GRP_NumDistPurchases10 + 0.00077574452293 * GRP_NumWebPurchases2 +
0.24159496564294 * GRP_NumWebPurchases3 + 0.30982055062128 * GRP_NumWebPurchases4 +
0.91413433678014 * GRP_NumWebPurchases5 + 0.47430505202684 * GRP_NumWebPurchases6 +
0.05910332727627 * GRP_NumWebPurchases7 + -0.73591735479205 * GRP_NumWebPurchases8 +
-4.1347431929822 * GRP_NumWebVisitsMonth2 + -2.56208193086546 * GRP_NumWebVisitsMonth3 +
-1.81937126717482 * GRP_NumWebVisitsMonth4 + -0.77444924696859 * GRP_NumWebVisitsMonth5 +
0.82562856901811 * GRP_NumWebVisitsMonth6 + 1.04369947846006 * GRP_NumWebVisitsMonth7 +
2.55675009308953 * GRP_NumWebVisitsMonth8 + 0.20809605612831 * GRP_RFMstat2 +
-1.61430160476517 * GRP_RFMstat3 + -0.52301122119481 * GRP_RFMstat4 + -0.55945361088087 *
GRP_RFMstat5 + -0.14424212281577 * GRP_RFMstat6 + 1.05234320810026 * GRP_RFMstat7 +
-0.05407410464352 * GRP_RFMstat8 + -0.01646632074069 * GRP_RFMstat9 + 0.70828472822109 *
GRP_RFMstat10 + 1.8726948284706 * GRP_RMntFrq2 + 1.05367221065359 * GRP_RMntFrq3 +
1.16252388400818 * GRP_RMntFrq4 + -0.68337506267394 * GRP_RMntFrq5 + -0.30999632256804 *
GRP_RMntFrq6 + -1.800352250825 * GRP_RMntFrq7 + -1.53582014310476 * GRP_RMntFrq8 +
-0.07192943405375 * GRP_RMntFrq9 + -0.60583604685254 * GRP_RMntFrq10 + 3.84355692804923 *
GRP_Recency2 + 2.89076929480023 * GRP_Recency3 + 2.87026210399223 * GRP_Recency4 +
1.49685595027077 * GRP_Recency5 + -0.07603609831014 * GRP_Recency6 + -0.44761807904964 *
GRP_Recency7 + -1.48577941891686 * GRP_Recency8 + -1.45982970045671 * GRP_Recency9 +
-3.5176122167203 * GRP_Recency10 ;
1152507   +   P_DepVar1  =    -3.73504752117057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.73504752117057 + P_DepVar1 ;
1152508   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1152509   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1152510   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1152511   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1152512   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1152513   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1152514   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1152515   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1152516   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1152517   +END;
MPRINT(EM_DIAGRAM):   END;
1152518   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1152519   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1152520   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1152521   +END;
MPRINT(EM_DIAGRAM):   END;
1152522   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1152523   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1152524   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1152525   +END;
MPRINT(EM_DIAGRAM):   END;
1152526   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1152527   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1152528   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1152529   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1152530   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1152531   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1152532   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1152533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152534   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1152535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152536   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1152537   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1152538   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1152539   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1152540   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1152541   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1152542   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1152543   +END;
MPRINT(EM_DIAGRAM):   END;
1152544   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1152545   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1152546   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1152547   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1152548    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL20_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1152549    quit;
1152550    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1152551    filename emflow
1152551  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152552    *------------------------------------------------------------*;
1152553    * AutoNeural20: Scoring VALIDATE data;
1152554    *------------------------------------------------------------*;
1152555    data EMWS8.AutoNeural20_VALIDATE
1152556    / view=EMWS8.AutoNeural20_VALIDATE
1152557    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_VALIDATE / view=EMWS8.AutoNeural20_VALIDATE ;
1152558    set EMWS8.BINNING_VALIDATE
1152559    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
1152560    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas.
1152561   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1152562   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1152563   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1152564   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1152565   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1152566   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1152567   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1152568   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1152569   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1152570   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1152571   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1152572   +LENGTH _WARN_ $4
1152573   +      F_DepVar  $ 12
1152574   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1152575   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1152576   +
1152577   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1152578   +
1152579   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1152580   +
1152581   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1152582   +
1152583   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1152584   +
1152585   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1152586   +
1152587   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1152588   +
1152589   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1152590   +
1152591   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1152592   +
1152593   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1152594   +
1152595   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1152596   +
1152597   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1152598   +
1152599   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1152600   +
1152601   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1152602   +
1152603   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1152604   +
1152605   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1152606   +
1152607   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1152608   +
1152609   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1152610   +
1152611   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1152612   +
1152613   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1152614   +
1152615   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1152616   +
1152617   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1152618   +
1152619   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1152620   +
1152621   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1152622   +
1152623   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1152624   +
1152625   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1152626   +
1152627   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1152628   +
1152629   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1152630   +
1152631   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1152632   +
1152633   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1152634   +
1152635   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1152636   +
1152637   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1152638   +
1152639   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1152640   +
1152641   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1152642   +
1152643   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1152644   +
1152645   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1152646   +
1152647   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1152648   +
1152649   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1152650   +
1152651   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1152652   +
1152653   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1152654   +
1152655   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1152656   +
1152657   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1152658   +
1152659   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1152660   +
1152661   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1152662   +
1152663   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1152664   +
1152665   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1152666   +
1152667   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1152668   +
1152669   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1152670   +
1152671   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1152672   +
1152673   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1152674   +
1152675   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1152676   +
1152677   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1152678   +
1152679   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1152680   +
1152681   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1152682   +
1152683   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1152684   +
1152685   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1152686   +
1152687   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1152688   +
1152689   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1152690   +
1152691   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1152692   +
1152693   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1152694   +
1152695   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1152696   +
1152697   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1152698   +
1152699   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1152700   +
1152701   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1152702   +
1152703   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1152704   +
1152705   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1152706   +
1152707   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1152708   +
1152709   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1152710   +
1152711   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1152712   +
1152713   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1152714   +
1152715   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1152716   +
1152717   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1152718   +
1152719   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1152720   +
1152721   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1152722   +
1152723   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1152724   +
1152725   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1152726   +
1152727   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1152728   +
1152729   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1152730   +
1152731   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1152732   +
1152733   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1152734   +
1152735   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1152736   +
1152737   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1152738   +
1152739   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1152740   +
1152741   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1152742   +
1152743   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1152744   +
1152745   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1152746   +
1152747   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1152748   +
1152749   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1152750   +
1152751   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1152752   +
1152753   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1152754   +
1152755   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1152756   +
1152757   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1152758   +
1152759   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1152760   +
1152761   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1152762   +
1152763   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1152764   +
1152765   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1152766   +
1152767   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1152768   +
1152769   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1152770   +
1152771   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1152772   +
1152773   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1152774   +
1152775   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1152776   +
1152777   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1152778   +
1152779   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1152780   +
1152781   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1152782   +
1152783   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1152784   +
1152785   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1152786   +
1152787   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1152788   +
1152789   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1152790   +
1152791   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1152792   +
1152793   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1152794   +
1152795   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1152796   +
1152797   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1152798   +
1152799   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1152800   +
1152801   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1152802   +
1152803   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1152804   +
1152805   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1152806   +
1152807   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1152808   +
1152809   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1152810   +
1152811   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1152812   +
1152813   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1152814   +
1152815   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1152816   +
1152817   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1152818   +
1152819   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1152820   +
1152821   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1152822   +
1152823   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1152824   +
1152825   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1152826   +
1152827   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1152828   +
1152829   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1152830   +
1152831   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1152832   +
1152833   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1152834   +
1152835   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1152836   +
1152837   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1152838   +
1152839   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1152840   +
1152841   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1152842   +
1152843   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1152844   +
1152845   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1152846   +
1152847   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1152848   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1152849   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1152850   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1152851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152853   +end;
MPRINT(EM_DIAGRAM):   end;
1152854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152855   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152856   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1152857   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152858   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1152859   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1152860   +   end;
MPRINT(EM_DIAGRAM):   end;
1152861   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1152862   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1152863   +   end;
MPRINT(EM_DIAGRAM):   end;
1152864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152865   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1152866   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152867   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152868   +   end;
MPRINT(EM_DIAGRAM):   end;
1152869   +end;
MPRINT(EM_DIAGRAM):   end;
1152870   +
1152871   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1152872   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1152873   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1152874   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1152875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152877   +end;
MPRINT(EM_DIAGRAM):   end;
1152878   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152879   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152880   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1152881   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152882   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1152883   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1152884   +   end;
MPRINT(EM_DIAGRAM):   end;
1152885   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1152886   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1152887   +   end;
MPRINT(EM_DIAGRAM):   end;
1152888   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152889   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1152890   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152891   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152892   +   end;
MPRINT(EM_DIAGRAM):   end;
1152893   +end;
MPRINT(EM_DIAGRAM):   end;
1152894   +
1152895   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1152896   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1152897   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1152898   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1152899   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1152900   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1152901   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1152902   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1152903   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1152904   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1152905   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1152906   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1152907   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1152908   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1152909   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1152910   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1152911   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1152912   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1152913   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1152914   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1152915   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1152916   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1152917   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1152918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152920   +end;
MPRINT(EM_DIAGRAM):   end;
1152921   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152923   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1152924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152925   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1152926   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1152927   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1152928   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1152929   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1152930   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1152931   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152932   +            end;
MPRINT(EM_DIAGRAM):   end;
1152933   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1152934   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1152935   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1152936   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1152937   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1152938   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1152939   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1152940   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1152941   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1152942   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1152943   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1152944   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152945   +               end;
MPRINT(EM_DIAGRAM):   end;
1152946   +            end;
MPRINT(EM_DIAGRAM):   end;
1152947   +         end;
MPRINT(EM_DIAGRAM):   end;
1152948   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152949   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1152950   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1152951   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152952   +            end;
MPRINT(EM_DIAGRAM):   end;
1152953   +         end;
MPRINT(EM_DIAGRAM):   end;
1152954   +      end;
MPRINT(EM_DIAGRAM):   end;
1152955   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152956   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1152957   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1152958   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152959   +         end;
MPRINT(EM_DIAGRAM):   end;
1152960   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152961   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1152962   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1152963   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152964   +            end;
MPRINT(EM_DIAGRAM):   end;
1152965   +         end;
MPRINT(EM_DIAGRAM):   end;
1152966   +      end;
MPRINT(EM_DIAGRAM):   end;
1152967   +   end;
MPRINT(EM_DIAGRAM):   end;
1152968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152969   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1152970   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1152971   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1152972   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1152973   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152974   +            end;
MPRINT(EM_DIAGRAM):   end;
1152975   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1152976   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1152977   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1152978   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152979   +               end;
MPRINT(EM_DIAGRAM):   end;
1152980   +            end;
MPRINT(EM_DIAGRAM):   end;
1152981   +         end;
MPRINT(EM_DIAGRAM):   end;
1152982   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152983   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1152984   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1152985   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152986   +            end;
MPRINT(EM_DIAGRAM):   end;
1152987   +         end;
MPRINT(EM_DIAGRAM):   end;
1152988   +      end;
MPRINT(EM_DIAGRAM):   end;
1152989   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152990   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1152991   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1152992   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152993   +         end;
MPRINT(EM_DIAGRAM):   end;
1152994   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152995   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1152996   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1152997   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152998   +            end;
MPRINT(EM_DIAGRAM):   end;
1152999   +         end;
MPRINT(EM_DIAGRAM):   end;
1153000   +      end;
MPRINT(EM_DIAGRAM):   end;
1153001   +   end;
MPRINT(EM_DIAGRAM):   end;
1153002   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153003   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1153004   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1153005   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1153006   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1153007   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1153008   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1153009   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1153010   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1153011   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1153012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153014   +   end;
MPRINT(EM_DIAGRAM):   end;
1153015   +end;
MPRINT(EM_DIAGRAM):   end;
1153016   +
1153017   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1153018   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1153019   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1153020   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153021   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1153022   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1153023   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1153024   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1153025   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1153026   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1153027   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1153028   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1153029   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1153030   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1153031   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1153032   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1153033   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1153034   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1153035   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1153036   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1153037   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1153038   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1153039   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1153040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153042   +end;
MPRINT(EM_DIAGRAM):   end;
1153043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153045   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1153046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153047   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153048   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1153049   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1153050   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1153051   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1153052   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1153053   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153054   +            end;
MPRINT(EM_DIAGRAM):   end;
1153055   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153056   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1153057   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1153058   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1153059   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1153060   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1153061   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1153062   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1153063   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1153064   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1153065   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1153066   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153067   +               end;
MPRINT(EM_DIAGRAM):   end;
1153068   +            end;
MPRINT(EM_DIAGRAM):   end;
1153069   +         end;
MPRINT(EM_DIAGRAM):   end;
1153070   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153071   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1153072   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1153073   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153074   +            end;
MPRINT(EM_DIAGRAM):   end;
1153075   +         end;
MPRINT(EM_DIAGRAM):   end;
1153076   +      end;
MPRINT(EM_DIAGRAM):   end;
1153077   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153078   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153079   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1153080   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153081   +         end;
MPRINT(EM_DIAGRAM):   end;
1153082   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153083   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153084   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1153085   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153086   +            end;
MPRINT(EM_DIAGRAM):   end;
1153087   +         end;
MPRINT(EM_DIAGRAM):   end;
1153088   +      end;
MPRINT(EM_DIAGRAM):   end;
1153089   +   end;
MPRINT(EM_DIAGRAM):   end;
1153090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153091   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1153092   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1153093   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1153094   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1153095   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153096   +            end;
MPRINT(EM_DIAGRAM):   end;
1153097   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153098   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1153099   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1153100   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153101   +               end;
MPRINT(EM_DIAGRAM):   end;
1153102   +            end;
MPRINT(EM_DIAGRAM):   end;
1153103   +         end;
MPRINT(EM_DIAGRAM):   end;
1153104   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153105   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1153106   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1153107   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153108   +            end;
MPRINT(EM_DIAGRAM):   end;
1153109   +         end;
MPRINT(EM_DIAGRAM):   end;
1153110   +      end;
MPRINT(EM_DIAGRAM):   end;
1153111   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153112   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1153113   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1153114   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153115   +         end;
MPRINT(EM_DIAGRAM):   end;
1153116   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153117   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1153118   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1153119   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153120   +            end;
MPRINT(EM_DIAGRAM):   end;
1153121   +         end;
MPRINT(EM_DIAGRAM):   end;
1153122   +      end;
MPRINT(EM_DIAGRAM):   end;
1153123   +   end;
MPRINT(EM_DIAGRAM):   end;
1153124   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153125   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1153126   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1153127   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1153128   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1153129   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1153130   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1153131   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1153132   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1153133   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1153134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153136   +   end;
MPRINT(EM_DIAGRAM):   end;
1153137   +end;
MPRINT(EM_DIAGRAM):   end;
1153138   +
1153139   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1153140   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1153141   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1153142   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153143   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1153144   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1153145   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1153146   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1153147   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1153148   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1153149   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1153150   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1153151   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1153152   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1153153   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1153154   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1153155   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1153156   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1153157   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1153158   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1153159   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1153160   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1153161   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1153162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153164   +end;
MPRINT(EM_DIAGRAM):   end;
1153165   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153167   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1153168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153169   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153170   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1153171   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1153172   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1153173   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1153174   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1153175   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153176   +            end;
MPRINT(EM_DIAGRAM):   end;
1153177   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153178   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1153179   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1153180   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1153181   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1153182   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1153183   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1153184   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1153185   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1153186   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1153187   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1153188   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153189   +               end;
MPRINT(EM_DIAGRAM):   end;
1153190   +            end;
MPRINT(EM_DIAGRAM):   end;
1153191   +         end;
MPRINT(EM_DIAGRAM):   end;
1153192   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153193   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1153194   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1153195   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153196   +            end;
MPRINT(EM_DIAGRAM):   end;
1153197   +         end;
MPRINT(EM_DIAGRAM):   end;
1153198   +      end;
MPRINT(EM_DIAGRAM):   end;
1153199   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153200   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153201   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1153202   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153203   +         end;
MPRINT(EM_DIAGRAM):   end;
1153204   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153205   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153206   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1153207   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153208   +            end;
MPRINT(EM_DIAGRAM):   end;
1153209   +         end;
MPRINT(EM_DIAGRAM):   end;
1153210   +      end;
MPRINT(EM_DIAGRAM):   end;
1153211   +   end;
MPRINT(EM_DIAGRAM):   end;
1153212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153213   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1153214   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1153215   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1153216   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1153217   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153218   +            end;
MPRINT(EM_DIAGRAM):   end;
1153219   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153220   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1153221   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1153222   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153223   +               end;
MPRINT(EM_DIAGRAM):   end;
1153224   +            end;
MPRINT(EM_DIAGRAM):   end;
1153225   +         end;
MPRINT(EM_DIAGRAM):   end;
1153226   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153227   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1153228   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1153229   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153230   +            end;
MPRINT(EM_DIAGRAM):   end;
1153231   +         end;
MPRINT(EM_DIAGRAM):   end;
1153232   +      end;
MPRINT(EM_DIAGRAM):   end;
1153233   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153234   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1153235   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1153236   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153237   +         end;
MPRINT(EM_DIAGRAM):   end;
1153238   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153239   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1153240   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1153241   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153242   +            end;
MPRINT(EM_DIAGRAM):   end;
1153243   +         end;
MPRINT(EM_DIAGRAM):   end;
1153244   +      end;
MPRINT(EM_DIAGRAM):   end;
1153245   +   end;
MPRINT(EM_DIAGRAM):   end;
1153246   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153247   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1153248   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1153249   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1153250   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1153251   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1153252   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1153253   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1153254   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1153255   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1153256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153258   +   end;
MPRINT(EM_DIAGRAM):   end;
1153259   +end;
MPRINT(EM_DIAGRAM):   end;
1153260   +
1153261   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1153262   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1153263   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1153264   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1153265   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153266   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1153267   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1153268   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1153269   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1153270   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1153271   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1153272   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1153273   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1153274   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1153275   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1153276   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1153277   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1153278   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1153279   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1153280   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1153281   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1153282   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1153283   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153285   +end;
MPRINT(EM_DIAGRAM):   end;
1153286   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153287   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153288   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1153289   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153290   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153291   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1153292   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1153293   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1153294   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1153295   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1153296   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153297   +            end;
MPRINT(EM_DIAGRAM):   end;
1153298   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153299   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1153300   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1153301   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1153302   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1153303   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1153304   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1153305   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1153306   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1153307   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1153308   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153309   +               end;
MPRINT(EM_DIAGRAM):   end;
1153310   +            end;
MPRINT(EM_DIAGRAM):   end;
1153311   +         end;
MPRINT(EM_DIAGRAM):   end;
1153312   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153313   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153314   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1153315   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153316   +            end;
MPRINT(EM_DIAGRAM):   end;
1153317   +         end;
MPRINT(EM_DIAGRAM):   end;
1153318   +      end;
MPRINT(EM_DIAGRAM):   end;
1153319   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153320   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153321   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1153322   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153323   +         end;
MPRINT(EM_DIAGRAM):   end;
1153324   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153325   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1153326   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1153327   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153328   +            end;
MPRINT(EM_DIAGRAM):   end;
1153329   +         end;
MPRINT(EM_DIAGRAM):   end;
1153330   +      end;
MPRINT(EM_DIAGRAM):   end;
1153331   +   end;
MPRINT(EM_DIAGRAM):   end;
1153332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153333   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1153334   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1153335   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1153336   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153337   +         end;
MPRINT(EM_DIAGRAM):   end;
1153338   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153339   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1153340   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1153341   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153342   +            end;
MPRINT(EM_DIAGRAM):   end;
1153343   +         end;
MPRINT(EM_DIAGRAM):   end;
1153344   +      end;
MPRINT(EM_DIAGRAM):   end;
1153345   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153346   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1153347   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1153348   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153349   +         end;
MPRINT(EM_DIAGRAM):   end;
1153350   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153351   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1153352   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1153353   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153354   +            end;
MPRINT(EM_DIAGRAM):   end;
1153355   +         end;
MPRINT(EM_DIAGRAM):   end;
1153356   +      end;
MPRINT(EM_DIAGRAM):   end;
1153357   +   end;
MPRINT(EM_DIAGRAM):   end;
1153358   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153359   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1153360   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1153361   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1153362   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1153363   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1153364   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1153365   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1153366   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1153367   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153368   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153369   +   end;
MPRINT(EM_DIAGRAM):   end;
1153370   +end;
MPRINT(EM_DIAGRAM):   end;
1153371   +
1153372   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1153373   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1153374   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1153375   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1153376   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153377   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1153378   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1153379   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1153380   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1153381   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1153382   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1153383   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1153384   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1153385   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1153386   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1153387   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1153388   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1153389   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1153390   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1153391   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1153392   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1153393   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1153394   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1153395   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1153396   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153397   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153398   +end;
MPRINT(EM_DIAGRAM):   end;
1153399   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153400   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153401   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1153402   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153403   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153404   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1153405   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1153406   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1153407   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1153408   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1153409   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153410   +            end;
MPRINT(EM_DIAGRAM):   end;
1153411   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153412   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1153413   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1153414   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1153415   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1153416   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1153417   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1153418   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1153419   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1153420   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1153421   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1153422   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153423   +               end;
MPRINT(EM_DIAGRAM):   end;
1153424   +            end;
MPRINT(EM_DIAGRAM):   end;
1153425   +         end;
MPRINT(EM_DIAGRAM):   end;
1153426   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153427   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1153428   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1153429   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153430   +            end;
MPRINT(EM_DIAGRAM):   end;
1153431   +         end;
MPRINT(EM_DIAGRAM):   end;
1153432   +      end;
MPRINT(EM_DIAGRAM):   end;
1153433   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153434   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153435   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1153436   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153437   +         end;
MPRINT(EM_DIAGRAM):   end;
1153438   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153439   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153440   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1153441   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153442   +            end;
MPRINT(EM_DIAGRAM):   end;
1153443   +         end;
MPRINT(EM_DIAGRAM):   end;
1153444   +      end;
MPRINT(EM_DIAGRAM):   end;
1153445   +   end;
MPRINT(EM_DIAGRAM):   end;
1153446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153447   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1153448   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1153449   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1153450   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1153451   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153452   +            end;
MPRINT(EM_DIAGRAM):   end;
1153453   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153454   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1153455   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1153456   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153457   +               end;
MPRINT(EM_DIAGRAM):   end;
1153458   +            end;
MPRINT(EM_DIAGRAM):   end;
1153459   +         end;
MPRINT(EM_DIAGRAM):   end;
1153460   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153461   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1153462   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1153463   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153464   +            end;
MPRINT(EM_DIAGRAM):   end;
1153465   +         end;
MPRINT(EM_DIAGRAM):   end;
1153466   +      end;
MPRINT(EM_DIAGRAM):   end;
1153467   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153468   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1153469   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1153470   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153471   +         end;
MPRINT(EM_DIAGRAM):   end;
1153472   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153473   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1153474   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1153475   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153476   +            end;
MPRINT(EM_DIAGRAM):   end;
1153477   +         end;
MPRINT(EM_DIAGRAM):   end;
1153478   +      end;
MPRINT(EM_DIAGRAM):   end;
1153479   +   end;
MPRINT(EM_DIAGRAM):   end;
1153480   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153481   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1153482   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1153483   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1153484   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1153485   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1153486   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1153487   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1153488   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1153489   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1153490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153492   +   end;
MPRINT(EM_DIAGRAM):   end;
1153493   +end;
MPRINT(EM_DIAGRAM):   end;
1153494   +
1153495   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1153496   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1153497   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1153498   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1153499   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153500   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1153501   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1153502   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1153503   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1153504   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1153505   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1153506   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1153507   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1153508   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1153509   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1153510   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1153511   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1153512   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1153513   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1153514   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1153515   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1153516   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1153517   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1153518   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1153519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153521   +end;
MPRINT(EM_DIAGRAM):   end;
1153522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153524   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1153525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153526   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153527   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1153528   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1153529   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1153530   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1153531   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1153532   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153533   +            end;
MPRINT(EM_DIAGRAM):   end;
1153534   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153535   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1153536   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1153537   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1153538   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1153539   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1153540   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1153541   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1153542   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1153543   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1153544   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1153545   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153546   +               end;
MPRINT(EM_DIAGRAM):   end;
1153547   +            end;
MPRINT(EM_DIAGRAM):   end;
1153548   +         end;
MPRINT(EM_DIAGRAM):   end;
1153549   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153550   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1153551   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1153552   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153553   +            end;
MPRINT(EM_DIAGRAM):   end;
1153554   +         end;
MPRINT(EM_DIAGRAM):   end;
1153555   +      end;
MPRINT(EM_DIAGRAM):   end;
1153556   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153557   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153558   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1153559   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153560   +         end;
MPRINT(EM_DIAGRAM):   end;
1153561   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153562   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153563   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1153564   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153565   +            end;
MPRINT(EM_DIAGRAM):   end;
1153566   +         end;
MPRINT(EM_DIAGRAM):   end;
1153567   +      end;
MPRINT(EM_DIAGRAM):   end;
1153568   +   end;
MPRINT(EM_DIAGRAM):   end;
1153569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153570   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1153571   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1153572   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1153573   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1153574   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153575   +            end;
MPRINT(EM_DIAGRAM):   end;
1153576   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153577   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1153578   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1153579   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153580   +               end;
MPRINT(EM_DIAGRAM):   end;
1153581   +            end;
MPRINT(EM_DIAGRAM):   end;
1153582   +         end;
MPRINT(EM_DIAGRAM):   end;
1153583   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153584   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1153585   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1153586   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153587   +            end;
MPRINT(EM_DIAGRAM):   end;
1153588   +         end;
MPRINT(EM_DIAGRAM):   end;
1153589   +      end;
MPRINT(EM_DIAGRAM):   end;
1153590   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153591   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1153592   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1153593   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153594   +         end;
MPRINT(EM_DIAGRAM):   end;
1153595   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153596   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1153597   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1153598   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153599   +            end;
MPRINT(EM_DIAGRAM):   end;
1153600   +         end;
MPRINT(EM_DIAGRAM):   end;
1153601   +      end;
MPRINT(EM_DIAGRAM):   end;
1153602   +   end;
MPRINT(EM_DIAGRAM):   end;
1153603   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153604   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1153605   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1153606   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1153607   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
The SAS System
 
1153608   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1153609   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1153610   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1153611   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1153612   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1153613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153615   +   end;
MPRINT(EM_DIAGRAM):   end;
1153616   +end;
MPRINT(EM_DIAGRAM):   end;
1153617   +
1153618   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1153619   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1153620   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1153621   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1153622   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153623   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1153624   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1153625   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1153626   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1153627   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1153628   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1153629   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1153630   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1153631   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1153632   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1153633   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1153634   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1153635   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1153636   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1153637   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1153638   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1153639   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1153640   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153641   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153642   +end;
MPRINT(EM_DIAGRAM):   end;
1153643   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153644   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153645   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1153646   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153647   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153648   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1153649   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1153650   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1153651   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1153652   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1153653   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153654   +            end;
MPRINT(EM_DIAGRAM):   end;
1153655   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153656   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1153657   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1153658   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1153659   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1153660   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1153661   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1153662   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1153663   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1153664   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1153665   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153666   +               end;
MPRINT(EM_DIAGRAM):   end;
1153667   +            end;
MPRINT(EM_DIAGRAM):   end;
1153668   +         end;
MPRINT(EM_DIAGRAM):   end;
1153669   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153670   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153671   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1153672   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153673   +            end;
MPRINT(EM_DIAGRAM):   end;
1153674   +         end;
MPRINT(EM_DIAGRAM):   end;
1153675   +      end;
MPRINT(EM_DIAGRAM):   end;
1153676   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153677   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153678   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1153679   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153680   +         end;
MPRINT(EM_DIAGRAM):   end;
1153681   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153682   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1153683   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1153684   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153685   +            end;
MPRINT(EM_DIAGRAM):   end;
1153686   +         end;
MPRINT(EM_DIAGRAM):   end;
1153687   +      end;
MPRINT(EM_DIAGRAM):   end;
1153688   +   end;
MPRINT(EM_DIAGRAM):   end;
1153689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153690   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1153691   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1153692   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1153693   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153694   +         end;
MPRINT(EM_DIAGRAM):   end;
1153695   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153696   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1153697   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1153698   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153699   +            end;
MPRINT(EM_DIAGRAM):   end;
1153700   +         end;
MPRINT(EM_DIAGRAM):   end;
1153701   +      end;
MPRINT(EM_DIAGRAM):   end;
1153702   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153703   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1153704   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1153705   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153706   +         end;
MPRINT(EM_DIAGRAM):   end;
1153707   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153708   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1153709   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1153710   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153711   +            end;
MPRINT(EM_DIAGRAM):   end;
1153712   +         end;
MPRINT(EM_DIAGRAM):   end;
1153713   +      end;
MPRINT(EM_DIAGRAM):   end;
1153714   +   end;
MPRINT(EM_DIAGRAM):   end;
1153715   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153716   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1153717   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1153718   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1153719   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1153720   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1153721   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1153722   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1153723   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1153724   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153725   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153726   +   end;
MPRINT(EM_DIAGRAM):   end;
1153727   +end;
MPRINT(EM_DIAGRAM):   end;
1153728   +
1153729   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1153730   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1153731   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1153732   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153733   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1153734   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1153735   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1153736   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1153737   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1153738   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1153739   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1153740   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1153741   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1153742   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1153743   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1153744   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1153745   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1153746   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1153747   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1153748   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1153749   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1153750   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1153751   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1153752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153754   +end;
MPRINT(EM_DIAGRAM):   end;
1153755   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153756   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153757   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1153758   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153759   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153760   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1153761   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1153762   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1153763   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1153764   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1153765   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153766   +            end;
MPRINT(EM_DIAGRAM):   end;
1153767   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153768   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1153769   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1153770   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1153771   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1153772   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1153773   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1153774   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1153775   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1153776   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1153777   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1153778   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153779   +               end;
MPRINT(EM_DIAGRAM):   end;
1153780   +            end;
MPRINT(EM_DIAGRAM):   end;
1153781   +         end;
MPRINT(EM_DIAGRAM):   end;
1153782   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153783   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1153784   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1153785   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153786   +            end;
MPRINT(EM_DIAGRAM):   end;
1153787   +         end;
MPRINT(EM_DIAGRAM):   end;
1153788   +      end;
MPRINT(EM_DIAGRAM):   end;
1153789   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153790   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153791   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1153792   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153793   +         end;
MPRINT(EM_DIAGRAM):   end;
1153794   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153795   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153796   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1153797   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153798   +            end;
MPRINT(EM_DIAGRAM):   end;
1153799   +         end;
MPRINT(EM_DIAGRAM):   end;
1153800   +      end;
MPRINT(EM_DIAGRAM):   end;
1153801   +   end;
MPRINT(EM_DIAGRAM):   end;
1153802   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153803   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1153804   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1153805   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1153806   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1153807   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153808   +            end;
MPRINT(EM_DIAGRAM):   end;
1153809   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153810   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1153811   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1153812   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153813   +               end;
MPRINT(EM_DIAGRAM):   end;
1153814   +            end;
MPRINT(EM_DIAGRAM):   end;
1153815   +         end;
MPRINT(EM_DIAGRAM):   end;
1153816   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153817   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1153818   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1153819   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153820   +            end;
MPRINT(EM_DIAGRAM):   end;
1153821   +         end;
MPRINT(EM_DIAGRAM):   end;
1153822   +      end;
MPRINT(EM_DIAGRAM):   end;
1153823   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153824   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1153825   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1153826   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153827   +         end;
MPRINT(EM_DIAGRAM):   end;
1153828   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153829   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1153830   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1153831   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153832   +            end;
MPRINT(EM_DIAGRAM):   end;
1153833   +         end;
MPRINT(EM_DIAGRAM):   end;
1153834   +      end;
MPRINT(EM_DIAGRAM):   end;
1153835   +   end;
MPRINT(EM_DIAGRAM):   end;
1153836   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153837   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1153838   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1153839   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1153840   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1153841   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1153842   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1153843   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1153844   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1153845   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1153846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153848   +   end;
MPRINT(EM_DIAGRAM):   end;
1153849   +end;
MPRINT(EM_DIAGRAM):   end;
1153850   +
1153851   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1153852   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1153853   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1153854   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1153855   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153856   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1153857   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1153858   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1153859   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1153860   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1153861   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1153862   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1153863   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1153864   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1153865   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1153866   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1153867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153869   +end;
MPRINT(EM_DIAGRAM):   end;
1153870   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153871   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153872   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1153873   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153874   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153875   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1153876   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1153877   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153878   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1153879   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153880   +         end;
MPRINT(EM_DIAGRAM):   end;
1153881   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153882   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153883   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1153884   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153885   +            end;
MPRINT(EM_DIAGRAM):   end;
1153886   +         end;
MPRINT(EM_DIAGRAM):   end;
1153887   +      end;
MPRINT(EM_DIAGRAM):   end;
1153888   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153889   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1153890   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1153891   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153892   +         end;
MPRINT(EM_DIAGRAM):   end;
1153893   +      end;
MPRINT(EM_DIAGRAM):   end;
1153894   +   end;
MPRINT(EM_DIAGRAM):   end;
1153895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153896   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1153897   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1153898   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1153899   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153900   +         end;
MPRINT(EM_DIAGRAM):   end;
1153901   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153902   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1153903   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1153904   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153905   +            end;
MPRINT(EM_DIAGRAM):   end;
1153906   +         end;
MPRINT(EM_DIAGRAM):   end;
1153907   +      end;
MPRINT(EM_DIAGRAM):   end;
1153908   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153909   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1153910   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1153911   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1153912   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1153913   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1153914   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1153915   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153916   +         end;
MPRINT(EM_DIAGRAM):   end;
1153917   +      end;
MPRINT(EM_DIAGRAM):   end;
1153918   +   end;
MPRINT(EM_DIAGRAM):   end;
1153919   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153920   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1153921   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1153922   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1153923   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1153924   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1153925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153927   +   end;
MPRINT(EM_DIAGRAM):   end;
1153928   +end;
MPRINT(EM_DIAGRAM):   end;
1153929   +
1153930   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1153931   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1153932   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1153933   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1153934   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153935   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1153936   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1153937   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1153938   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1153939   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1153940   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1153941   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1153942   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1153943   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1153944   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1153945   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1153946   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1153947   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1153948   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1153949   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1153950   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1153951   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1153952   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1153953   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1153954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153956   +end;
MPRINT(EM_DIAGRAM):   end;
1153957   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153958   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153959   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1153960   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153961   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153962   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1153963   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1153964   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1153965   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1153966   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1153967   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153968   +            end;
MPRINT(EM_DIAGRAM):   end;
1153969   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1153970   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1153971   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1153972   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1153973   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1153974   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1153975   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1153976   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1153977   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1153978   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1153979   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1153980   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153981   +               end;
MPRINT(EM_DIAGRAM):   end;
1153982   +            end;
MPRINT(EM_DIAGRAM):   end;
1153983   +         end;
MPRINT(EM_DIAGRAM):   end;
1153984   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153985   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1153986   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1153987   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153988   +            end;
MPRINT(EM_DIAGRAM):   end;
1153989   +         end;
MPRINT(EM_DIAGRAM):   end;
1153990   +      end;
MPRINT(EM_DIAGRAM):   end;
1153991   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153992   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1153993   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1153994   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153995   +         end;
MPRINT(EM_DIAGRAM):   end;
1153996   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153997   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1153998   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1153999   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154000   +            end;
MPRINT(EM_DIAGRAM):   end;
1154001   +         end;
MPRINT(EM_DIAGRAM):   end;
1154002   +      end;
MPRINT(EM_DIAGRAM):   end;
1154003   +   end;
MPRINT(EM_DIAGRAM):   end;
1154004   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154005   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1154006   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1154007   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1154008   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1154009   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154010   +            end;
MPRINT(EM_DIAGRAM):   end;
1154011   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1154012   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1154013   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1154014   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154015   +               end;
MPRINT(EM_DIAGRAM):   end;
1154016   +            end;
MPRINT(EM_DIAGRAM):   end;
1154017   +         end;
MPRINT(EM_DIAGRAM):   end;
1154018   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154019   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1154020   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1154021   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154022   +            end;
MPRINT(EM_DIAGRAM):   end;
1154023   +         end;
MPRINT(EM_DIAGRAM):   end;
1154024   +      end;
MPRINT(EM_DIAGRAM):   end;
1154025   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154026   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1154027   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1154028   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154029   +         end;
MPRINT(EM_DIAGRAM):   end;
1154030   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154031   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1154032   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1154033   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154034   +            end;
MPRINT(EM_DIAGRAM):   end;
1154035   +         end;
MPRINT(EM_DIAGRAM):   end;
1154036   +      end;
MPRINT(EM_DIAGRAM):   end;
1154037   +   end;
MPRINT(EM_DIAGRAM):   end;
1154038   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154039   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1154040   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1154041   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1154042   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1154043   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1154044   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1154045   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1154046   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1154047   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1154048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154050   +   end;
MPRINT(EM_DIAGRAM):   end;
1154051   +end;
MPRINT(EM_DIAGRAM):   end;
1154052   +
1154053   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1154054   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1154055   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1154056   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1154057   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154058   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1154059   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1154060   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1154061   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1154062   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1154063   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1154064   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1154065   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1154066   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1154067   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1154068   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1154069   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1154070   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1154071   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1154072   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1154073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154075   +end;
MPRINT(EM_DIAGRAM):   end;
1154076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154078   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1154079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154080   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154081   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1154082   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1154083   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1154084   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1154085   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154086   +         end;
MPRINT(EM_DIAGRAM):   end;
1154087   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154088   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1154089   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1154090   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154091   +            end;
MPRINT(EM_DIAGRAM):   end;
1154092   +         end;
MPRINT(EM_DIAGRAM):   end;
1154093   +      end;
MPRINT(EM_DIAGRAM):   end;
1154094   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154095   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1154096   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1154097   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154098   +         end;
MPRINT(EM_DIAGRAM):   end;
1154099   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154100   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1154101   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1154102   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154103   +            end;
MPRINT(EM_DIAGRAM):   end;
1154104   +         end;
MPRINT(EM_DIAGRAM):   end;
1154105   +      end;
MPRINT(EM_DIAGRAM):   end;
1154106   +   end;
MPRINT(EM_DIAGRAM):   end;
1154107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154108   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1154109   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1154110   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1154111   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154112   +         end;
MPRINT(EM_DIAGRAM):   end;
1154113   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154114   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1154115   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1154116   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154117   +            end;
MPRINT(EM_DIAGRAM):   end;
1154118   +         end;
MPRINT(EM_DIAGRAM):   end;
1154119   +      end;
MPRINT(EM_DIAGRAM):   end;
1154120   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154121   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1154122   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1154123   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154124   +         end;
MPRINT(EM_DIAGRAM):   end;
1154125   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154126   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1154127   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1154128   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1154129   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1154130   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1154131   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1154132   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1154133   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1154134   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154135   +            end;
MPRINT(EM_DIAGRAM):   end;
1154136   +         end;
MPRINT(EM_DIAGRAM):   end;
1154137   +      end;
MPRINT(EM_DIAGRAM):   end;
1154138   +   end;
MPRINT(EM_DIAGRAM):   end;
1154139   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154140   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1154141   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1154142   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1154143   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1154144   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1154145   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1154146   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1154147   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154148   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154149   +   end;
MPRINT(EM_DIAGRAM):   end;
1154150   +end;
MPRINT(EM_DIAGRAM):   end;
1154151   +
1154152   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1154153   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1154154   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1154155   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1154156   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154157   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1154158   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1154159   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1154160   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1154161   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1154162   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1154163   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1154164   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1154165   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1154166   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1154167   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1154168   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1154169   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1154170   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1154171   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1154172   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154174   +end;
MPRINT(EM_DIAGRAM):   end;
1154175   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154176   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154177   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1154178   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154179   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154180   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1154181   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1154182   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1154183   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1154184   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154185   +         end;
MPRINT(EM_DIAGRAM):   end;
1154186   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154187   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1154188   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1154189   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154190   +            end;
MPRINT(EM_DIAGRAM):   end;
1154191   +         end;
MPRINT(EM_DIAGRAM):   end;
1154192   +      end;
MPRINT(EM_DIAGRAM):   end;
1154193   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154194   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1154195   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1154196   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154197   +         end;
MPRINT(EM_DIAGRAM):   end;
1154198   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154199   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1154200   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1154201   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154202   +            end;
MPRINT(EM_DIAGRAM):   end;
1154203   +         end;
MPRINT(EM_DIAGRAM):   end;
1154204   +      end;
MPRINT(EM_DIAGRAM):   end;
1154205   +   end;
MPRINT(EM_DIAGRAM):   end;
1154206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154207   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1154208   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1154209   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1154210   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154211   +         end;
MPRINT(EM_DIAGRAM):   end;
1154212   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154213   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1154214   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1154215   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154216   +            end;
MPRINT(EM_DIAGRAM):   end;
1154217   +         end;
MPRINT(EM_DIAGRAM):   end;
1154218   +      end;
MPRINT(EM_DIAGRAM):   end;
1154219   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154220   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1154221   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1154222   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154223   +         end;
MPRINT(EM_DIAGRAM):   end;
1154224   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154225   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1154226   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1154227   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1154228   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1154229   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1154230   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1154231   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1154232   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1154233   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154234   +            end;
MPRINT(EM_DIAGRAM):   end;
1154235   +         end;
MPRINT(EM_DIAGRAM):   end;
1154236   +      end;
MPRINT(EM_DIAGRAM):   end;
1154237   +   end;
MPRINT(EM_DIAGRAM):   end;
1154238   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154239   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1154240   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1154241   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1154242   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1154243   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1154244   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1154245   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1154246   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154247   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154248   +   end;
MPRINT(EM_DIAGRAM):   end;
1154249   +end;
MPRINT(EM_DIAGRAM):   end;
1154250   +
1154251   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1154252   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1154253   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1154254   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154255   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1154256   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1154257   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1154258   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1154259   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1154260   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1154261   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1154262   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1154263   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1154264   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1154265   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1154266   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1154267   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1154268   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1154269   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1154270   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1154271   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1154272   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1154273   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1154274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154276   +end;
MPRINT(EM_DIAGRAM):   end;
1154277   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154278   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154279   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1154280   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154281   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154282   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1154283   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1154284   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1154285   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1154286   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1154287   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154288   +            end;
MPRINT(EM_DIAGRAM):   end;
1154289   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1154290   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1154291   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1154292   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1154293   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1154294   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1154295   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1154296   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1154297   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1154298   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1154299   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1154300   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154301   +               end;
MPRINT(EM_DIAGRAM):   end;
1154302   +            end;
MPRINT(EM_DIAGRAM):   end;
1154303   +         end;
MPRINT(EM_DIAGRAM):   end;
1154304   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154305   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1154306   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1154307   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154308   +            end;
MPRINT(EM_DIAGRAM):   end;
1154309   +         end;
MPRINT(EM_DIAGRAM):   end;
1154310   +      end;
MPRINT(EM_DIAGRAM):   end;
1154311   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154312   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1154313   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1154314   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154315   +         end;
MPRINT(EM_DIAGRAM):   end;
1154316   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154317   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1154318   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1154319   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154320   +            end;
MPRINT(EM_DIAGRAM):   end;
1154321   +         end;
MPRINT(EM_DIAGRAM):   end;
1154322   +      end;
MPRINT(EM_DIAGRAM):   end;
1154323   +   end;
MPRINT(EM_DIAGRAM):   end;
1154324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154325   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1154326   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1154327   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1154328   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1154329   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154330   +            end;
MPRINT(EM_DIAGRAM):   end;
1154331   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1154332   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1154333   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1154334   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154335   +               end;
MPRINT(EM_DIAGRAM):   end;
1154336   +            end;
MPRINT(EM_DIAGRAM):   end;
1154337   +         end;
MPRINT(EM_DIAGRAM):   end;
1154338   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154339   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1154340   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1154341   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154342   +            end;
MPRINT(EM_DIAGRAM):   end;
1154343   +         end;
MPRINT(EM_DIAGRAM):   end;
1154344   +      end;
MPRINT(EM_DIAGRAM):   end;
1154345   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154346   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1154347   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1154348   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154349   +         end;
MPRINT(EM_DIAGRAM):   end;
1154350   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154351   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1154352   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1154353   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154354   +            end;
MPRINT(EM_DIAGRAM):   end;
1154355   +         end;
MPRINT(EM_DIAGRAM):   end;
1154356   +      end;
MPRINT(EM_DIAGRAM):   end;
1154357   +   end;
MPRINT(EM_DIAGRAM):   end;
1154358   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154359   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1154360   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1154361   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1154362   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1154363   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1154364   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1154365   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1154366   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1154367   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1154368   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154369   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154370   +   end;
MPRINT(EM_DIAGRAM):   end;
1154371   +end;
MPRINT(EM_DIAGRAM):   end;
1154372   +
1154373   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1154374   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1154375   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1154376   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154377   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1154378   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1154379   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1154380   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1154381   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1154382   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1154383   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1154384   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1154385   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1154386   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1154387   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1154388   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1154389   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1154390   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1154391   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1154392   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1154393   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1154394   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1154395   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1154396   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154397   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154398   +end;
MPRINT(EM_DIAGRAM):   end;
1154399   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154400   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154401   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1154402   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154403   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154404   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1154405   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1154406   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1154407   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1154408   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1154409   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154410   +            end;
MPRINT(EM_DIAGRAM):   end;
1154411   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1154412   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1154413   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1154414   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1154415   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1154416   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1154417   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1154418   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1154419   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1154420   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1154421   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1154422   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154423   +               end;
MPRINT(EM_DIAGRAM):   end;
1154424   +            end;
MPRINT(EM_DIAGRAM):   end;
1154425   +         end;
MPRINT(EM_DIAGRAM):   end;
1154426   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154427   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1154428   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1154429   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154430   +            end;
MPRINT(EM_DIAGRAM):   end;
1154431   +         end;
MPRINT(EM_DIAGRAM):   end;
1154432   +      end;
MPRINT(EM_DIAGRAM):   end;
1154433   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154434   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1154435   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1154436   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154437   +         end;
MPRINT(EM_DIAGRAM):   end;
1154438   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154439   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1154440   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1154441   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154442   +            end;
MPRINT(EM_DIAGRAM):   end;
1154443   +         end;
MPRINT(EM_DIAGRAM):   end;
1154444   +      end;
MPRINT(EM_DIAGRAM):   end;
1154445   +   end;
MPRINT(EM_DIAGRAM):   end;
1154446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154447   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1154448   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1154449   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1154450   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1154451   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154452   +            end;
MPRINT(EM_DIAGRAM):   end;
1154453   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1154454   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1154455   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1154456   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154457   +               end;
MPRINT(EM_DIAGRAM):   end;
1154458   +            end;
MPRINT(EM_DIAGRAM):   end;
1154459   +         end;
MPRINT(EM_DIAGRAM):   end;
1154460   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154461   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1154462   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1154463   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154464   +            end;
MPRINT(EM_DIAGRAM):   end;
1154465   +         end;
MPRINT(EM_DIAGRAM):   end;
1154466   +      end;
MPRINT(EM_DIAGRAM):   end;
1154467   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154468   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1154469   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1154470   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154471   +         end;
MPRINT(EM_DIAGRAM):   end;
1154472   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154473   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1154474   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1154475   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154476   +            end;
MPRINT(EM_DIAGRAM):   end;
1154477   +         end;
MPRINT(EM_DIAGRAM):   end;
1154478   +      end;
MPRINT(EM_DIAGRAM):   end;
1154479   +   end;
MPRINT(EM_DIAGRAM):   end;
1154480   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154481   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1154482   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1154483   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1154484   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1154485   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1154486   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1154487   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1154488   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1154489   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1154490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154492   +   end;
MPRINT(EM_DIAGRAM):   end;
1154493   +end;
MPRINT(EM_DIAGRAM):   end;
1154494   +
1154495   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1154496   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1154497   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1154498   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154499   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1154500   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1154501   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1154502   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1154503   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1154504   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1154505   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1154506   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1154507   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1154508   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1154509   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1154510   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1154511   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1154512   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1154513   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1154514   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1154515   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1154516   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1154517   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1154518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154520   +end;
MPRINT(EM_DIAGRAM):   end;
1154521   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154523   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1154524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154525   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154526   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1154527   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1154528   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1154529   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1154530   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1154531   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154532   +            end;
MPRINT(EM_DIAGRAM):   end;
1154533   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1154534   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1154535   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1154536   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1154537   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1154538   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1154539   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1154540   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1154541   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1154542   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1154543   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1154544   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154545   +               end;
MPRINT(EM_DIAGRAM):   end;
1154546   +            end;
MPRINT(EM_DIAGRAM):   end;
1154547   +         end;
MPRINT(EM_DIAGRAM):   end;
1154548   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154549   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1154550   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1154551   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154552   +            end;
MPRINT(EM_DIAGRAM):   end;
1154553   +         end;
MPRINT(EM_DIAGRAM):   end;
1154554   +      end;
MPRINT(EM_DIAGRAM):   end;
1154555   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154556   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1154557   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1154558   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154559   +         end;
MPRINT(EM_DIAGRAM):   end;
1154560   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154561   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1154562   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1154563   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154564   +            end;
MPRINT(EM_DIAGRAM):   end;
1154565   +         end;
MPRINT(EM_DIAGRAM):   end;
1154566   +      end;
MPRINT(EM_DIAGRAM):   end;
1154567   +   end;
MPRINT(EM_DIAGRAM):   end;
1154568   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154569   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1154570   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1154571   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1154572   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1154573   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154574   +            end;
MPRINT(EM_DIAGRAM):   end;
1154575   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1154576   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1154577   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1154578   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154579   +               end;
MPRINT(EM_DIAGRAM):   end;
1154580   +            end;
MPRINT(EM_DIAGRAM):   end;
1154581   +         end;
MPRINT(EM_DIAGRAM):   end;
1154582   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154583   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1154584   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1154585   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154586   +            end;
MPRINT(EM_DIAGRAM):   end;
1154587   +         end;
MPRINT(EM_DIAGRAM):   end;
1154588   +      end;
MPRINT(EM_DIAGRAM):   end;
1154589   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154590   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1154591   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1154592   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154593   +         end;
MPRINT(EM_DIAGRAM):   end;
1154594   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154595   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1154596   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1154597   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154598   +            end;
MPRINT(EM_DIAGRAM):   end;
1154599   +         end;
MPRINT(EM_DIAGRAM):   end;
1154600   +      end;
MPRINT(EM_DIAGRAM):   end;
1154601   +   end;
MPRINT(EM_DIAGRAM):   end;
1154602   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154603   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1154604   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1154605   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1154606   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1154607   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1154608   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1154609   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1154610   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1154611   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1154612   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154613   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154614   +   end;
MPRINT(EM_DIAGRAM):   end;
1154615   +end;
MPRINT(EM_DIAGRAM):   end;
1154616   +
1154617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154618   +*** Checking missing input Interval
1154619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1154620   +
1154621   +IF NMISS(
1154622   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1154623   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1154624   +
1154625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154626   +END;
MPRINT(EM_DIAGRAM):   END;
1154627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154628   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1154629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154630   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154631   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1154632   +END;
MPRINT(EM_DIAGRAM):   END;
1154633   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1154634   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1154635   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1154636   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1154637   +END;
MPRINT(EM_DIAGRAM):   END;
1154638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154639   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1154640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154642   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1154643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154644   +
1154645   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1154646   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1154647   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1154648   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1154649   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1154650   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154651   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1154652   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1154653   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1154654   +end;
MPRINT(EM_DIAGRAM):   end;
1154655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154656   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1154657   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1154658   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1154659   +   end;
MPRINT(EM_DIAGRAM):   end;
1154660   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1154661   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1154662   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1154663   +   end;
MPRINT(EM_DIAGRAM):   end;
1154664   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154665   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1154666   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1154667   +   end;
MPRINT(EM_DIAGRAM):   end;
1154668   +end;
MPRINT(EM_DIAGRAM):   end;
1154669   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154670   +   P_DepVar1  =     0.13041505791867 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13041505791867 * S_Year_Birth ;
1154671   +   P_DepVar1  = P_DepVar1  +    -0.81394914954047 * GRP_AcceptedCmp52
1154672   +          +    -1.57479065391046 * GRP_AcceptedCmpTotal3
1154673   +          +     0.55721665311121 * GRP_Frq2  +     2.03538591612101 * GRP_Frq3
1154674   +          +     1.71084973908714 * GRP_Frq4  +     0.93073119070526 * GRP_Frq5
1154675   +          +     0.58841250291933 * GRP_Frq6  +    -0.21635109021843 * GRP_Frq7
1154676   +          +      0.0213506254167 * GRP_Frq8  +    -1.30191697936168 * GRP_Frq9
1154677   +          +    -1.31179820046974 * GRP_Frq10  +    -1.08336033604841 *
1154678   +        GRP_Income2  +    -0.79871206076892 * GRP_Income3
1154679   +          +    -0.30315183422585 * GRP_Income4  +     0.82131408307175 *
1154680   +        GRP_Income5  +     0.48741274023405 * GRP_Income6
1154681   +          +    -0.50872786670529 * GRP_Income7  +     -0.8768319258445 *
1154682   +        GRP_Income8  +    -0.05749742206435 * GRP_Income9
1154683   +          +     0.62080590842343 * GRP_Income10  +     2.52780693320463 *
1154684   +        GRP_Mnt2  +     1.42753900899901 * GRP_Mnt3  +    -0.37486538648468 *
1154685   +        GRP_Mnt4  +    -0.70186702387476 * GRP_Mnt5  +    -1.09419855761909 *
1154686   +        GRP_Mnt6  +    -0.74794036813571 * GRP_Mnt7  +    -0.38086942027823 *
1154687   +        GRP_Mnt8  +    -0.14878906184572 * GRP_Mnt9  +     0.10029389010909 *
1154688   +        GRP_Mnt10  +     0.93741359799158 * GRP_MntFishProducts3
1154689   +          +     0.33815869767181 * GRP_MntFishProducts4
1154690   +          +     0.18521216857753 * GRP_MntFishProducts5
1154691   +          +    -0.17622093488116 * GRP_MntFishProducts6
1154692   +          +     0.10360579093666 * GRP_MntFishProducts7
1154693   +          +     0.67417645975591 * GRP_MntFishProducts8
1154694   +          +     -0.4949659833943 * GRP_MntFishProducts9
1154695   +          +    -0.53307075001864 * GRP_MntFishProducts10
1154696   +          +    -0.44965793048776 * GRP_MntGoldProds2
1154697   +          +     0.70029834666821 * GRP_MntGoldProds3
1154698   +          +     0.26643011384249 * GRP_MntGoldProds4
1154699   +          +      0.2416000208193 * GRP_MntGoldProds5
1154700   +          +    -0.16739557727601 * GRP_MntGoldProds6
1154701   +          +    -0.03966136377161 * GRP_MntGoldProds7
1154702   +          +    -0.14433335823753 * GRP_MntGoldProds8
1154703   +          +    -0.01379766565883 * GRP_MntGoldProds9
1154704   +          +    -0.47948207920798 * GRP_MntGoldProds10
1154705   +          +     -7.7797809223883 * GRP_MntMeatProducts2
1154706   +          +    -4.30448682283205 * GRP_MntMeatProducts3
1154707   +          +    -3.09196678122785 * GRP_MntMeatProducts4
1154708   +          +    -1.39782945162908 * GRP_MntMeatProducts5
1154709   +          +     0.98656746132259 * GRP_MntMeatProducts6
1154710   +          +     1.23570299146524 * GRP_MntMeatProducts7
1154711   +          +     2.63070630185363 * GRP_MntMeatProducts8
1154712   +          +     2.57140709387759 * GRP_MntMeatProducts9
1154713   +          +     3.88874807046828 * GRP_MntMeatProducts10
1154714   +          +     0.33174074042224 * GRP_MntSweetProducts3
1154715   +          +     0.69101850116915 * GRP_MntSweetProducts4
1154716   +          +     0.17295436074838 * GRP_MntSweetProducts5
1154717   +          +      0.0314089298439 * GRP_MntSweetProducts6
1154718   +          +     0.79474403533727 * GRP_MntSweetProducts7
1154719   +          +    -0.35030029933384 * GRP_MntSweetProducts8
1154720   +          +    -0.22491638984504 * GRP_MntSweetProducts9
1154721   +          +    -0.26300371563779 * GRP_MntSweetProducts10
1154722   +          +       4.623529533535 * GRP_MntWines2  +     3.38930591268617 *
1154723   +        GRP_MntWines3  +     2.86869681071208 * GRP_MntWines4
1154724   +          +     1.99919334553514 * GRP_MntWines5  +     0.51392642718101 *
1154725   +        GRP_MntWines6  +    -0.54295287328303 * GRP_MntWines7
1154726   +          +     -1.9404151310852 * GRP_MntWines8  +    -2.81755694441313 *
1154727   +        GRP_MntWines9  +    -3.65585472427726 * GRP_MntWines10
1154728   +          +    -6.48636650946379 * GRP_NumCatalogPurchases3
1154729   +          +    -2.42520952237724 * GRP_NumCatalogPurchases4
1154730   +          +     0.23992315717993 * GRP_NumCatalogPurchases5
1154731   +          +     1.78022371269645 * GRP_NumCatalogPurchases6
1154732   +          +     2.51919850869031 * GRP_NumCatalogPurchases7
1154733   +          +    -0.29160915509933 * GRP_NumDistPurchases2
1154734   +          +    -1.59386292237547 * GRP_NumDistPurchases3
1154735   +          +    -0.58149143918747 * GRP_NumDistPurchases4
1154736   +          +    -0.15227686380495 * GRP_NumDistPurchases5
1154737   +          +    -0.39776772752273 * GRP_NumDistPurchases6
1154738   +          +    -0.25189925687254 * GRP_NumDistPurchases7
1154739   +          +     -0.8006222944202 * GRP_NumDistPurchases8
1154740   +          +      1.1137088740435 * GRP_NumDistPurchases9
1154741   +          +     1.23069956311587 * GRP_NumDistPurchases10
1154742   +          +     0.00077574452293 * GRP_NumWebPurchases2
1154743   +          +     0.24159496564294 * GRP_NumWebPurchases3
1154744   +          +     0.30982055062128 * GRP_NumWebPurchases4
1154745   +          +     0.91413433678014 * GRP_NumWebPurchases5
1154746   +          +     0.47430505202684 * GRP_NumWebPurchases6
1154747   +          +     0.05910332727627 * GRP_NumWebPurchases7
1154748   +          +    -0.73591735479205 * GRP_NumWebPurchases8
1154749   +          +     -4.1347431929822 * GRP_NumWebVisitsMonth2
1154750   +          +    -2.56208193086546 * GRP_NumWebVisitsMonth3
1154751   +          +    -1.81937126717482 * GRP_NumWebVisitsMonth4
1154752   +          +    -0.77444924696859 * GRP_NumWebVisitsMonth5
1154753   +          +     0.82562856901811 * GRP_NumWebVisitsMonth6
1154754   +          +     1.04369947846006 * GRP_NumWebVisitsMonth7
1154755   +          +     2.55675009308953 * GRP_NumWebVisitsMonth8
1154756   +          +     0.20809605612831 * GRP_RFMstat2  +    -1.61430160476517 *
1154757   +        GRP_RFMstat3  +    -0.52301122119481 * GRP_RFMstat4
1154758   +          +    -0.55945361088087 * GRP_RFMstat5  +    -0.14424212281577 *
1154759   +        GRP_RFMstat6  +     1.05234320810026 * GRP_RFMstat7
1154760   +          +    -0.05407410464352 * GRP_RFMstat8  +    -0.01646632074069 *
1154761   +        GRP_RFMstat9  +     0.70828472822109 * GRP_RFMstat10
1154762   +          +      1.8726948284706 * GRP_RMntFrq2  +     1.05367221065359 *
1154763   +        GRP_RMntFrq3  +     1.16252388400818 * GRP_RMntFrq4
1154764   +          +    -0.68337506267394 * GRP_RMntFrq5  +    -0.30999632256804 *
1154765   +        GRP_RMntFrq6  +      -1.800352250825 * GRP_RMntFrq7
1154766   +          +    -1.53582014310476 * GRP_RMntFrq8  +    -0.07192943405375 *
1154767   +        GRP_RMntFrq9  +    -0.60583604685254 * GRP_RMntFrq10
1154768   +          +     3.84355692804923 * GRP_Recency2  +     2.89076929480023 *
1154769   +        GRP_Recency3  +     2.87026210399223 * GRP_Recency4
1154770   +          +     1.49685595027077 * GRP_Recency5  +    -0.07603609831014 *
1154771   +        GRP_Recency6  +    -0.44761807904964 * GRP_Recency7
1154772   +          +    -1.48577941891686 * GRP_Recency8  +    -1.45982970045671 *
1154773   +        GRP_Recency9  +     -3.5176122167203 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.81394914954047 * GRP_AcceptedCmp52 +
-1.57479065391046 * GRP_AcceptedCmpTotal3 + 0.55721665311121 * GRP_Frq2 + 2.03538591612101 *
GRP_Frq3 + 1.71084973908714 * GRP_Frq4 + 0.93073119070526 * GRP_Frq5 + 0.58841250291933 *
GRP_Frq6 + -0.21635109021843 * GRP_Frq7 + 0.0213506254167 * GRP_Frq8 + -1.30191697936168 *
GRP_Frq9 + -1.31179820046974 * GRP_Frq10 + -1.08336033604841 * GRP_Income2 + -0.79871206076892
* GRP_Income3 + -0.30315183422585 * GRP_Income4 + 0.82131408307175 * GRP_Income5 +
0.48741274023405 * GRP_Income6 + -0.50872786670529 * GRP_Income7 + -0.8768319258445 *
GRP_Income8 + -0.05749742206435 * GRP_Income9 + 0.62080590842343 * GRP_Income10 +
2.52780693320463 * GRP_Mnt2 + 1.42753900899901 * GRP_Mnt3 + -0.37486538648468 * GRP_Mnt4 +
-0.70186702387476 * GRP_Mnt5 + -1.09419855761909 * GRP_Mnt6 + -0.74794036813571 * GRP_Mnt7 +
-0.38086942027823 * GRP_Mnt8 + -0.14878906184572 * GRP_Mnt9 + 0.10029389010909 * GRP_Mnt10 +
0.93741359799158 * GRP_MntFishProducts3 + 0.33815869767181 * GRP_MntFishProducts4 +
0.18521216857753 * GRP_MntFishProducts5 + -0.17622093488116 * GRP_MntFishProducts6 +
0.10360579093666 * GRP_MntFishProducts7 + 0.67417645975591 * GRP_MntFishProducts8 +
-0.4949659833943 * GRP_MntFishProducts9 + -0.53307075001864 * GRP_MntFishProducts10 +
-0.44965793048776 * GRP_MntGoldProds2 + 0.70029834666821 * GRP_MntGoldProds3 +
0.26643011384249 * GRP_MntGoldProds4 + 0.2416000208193 * GRP_MntGoldProds5 + -0.16739557727601
* GRP_MntGoldProds6 + -0.03966136377161 * GRP_MntGoldProds7 + -0.14433335823753 *
GRP_MntGoldProds8 + -0.01379766565883 * GRP_MntGoldProds9 + -0.47948207920798 *
GRP_MntGoldProds10 + -7.7797809223883 * GRP_MntMeatProducts2 + -4.30448682283205 *
GRP_MntMeatProducts3 + -3.09196678122785 * GRP_MntMeatProducts4 + -1.39782945162908 *
GRP_MntMeatProducts5 + 0.98656746132259 * GRP_MntMeatProducts6 + 1.23570299146524 *
GRP_MntMeatProducts7 + 2.63070630185363 * GRP_MntMeatProducts8 + 2.57140709387759 *
GRP_MntMeatProducts9 + 3.88874807046828 * GRP_MntMeatProducts10 + 0.33174074042224 *
GRP_MntSweetProducts3 + 0.69101850116915 * GRP_MntSweetProducts4 + 0.17295436074838 *
GRP_MntSweetProducts5 + 0.0314089298439 * GRP_MntSweetProducts6 + 0.79474403533727 *
GRP_MntSweetProducts7 + -0.35030029933384 * GRP_MntSweetProducts8 + -0.22491638984504 *
GRP_MntSweetProducts9 + -0.26300371563779 * GRP_MntSweetProducts10 + 4.623529533535 *
GRP_MntWines2 + 3.38930591268617 * GRP_MntWines3 + 2.86869681071208 * GRP_MntWines4 +
1.99919334553514 * GRP_MntWines5 + 0.51392642718101 * GRP_MntWines6 + -0.54295287328303 *
GRP_MntWines7 + -1.9404151310852 * GRP_MntWines8 + -2.81755694441313 * GRP_MntWines9 +
-3.65585472427726 * GRP_MntWines10 + -6.48636650946379 * GRP_NumCatalogPurchases3 +
-2.42520952237724 * GRP_NumCatalogPurchases4 + 0.23992315717993 * GRP_NumCatalogPurchases5 +
1.78022371269645 * GRP_NumCatalogPurchases6 + 2.51919850869031 * GRP_NumCatalogPurchases7 +
-0.29160915509933 * GRP_NumDistPurchases2 + -1.59386292237547 * GRP_NumDistPurchases3 +
-0.58149143918747 * GRP_NumDistPurchases4 + -0.15227686380495 * GRP_NumDistPurchases5 +
-0.39776772752273 * GRP_NumDistPurchases6 + -0.25189925687254 * GRP_NumDistPurchases7 +
-0.8006222944202 * GRP_NumDistPurchases8 + 1.1137088740435 * GRP_NumDistPurchases9 +
1.23069956311587 * GRP_NumDistPurchases10 + 0.00077574452293 * GRP_NumWebPurchases2 +
0.24159496564294 * GRP_NumWebPurchases3 + 0.30982055062128 * GRP_NumWebPurchases4 +
0.91413433678014 * GRP_NumWebPurchases5 + 0.47430505202684 * GRP_NumWebPurchases6 +
0.05910332727627 * GRP_NumWebPurchases7 + -0.73591735479205 * GRP_NumWebPurchases8 +
-4.1347431929822 * GRP_NumWebVisitsMonth2 + -2.56208193086546 * GRP_NumWebVisitsMonth3 +
-1.81937126717482 * GRP_NumWebVisitsMonth4 + -0.77444924696859 * GRP_NumWebVisitsMonth5 +
0.82562856901811 * GRP_NumWebVisitsMonth6 + 1.04369947846006 * GRP_NumWebVisitsMonth7 +
2.55675009308953 * GRP_NumWebVisitsMonth8 + 0.20809605612831 * GRP_RFMstat2 +
-1.61430160476517 * GRP_RFMstat3 + -0.52301122119481 * GRP_RFMstat4 + -0.55945361088087 *
GRP_RFMstat5 + -0.14424212281577 * GRP_RFMstat6 + 1.05234320810026 * GRP_RFMstat7 +
-0.05407410464352 * GRP_RFMstat8 + -0.01646632074069 * GRP_RFMstat9 + 0.70828472822109 *
GRP_RFMstat10 + 1.8726948284706 * GRP_RMntFrq2 + 1.05367221065359 * GRP_RMntFrq3 +
1.16252388400818 * GRP_RMntFrq4 + -0.68337506267394 * GRP_RMntFrq5 + -0.30999632256804 *
GRP_RMntFrq6 + -1.800352250825 * GRP_RMntFrq7 + -1.53582014310476 * GRP_RMntFrq8 +
-0.07192943405375 * GRP_RMntFrq9 + -0.60583604685254 * GRP_RMntFrq10 + 3.84355692804923 *
GRP_Recency2 + 2.89076929480023 * GRP_Recency3 + 2.87026210399223 * GRP_Recency4 +
1.49685595027077 * GRP_Recency5 + -0.07603609831014 * GRP_Recency6 + -0.44761807904964 *
GRP_Recency7 + -1.48577941891686 * GRP_Recency8 + -1.45982970045671 * GRP_Recency9 +
-3.5176122167203 * GRP_Recency10 ;
1154774   +   P_DepVar1  =    -3.73504752117057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.73504752117057 + P_DepVar1 ;
1154775   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1154776   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1154777   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1154778   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1154779   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1154780   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1154781   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1154782   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1154783   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1154784   +END;
MPRINT(EM_DIAGRAM):   END;
1154785   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1154786   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1154787   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1154788   +END;
MPRINT(EM_DIAGRAM):   END;
1154789   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1154790   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1154791   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1154792   +END;
MPRINT(EM_DIAGRAM):   END;
1154793   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1154794   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1154795   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1154796   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1154797   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1154798   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1154799   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1154800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154801   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1154802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154803   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1154804   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1154805   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1154806   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1154807   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1154808   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1154809   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1154810   +END;
MPRINT(EM_DIAGRAM):   END;
1154811   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1154812   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1154813   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1154814   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1154815    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL20_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1154816    quit;
1154817    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1154818    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1154819    * AutoNeural20: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Computing metadata for TRAIN data;
1154820    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural20_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural20_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural20_TRAIN out=WORK.M13T0D2J
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13T0D2J;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M13T0D2J(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13T0D2J;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M13T0D2J;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3NX14_M NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3NX14_M;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3NX14_M;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3K80FJW(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3NX14_M;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3NX14_M;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3NX14_M;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3NX14_M;
MPRINT(EMADVISECOLUMNS):   set WORK.M3NX14_M;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural20";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1155132    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1155133    set EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMINFO;
1155134    where DATA='AutoNeural20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural20' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
1155135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
      WHERE (DATA='AutoNeural20') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155136    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMINFO;
1155137    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1155138    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1155139    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1155143    run;
1155144    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMINFO;
1155145    set EMWS8.AutoNeural20_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMINFO WORK.MODELTEMP_INFO;
1155146    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1155147    proc sort data = EMWS8.AutoNeural20_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural20_EMINFO NOTHREADS;
1155148    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1155149    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155150    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1155151    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1155152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1155153    proc sort data = EMWS8.AutoNeural20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1155154    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1155155    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155156    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMINFO;
1155157    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1155158    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1155159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155160    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1155161    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1155162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1155163    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.AUTONEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL20_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.57 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                16.57 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3X70DWM
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3X70DWM new;
MPRINT(EM_DIAGRAM):   run;
1155187    proc sort data=EMWS8.AutoNeural20_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural20_OUTFIT nodupkey;
1155188    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
1155189    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL20_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL20_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155190    data EMWS8.AutoNeural20_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMOUTFIT(rename=(_NAME_=TARGET));
1155191    set EMWS8.AutoNeural20_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_OUTFIT(where=(_NAME_ eq 'OVERALL'));
1155192    label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
1155193    if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
1155194    drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
1155195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL20_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155196    data EMWS8.AutoNeural20_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMOUTFIT;
1155197    set EMWS8.AutoNeural20_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMOUTFIT;
1155198    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1155199    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1155199  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1155200    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1155201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1155202    proc sort data=EMWS8.AutoNeural20_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural20_EMREPORTFIT nothreads;
1155203    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1155204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL20_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL20_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155205    %let _EMwarndup = 0;
1155206    %let _EMtargetdup =;
1155207    %let _EMASEtargetdup =;
1155208    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1155209    set EMWS8.AutoNeural20_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMOUTFIT;
1155210    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1155211    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1155212    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1155213    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1155214    end;
MPRINT(EM_DIAGRAM):   end;
1155215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL20_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155216    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
1155217    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1155218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 53 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1155219    proc sort data=EMWS8.AutoNeural20_VariableSet out=WORK.SUBSETVARSET(keep=NAME
1155219  ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural20_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1155220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1155221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL20_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 51 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155222    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1155223    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1155224    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1155225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 51 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 53 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155226    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1155227    set EMWS8.AutoNeural20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_CMeta_TRAIN;
1155228    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1155228  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1155229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL20_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1155230    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1155231    set EMWS8.AutoNeural20_TRAIN(keep=
1155232    F_DepVar
1155233    I_DepVar
1155234    P_DepVar0
1155235    P_DepVar1
1155236    R_DepVar0
1155237    R_DepVar1
1155238    U_DepVar
1155239    _WARN_
1155240    DepVar
1155241    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1155242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL20_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural20_1TBU75P nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural20_1TBU75P;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_1TBU75P(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_1TBU75P;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_1TBU75P;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 1.89861E-10 OVLMAX 0.999988136 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1159508    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1159509    set EMWS8.AutoNeural20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_CMeta_TRAIN;
1159510    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1159510  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1159511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL20_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1159512    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1159513    set EMWS8.AutoNeural20_VALIDATE(keep=
1159514    F_DepVar
1159515    I_DepVar
1159516    P_DepVar0
1159517    P_DepVar1
1159518    R_DepVar0
1159519    R_DepVar1
1159520    U_DepVar
1159521    _WARN_
1159522    DepVar
1159523    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1159524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL20_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL20_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural20_2VBAF_8 nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural20_2VBAF_8;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_2VBAF_8(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMCLASSIFICATION WORK.AutoNeural20_2VBAF_8;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural20_2VBAF_8;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 2.946432E-10 OVLMAX 0.9999662447 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1163799    %let _cn = %sysfunc(getoption(CENTER));
1163800    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1163801    proc print data=EMWS8.AutoNeural20_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMREPORTFIT noobs label;
1163802    var STAT LABEL TRAIN
1163803    VALIDATE
1163804    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1163805    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1163806    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1163807    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1163808    run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL20_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 918.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163809    title10;
MPRINT(EM_DIAGRAM):   title10;
1163810    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1163811    proc sort data=EMWS8.AutoNeural20_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural20_EMCLASSIFICATION nothreads;
1163812    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1163813    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL20_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL20_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163814    %let _cn = %sysfunc(getoption(CENTER));
1163815    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1163816    proc print data=EMWS8.AutoNeural20_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMCLASSIFICATION noobs label;
1163817    var from into pct_row pct_col count percent
1163818    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1163819    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1163820    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1163821    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1163822    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1163823    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1163824    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1163825    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1163826    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1163827    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1163828    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1163829    run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL20_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 919.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1163830    title9;
MPRINT(EM_DIAGRAM):   title9;
1163831    title10;
MPRINT(EM_DIAGRAM):   title10;
1163832    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1163833    %let _cn = %sysfunc(getoption(CENTER));
1163834    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1163835    data EMWS8.AutoNeural20_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMEVENTREPORT;
1163836    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1163836  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1163837    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1163837  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1163837  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1163837  ! FALSEEVENT
1163838    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1163838  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1163838  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1163839       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1163840    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1163841    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1163842    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1163843    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1163844    set EMWS8.AutoNeural20_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMEVENTREPORT;
1163845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL20_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL20_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1163846    proc print data=EMWS8.AutoNeural20_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMEVENTREPORT noobs label;
1163847    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1163848    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1163849    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1163850    run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL20_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 920.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163851    title10;
MPRINT(EM_DIAGRAM):   title10;
1163852    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1163853    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1163854    modify AutoNeural20_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural20_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1163855    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1163856    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1163856  ! ;
MPRINT(EM_DIAGRAM):   run;
1163857    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL20_EMRANK.DATA.
1163858    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
1163859    %let _cn = %sysfunc(getoption(CENTER));
1163860    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1163861    proc print data=EMWS8.AutoNeural20_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMRANK label noobs;
1163862    var
1163863    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1163864    by
1163865    notsorted DATAROLE
1163866    notsorted TARGET
1163867    notsorted TARGETLABEL
1163868    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1163869    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1163870    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1163871    run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL20_EMRANK.
NOTE: The PROCEDURE PRINT printed page 921.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163872    title10;
MPRINT(EM_DIAGRAM):   title10;
1163873    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1163874    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1163875    modify AutoNeural20_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural20_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1163876    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1163876  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1163877    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1163877  ! ;
MPRINT(EM_DIAGRAM):   run;
1163878    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL20_EMSCOREDIST.DATA.
1163879    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural20_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
