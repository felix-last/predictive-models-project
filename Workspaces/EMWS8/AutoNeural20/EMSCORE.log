MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.16 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.16 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O14OCE6O 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O14OCE6O new;
MPRINT(EM_DIAGRAM):   run;
2281910    filename emflow
2281910  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281911    *------------------------------------------------------------*;
2281912    * AutoNeural20: Scoring DATA data;
2281913    *------------------------------------------------------------*;
2281914    data EMWS8.AutoNeural20_TRAIN
2281915    / view=EMWS8.AutoNeural20_TRAIN
2281916    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_TRAIN / view=EMWS8.AutoNeural20_TRAIN ;
2281917    set EMWS8.BINNING_TRAIN
2281918    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
2281919    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas.
2281920   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2281921   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2281922   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2281923   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2281924   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2281925   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2281926   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2281927   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2281928   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2281929   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2281930   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2281931   +LENGTH _WARN_ $4
2281932   +      F_DepVar  $ 12
2281933   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2281934   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
2281935   +
2281936   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
2281937   +
2281938   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
2281939   +
2281940   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
2281941   +
2281942   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
2281943   +
2281944   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
2281945   +
2281946   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
2281947   +
2281948   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
2281949   +
2281950   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
2281951   +
2281952   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
2281953   +
2281954   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
2281955   +
2281956   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
2281957   +
2281958   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
2281959   +
2281960   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
2281961   +
2281962   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
2281963   +
2281964   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
2281965   +
2281966   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
2281967   +
2281968   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
2281969   +
2281970   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
2281971   +
2281972   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
2281973   +
2281974   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
2281975   +
2281976   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
2281977   +
2281978   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
2281979   +
2281980   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
2281981   +
2281982   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
2281983   +
2281984   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
2281985   +
2281986   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
2281987   +
2281988   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
2281989   +
2281990   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
2281991   +
2281992   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
2281993   +
2281994   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
2281995   +
2281996   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
2281997   +
2281998   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
2281999   +
2282000   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
2282001   +
2282002   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
2282003   +
2282004   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
2282005   +
2282006   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
2282007   +
2282008   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
2282009   +
2282010   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
2282011   +
2282012   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
2282013   +
2282014   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2282015   +
2282016   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2282017   +
2282018   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2282019   +
2282020   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2282021   +
2282022   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2282023   +
2282024   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2282025   +
2282026   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2282027   +
2282028   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2282029   +
2282030   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2282031   +
2282032   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2282033   +
2282034   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2282035   +
2282036   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2282037   +
2282038   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2282039   +
2282040   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2282041   +
2282042   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2282043   +
2282044   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2282045   +
2282046   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2282047   +
2282048   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2282049   +
2282050   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2282051   +
2282052   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2282053   +
2282054   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2282055   +
2282056   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2282057   +
2282058   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2282059   +
2282060   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
2282061   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
2282062   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
2282063   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2282064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282066   +end;
MPRINT(EM_DIAGRAM):   end;
2282067   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282069   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
2282070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282071   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
2282072   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
2282073   +   end;
MPRINT(EM_DIAGRAM):   end;
2282074   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282075   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
2282076   +   end;
MPRINT(EM_DIAGRAM):   end;
2282077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282078   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2282079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282081   +   end;
MPRINT(EM_DIAGRAM):   end;
2282082   +end;
MPRINT(EM_DIAGRAM):   end;
2282083   +
2282084   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
2282085   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
2282086   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
2282087   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2282088   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2282089   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2282090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282092   +end;
MPRINT(EM_DIAGRAM):   end;
2282093   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282094   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282095   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
2282096   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282097   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2282098   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
2282099   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
2282100   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
2282101   +   end;
MPRINT(EM_DIAGRAM):   end;
2282102   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282103   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2282104   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
2282105   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2282106   +   end;
MPRINT(EM_DIAGRAM):   end;
2282107   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282108   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2282109   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2282110   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
2282111   +   end;
MPRINT(EM_DIAGRAM):   end;
2282112   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282113   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
2282114   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2282115   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2282116   +   end;
MPRINT(EM_DIAGRAM):   end;
2282117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282118   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2282119   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2282120   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2282121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282123   +   end;
MPRINT(EM_DIAGRAM):   end;
2282124   +end;
MPRINT(EM_DIAGRAM):   end;
2282125   +
2282126   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
2282127   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
2282128   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
2282129   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2282130   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2282131   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2282132   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282133   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282134   +end;
MPRINT(EM_DIAGRAM):   end;
2282135   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282136   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282137   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
2282138   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282139   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2282140   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
2282141   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
2282142   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
2282143   +   end;
MPRINT(EM_DIAGRAM):   end;
2282144   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282145   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2282146   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2282147   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
2282148   +   end;
MPRINT(EM_DIAGRAM):   end;
2282149   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282150   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2282151   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
2282152   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2282153   +   end;
MPRINT(EM_DIAGRAM):   end;
2282154   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282155   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
2282156   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2282157   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2282158   +   end;
MPRINT(EM_DIAGRAM):   end;
2282159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282160   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2282161   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2282162   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2282163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282165   +   end;
MPRINT(EM_DIAGRAM):   end;
2282166   +end;
MPRINT(EM_DIAGRAM):   end;
2282167   +
2282168   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
2282169   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
2282170   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
2282171   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2282172   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2282173   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2282174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282176   +end;
MPRINT(EM_DIAGRAM):   end;
2282177   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282179   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
2282180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282181   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282182   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2282183   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
2282184   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2282185   +   end;
MPRINT(EM_DIAGRAM):   end;
2282186   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282187   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
2282188   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
2282189   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
2282190   +   end;
MPRINT(EM_DIAGRAM):   end;
2282191   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282192   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2282193   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2282194   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
2282195   +   end;
MPRINT(EM_DIAGRAM):   end;
2282196   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282197   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
2282198   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2282199   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2282200   +   end;
MPRINT(EM_DIAGRAM):   end;
2282201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282202   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2282203   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2282204   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2282205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282207   +   end;
MPRINT(EM_DIAGRAM):   end;
2282208   +end;
MPRINT(EM_DIAGRAM):   end;
2282209   +
2282210   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
2282211   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
2282212   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
2282213   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2282214   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2282215   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2282216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282218   +end;
MPRINT(EM_DIAGRAM):   end;
2282219   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282221   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
2282222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282223   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282224   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2282225   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
2282226   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2282227   +   end;
MPRINT(EM_DIAGRAM):   end;
2282228   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282229   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
2282230   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
2282231   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
2282232   +   end;
MPRINT(EM_DIAGRAM):   end;
2282233   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282234   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2282235   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2282236   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
2282237   +   end;
MPRINT(EM_DIAGRAM):   end;
2282238   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282239   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
2282240   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2282241   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2282242   +   end;
MPRINT(EM_DIAGRAM):   end;
2282243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282244   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2282245   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2282246   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2282247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282249   +   end;
MPRINT(EM_DIAGRAM):   end;
2282250   +end;
MPRINT(EM_DIAGRAM):   end;
2282251   +
2282252   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
2282253   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
2282254   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
2282255   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2282256   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2282257   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2282258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282260   +end;
MPRINT(EM_DIAGRAM):   end;
2282261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282263   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
2282264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282265   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282266   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2282267   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
2282268   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2282269   +   end;
MPRINT(EM_DIAGRAM):   end;
2282270   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282271   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2282272   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2282273   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
2282274   +   end;
MPRINT(EM_DIAGRAM):   end;
2282275   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282276   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
2282277   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
2282278   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
2282279   +   end;
MPRINT(EM_DIAGRAM):   end;
2282280   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282281   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
2282282   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2282283   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2282284   +   end;
MPRINT(EM_DIAGRAM):   end;
2282285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282286   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2282287   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2282288   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2282289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282291   +   end;
MPRINT(EM_DIAGRAM):   end;
2282292   +end;
MPRINT(EM_DIAGRAM):   end;
2282293   +
2282294   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
2282295   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
2282296   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
2282297   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2282298   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2282299   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2282300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282302   +end;
MPRINT(EM_DIAGRAM):   end;
2282303   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282304   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282305   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
2282306   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282307   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282308   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2282309   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
2282310   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2282311   +   end;
MPRINT(EM_DIAGRAM):   end;
2282312   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282313   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2282314   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2282315   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
2282316   +   end;
MPRINT(EM_DIAGRAM):   end;
2282317   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282318   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
2282319   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
2282320   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
2282321   +   end;
MPRINT(EM_DIAGRAM):   end;
2282322   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282323   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
2282324   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2282325   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2282326   +   end;
MPRINT(EM_DIAGRAM):   end;
2282327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282328   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2282329   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2282330   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2282331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282333   +   end;
MPRINT(EM_DIAGRAM):   end;
2282334   +end;
MPRINT(EM_DIAGRAM):   end;
2282335   +
2282336   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
2282337   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
2282338   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
2282339   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2282340   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2282341   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2282342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282344   +end;
MPRINT(EM_DIAGRAM):   end;
2282345   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282346   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282347   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
2282348   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282349   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282350   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2282351   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
2282352   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2282353   +   end;
MPRINT(EM_DIAGRAM):   end;
2282354   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282355   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
2282356   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
2282357   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
2282358   +   end;
MPRINT(EM_DIAGRAM):   end;
2282359   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282360   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2282361   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2282362   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
2282363   +   end;
MPRINT(EM_DIAGRAM):   end;
2282364   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282365   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
2282366   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2282367   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2282368   +   end;
MPRINT(EM_DIAGRAM):   end;
2282369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282370   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2282371   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2282372   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2282373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282375   +   end;
MPRINT(EM_DIAGRAM):   end;
2282376   +end;
MPRINT(EM_DIAGRAM):   end;
2282377   +
2282378   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
2282379   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
2282380   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
2282381   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2282382   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2282383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282385   +end;
MPRINT(EM_DIAGRAM):   end;
2282386   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282388   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
2282389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282390   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282391   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
2282392   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
2282393   +   end;
MPRINT(EM_DIAGRAM):   end;
2282394   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282395   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
2282396   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
2282397   +   end;
MPRINT(EM_DIAGRAM):   end;
2282398   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282399   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
2282400   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
2282401   +   end;
MPRINT(EM_DIAGRAM):   end;
2282402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282403   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2282404   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2282405   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282406   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282407   +   end;
MPRINT(EM_DIAGRAM):   end;
2282408   +end;
MPRINT(EM_DIAGRAM):   end;
2282409   +
2282410   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
2282411   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
2282412   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
2282413   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2282414   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2282415   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2282416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282418   +end;
MPRINT(EM_DIAGRAM):   end;
2282419   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282421   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
2282422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282423   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2282424   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
2282425   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
2282426   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
2282427   +   end;
MPRINT(EM_DIAGRAM):   end;
2282428   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282429   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2282430   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2282431   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
2282432   +   end;
MPRINT(EM_DIAGRAM):   end;
2282433   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282434   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
2282435   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2282436   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2282437   +   end;
MPRINT(EM_DIAGRAM):   end;
2282438   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282439   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2282440   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
2282441   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2282442   +   end;
MPRINT(EM_DIAGRAM):   end;
2282443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282444   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2282445   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2282446   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2282447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282449   +   end;
MPRINT(EM_DIAGRAM):   end;
2282450   +end;
MPRINT(EM_DIAGRAM):   end;
2282451   +
2282452   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
2282453   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
2282454   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
2282455   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2282456   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2282457   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2282458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282460   +end;
MPRINT(EM_DIAGRAM):   end;
2282461   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282462   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282463   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
2282464   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282465   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282466   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2282467   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
2282468   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2282469   +   end;
MPRINT(EM_DIAGRAM):   end;
2282470   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282471   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
2282472   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
2282473   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
2282474   +   end;
MPRINT(EM_DIAGRAM):   end;
2282475   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282476   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2282477   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2282478   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
2282479   +   end;
MPRINT(EM_DIAGRAM):   end;
2282480   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282481   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
2282482   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2282483   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2282484   +   end;
MPRINT(EM_DIAGRAM):   end;
2282485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282486   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2282487   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2282488   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2282489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282491   +   end;
MPRINT(EM_DIAGRAM):   end;
2282492   +end;
MPRINT(EM_DIAGRAM):   end;
2282493   +
2282494   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
2282495   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
2282496   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
2282497   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2282498   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2282499   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2282500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282502   +end;
MPRINT(EM_DIAGRAM):   end;
2282503   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282505   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
2282506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282507   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
2282508   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2282509   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2282510   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
2282511   +   end;
MPRINT(EM_DIAGRAM):   end;
2282512   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282513   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2282514   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
2282515   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2282516   +   end;
MPRINT(EM_DIAGRAM):   end;
2282517   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282518   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
2282519   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
2282520   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
2282521   +   end;
MPRINT(EM_DIAGRAM):   end;
2282522   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282523   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
2282524   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2282525   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2282526   +   end;
MPRINT(EM_DIAGRAM):   end;
2282527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282528   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2282529   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2282530   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2282531   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282532   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282533   +   end;
MPRINT(EM_DIAGRAM):   end;
2282534   +end;
MPRINT(EM_DIAGRAM):   end;
2282535   +
2282536   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
2282537   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
2282538   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
2282539   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2282540   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2282541   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2282542   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282544   +end;
MPRINT(EM_DIAGRAM):   end;
2282545   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282546   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282547   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
2282548   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282549   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2282550   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2282551   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
2282552   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2282553   +   end;
MPRINT(EM_DIAGRAM):   end;
2282554   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2282555   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
2282556   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
2282557   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
2282558   +   end;
MPRINT(EM_DIAGRAM):   end;
2282559   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282560   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2282561   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2282562   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
2282563   +   end;
MPRINT(EM_DIAGRAM):   end;
2282564   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282565   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
2282566   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2282567   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2282568   +   end;
MPRINT(EM_DIAGRAM):   end;
2282569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282570   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2282571   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2282572   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2282573   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282574   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282575   +   end;
MPRINT(EM_DIAGRAM):   end;
2282576   +end;
MPRINT(EM_DIAGRAM):   end;
2282577   +
2282578   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
2282579   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
2282580   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
2282581   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2282582   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2282583   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2282584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282586   +end;
MPRINT(EM_DIAGRAM):   end;
2282587   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2282589   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
2282590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282591   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2282592   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
2282593   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
2282594   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
2282595   +   end;
MPRINT(EM_DIAGRAM):   end;
2282596   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2282597   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2282598   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2282599   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
2282600   +   end;
MPRINT(EM_DIAGRAM):   end;
2282601   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2282602   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2282603   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
2282604   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2282605   +   end;
MPRINT(EM_DIAGRAM):   end;
2282606   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2282607   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
2282608   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2282609   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2282610   +   end;
MPRINT(EM_DIAGRAM):   end;
2282611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282612   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2282613   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2282614   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2282615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2282616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282617   +   end;
MPRINT(EM_DIAGRAM):   end;
2282618   +end;
MPRINT(EM_DIAGRAM):   end;
2282619   +
2282620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282621   +*** Checking missing input Interval
2282622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2282623   +
2282624   +IF NMISS(
2282625   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
2282626   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2282627   +
2282628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282629   +END;
MPRINT(EM_DIAGRAM):   END;
2282630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282631   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2282632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282633   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282634   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2282635   +END;
MPRINT(EM_DIAGRAM):   END;
2282636   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282637   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
2282638   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
2282639   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2282640   +END;
MPRINT(EM_DIAGRAM):   END;
2282641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282642   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2282643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282645   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2282646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282647   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282648   +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
2282649   +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
2282650   +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
2282651   +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
2282652   +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
2282653   +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
2282654   +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
2282655   +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
2282656   +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
2282657   +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
2282658   +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
2282659   +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
2282660   +          +    -1.92253913417034 * GRP_MntFishProducts3
2282661   +          +     0.11236967036572 * GRP_MntFishProducts4
2282662   +          +     1.55117451498964 * GRP_MntGoldProds2
2282663   +          +    -2.17638819155912 * GRP_MntGoldProds3
2282664   +          +     1.12471370225173 * GRP_MntGoldProds4
2282665   +          +     0.73773441156548 * GRP_MntMeatProducts2
2282666   +          +     2.07738910661633 * GRP_MntMeatProducts3
2282667   +          +    -0.64280630173292 * GRP_MntMeatProducts4
2282668   +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
2282669   +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
2282670   +          +     0.27137671258246 * GRP_NumCatalogPurchases3
2282671   +          +     1.17769351442984 * GRP_NumCatalogPurchases4
2282672   +          +     1.22104662684375 * GRP_NumDistPurchases2
2282673   +          +      3.4956187335148 * GRP_NumDistPurchases3
2282674   +          +     1.44110988448724 * GRP_NumDistPurchases4
2282675   +          +    -0.15910531424988 * GRP_NumWebPurchases2
2282676   +          +      2.0651216353476 * GRP_NumWebPurchases3
2282677   +          +     1.88264340284474 * GRP_NumWebPurchases4
2282678   +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
2282679   +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
2282680   +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
2282681   +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
2282682   +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
2282683   +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 + 
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 + 
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 * 
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743 
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 * 
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 * 
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 * 
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 * 
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 * 
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 + 
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 + 
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 + 
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 + 
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 + 
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 * 
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 + 
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 * 
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
2282684   +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
2282685   +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
2282686   +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
2282687   +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
2282688   +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
2282689   +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
2282690   +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
2282691   +          +     0.69185352158005 * GRP_MntFishProducts3
2282692   +          +    -0.03493178084029 * GRP_MntFishProducts4
2282693   +          +     1.51100187776315 * GRP_MntGoldProds2
2282694   +          +     0.06501688279193 * GRP_MntGoldProds3
2282695   +          +    -0.39137744731231 * GRP_MntGoldProds4
2282696   +          +    -1.71718837423104 * GRP_MntMeatProducts2
2282697   +          +    -2.21915390243757 * GRP_MntMeatProducts3
2282698   +          +    -0.56748587906854 * GRP_MntMeatProducts4
2282699   +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
2282700   +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
2282701   +          +     1.48903401021544 * GRP_NumCatalogPurchases3
2282702   +          +     1.17263293507207 * GRP_NumCatalogPurchases4
2282703   +          +     1.51105230747578 * GRP_NumDistPurchases2
2282704   +          +     0.77634340058478 * GRP_NumDistPurchases3
2282705   +          +    -0.03088809375301 * GRP_NumDistPurchases4
2282706   +          +    -0.96601789395554 * GRP_NumWebPurchases2
2282707   +          +     0.85040977160083 * GRP_NumWebPurchases3
2282708   +          +     2.40308918299781 * GRP_NumWebPurchases4
2282709   +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
2282710   +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
2282711   +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
2282712   +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
2282713   +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
2282714   +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 + 
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 + 
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 * 
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 * 
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 + 
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 + 
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 + 
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 + 
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194 
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 * 
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 * 
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 * 
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 * 
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 * 
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 + 
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 * 
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 + 
2.66867988462295 * GRP_Recency4 ;
2282715   +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
2282716   +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
2282717   +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
2282718   +        GRP_Income2  +     1.18033291239845 * GRP_Income3
2282719   +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
2282720   +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
2282721   +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
2282722   +          +    -0.25133476006515 * GRP_MntFishProducts3
2282723   +          +     1.43382012526151 * GRP_MntFishProducts4
2282724   +          +      0.6587510367878 * GRP_MntGoldProds2
2282725   +          +    -2.29815972364167 * GRP_MntGoldProds3
2282726   +          +    -1.17878838514109 * GRP_MntGoldProds4
2282727   +          +    -1.45630165039671 * GRP_MntMeatProducts2
2282728   +          +    -0.11970663820977 * GRP_MntMeatProducts3
2282729   +          +    -0.76333182688138 * GRP_MntMeatProducts4
2282730   +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
2282731   +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
2282732   +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
2282733   +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
2282734   +          +    -0.83062872942088 * GRP_NumDistPurchases2
2282735   +          +      1.2644984519337 * GRP_NumDistPurchases3
2282736   +          +     0.62516412515385 * GRP_NumDistPurchases4
2282737   +          +    -0.91932392687811 * GRP_NumWebPurchases2
2282738   +          +     0.63985001179952 * GRP_NumWebPurchases3
2282739   +          +     0.11379774354586 * GRP_NumWebPurchases4
2282740   +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
2282741   +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
2282742   +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
2282743   +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
2282744   +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
2282745   +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 + 
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 + 
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 * 
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 * 
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3 
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 + 
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 + 
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 + 
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 + 
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 * 
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 * 
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 * 
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 * 
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 * 
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 + 
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 * 
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 + 
-1.63045870617841 * GRP_Recency4 ;
2282746   +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
2282747   +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
2282748   +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
2282749   +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
2282750   +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
2282751   +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
2282752   +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
2282753   +          +     0.25005234850524 * GRP_MntFishProducts3
2282754   +          +    -0.07970714752313 * GRP_MntFishProducts4
2282755   +          +     -0.7495440064059 * GRP_MntGoldProds2
2282756   +          +     -0.0659148563739 * GRP_MntGoldProds3
2282757   +          +    -1.42445075896946 * GRP_MntGoldProds4
2282758   +          +      0.1738975461322 * GRP_MntMeatProducts2
2282759   +          +    -2.24799164386156 * GRP_MntMeatProducts3
2282760   +          +    -1.67754357341899 * GRP_MntMeatProducts4
2282761   +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
2282762   +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
2282763   +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
2282764   +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
2282765   +          +    -0.48267351716569 * GRP_NumDistPurchases2
2282766   +          +     0.93211719554417 * GRP_NumDistPurchases3
2282767   +          +      1.1708430486506 * GRP_NumDistPurchases4
2282768   +          +     0.03811902892169 * GRP_NumWebPurchases2
2282769   +          +    -1.51477371309928 * GRP_NumWebPurchases3
2282770   +          +     1.07378297590898 * GRP_NumWebPurchases4
2282771   +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
2282772   +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
2282773   +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
2282774   +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
2282775   +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
2282776   +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 + 
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 + 
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 * 
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 * 
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3 
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 + 
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322 
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 * 
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 + 
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 + 
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 + 
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 + 
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 + 
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 * 
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 + 
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 * 
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
2282777   +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
2282778   +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
2282779   +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
2282780   +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
2282781   +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
2282782   +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
2282783   +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
2282784   +          +    -1.49559041774587 * GRP_MntFishProducts3
2282785   +          +     1.29292270443546 * GRP_MntFishProducts4
2282786   +          +     3.28109415592287 * GRP_MntGoldProds2
2282787   +          +     0.40523569115651 * GRP_MntGoldProds3
2282788   +          +        0.70305704265 * GRP_MntGoldProds4
2282789   +          +    -1.85351989681271 * GRP_MntMeatProducts2
2282790   +          +    -0.63625311683955 * GRP_MntMeatProducts3
2282791   +          +     0.27320544681113 * GRP_MntMeatProducts4
2282792   +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
2282793   +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
2282794   +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
2282795   +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
2282796   +          +    -1.40970961318877 * GRP_NumDistPurchases2
2282797   +          +     -2.5780841761751 * GRP_NumDistPurchases3
2282798   +          +    -0.35557998232484 * GRP_NumDistPurchases4
2282799   +          +     1.27746944985248 * GRP_NumWebPurchases2
2282800   +          +     0.69463977283169 * GRP_NumWebPurchases3
2282801   +          +    -0.54397813851169 * GRP_NumWebPurchases4
2282802   +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
2282803   +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
2282804   +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
2282805   +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
2282806   +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
2282807   +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 + 
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 + 
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 * 
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 * 
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3 
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 + 
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 * 
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 * 
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 + 
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 + 
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 + 
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 + 
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 + 
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163 
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 + 
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 * 
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
2282808   +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
2282809   +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
2282810   +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
2282811   +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
2282812   +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
2282813   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2282814   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2282815   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2282816   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2282817   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2282818   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2282819   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2282820   +END;
MPRINT(EM_DIAGRAM):   END;
2282821   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282822   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2282823   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2282824   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2282825   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2282826   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2282827   +END;
MPRINT(EM_DIAGRAM):   END;
2282828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282829   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2282830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282831   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282832   +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
2282833   +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
2282834   +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
2282835   +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
2282836   +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
2282837   +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
2282838   +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
2282839   +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
2282840   +        GRP_Income2  +      2.4308303101124 * GRP_Income3
2282841   +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
2282842   +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
2282843   +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
2282844   +          +     2.51364109656281 * GRP_MntFishProducts3
2282845   +          +    -1.42490007484769 * GRP_MntFishProducts4
2282846   +          +    -0.45125943648795 * GRP_MntGoldProds2
2282847   +          +     2.47102254724134 * GRP_MntGoldProds3
2282848   +          +     -1.9039173262792 * GRP_MntGoldProds4
2282849   +          +     0.19349291706995 * GRP_MntMeatProducts2
2282850   +          +     1.13475826324844 * GRP_MntMeatProducts3
2282851   +          +    -0.33642288502432 * GRP_MntMeatProducts4
2282852   +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
2282853   +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
2282854   +          +     0.15659125827236 * GRP_NumCatalogPurchases3
2282855   +          +     0.32817066335176 * GRP_NumCatalogPurchases4
2282856   +          +    -0.67313821415044 * GRP_NumDistPurchases2
2282857   +          +    -0.96239937857546 * GRP_NumDistPurchases3
2282858   +          +     0.32058507897383 * GRP_NumDistPurchases4
2282859   +          +     0.02503658374779 * GRP_NumWebPurchases2
2282860   +          +    -2.42182777667863 * GRP_NumWebPurchases3
2282861   +          +     1.09934791830799 * GRP_NumWebPurchases4
2282862   +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
2282863   +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
2282864   +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
2282865   +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
2282866   +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
2282867   +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 + 
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 + 
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 * 
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 * 
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 + 
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 + 
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995 
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 * 
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 + 
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 + 
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 + 
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 + 
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 + 
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632 
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 + 
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 * 
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
2282868   +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
2282869   +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
2282870   +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
2282871   +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
2282872   +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
2282873   +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
2282874   +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
2282875   +          +    -0.68769529687639 * GRP_MntFishProducts3
2282876   +          +     0.91046416847697 * GRP_MntFishProducts4
2282877   +          +     1.93581182421904 * GRP_MntGoldProds2
2282878   +          +     0.00795466624941 * GRP_MntGoldProds3
2282879   +          +    -0.22854189252742 * GRP_MntGoldProds4
2282880   +          +     0.51645804440055 * GRP_MntMeatProducts2
2282881   +          +    -0.73677565057958 * GRP_MntMeatProducts3
2282882   +          +    -3.38222954402665 * GRP_MntMeatProducts4
2282883   +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
2282884   +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
2282885   +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
2282886   +          +     0.92868654767551 * GRP_NumCatalogPurchases4
2282887   +          +    -0.18642581919214 * GRP_NumDistPurchases2
2282888   +          +     0.32117397006136 * GRP_NumDistPurchases3
2282889   +          +    -0.59059080451748 * GRP_NumDistPurchases4
2282890   +          +    -1.05057528699441 * GRP_NumWebPurchases2
2282891   +          +    -0.84936431958655 * GRP_NumWebPurchases3
2282892   +          +     0.43322339989668 * GRP_NumWebPurchases4
2282893   +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
2282894   +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
2282895   +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
2282896   +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
2282897   +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
2282898   +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 + 
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 + 
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 * 
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 * 
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3 
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 + 
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 + 
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 + 
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 + 
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 * 
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 * 
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 * 
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 * 
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 * 
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 + 
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 * 
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 + 
-0.17063922919112 * GRP_Recency4 ;
2282899   +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
2282900   +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
2282901   +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
2282902   +        GRP_Income2  +     2.06545795697617 * GRP_Income3
2282903   +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
2282904   +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
2282905   +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
2282906   +          +     -0.2747383185488 * GRP_MntFishProducts3
2282907   +          +     0.05699547232616 * GRP_MntFishProducts4
2282908   +          +     1.78340082221807 * GRP_MntGoldProds2
2282909   +          +    -0.21272258173805 * GRP_MntGoldProds3
2282910   +          +    -0.63881612523162 * GRP_MntGoldProds4
2282911   +          +     0.35743242018534 * GRP_MntMeatProducts2
2282912   +          +     0.39288166088974 * GRP_MntMeatProducts3
2282913   +          +     0.68623350973697 * GRP_MntMeatProducts4
2282914   +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
2282915   +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
2282916   +          +     0.38349558810511 * GRP_NumCatalogPurchases3
2282917   +          +     0.94944817324412 * GRP_NumCatalogPurchases4
2282918   +          +     0.87924710032772 * GRP_NumDistPurchases2
2282919   +          +     0.54658799433949 * GRP_NumDistPurchases3
2282920   +          +     1.85594529989185 * GRP_NumDistPurchases4
2282921   +          +    -0.66471569231333 * GRP_NumWebPurchases2
2282922   +          +    -0.59461900037355 * GRP_NumWebPurchases3
2282923   +          +     0.12806083458682 * GRP_NumWebPurchases4
2282924   +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
2282925   +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
2282926   +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
2282927   +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
2282928   +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
2282929   +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 + 
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 + 
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 * 
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 * 
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 + 
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 + 
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 + 
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 + 
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 + 
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 * 
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 * 
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 * 
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 * 
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 * 
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 + 
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 * 
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 + 
-0.53617918353506 * GRP_Recency4 ;
2282930   +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
2282931   +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
2282932   +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
2282933   +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
2282934   +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
2282935   +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
2282936   +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
2282937   +          +    -0.50962348735329 * GRP_MntFishProducts3
2282938   +          +    -1.75841654964734 * GRP_MntFishProducts4
2282939   +          +     2.14839745385174 * GRP_MntGoldProds2
2282940   +          +      2.4716387157729 * GRP_MntGoldProds3
2282941   +          +     0.61286996367418 * GRP_MntGoldProds4
2282942   +          +     1.45427097683349 * GRP_MntMeatProducts2
2282943   +          +    -0.34990206215878 * GRP_MntMeatProducts3
2282944   +          +     2.25284175811484 * GRP_MntMeatProducts4
2282945   +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
2282946   +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
2282947   +          +     1.02272173939472 * GRP_NumCatalogPurchases3
2282948   +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
2282949   +          +    -0.44080685652484 * GRP_NumDistPurchases2
2282950   +          +     2.40613428385819 * GRP_NumDistPurchases3
2282951   +          +     0.26317801067025 * GRP_NumDistPurchases4
2282952   +          +     2.34961138802546 * GRP_NumWebPurchases2
2282953   +          +     2.35826990005342 * GRP_NumWebPurchases3
2282954   +          +     0.18496434892584 * GRP_NumWebPurchases4
2282955   +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
2282956   +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
2282957   +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
2282958   +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
2282959   +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
2282960   +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 + 
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 + 
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 * 
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 * 
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3 
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 + 
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349 
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 * 
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 + 
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 + 
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 + 
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 + 
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 + 
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 * 
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 + 
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 * 
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
2282961   +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
2282962   +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
2282963   +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
2282964   +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
2282965   +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
2282966   +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
2282967   +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
2282968   +          +     -2.3817205567109 * GRP_MntFishProducts3
2282969   +          +      1.4356293091772 * GRP_MntFishProducts4
2282970   +          +    -1.03209023546079 * GRP_MntGoldProds2
2282971   +          +     1.93949728331263 * GRP_MntGoldProds3
2282972   +          +     0.44849194130528 * GRP_MntGoldProds4
2282973   +          +     1.34973896956794 * GRP_MntMeatProducts2
2282974   +          +     1.40989126474294 * GRP_MntMeatProducts3
2282975   +          +     0.74435387703611 * GRP_MntMeatProducts4
2282976   +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
2282977   +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
2282978   +          +     1.65449574071289 * GRP_NumCatalogPurchases3
2282979   +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
2282980   +          +    -0.76749528874396 * GRP_NumDistPurchases2
2282981   +          +     1.83370965910825 * GRP_NumDistPurchases3
2282982   +          +    -0.73709156569506 * GRP_NumDistPurchases4
2282983   +          +     0.09215124428658 * GRP_NumWebPurchases2
2282984   +          +      1.0403096068891 * GRP_NumWebPurchases3
2282985   +          +     0.59317560741224 * GRP_NumWebPurchases4
2282986   +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
2282987   +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
2282988   +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
2282989   +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
2282990   +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
2282991   +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 + 
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 + 
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 * 
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 * 
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 + 
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 + 
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794 
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 * 
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 + 
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 + 
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 + 
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 + 
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 + 
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 * 
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 + 
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 * 
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
2282992   +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
2282993   +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
2282994   +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
2282995   +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
2282996   +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
2282997   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2282998   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2282999   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2283000   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2283001   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2283002   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2283003   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2283004   +END;
MPRINT(EM_DIAGRAM):   END;
2283005   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283006   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2283007   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2283008   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2283009   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2283010   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2283011   +END;
MPRINT(EM_DIAGRAM):   END;
2283012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283013   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2283014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283015   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283016   +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
2283017   +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
2283018   +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 + 
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
2283019   +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
2283020   +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
2283021   +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 + 
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
2283022   +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
2283023   +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
2283024   +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 + 
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
2283025   +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
2283026   +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
2283027   +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 + 
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
2283028   +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
2283029   +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
2283030   +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 + 
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
2283031   +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
2283032   +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
2283033   +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 * 
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
2283034   +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
2283035   +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
2283036   +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2 
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
2283037   +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
2283038   +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
2283039   +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2 
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
2283040   +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
2283041   +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
2283042   +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 * 
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
2283043   +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
2283044   +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
2283045   +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 * 
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
2283046   +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
2283047   +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
2283048   +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
2283049   +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
2283050   +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
2283051   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2283052   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2283053   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2283054   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2283055   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2283056   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2283057   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2283058   +END;
MPRINT(EM_DIAGRAM):   END;
2283059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283060   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2283061   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2283062   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2283063   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2283064   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2283065   +END;
MPRINT(EM_DIAGRAM):   END;
2283066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283067   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2283068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283069   +
2283070   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2283071   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2283072   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2283073   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2283074   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2283075   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283076   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2283077   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2283078   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2283079   +end;
MPRINT(EM_DIAGRAM):   end;
2283080   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283081   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2283082   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2283083   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2283084   +   end;
MPRINT(EM_DIAGRAM):   end;
2283085   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2283086   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2283087   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2283088   +   end;
MPRINT(EM_DIAGRAM):   end;
2283089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283090   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2283091   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2283092   +   end;
MPRINT(EM_DIAGRAM):   end;
2283093   +end;
MPRINT(EM_DIAGRAM):   end;
2283094   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283095   +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
2283096   +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
2283097   +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 + 
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
2283098   +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
2283099   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2283100   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2283101   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2283102   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2283103   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2283104   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2283105   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2283106   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2283107   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2283108   +END;
MPRINT(EM_DIAGRAM):   END;
2283109   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283110   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2283111   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2283112   +END;
MPRINT(EM_DIAGRAM):   END;
2283113   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2283114   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2283115   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2283116   +END;
MPRINT(EM_DIAGRAM):   END;
2283117   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2283118   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2283119   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2283120   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2283121   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2283122   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2283123   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2283124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283125   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2283126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283127   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2283128   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2283129   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2283130   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2283131   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2283132   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2283133   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2283134   +END;
MPRINT(EM_DIAGRAM):   END;
2283135   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2283136   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2283137   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2283138   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2283139    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL20_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2283140    quit;
2283141    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2283142    filename emflow
2283142  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283143    *------------------------------------------------------------*;
2283144    * AutoNeural20: Scoring VALIDATE data;
2283145    *------------------------------------------------------------*;
2283146    data EMWS8.AutoNeural20_VALIDATE
2283147    / view=EMWS8.AutoNeural20_VALIDATE
2283148    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_VALIDATE / view=EMWS8.AutoNeural20_VALIDATE ;
2283149    set EMWS8.BINNING_VALIDATE
2283150    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
2283151    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMFLOWSCORE.sas.
2283152   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2283153   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2283154   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2283155   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2283156   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2283157   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2283158   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2283159   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2283160   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2283161   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2283162   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2283163   +LENGTH _WARN_ $4
2283164   +      F_DepVar  $ 12
2283165   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2283166   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
2283167   +
2283168   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
2283169   +
2283170   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
2283171   +
2283172   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
2283173   +
2283174   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
2283175   +
2283176   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
2283177   +
2283178   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
2283179   +
2283180   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
2283181   +
2283182   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
2283183   +
2283184   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
2283185   +
2283186   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
2283187   +
2283188   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
2283189   +
2283190   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
2283191   +
2283192   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
2283193   +
2283194   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
2283195   +
2283196   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
2283197   +
2283198   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
2283199   +
2283200   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
2283201   +
2283202   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
2283203   +
2283204   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
2283205   +
2283206   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
2283207   +
2283208   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
2283209   +
2283210   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
2283211   +
2283212   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
2283213   +
2283214   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
2283215   +
2283216   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
2283217   +
2283218   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
2283219   +
2283220   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
2283221   +
2283222   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
2283223   +
2283224   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
2283225   +
2283226   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
2283227   +
2283228   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
2283229   +
2283230   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
2283231   +
2283232   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
2283233   +
2283234   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
2283235   +
2283236   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
2283237   +
2283238   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
2283239   +
2283240   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
2283241   +
2283242   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
2283243   +
2283244   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
2283245   +
2283246   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2283247   +
2283248   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2283249   +
2283250   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2283251   +
2283252   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2283253   +
2283254   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2283255   +
2283256   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2283257   +
2283258   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2283259   +
2283260   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2283261   +
2283262   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2283263   +
2283264   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2283265   +
2283266   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2283267   +
2283268   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2283269   +
2283270   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2283271   +
2283272   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2283273   +
2283274   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2283275   +
2283276   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2283277   +
2283278   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2283279   +
2283280   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2283281   +
2283282   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2283283   +
2283284   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2283285   +
2283286   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2283287   +
2283288   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2283289   +
2283290   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2283291   +
2283292   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
2283293   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
2283294   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
2283295   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2283296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283298   +end;
MPRINT(EM_DIAGRAM):   end;
2283299   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283301   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
2283302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283303   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
2283304   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
2283305   +   end;
MPRINT(EM_DIAGRAM):   end;
2283306   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283307   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
2283308   +   end;
MPRINT(EM_DIAGRAM):   end;
2283309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283310   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2283311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283313   +   end;
MPRINT(EM_DIAGRAM):   end;
2283314   +end;
MPRINT(EM_DIAGRAM):   end;
2283315   +
2283316   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
2283317   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
2283318   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
2283319   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2283320   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2283321   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2283322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283324   +end;
MPRINT(EM_DIAGRAM):   end;
2283325   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283327   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
2283328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283329   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2283330   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
2283331   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
2283332   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
2283333   +   end;
MPRINT(EM_DIAGRAM):   end;
2283334   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283335   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2283336   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
2283337   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2283338   +   end;
MPRINT(EM_DIAGRAM):   end;
2283339   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283340   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2283341   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2283342   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
2283343   +   end;
MPRINT(EM_DIAGRAM):   end;
2283344   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283345   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
2283346   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2283347   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2283348   +   end;
MPRINT(EM_DIAGRAM):   end;
2283349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283350   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2283351   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2283352   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2283353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283355   +   end;
MPRINT(EM_DIAGRAM):   end;
2283356   +end;
MPRINT(EM_DIAGRAM):   end;
2283357   +
2283358   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
2283359   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
2283360   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
2283361   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2283362   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2283363   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2283364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283366   +end;
MPRINT(EM_DIAGRAM):   end;
2283367   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283369   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
2283370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283371   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2283372   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
2283373   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
2283374   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
2283375   +   end;
MPRINT(EM_DIAGRAM):   end;
2283376   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283377   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2283378   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2283379   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
2283380   +   end;
MPRINT(EM_DIAGRAM):   end;
2283381   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283382   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2283383   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
2283384   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2283385   +   end;
MPRINT(EM_DIAGRAM):   end;
2283386   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283387   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
2283388   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2283389   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2283390   +   end;
MPRINT(EM_DIAGRAM):   end;
2283391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283392   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2283393   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2283394   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2283395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283397   +   end;
MPRINT(EM_DIAGRAM):   end;
2283398   +end;
MPRINT(EM_DIAGRAM):   end;
2283399   +
2283400   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
2283401   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
2283402   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
2283403   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2283404   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2283405   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2283406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283408   +end;
MPRINT(EM_DIAGRAM):   end;
2283409   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283411   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
2283412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283413   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283414   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2283415   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
2283416   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2283417   +   end;
MPRINT(EM_DIAGRAM):   end;
2283418   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283419   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
2283420   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
2283421   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
2283422   +   end;
MPRINT(EM_DIAGRAM):   end;
2283423   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283424   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2283425   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2283426   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
2283427   +   end;
MPRINT(EM_DIAGRAM):   end;
2283428   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283429   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
2283430   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2283431   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2283432   +   end;
MPRINT(EM_DIAGRAM):   end;
2283433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283434   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2283435   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2283436   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2283437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283439   +   end;
MPRINT(EM_DIAGRAM):   end;
2283440   +end;
MPRINT(EM_DIAGRAM):   end;
2283441   +
2283442   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
2283443   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
2283444   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
2283445   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2283446   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2283447   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2283448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283450   +end;
MPRINT(EM_DIAGRAM):   end;
2283451   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283453   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
2283454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283455   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283456   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2283457   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
2283458   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2283459   +   end;
MPRINT(EM_DIAGRAM):   end;
2283460   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283461   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
2283462   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
2283463   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
2283464   +   end;
MPRINT(EM_DIAGRAM):   end;
2283465   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283466   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2283467   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2283468   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
2283469   +   end;
MPRINT(EM_DIAGRAM):   end;
2283470   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283471   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
2283472   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2283473   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2283474   +   end;
MPRINT(EM_DIAGRAM):   end;
2283475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283476   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2283477   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2283478   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2283479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283481   +   end;
MPRINT(EM_DIAGRAM):   end;
2283482   +end;
MPRINT(EM_DIAGRAM):   end;
2283483   +
2283484   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
2283485   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
2283486   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
2283487   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2283488   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2283489   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2283490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283492   +end;
MPRINT(EM_DIAGRAM):   end;
2283493   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283495   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
2283496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283497   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283498   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2283499   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
2283500   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2283501   +   end;
MPRINT(EM_DIAGRAM):   end;
2283502   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283503   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2283504   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2283505   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
2283506   +   end;
MPRINT(EM_DIAGRAM):   end;
2283507   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283508   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
2283509   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
2283510   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
2283511   +   end;
MPRINT(EM_DIAGRAM):   end;
2283512   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283513   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
2283514   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2283515   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2283516   +   end;
MPRINT(EM_DIAGRAM):   end;
2283517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283518   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2283519   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2283520   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2283521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283523   +   end;
MPRINT(EM_DIAGRAM):   end;
2283524   +end;
MPRINT(EM_DIAGRAM):   end;
2283525   +
2283526   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
2283527   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
2283528   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
2283529   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2283530   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2283531   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2283532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283534   +end;
MPRINT(EM_DIAGRAM):   end;
2283535   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283537   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
2283538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283539   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283540   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2283541   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
2283542   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2283543   +   end;
MPRINT(EM_DIAGRAM):   end;
2283544   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283545   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2283546   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2283547   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
2283548   +   end;
MPRINT(EM_DIAGRAM):   end;
2283549   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283550   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
2283551   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
2283552   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
2283553   +   end;
MPRINT(EM_DIAGRAM):   end;
2283554   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283555   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
2283556   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2283557   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2283558   +   end;
MPRINT(EM_DIAGRAM):   end;
2283559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283560   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2283561   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2283562   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2283563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283565   +   end;
MPRINT(EM_DIAGRAM):   end;
2283566   +end;
MPRINT(EM_DIAGRAM):   end;
2283567   +
2283568   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
2283569   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
2283570   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
2283571   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2283572   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2283573   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2283574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283576   +end;
MPRINT(EM_DIAGRAM):   end;
2283577   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283579   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
2283580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283581   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283582   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2283583   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
2283584   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2283585   +   end;
MPRINT(EM_DIAGRAM):   end;
2283586   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283587   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
2283588   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
2283589   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
2283590   +   end;
MPRINT(EM_DIAGRAM):   end;
2283591   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283592   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2283593   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2283594   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
2283595   +   end;
MPRINT(EM_DIAGRAM):   end;
2283596   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283597   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
2283598   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2283599   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2283600   +   end;
MPRINT(EM_DIAGRAM):   end;
2283601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283602   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2283603   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2283604   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2283605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283607   +   end;
MPRINT(EM_DIAGRAM):   end;
2283608   +end;
MPRINT(EM_DIAGRAM):   end;
2283609   +
2283610   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
2283611   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
2283612   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
2283613   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2283614   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2283615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283617   +end;
MPRINT(EM_DIAGRAM):   end;
2283618   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283620   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
2283621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283622   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283623   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
2283624   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
2283625   +   end;
MPRINT(EM_DIAGRAM):   end;
2283626   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283627   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
2283628   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
2283629   +   end;
MPRINT(EM_DIAGRAM):   end;
2283630   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283631   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
2283632   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
2283633   +   end;
MPRINT(EM_DIAGRAM):   end;
2283634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283635   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2283636   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2283637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283639   +   end;
MPRINT(EM_DIAGRAM):   end;
2283640   +end;
MPRINT(EM_DIAGRAM):   end;
2283641   +
2283642   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
2283643   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
2283644   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
2283645   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2283646   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2283647   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2283648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283650   +end;
MPRINT(EM_DIAGRAM):   end;
2283651   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283653   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
2283654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283655   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2283656   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
2283657   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
2283658   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
2283659   +   end;
MPRINT(EM_DIAGRAM):   end;
2283660   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283661   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2283662   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2283663   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
2283664   +   end;
MPRINT(EM_DIAGRAM):   end;
2283665   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283666   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
2283667   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2283668   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2283669   +   end;
MPRINT(EM_DIAGRAM):   end;
2283670   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283671   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2283672   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
2283673   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2283674   +   end;
MPRINT(EM_DIAGRAM):   end;
2283675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283676   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2283677   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2283678   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2283679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283681   +   end;
MPRINT(EM_DIAGRAM):   end;
2283682   +end;
MPRINT(EM_DIAGRAM):   end;
2283683   +
2283684   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
2283685   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
2283686   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
2283687   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2283688   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2283689   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2283690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283692   +end;
MPRINT(EM_DIAGRAM):   end;
2283693   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283694   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283695   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
2283696   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283697   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283698   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2283699   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
2283700   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2283701   +   end;
MPRINT(EM_DIAGRAM):   end;
2283702   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283703   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
2283704   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
2283705   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
2283706   +   end;
MPRINT(EM_DIAGRAM):   end;
2283707   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283708   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2283709   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2283710   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
2283711   +   end;
MPRINT(EM_DIAGRAM):   end;
2283712   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283713   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
2283714   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2283715   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2283716   +   end;
MPRINT(EM_DIAGRAM):   end;
2283717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283718   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2283719   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2283720   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2283721   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283722   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283723   +   end;
MPRINT(EM_DIAGRAM):   end;
2283724   +end;
MPRINT(EM_DIAGRAM):   end;
2283725   +
2283726   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
2283727   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
2283728   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
2283729   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2283730   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2283731   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2283732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283734   +end;
MPRINT(EM_DIAGRAM):   end;
2283735   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283736   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283737   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
2283738   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283739   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
2283740   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2283741   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2283742   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
2283743   +   end;
MPRINT(EM_DIAGRAM):   end;
2283744   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283745   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2283746   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
2283747   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2283748   +   end;
MPRINT(EM_DIAGRAM):   end;
2283749   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283750   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
2283751   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
2283752   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
2283753   +   end;
MPRINT(EM_DIAGRAM):   end;
2283754   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283755   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
2283756   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2283757   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2283758   +   end;
MPRINT(EM_DIAGRAM):   end;
2283759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283760   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2283761   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2283762   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2283763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283765   +   end;
MPRINT(EM_DIAGRAM):   end;
2283766   +end;
MPRINT(EM_DIAGRAM):   end;
2283767   +
2283768   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
2283769   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
2283770   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
2283771   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2283772   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2283773   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2283774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283776   +end;
MPRINT(EM_DIAGRAM):   end;
2283777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283779   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
2283780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283781   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2283782   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2283783   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
2283784   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2283785   +   end;
MPRINT(EM_DIAGRAM):   end;
2283786   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2283787   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
2283788   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
2283789   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
2283790   +   end;
MPRINT(EM_DIAGRAM):   end;
2283791   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283792   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2283793   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2283794   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
2283795   +   end;
MPRINT(EM_DIAGRAM):   end;
2283796   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283797   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
2283798   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2283799   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2283800   +   end;
MPRINT(EM_DIAGRAM):   end;
2283801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283802   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2283803   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2283804   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2283805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283807   +   end;
MPRINT(EM_DIAGRAM):   end;
2283808   +end;
MPRINT(EM_DIAGRAM):   end;
2283809   +
2283810   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
2283811   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
2283812   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
2283813   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2283814   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2283815   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2283816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283818   +end;
MPRINT(EM_DIAGRAM):   end;
2283819   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283821   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
2283822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283823   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2283824   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
2283825   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
2283826   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
2283827   +   end;
MPRINT(EM_DIAGRAM):   end;
2283828   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2283829   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2283830   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2283831   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
2283832   +   end;
MPRINT(EM_DIAGRAM):   end;
2283833   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2283834   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2283835   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
2283836   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2283837   +   end;
MPRINT(EM_DIAGRAM):   end;
2283838   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2283839   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
2283840   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2283841   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2283842   +   end;
MPRINT(EM_DIAGRAM):   end;
2283843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283844   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2283845   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2283846   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2283847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283849   +   end;
MPRINT(EM_DIAGRAM):   end;
2283850   +end;
MPRINT(EM_DIAGRAM):   end;
2283851   +
2283852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283853   +*** Checking missing input Interval
2283854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2283855   +
2283856   +IF NMISS(
2283857   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
2283858   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2283859   +
2283860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283861   +END;
MPRINT(EM_DIAGRAM):   END;
2283862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283863   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2283864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283865   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283866   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2283867   +END;
MPRINT(EM_DIAGRAM):   END;
2283868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283869   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
2283870   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
2283871   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2283872   +END;
MPRINT(EM_DIAGRAM):   END;
2283873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283874   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2283875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283877   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2283878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283879   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283880   +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
2283881   +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
2283882   +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
2283883   +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
2283884   +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
2283885   +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
2283886   +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
2283887   +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
2283888   +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
2283889   +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
2283890   +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
2283891   +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
2283892   +          +    -1.92253913417034 * GRP_MntFishProducts3
2283893   +          +     0.11236967036572 * GRP_MntFishProducts4
2283894   +          +     1.55117451498964 * GRP_MntGoldProds2
2283895   +          +    -2.17638819155912 * GRP_MntGoldProds3
2283896   +          +     1.12471370225173 * GRP_MntGoldProds4
2283897   +          +     0.73773441156548 * GRP_MntMeatProducts2
2283898   +          +     2.07738910661633 * GRP_MntMeatProducts3
2283899   +          +    -0.64280630173292 * GRP_MntMeatProducts4
2283900   +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
2283901   +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
2283902   +          +     0.27137671258246 * GRP_NumCatalogPurchases3
2283903   +          +     1.17769351442984 * GRP_NumCatalogPurchases4
2283904   +          +     1.22104662684375 * GRP_NumDistPurchases2
2283905   +          +      3.4956187335148 * GRP_NumDistPurchases3
2283906   +          +     1.44110988448724 * GRP_NumDistPurchases4
2283907   +          +    -0.15910531424988 * GRP_NumWebPurchases2
2283908   +          +      2.0651216353476 * GRP_NumWebPurchases3
2283909   +          +     1.88264340284474 * GRP_NumWebPurchases4
2283910   +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
2283911   +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
2283912   +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
2283913   +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
2283914   +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
2283915   +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 + 
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 + 
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 * 
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743 
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 * 
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 * 
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 * 
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 * 
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 * 
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 + 
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 + 
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 + 
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 + 
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 + 
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 * 
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 + 
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 * 
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
2283916   +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
2283917   +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
2283918   +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
2283919   +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
2283920   +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
2283921   +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
2283922   +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
2283923   +          +     0.69185352158005 * GRP_MntFishProducts3
2283924   +          +    -0.03493178084029 * GRP_MntFishProducts4
2283925   +          +     1.51100187776315 * GRP_MntGoldProds2
2283926   +          +     0.06501688279193 * GRP_MntGoldProds3
2283927   +          +    -0.39137744731231 * GRP_MntGoldProds4
2283928   +          +    -1.71718837423104 * GRP_MntMeatProducts2
2283929   +          +    -2.21915390243757 * GRP_MntMeatProducts3
2283930   +          +    -0.56748587906854 * GRP_MntMeatProducts4
2283931   +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
2283932   +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
2283933   +          +     1.48903401021544 * GRP_NumCatalogPurchases3
2283934   +          +     1.17263293507207 * GRP_NumCatalogPurchases4
2283935   +          +     1.51105230747578 * GRP_NumDistPurchases2
2283936   +          +     0.77634340058478 * GRP_NumDistPurchases3
2283937   +          +    -0.03088809375301 * GRP_NumDistPurchases4
2283938   +          +    -0.96601789395554 * GRP_NumWebPurchases2
2283939   +          +     0.85040977160083 * GRP_NumWebPurchases3
2283940   +          +     2.40308918299781 * GRP_NumWebPurchases4
2283941   +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
2283942   +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
2283943   +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
2283944   +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
2283945   +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
2283946   +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 + 
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 + 
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 * 
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 * 
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 + 
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 + 
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 + 
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 + 
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194 
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 * 
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 * 
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 * 
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 * 
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 * 
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 + 
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 * 
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 + 
2.66867988462295 * GRP_Recency4 ;
2283947   +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
2283948   +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
2283949   +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
2283950   +        GRP_Income2  +     1.18033291239845 * GRP_Income3
2283951   +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
2283952   +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
2283953   +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
2283954   +          +    -0.25133476006515 * GRP_MntFishProducts3
2283955   +          +     1.43382012526151 * GRP_MntFishProducts4
2283956   +          +      0.6587510367878 * GRP_MntGoldProds2
2283957   +          +    -2.29815972364167 * GRP_MntGoldProds3
2283958   +          +    -1.17878838514109 * GRP_MntGoldProds4
2283959   +          +    -1.45630165039671 * GRP_MntMeatProducts2
2283960   +          +    -0.11970663820977 * GRP_MntMeatProducts3
2283961   +          +    -0.76333182688138 * GRP_MntMeatProducts4
2283962   +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
2283963   +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
2283964   +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
2283965   +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
2283966   +          +    -0.83062872942088 * GRP_NumDistPurchases2
2283967   +          +      1.2644984519337 * GRP_NumDistPurchases3
2283968   +          +     0.62516412515385 * GRP_NumDistPurchases4
2283969   +          +    -0.91932392687811 * GRP_NumWebPurchases2
2283970   +          +     0.63985001179952 * GRP_NumWebPurchases3
2283971   +          +     0.11379774354586 * GRP_NumWebPurchases4
2283972   +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
2283973   +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
2283974   +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
2283975   +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
2283976   +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
2283977   +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 + 
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 + 
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 * 
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 * 
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3 
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 + 
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 + 
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 + 
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 + 
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 * 
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 * 
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 * 
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 * 
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 * 
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 + 
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 * 
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 + 
-1.63045870617841 * GRP_Recency4 ;
2283978   +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
2283979   +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
2283980   +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
2283981   +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
2283982   +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
2283983   +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
2283984   +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
2283985   +          +     0.25005234850524 * GRP_MntFishProducts3
2283986   +          +    -0.07970714752313 * GRP_MntFishProducts4
2283987   +          +     -0.7495440064059 * GRP_MntGoldProds2
2283988   +          +     -0.0659148563739 * GRP_MntGoldProds3
2283989   +          +    -1.42445075896946 * GRP_MntGoldProds4
2283990   +          +      0.1738975461322 * GRP_MntMeatProducts2
2283991   +          +    -2.24799164386156 * GRP_MntMeatProducts3
2283992   +          +    -1.67754357341899 * GRP_MntMeatProducts4
2283993   +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
2283994   +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
2283995   +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
2283996   +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
2283997   +          +    -0.48267351716569 * GRP_NumDistPurchases2
2283998   +          +     0.93211719554417 * GRP_NumDistPurchases3
2283999   +          +      1.1708430486506 * GRP_NumDistPurchases4
2284000   +          +     0.03811902892169 * GRP_NumWebPurchases2
2284001   +          +    -1.51477371309928 * GRP_NumWebPurchases3
2284002   +          +     1.07378297590898 * GRP_NumWebPurchases4
2284003   +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
2284004   +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
2284005   +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
2284006   +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
2284007   +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
2284008   +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 + 
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 + 
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 * 
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 * 
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3 
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 + 
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322 
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 * 
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 + 
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 + 
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 + 
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 + 
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 + 
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 * 
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 + 
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 * 
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
2284009   +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
2284010   +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
2284011   +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
2284012   +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
2284013   +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
2284014   +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
2284015   +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
2284016   +          +    -1.49559041774587 * GRP_MntFishProducts3
2284017   +          +     1.29292270443546 * GRP_MntFishProducts4
2284018   +          +     3.28109415592287 * GRP_MntGoldProds2
2284019   +          +     0.40523569115651 * GRP_MntGoldProds3
2284020   +          +        0.70305704265 * GRP_MntGoldProds4
2284021   +          +    -1.85351989681271 * GRP_MntMeatProducts2
2284022   +          +    -0.63625311683955 * GRP_MntMeatProducts3
2284023   +          +     0.27320544681113 * GRP_MntMeatProducts4
2284024   +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
2284025   +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
2284026   +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
2284027   +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
2284028   +          +    -1.40970961318877 * GRP_NumDistPurchases2
2284029   +          +     -2.5780841761751 * GRP_NumDistPurchases3
2284030   +          +    -0.35557998232484 * GRP_NumDistPurchases4
2284031   +          +     1.27746944985248 * GRP_NumWebPurchases2
2284032   +          +     0.69463977283169 * GRP_NumWebPurchases3
2284033   +          +    -0.54397813851169 * GRP_NumWebPurchases4
2284034   +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
2284035   +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
2284036   +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
2284037   +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
2284038   +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
2284039   +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 + 
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 + 
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 * 
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 * 
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3 
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 + 
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 * 
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 * 
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 + 
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 + 
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 + 
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 + 
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 + 
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163 
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 + 
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 * 
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
2284040   +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
2284041   +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
2284042   +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
2284043   +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
2284044   +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
2284045   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2284046   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2284047   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2284048   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2284049   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2284050   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2284051   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2284052   +END;
MPRINT(EM_DIAGRAM):   END;
2284053   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284054   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2284055   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2284056   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2284057   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2284058   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2284059   +END;
MPRINT(EM_DIAGRAM):   END;
2284060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284061   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2284062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284063   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284064   +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
2284065   +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
2284066   +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
2284067   +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
2284068   +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
2284069   +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
2284070   +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
2284071   +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
2284072   +        GRP_Income2  +      2.4308303101124 * GRP_Income3
2284073   +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
2284074   +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
2284075   +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
2284076   +          +     2.51364109656281 * GRP_MntFishProducts3
2284077   +          +    -1.42490007484769 * GRP_MntFishProducts4
2284078   +          +    -0.45125943648795 * GRP_MntGoldProds2
2284079   +          +     2.47102254724134 * GRP_MntGoldProds3
2284080   +          +     -1.9039173262792 * GRP_MntGoldProds4
2284081   +          +     0.19349291706995 * GRP_MntMeatProducts2
2284082   +          +     1.13475826324844 * GRP_MntMeatProducts3
2284083   +          +    -0.33642288502432 * GRP_MntMeatProducts4
2284084   +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
2284085   +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
2284086   +          +     0.15659125827236 * GRP_NumCatalogPurchases3
2284087   +          +     0.32817066335176 * GRP_NumCatalogPurchases4
2284088   +          +    -0.67313821415044 * GRP_NumDistPurchases2
2284089   +          +    -0.96239937857546 * GRP_NumDistPurchases3
2284090   +          +     0.32058507897383 * GRP_NumDistPurchases4
2284091   +          +     0.02503658374779 * GRP_NumWebPurchases2
2284092   +          +    -2.42182777667863 * GRP_NumWebPurchases3
2284093   +          +     1.09934791830799 * GRP_NumWebPurchases4
2284094   +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
2284095   +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
2284096   +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
2284097   +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
2284098   +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
2284099   +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 + 
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 + 
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 * 
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 * 
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 + 
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 + 
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995 
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 * 
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 + 
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 + 
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 + 
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 + 
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 + 
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632 
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 + 
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 * 
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
2284100   +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
2284101   +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
2284102   +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
2284103   +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
2284104   +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
2284105   +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
2284106   +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
2284107   +          +    -0.68769529687639 * GRP_MntFishProducts3
2284108   +          +     0.91046416847697 * GRP_MntFishProducts4
2284109   +          +     1.93581182421904 * GRP_MntGoldProds2
2284110   +          +     0.00795466624941 * GRP_MntGoldProds3
2284111   +          +    -0.22854189252742 * GRP_MntGoldProds4
2284112   +          +     0.51645804440055 * GRP_MntMeatProducts2
2284113   +          +    -0.73677565057958 * GRP_MntMeatProducts3
2284114   +          +    -3.38222954402665 * GRP_MntMeatProducts4
2284115   +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
2284116   +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
2284117   +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
2284118   +          +     0.92868654767551 * GRP_NumCatalogPurchases4
2284119   +          +    -0.18642581919214 * GRP_NumDistPurchases2
2284120   +          +     0.32117397006136 * GRP_NumDistPurchases3
2284121   +          +    -0.59059080451748 * GRP_NumDistPurchases4
2284122   +          +    -1.05057528699441 * GRP_NumWebPurchases2
2284123   +          +    -0.84936431958655 * GRP_NumWebPurchases3
2284124   +          +     0.43322339989668 * GRP_NumWebPurchases4
2284125   +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
2284126   +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
2284127   +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
2284128   +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
2284129   +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
2284130   +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 + 
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 + 
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 * 
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 * 
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3 
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 + 
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 + 
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 + 
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 + 
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 * 
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 * 
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 * 
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 * 
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 * 
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 + 
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 * 
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 + 
-0.17063922919112 * GRP_Recency4 ;
2284131   +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
2284132   +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
2284133   +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
2284134   +        GRP_Income2  +     2.06545795697617 * GRP_Income3
2284135   +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
2284136   +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
2284137   +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
2284138   +          +     -0.2747383185488 * GRP_MntFishProducts3
2284139   +          +     0.05699547232616 * GRP_MntFishProducts4
2284140   +          +     1.78340082221807 * GRP_MntGoldProds2
2284141   +          +    -0.21272258173805 * GRP_MntGoldProds3
2284142   +          +    -0.63881612523162 * GRP_MntGoldProds4
2284143   +          +     0.35743242018534 * GRP_MntMeatProducts2
2284144   +          +     0.39288166088974 * GRP_MntMeatProducts3
2284145   +          +     0.68623350973697 * GRP_MntMeatProducts4
2284146   +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
2284147   +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
2284148   +          +     0.38349558810511 * GRP_NumCatalogPurchases3
2284149   +          +     0.94944817324412 * GRP_NumCatalogPurchases4
2284150   +          +     0.87924710032772 * GRP_NumDistPurchases2
2284151   +          +     0.54658799433949 * GRP_NumDistPurchases3
2284152   +          +     1.85594529989185 * GRP_NumDistPurchases4
2284153   +          +    -0.66471569231333 * GRP_NumWebPurchases2
2284154   +          +    -0.59461900037355 * GRP_NumWebPurchases3
2284155   +          +     0.12806083458682 * GRP_NumWebPurchases4
2284156   +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
2284157   +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
2284158   +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
2284159   +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
2284160   +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
2284161   +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 + 
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 + 
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 * 
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 * 
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 + 
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 + 
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 + 
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 + 
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 + 
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 * 
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 * 
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 * 
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 * 
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 * 
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 + 
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 * 
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 + 
-0.53617918353506 * GRP_Recency4 ;
2284162   +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
2284163   +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
2284164   +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
2284165   +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
2284166   +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
2284167   +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
2284168   +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
2284169   +          +    -0.50962348735329 * GRP_MntFishProducts3
2284170   +          +    -1.75841654964734 * GRP_MntFishProducts4
2284171   +          +     2.14839745385174 * GRP_MntGoldProds2
2284172   +          +      2.4716387157729 * GRP_MntGoldProds3
2284173   +          +     0.61286996367418 * GRP_MntGoldProds4
2284174   +          +     1.45427097683349 * GRP_MntMeatProducts2
2284175   +          +    -0.34990206215878 * GRP_MntMeatProducts3
2284176   +          +     2.25284175811484 * GRP_MntMeatProducts4
2284177   +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
2284178   +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
2284179   +          +     1.02272173939472 * GRP_NumCatalogPurchases3
2284180   +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
2284181   +          +    -0.44080685652484 * GRP_NumDistPurchases2
2284182   +          +     2.40613428385819 * GRP_NumDistPurchases3
2284183   +          +     0.26317801067025 * GRP_NumDistPurchases4
2284184   +          +     2.34961138802546 * GRP_NumWebPurchases2
2284185   +          +     2.35826990005342 * GRP_NumWebPurchases3
2284186   +          +     0.18496434892584 * GRP_NumWebPurchases4
2284187   +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
2284188   +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
2284189   +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
2284190   +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
2284191   +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
2284192   +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 + 
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 + 
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 * 
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 * 
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3 
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 + 
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349 
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 * 
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 + 
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 + 
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 + 
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 + 
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 + 
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 * 
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 + 
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 * 
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
2284193   +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
2284194   +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
2284195   +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
2284196   +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
2284197   +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
2284198   +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
2284199   +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
2284200   +          +     -2.3817205567109 * GRP_MntFishProducts3
2284201   +          +      1.4356293091772 * GRP_MntFishProducts4
2284202   +          +    -1.03209023546079 * GRP_MntGoldProds2
2284203   +          +     1.93949728331263 * GRP_MntGoldProds3
2284204   +          +     0.44849194130528 * GRP_MntGoldProds4
2284205   +          +     1.34973896956794 * GRP_MntMeatProducts2
2284206   +          +     1.40989126474294 * GRP_MntMeatProducts3
2284207   +          +     0.74435387703611 * GRP_MntMeatProducts4
2284208   +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
2284209   +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
2284210   +          +     1.65449574071289 * GRP_NumCatalogPurchases3
2284211   +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
2284212   +          +    -0.76749528874396 * GRP_NumDistPurchases2
2284213   +          +     1.83370965910825 * GRP_NumDistPurchases3
2284214   +          +    -0.73709156569506 * GRP_NumDistPurchases4
2284215   +          +     0.09215124428658 * GRP_NumWebPurchases2
2284216   +          +      1.0403096068891 * GRP_NumWebPurchases3
2284217   +          +     0.59317560741224 * GRP_NumWebPurchases4
2284218   +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
2284219   +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
2284220   +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
2284221   +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
2284222   +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
2284223   +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 + 
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 + 
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 * 
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 * 
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 + 
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 + 
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794 
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 * 
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 + 
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 + 
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 + 
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 + 
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 + 
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 * 
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 + 
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 * 
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
2284224   +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
2284225   +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
2284226   +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
2284227   +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
2284228   +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
2284229   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2284230   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2284231   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2284232   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2284233   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2284234   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2284235   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2284236   +END;
MPRINT(EM_DIAGRAM):   END;
2284237   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284238   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2284239   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2284240   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2284241   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2284242   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2284243   +END;
MPRINT(EM_DIAGRAM):   END;
2284244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284245   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2284246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284247   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284248   +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
2284249   +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
2284250   +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 + 
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
2284251   +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
2284252   +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
2284253   +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 + 
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
2284254   +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
2284255   +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
2284256   +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 + 
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
2284257   +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
2284258   +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
2284259   +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 + 
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
2284260   +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
2284261   +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
2284262   +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 + 
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
2284263   +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
2284264   +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
2284265   +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 * 
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
2284266   +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
2284267   +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
2284268   +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2 
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
2284269   +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
2284270   +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
2284271   +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2 
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
2284272   +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
2284273   +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
2284274   +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 * 
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
2284275   +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
2284276   +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
2284277   +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 * 
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
2284278   +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
2284279   +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
2284280   +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
2284281   +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
2284282   +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
2284283   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2284284   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2284285   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2284286   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2284287   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2284288   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2284289   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2284290   +END;
MPRINT(EM_DIAGRAM):   END;
2284291   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284292   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2284293   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2284294   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2284295   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2284296   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2284297   +END;
MPRINT(EM_DIAGRAM):   END;
2284298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284299   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2284300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284301   +
2284302   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2284303   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2284304   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2284305   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2284306   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2284307   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284308   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2284309   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2284310   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2284311   +end;
MPRINT(EM_DIAGRAM):   end;
2284312   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284313   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2284314   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2284315   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2284316   +   end;
MPRINT(EM_DIAGRAM):   end;
2284317   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2284318   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2284319   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2284320   +   end;
MPRINT(EM_DIAGRAM):   end;
2284321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284322   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2284323   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2284324   +   end;
MPRINT(EM_DIAGRAM):   end;
2284325   +end;
MPRINT(EM_DIAGRAM):   end;
2284326   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284327   +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
2284328   +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
2284329   +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 + 
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
2284330   +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
2284331   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2284332   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2284333   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2284334   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2284335   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2284336   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2284337   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2284338   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2284339   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2284340   +END;
MPRINT(EM_DIAGRAM):   END;
2284341   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284342   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2284343   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2284344   +END;
MPRINT(EM_DIAGRAM):   END;
2284345   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2284346   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2284347   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2284348   +END;
MPRINT(EM_DIAGRAM):   END;
2284349   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2284350   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2284351   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2284352   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2284353   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2284354   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2284355   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2284356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284357   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2284358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284359   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2284360   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2284361   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2284362   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2284363   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2284364   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2284365   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2284366   +END;
MPRINT(EM_DIAGRAM):   END;
2284367   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2284368   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2284369   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2284370   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2284371    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL20_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2284372    quit;
2284373    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2284374    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2284375    * AutoNeural20: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Computing metadata for TRAIN data;
2284376    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural20_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural20_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural20_TRAIN out=WORK.M0FXWB9W 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FXWB9W;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FXWB9W(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FXWB9W;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FXWB9W;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2T7S729 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BGKTG6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   set WORK.M2T7S729;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural20";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural20";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural20: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2284688    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2284689    set EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMINFO;
2284690    where DATA='AutoNeural20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural20' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
2284691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
      WHERE (DATA='AutoNeural20') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2284692    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural20_EMINFO;
2284693    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2284694    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2284695    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2284699    run;
2284700    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMINFO;
2284701    set EMWS8.AutoNeural20_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural20_EMINFO WORK.MODELTEMP_INFO;
2284702    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2284703    proc sort data = EMWS8.AutoNeural20_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural20_EMINFO NOTHREADS;
2284704    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2284705    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2284706    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2284707    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2284708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2284709    proc sort data = EMWS8.AutoNeural20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2284710    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2284711    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL20_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2284712    data EMWS8.AutoNeural20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural20_EMINFO;
2284713    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2284714    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2284715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL20_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2284716    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2284717    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2284718    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2284719    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.AUTONEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL20_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
