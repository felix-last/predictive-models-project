*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                16.09 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.09 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.09 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3FV0DUN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3FV0DUN new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.09 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.09 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
464181     proc freq data=EMWS8.AutoNeural31_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural31_VariableSet noprint;
464182     table ROLE*LEVEL/out=WORK.AutoNeural31META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural31META;
464183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL31_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL31META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
464184     proc print data=WORK.AutoNeural31META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural31META label noobs;
464185     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
464186     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
464186   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
464186   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
464187     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
464188     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
464189     run;
 
NOTE: There were 2 observations read from the data set WORK.AUTONEURAL31META.
NOTE: The PROCEDURE PRINT printed page 286.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464190     title10;
MPRINT(EM_DIAGRAM):   title10;
464191     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Varsel_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural31_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural31_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural31_DepVar_DD
out=EMWS8.AutoNeural31_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
464238     data WORK.AutoNeural31_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural31_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
464239     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
464240     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
464240   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
464240   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
464241        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
464241   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
464241   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
464242     set EMWS8.AUTONEURAL31_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL31_DEPVAR_DM( where=(_TYPE_="TARGET"));
464243     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
464244     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
464245     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
464246     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
464247     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
464248     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
464249     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
464250     end;
MPRINT(EM_DIAGRAM):   end;
464251     output;
MPRINT(EM_DIAGRAM):   output;
464252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL31_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464253     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
464254     proc print data=WORK.AutoNeural31_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural31_EVENT noobs label;
464255     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
464256     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
464257     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
464258     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL31_EVENT.
NOTE: The PROCEDURE PRINT printed page 287.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464259     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
464260     proc print data = EMWS8.AutoNeural31_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural31_DepVar_DM noobs label;
464261     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
464262     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
464263     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
464263   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
464263   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
464264     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
464265     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
464266     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL31_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 288.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464267     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M18XRR_R;
MPRINT(EM_DIAGRAM):   set WORK.M18XRR_R;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
464276     data WORK.M18XRR_R;
MPRINT(EM_DIAGRAM):    data WORK.M18XRR_R;
464277     set WORK.M18XRR_R end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M18XRR_R end=eof;
464278     output;
MPRINT(EM_DIAGRAM):   output;
464279     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
464280     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
464281     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
464282     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
464283     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
464284     output;
MPRINT(EM_DIAGRAM):   output;
464285     end;
MPRINT(EM_DIAGRAM):   end;
464286     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.M18XRR_R.
NOTE: The data set WORK.M18XRR_R has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL31_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
464287     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
464288     * AutoNeural31: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Create decision matrix;
464289     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464290     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
464291       length   DepVar                           $  32
464292                COUNT                                8
464293                DATAPRIOR                            8
464294                TRAINPRIOR                           8
464295                DECPRIOR                             8
464296                DECISION1                            8
464297                DECISION2                            8
464298                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
464299
464300       label    COUNT="Level Counts"
464301                DATAPRIOR="Data Proportions"
464302                TRAINPRIOR="Training Proportions"
464303                DECPRIOR="Decision Priors"
464304                DECISION1="1"
464305                DECISION2="0"
464306                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
464307       format   COUNT 10.
464308                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
464309     DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
464309   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
464310     output;
MPRINT(EM_DIAGRAM):   output;
464311     DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
464311   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
464312     output;
MPRINT(EM_DIAGRAM):   output;
464313     ;
MPRINT(EM_DIAGRAM):   ;
464314     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464315     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
464316     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
464317     label DECISION1= '1';
464318     label DECISION2= '0';
464319     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
464320     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
464321     data EM_AutoNeural31;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural31;
464322     set EMWS8.Varsel_TRAIN(keep=
464323     AcceptedCmpTotal DepVar Mnt MntMeatProducts NumCatalogPurchases RFMstat
464324     Recency );
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN(keep= AcceptedCmpTotal DepVar Mnt MntMeatProducts
NumCatalogPurchases RFMstat Recency );
464325     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural31: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464326     *------------------------------------------------------------* ;
464327     * AutoNeural31: DMDBClass Macro ;
464328     *------------------------------------------------------------* ;
464329     %macro DMDBClass;
464330         DepVar(DESC)
464331     %mend DMDBClass;
464332     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464333     * AutoNeural31: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural31: DMDBVar Macro ;
464334     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464335     %macro DMDBVar;
464336         AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
464337     %mend DMDBVar;
464338     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464339     * AutoNeural31: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Create DMDB;
464340     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464341     proc dmdb batch data=WORK.EM_AutoNeural31
464342     dmdbcat=WORK.AutoNeural31_DMDB
464343     maxlevel = 513
464344     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
464345     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
464346     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
MPRINT(EM_DIAGRAM):  ;
464347     target
464348     DepVar
464349     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
464350     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL31.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
464351     quit;
464352     *--- end code ---*;
 
464353     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
464354     * AutoNeural31: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Interval Inputs Macro ;
464355     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464356     %macro INTINPUTS;
464357         AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
464358     %mend INTINPUTS;
464359     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464360     * AutoNeural31: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Binary Inputs Macro ;
464361     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464362     %macro BININPUTS;
464363
464364     %mend BININPUTS;
464365     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464366     * AutoNeural31: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Nominal Inputs Macro ;
464367     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464368     %macro NOMINPUTS;
464369
464370     %mend NOMINPUTS;
464371     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464372     * AutoNeural31: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Ordinal Inputs Macro ;
464373     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
464374     %macro ORDINPUTS;
464375
464376     %mend ORDINPUTS;
464377     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
464378     ;
MPRINT(EM_DIAGRAM):   ;
464379     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
464380     options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
464381     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
464382     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
464383     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
464384     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464385     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
464385   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
464386     *;
 
464387     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464388     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
464389     ;
MPRINT(EM_DIAGRAM):   ;
464390     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464391     *;
MPRINT(EM_DIAGRAM):   *;
 
464392     *;
MPRINT(EM_DIAGRAM):    *;
464393     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
464394     validdata=EMWS8.Varsel_VALIDATE
464395     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
464396     *;
MPRINT(EM_DIAGRAM):   *;
464397     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
464398     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
464399     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
464400     target DepVar / level=NOMINAL id=DepVar
464401     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
464402     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464403     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
464404     ;
MPRINT(EM_DIAGRAM):   ;
464405     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464406     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
464407     *;
MPRINT(EM_DIAGRAM):   *;
464408     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
464409     *;
MPRINT(EM_DIAGRAM):   *;
464410     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464411     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
464411   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE: Variable _WARN_ is uninitialized.
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 22 observations and 22 variables.
NOTE: The data set WORK._ANFIT has 28 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
464412     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
464413     tech = Default;
464414     ;
464415     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.24 seconds
      cpu time            0.25 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464416     *;
464417     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
464418     var _iter_ _aic_ _averr_ _misc_
464419     _vaverr_ _vmisc_
464420     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464421     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 289.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464422     *------------------------------------------------------------*;
464423     * Extract best iteration;
464424     ;
464425     *------------------------------------------------------------*;
464426     %global _iter;
464427     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
464428     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
464429     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
464430     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
464431     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
464432     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
464433     end;
MPRINT(EM_DIAGRAM):   end;
464434     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464435     *;
 
464436     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
464437     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
464438     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
464439     output;
MPRINT(EM_DIAGRAM):   output;
464440     stop;
MPRINT(EM_DIAGRAM):   stop;
464441     end;
MPRINT(EM_DIAGRAM):   end;
464442     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464443     *;
464444     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464445     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
464446     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
464447     output;
MPRINT(EM_DIAGRAM):   output;
464448     stop;
MPRINT(EM_DIAGRAM):   stop;
464449     end;
MPRINT(EM_DIAGRAM):   end;
464450     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464451     *;
MPRINT(EM_DIAGRAM):    *;
464452     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464453     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
464453   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
464454     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
464455     var _iter_ _aic_ _averr_ _misc_
464456     _vaverr_ _vmisc_
464457     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464458     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 290.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464459     title9;
MPRINT(EM_DIAGRAM):   title9;
464460     title10;
MPRINT(EM_DIAGRAM):   title10;
464461     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
464462     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
464463     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
464464     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
464464   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
464465     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
464465   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
464466     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
464466   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
464467     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
464467   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
464468     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
464469     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
464470     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
464471     set
464472     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
464473     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
464474     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464475     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464476     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464477     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464478     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464479     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464480     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464481     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464482     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464483     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
464484     ;
MPRINT(EM_DIAGRAM):   ;
464485     data WORK.SAVEDS_AUTONEUR_0B94GKB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0B94GKB;
464486     set EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_ESTDS;
464487     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0B94GKB has 1 observations and 22
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464488     data EMWS8.AutoNeural31_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_BESTDS;
464489     set EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_ESTDS;
464490     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL31_BESTDS has 1 observations and 22
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464491     data WORK.BFITDS_AUTONEUR_0B94GKB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0B94GKB;
464492     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0B94GKB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464494     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
464495     ;
MPRINT(EM_DIAGRAM):   ;
464496     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
464497     set EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY;
464498     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
464499     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
464500     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464501     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
464502     ;
MPRINT(EM_DIAGRAM):   ;
464503     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464504     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464505     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
464506     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
464507     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
464508     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
464509     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
464510     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464511     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
464512     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
464513     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464514     *;
MPRINT(EM_DIAGRAM):    *;
464515     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
464516     validdata=EMWS8.Varsel_VALIDATE
464517     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
464518     *;
MPRINT(EM_DIAGRAM):   *;
464519     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
464520     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
464521     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
464522     target DepVar / level=NOMINAL id=DepVar
464523     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
464524     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464525     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
464526     ;
MPRINT(EM_DIAGRAM):   ;
464527     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464528     Hidden 2 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=LOG;
464529     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
464530     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
464531     *;
MPRINT(EM_DIAGRAM):   *;
464532     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
464533     *;
MPRINT(EM_DIAGRAM):   *;
464534     initial
464535     ;
MPRINT(EM_DIAGRAM):   initial ;
NOTE: Variable _WARN_ is uninitialized.
464536     *;
MPRINT(EM_DIAGRAM):   *;
464537     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464538     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
464538   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=112 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 32 variables.
MPRINT(EM_DIAGRAM):   *;
464539     prelim 8 outest=_anpre pretime=112 preiter=25
464540     tech = Default
464541     ;
464542     *;
464543     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464544     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
464544   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 32 observations and 32 variables.
NOTE: The data set WORK._ANFIT has 28 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
464545     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
464546     tech = Default;
464547     ;
464548     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           2.05 seconds
      cpu time            2.02 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 291.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.06 seconds
      cpu time            2.04 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464549     *;
464550     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
464551     var _iter_ _aic_ _averr_ _misc_
464552     _vaverr_ _vmisc_
464553     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464554     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 292.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464555     *------------------------------------------------------------*;
464556     * Extract best iteration;
464557     ;
464558     *------------------------------------------------------------*;
464559     %global _iter;
464560     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
464561     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
464562     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
464563     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
464564     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
464565     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
464566     end;
MPRINT(EM_DIAGRAM):   end;
464567     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464568     *;
 
464569     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
464570     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
464571     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
464572     output;
MPRINT(EM_DIAGRAM):   output;
464573     stop;
MPRINT(EM_DIAGRAM):   stop;
464574     end;
MPRINT(EM_DIAGRAM):   end;
464575     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464576     *;
464577     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464578     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
464579     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
464580     output;
MPRINT(EM_DIAGRAM):   output;
464581     stop;
MPRINT(EM_DIAGRAM):   stop;
464582     end;
MPRINT(EM_DIAGRAM):   end;
464583     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464584     *;
MPRINT(EM_DIAGRAM):    *;
464585     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464586     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
464586   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
464587     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
464588     var _iter_ _aic_ _averr_ _misc_
464589     _vaverr_ _vmisc_
464590     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464591     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 293.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464592     title9;
MPRINT(EM_DIAGRAM):   title9;
464593     title10;
MPRINT(EM_DIAGRAM):   title10;
464594     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464595     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464596     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464597     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464598     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464599     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464600     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464601     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464602     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
464603     ;
MPRINT(EM_DIAGRAM):   ;
464604     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464605     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464606     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
464607     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
464608     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
464609     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
464610     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
464611     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464612     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
464613     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
464614     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464615     *;
MPRINT(EM_DIAGRAM):    *;
464616     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
464617     validdata=EMWS8.Varsel_VALIDATE
464618     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
464619     *;
MPRINT(EM_DIAGRAM):   *;
464620     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
464621     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
464622     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
464623     target DepVar / level=NOMINAL id=DepVar
464624     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
464625     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464626     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
464627     ;
MPRINT(EM_DIAGRAM):   ;
464628     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464629     Hidden 2 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=SINE;
464630     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
464631     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
464632     *;
MPRINT(EM_DIAGRAM):   *;
464633     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
464634     *;
MPRINT(EM_DIAGRAM):   *;
464635     initial
464636     ;
MPRINT(EM_DIAGRAM):   initial ;
NOTE: Variable _WARN_ is uninitialized.
464637     *;
MPRINT(EM_DIAGRAM):   *;
464638     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464639     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
464639   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=112 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANPRE has 17 observations and 32 variables.
MPRINT(EM_DIAGRAM):   *;
464640     prelim 8 outest=_anpre pretime=112 preiter=25
464641     tech = Default
464642     ;
464643     *;
464644     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464645     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
464645   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=899
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 37 observations and 32 variables.
NOTE: The data set WORK._ANFIT has 38 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
464646     train estiter=1 outest=_anest outfit=_anfit maxtime=899 maxiter=50
MPRINT(EM_DIAGRAM):   run;
464647     tech = Default;
464648     ;
464649     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           2.63 seconds
      cpu time            2.02 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 294.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.64 seconds
      cpu time            2.04 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464650     *;
464651     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
464652     var _iter_ _aic_ _averr_ _misc_
464653     _vaverr_ _vmisc_
464654     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464655     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 295.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464656     *------------------------------------------------------------*;
464657     * Extract best iteration;
464658     ;
464659     *------------------------------------------------------------*;
464660     %global _iter;
464661     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
464662     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
464663     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
464664     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
464665     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
464666     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
464667     end;
MPRINT(EM_DIAGRAM):   end;
464668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464669     *;
 
464670     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
464671     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
464672     if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
464673     output;
MPRINT(EM_DIAGRAM):   output;
464674     stop;
MPRINT(EM_DIAGRAM):   stop;
464675     end;
MPRINT(EM_DIAGRAM):   end;
464676     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464677     *;
464678     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464679     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
464680     if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
464681     output;
MPRINT(EM_DIAGRAM):   output;
464682     stop;
MPRINT(EM_DIAGRAM):   stop;
464683     end;
MPRINT(EM_DIAGRAM):   end;
464684     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464685     *;
MPRINT(EM_DIAGRAM):    *;
464686     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464687     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
464687   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
464688     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
464689     var _iter_ _aic_ _averr_ _misc_
464690     _vaverr_ _vmisc_
464691     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464692     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 296.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464693     title9;
MPRINT(EM_DIAGRAM):   title9;
464694     title10;
MPRINT(EM_DIAGRAM):   title10;
464695     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464696     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464697     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464698     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464699     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464700     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464701     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464702     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464703     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
464704     ;
MPRINT(EM_DIAGRAM):   ;
464705     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464706     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464707     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
464708     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
464709     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
464710     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
464711     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
464712     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464713     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
464714     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
464715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464716     *;
MPRINT(EM_DIAGRAM):    *;
464717     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
464718     validdata=EMWS8.Varsel_VALIDATE
464719     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
464720     *;
MPRINT(EM_DIAGRAM):   *;
464721     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
464722     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
464723     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
464724     target DepVar / level=NOMINAL id=DepVar
464725     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
464726     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464727     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
464728     ;
MPRINT(EM_DIAGRAM):   ;
464729     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464730     Hidden 2 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=SOFTMAX;
464731     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
464732     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
464733     *;
MPRINT(EM_DIAGRAM):   *;
464734     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
464735     *;
MPRINT(EM_DIAGRAM):   *;
464736     initial
464737     ;
MPRINT(EM_DIAGRAM):   initial ;
NOTE: Variable _WARN_ is uninitialized.
464738     *;
MPRINT(EM_DIAGRAM):   *;
464739     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464740     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
464740   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=112 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 25 variables.
MPRINT(EM_DIAGRAM):   *;
464741     prelim 8 outest=_anpre pretime=112 preiter=25
464742     tech = Default
464743     ;
464744     *;
464745     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464746     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
464746   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=898
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANEST has 23 observations and 25 variables.
NOTE: The data set WORK._ANFIT has 24 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
464747     train estiter=1 outest=_anest outfit=_anfit maxtime=898 maxiter=50
MPRINT(EM_DIAGRAM):   run;
464748     tech = Default;
464749     ;
464750     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           1.83 seconds
      cpu time            1.81 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 297.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.83 seconds
      cpu time            1.81 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464751     *;
464752     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
464753     var _iter_ _aic_ _averr_ _misc_
464754     _vaverr_ _vmisc_
464755     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 298.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464757     *------------------------------------------------------------*;
464758     * Extract best iteration;
464759     ;
464760     *------------------------------------------------------------*;
464761     %global _iter;
464762     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
464763     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
464764     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
464765     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
464766     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
464767     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
464768     end;
MPRINT(EM_DIAGRAM):   end;
464769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464770     *;
 
464771     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
464772     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
464773     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
464774     output;
MPRINT(EM_DIAGRAM):   output;
464775     stop;
MPRINT(EM_DIAGRAM):   stop;
464776     end;
MPRINT(EM_DIAGRAM):   end;
464777     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464778     *;
464779     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464780     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
464781     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
464782     output;
MPRINT(EM_DIAGRAM):   output;
464783     stop;
MPRINT(EM_DIAGRAM):   stop;
464784     end;
MPRINT(EM_DIAGRAM):   end;
464785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464786     *;
MPRINT(EM_DIAGRAM):    *;
464787     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464788     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
464788   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
464789     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
464790     var _iter_ _aic_ _averr_ _misc_
464791     _vaverr_ _vmisc_
464792     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 299.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464794     title9;
MPRINT(EM_DIAGRAM):   title9;
464795     title10;
MPRINT(EM_DIAGRAM):   title10;
464796     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464797     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464798     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464800     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464801     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464802     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464803     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464804     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
464805     ;
MPRINT(EM_DIAGRAM):   ;
464806     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464807     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464808     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
464809     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
464810     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
464811     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
464812     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
464813     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464814     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
464815     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
464816     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464817     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
464818     ;
MPRINT(EM_DIAGRAM):   ;
464819     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_ESTDS;
464820     set EMWS8.AutoNeural31_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_BESTDS;
464821     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464822     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464823     set WORK.BFITDS_AUTONEUR_0B94GKB;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_0B94GKB;
464824     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_0B94GKB.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464825     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
464826     ;
MPRINT(EM_DIAGRAM):   ;
464827     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464828     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464829     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
464830     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
464831     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
464832     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
464833     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
464834     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464835     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
464836     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
464837     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464838     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464839     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464840     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464842     *;
MPRINT(EM_DIAGRAM):    *;
464843     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
464844     validdata=EMWS8.Varsel_VALIDATE
464845     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
464846     *;
MPRINT(EM_DIAGRAM):   *;
464847     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
464848     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
464849     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
464850     target DepVar / level=NOMINAL id=DepVar
464851     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
464852     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464853     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
464854     ;
MPRINT(EM_DIAGRAM):   ;
464855     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464856     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
464857     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464858     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
464859     ;
MPRINT(EM_DIAGRAM):   ;
464860     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464861     Hidden 2 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=LOG;
464862     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
464863     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
464864     *;
MPRINT(EM_DIAGRAM):   *;
464865     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
464866     *;
MPRINT(EM_DIAGRAM):   *;
464867     initial
464868     inest = EMWS8.AutoNeural31_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural31_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 22 variables.
464869     ;
MPRINT(EM_DIAGRAM):   ;
464870     *;
MPRINT(EM_DIAGRAM):   *;
464871     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464872     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
464872   ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
464873     prelim 8 outest=_anpre pretime=112 preiter=25
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=112 preiter=25 tech =
Default inest = EMWS8.AutoNeural31_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 17 observations and 38 variables.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 22 variables.
MPRINT(EM_DIAGRAM):   *;
464874     tech = Default
464875     inest = EMWS8.AutoNeural31_ESTDS bylabel
464876     ;
464877     *;
464878     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464879     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
464879   ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=898
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 39 observations and 38 variables.
NOTE: The data set WORK._ANFIT has 30 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
464880     train estiter=1 outest=_anest outfit=_anfit maxtime=898 maxiter=50
MPRINT(EM_DIAGRAM):   run;
464881     tech = Default;
464882     ;
464883     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           2.53 seconds
      cpu time            2.51 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 300.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.53 seconds
      cpu time            2.52 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464884     *;
464885     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
464886     var _iter_ _aic_ _averr_ _misc_
464887     _vaverr_ _vmisc_
464888     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464889     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 301.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464890     *------------------------------------------------------------*;
464891     * Extract best iteration;
464892     ;
464893     *------------------------------------------------------------*;
464894     %global _iter;
464895     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
464896     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
464897     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
464898     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
464899     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
464900     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
464901     end;
MPRINT(EM_DIAGRAM):   end;
464902     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464903     *;
 
464904     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
464905     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
464906     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
464907     output;
MPRINT(EM_DIAGRAM):   output;
464908     stop;
MPRINT(EM_DIAGRAM):   stop;
464909     end;
MPRINT(EM_DIAGRAM):   end;
464910     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
464911     *;
464912     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464913     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
464914     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
464915     output;
MPRINT(EM_DIAGRAM):   output;
464916     stop;
MPRINT(EM_DIAGRAM):   stop;
464917     end;
MPRINT(EM_DIAGRAM):   end;
464918     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464919     *;
MPRINT(EM_DIAGRAM):    *;
464920     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464921     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
464921   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
464922     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
464923     var _iter_ _aic_ _averr_ _misc_
464924     _vaverr_ _vmisc_
464925     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
464926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 302.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464927     title9;
MPRINT(EM_DIAGRAM):   title9;
464928     title10;
MPRINT(EM_DIAGRAM):   title10;
464929     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464930     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464931     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464932     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464933     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
464934     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464935     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
464936     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464937     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
464938     ;
MPRINT(EM_DIAGRAM):   ;
464939     data WORK.SAVEDS_AUTONEUR_0B94GKB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0B94GKB;
464940     set EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_ESTDS;
464941     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0B94GKB has 1 observations and 38
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464942     data EMWS8.AutoNeural31_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_BESTDS;
464943     set EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_ESTDS;
464944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL31_BESTDS has 1 observations and 38
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464945     data WORK.BFITDS_AUTONEUR_0B94GKB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0B94GKB;
464946     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464947     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0B94GKB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
464948     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
464949     ;
MPRINT(EM_DIAGRAM):   ;
464950     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
464951     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
464952     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
464953     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
464954     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
464955     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
464956     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
464957     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464958     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
464959     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
464960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464961     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
464962     ;
MPRINT(EM_DIAGRAM):   ;
464963     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_ESTDS;
464964     set EMWS8.AutoNeural31_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_BESTDS;
464965     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
464966     *;
MPRINT(EM_DIAGRAM):    *;
464967     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
464968     validdata=EMWS8.Varsel_VALIDATE
464969     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
464970     *;
MPRINT(EM_DIAGRAM):   *;
464971     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
464972     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
464973     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
464974     target DepVar / level=NOMINAL id=DepVar
464975     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
464976     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464977     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
464978     ;
MPRINT(EM_DIAGRAM):   ;
464979     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464980     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
464981     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464982     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
464983     ;
MPRINT(EM_DIAGRAM):   ;
464984     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
464985     Hidden 2 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=SINE;
464986     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
464987     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
464988     *;
MPRINT(EM_DIAGRAM):   *;
464989     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
464990     *;
MPRINT(EM_DIAGRAM):   *;
464991     initial
464992     inest = EMWS8.AutoNeural31_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural31_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
464993     ;
MPRINT(EM_DIAGRAM):   ;
464994     *;
MPRINT(EM_DIAGRAM):   *;
464995     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
464996     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
464996   ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
464997     prelim 8 outest=_anpre pretime=112 preiter=25
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=112 preiter=25 tech =
Default inest = EMWS8.AutoNeural31_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 38 variables.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
MPRINT(EM_DIAGRAM):   *;
464998     tech = Default
464999     inest = EMWS8.AutoNeural31_ESTDS bylabel
465000     ;
465001     *;
465002     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465003     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
465003   ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=897
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 57 observations and 38 variables.
NOTE: The data set WORK._ANFIT has 66 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
465004     train estiter=1 outest=_anest outfit=_anfit maxtime=897 maxiter=50
MPRINT(EM_DIAGRAM):   run;
465005     tech = Default;
465006     ;
465007     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.81 seconds
      cpu time            0.79 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 303.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.82 seconds
      cpu time            0.79 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465008     *;
465009     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
465010     var _iter_ _aic_ _averr_ _misc_
465011     _vaverr_ _vmisc_
465012     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 304.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465014     *------------------------------------------------------------*;
465015     * Extract best iteration;
465016     ;
465017     *------------------------------------------------------------*;
465018     %global _iter;
465019     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
465020     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
465021     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
465022     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
465023     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
465024     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
465025     end;
MPRINT(EM_DIAGRAM):   end;
465026     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465027     *;
 
465028     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
465029     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
465030     if _ITER_ eq 10 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 then do;
465031     output;
MPRINT(EM_DIAGRAM):   output;
465032     stop;
MPRINT(EM_DIAGRAM):   stop;
465033     end;
MPRINT(EM_DIAGRAM):   end;
465034     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465035     *;
465036     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465037     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
465038     if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
465039     output;
MPRINT(EM_DIAGRAM):   output;
465040     stop;
MPRINT(EM_DIAGRAM):   stop;
465041     end;
MPRINT(EM_DIAGRAM):   end;
465042     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465043     *;
MPRINT(EM_DIAGRAM):    *;
465044     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465045     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
465045   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
465046     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
465047     var _iter_ _aic_ _averr_ _misc_
465048     _vaverr_ _vmisc_
465049     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465050     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 305.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465051     title9;
MPRINT(EM_DIAGRAM):   title9;
465052     title10;
MPRINT(EM_DIAGRAM):   title10;
465053     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465054     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465055     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465056     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465057     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465058     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465059     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465060     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465061     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
465062     ;
MPRINT(EM_DIAGRAM):   ;
465063     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465064     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465065     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
465066     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
465067     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
465068     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
465069     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
465070     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465071     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
465072     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
465073     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465074     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
465075     ;
MPRINT(EM_DIAGRAM):   ;
465076     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_ESTDS;
465077     set EMWS8.AutoNeural31_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_BESTDS;
465078     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465079     *;
MPRINT(EM_DIAGRAM):    *;
465080     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
465081     validdata=EMWS8.Varsel_VALIDATE
465082     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
465083     *;
MPRINT(EM_DIAGRAM):   *;
465084     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
465085     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
465086     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
465087     target DepVar / level=NOMINAL id=DepVar
465088     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
465089     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465090     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
465091     ;
MPRINT(EM_DIAGRAM):   ;
465092     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465093     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
465094     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465095     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
465096     ;
MPRINT(EM_DIAGRAM):   ;
465097     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465098     Hidden 2 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=SOFTMAX;
465099     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
465100     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
465101     *;
MPRINT(EM_DIAGRAM):   *;
465102     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
465103     *;
MPRINT(EM_DIAGRAM):   *;
465104     initial
465105     inest = EMWS8.AutoNeural31_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural31_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
465106     ;
MPRINT(EM_DIAGRAM):   ;
465107     *;
MPRINT(EM_DIAGRAM):   *;
465108     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465109     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
465109   ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
465110     prelim 8 outest=_anpre pretime=112 preiter=25
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=112 preiter=25 tech =
Default inest = EMWS8.AutoNeural31_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 31 variables.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
MPRINT(EM_DIAGRAM):   *;
465111     tech = Default
465112     inest = EMWS8.AutoNeural31_ESTDS bylabel
465113     ;
465114     *;
465115     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465116     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
465116   ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=897
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 34 observations and 31 variables.
NOTE: The data set WORK._ANFIT has 34 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
465117     train estiter=1 outest=_anest outfit=_anfit maxtime=897 maxiter=50
MPRINT(EM_DIAGRAM):   run;
465118     tech = Default;
465119     ;
465120     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.56 seconds
      cpu time            0.57 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 306.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.57 seconds
      cpu time            0.57 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465121     *;
465122     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
465123     var _iter_ _aic_ _averr_ _misc_
465124     _vaverr_ _vmisc_
465125     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465126     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 307.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465127     *------------------------------------------------------------*;
465128     * Extract best iteration;
465129     ;
465130     *------------------------------------------------------------*;
465131     %global _iter;
465132     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
465133     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
465134     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
465135     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
465136     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
465137     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
465138     end;
MPRINT(EM_DIAGRAM):   end;
465139     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465140     *;
 
465141     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
465142     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
465143     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
465144     output;
MPRINT(EM_DIAGRAM):   output;
465145     stop;
MPRINT(EM_DIAGRAM):   stop;
465146     end;
MPRINT(EM_DIAGRAM):   end;
465147     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465148     *;
465149     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465150     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
465151     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
465152     output;
MPRINT(EM_DIAGRAM):   output;
465153     stop;
MPRINT(EM_DIAGRAM):   stop;
465154     end;
MPRINT(EM_DIAGRAM):   end;
465155     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465156     *;
MPRINT(EM_DIAGRAM):    *;
465157     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465158     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
465158   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
465159     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
465160     var _iter_ _aic_ _averr_ _misc_
465161     _vaverr_ _vmisc_
465162     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465163     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 308.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465164     title9;
MPRINT(EM_DIAGRAM):   title9;
465165     title10;
MPRINT(EM_DIAGRAM):   title10;
465166     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465167     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465168     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465169     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465170     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465171     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465172     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465173     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465174     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
465175     ;
MPRINT(EM_DIAGRAM):   ;
465176     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465177     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465178     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
465179     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
465180     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
465181     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
465182     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
465183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465184     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
465185     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
465186     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465187     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
465188     ;
MPRINT(EM_DIAGRAM):   ;
465189     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_ESTDS;
465190     set EMWS8.AutoNeural31_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_BESTDS;
465191     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465192     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465193     set WORK.BFITDS_AUTONEUR_0B94GKB;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_0B94GKB;
465194     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_0B94GKB.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465195     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
465196     ;
MPRINT(EM_DIAGRAM):   ;
465197     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465198     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465199     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
465200     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
465201     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
465202     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
465203     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
465204     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465205     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
465206     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
465207     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465208     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465209     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465210     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465211     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465212     *;
MPRINT(EM_DIAGRAM):    *;
465213     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
465214     validdata=EMWS8.Varsel_VALIDATE
465215     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
465216     *;
MPRINT(EM_DIAGRAM):   *;
465217     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
465218     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
465219     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
465220     target DepVar / level=NOMINAL id=DepVar
465221     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
465222     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465223     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
465224     ;
MPRINT(EM_DIAGRAM):   ;
465225     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465226     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
465227     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465228     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
465229     ;
MPRINT(EM_DIAGRAM):   ;
465230     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465231     Hidden 2 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=LOG;
465232     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
465233     Hidden 2 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=LOG;
465234     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
465235     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465236     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
465237     ;
MPRINT(EM_DIAGRAM):   ;
465238     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465239     Hidden 2 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H2x1_ act=LOG;
465240     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
465241     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
465242     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
465243     *;
MPRINT(EM_DIAGRAM):   *;
465244     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
465245     *;
MPRINT(EM_DIAGRAM):   *;
465246     initial
465247     inest = EMWS8.AutoNeural31_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural31_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
465248     ;
MPRINT(EM_DIAGRAM):   ;
465249     *;
MPRINT(EM_DIAGRAM):   *;
465250     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465251     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
465251   ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
465252     prelim 10 outest=_anpre pretime=89 preiter=25
MPRINT(EM_DIAGRAM):   prelim 10 outest=_anpre pretime=89 preiter=25 tech =
Default inest = EMWS8.AutoNeural31_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 21 observations and 62 variables.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
MPRINT(EM_DIAGRAM):   *;
465253     tech = Default
465254     inest = EMWS8.AutoNeural31_ESTDS bylabel
465255     ;
465256     *;
465257     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465258     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
465258   ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=897
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 100 observations and 62 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
465259     train estiter=1 outest=_anest outfit=_anfit maxtime=897 maxiter=50
MPRINT(EM_DIAGRAM):   run;
465260     tech = Default;
465261     ;
465262     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           7.83 seconds
      cpu time            7.81 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 309.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           7.84 seconds
      cpu time            7.81 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465263     *;
465264     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
465265     var _iter_ _aic_ _averr_ _misc_
465266     _vaverr_ _vmisc_
465267     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465268     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 310.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465269     *------------------------------------------------------------*;
465270     * Extract best iteration;
465271     ;
465272     *------------------------------------------------------------*;
465273     %global _iter;
465274     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
465275     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
465276     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
465277     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
465278     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
465279     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
465280     end;
MPRINT(EM_DIAGRAM):   end;
465281     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465282     *;
 
465283     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
465284     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
465285     if _ITER_ eq 21 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 21 then do;
465286     output;
MPRINT(EM_DIAGRAM):   output;
465287     stop;
MPRINT(EM_DIAGRAM):   stop;
465288     end;
MPRINT(EM_DIAGRAM):   end;
465289     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 62 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465290     *;
465291     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465292     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
465293     if _ITER_ eq 21 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 21 and _NAME_ eq "OVERALL" then do;
465294     output;
MPRINT(EM_DIAGRAM):   output;
465295     stop;
MPRINT(EM_DIAGRAM):   stop;
465296     end;
MPRINT(EM_DIAGRAM):   end;
465297     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.04 seconds
 
 
465298     *;
MPRINT(EM_DIAGRAM):    *;
465299     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465300     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
465300   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
465301     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
465302     var _iter_ _aic_ _averr_ _misc_
465303     _vaverr_ _vmisc_
465304     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 311.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465306     title9;
MPRINT(EM_DIAGRAM):   title9;
465307     title10;
MPRINT(EM_DIAGRAM):   title10;
465308     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465309     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465310     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465311     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465312     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465313     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465314     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465315     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465316     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
465317     ;
MPRINT(EM_DIAGRAM):   ;
465318     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465319     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465320     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
465321     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
465322     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
465323     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
465324     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
465325     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465326     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
465327     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
465328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465329     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
465330     ;
MPRINT(EM_DIAGRAM):   ;
465331     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_ESTDS;
465332     set EMWS8.AutoNeural31_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_BESTDS;
465333     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465334     *;
MPRINT(EM_DIAGRAM):    *;
465335     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
465336     validdata=EMWS8.Varsel_VALIDATE
465337     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
465338     *;
MPRINT(EM_DIAGRAM):   *;
465339     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
465340     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
465341     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
465342     target DepVar / level=NOMINAL id=DepVar
465343     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
465344     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465345     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
465346     ;
MPRINT(EM_DIAGRAM):   ;
465347     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465348     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
465349     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465350     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
465351     ;
MPRINT(EM_DIAGRAM):   ;
465352     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465353     Hidden 2 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=LOG;
465354     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
465355     Hidden 2 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=LOG;
465356     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
465357     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465358     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
465359     ;
MPRINT(EM_DIAGRAM):   ;
465360     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465361     Hidden 2 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H2x1_ act=SINE;
465362     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
465363     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
465364     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
465365     *;
MPRINT(EM_DIAGRAM):   *;
465366     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
465367     *;
MPRINT(EM_DIAGRAM):   *;
465368     initial
465369     inest = EMWS8.AutoNeural31_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural31_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
465370     ;
MPRINT(EM_DIAGRAM):   ;
465371     *;
MPRINT(EM_DIAGRAM):   *;
465372     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465373     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
465373   ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
465374     prelim 10 outest=_anpre pretime=89 preiter=25
MPRINT(EM_DIAGRAM):   prelim 10 outest=_anpre pretime=89 preiter=25 tech =
Default inest = EMWS8.AutoNeural31_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 21 observations and 62 variables.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
MPRINT(EM_DIAGRAM):   *;
465375     tech = Default
465376     inest = EMWS8.AutoNeural31_ESTDS bylabel
465377     ;
465378     *;
465379     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465380     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
465380   ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=895
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 64 observations and 62 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
465381     train estiter=1 outest=_anest outfit=_anfit maxtime=895 maxiter=50
MPRINT(EM_DIAGRAM):   run;
465382     tech = Default;
465383     ;
465384     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           7.15 seconds
      cpu time            7.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 312.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           7.16 seconds
      cpu time            7.11 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465385     *;
465386     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
465387     var _iter_ _aic_ _averr_ _misc_
465388     _vaverr_ _vmisc_
465389     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465390     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 313.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465391     *------------------------------------------------------------*;
465392     * Extract best iteration;
465393     ;
465394     *------------------------------------------------------------*;
465395     %global _iter;
465396     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
465397     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
465398     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
465399     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
465400     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
465401     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
465402     end;
MPRINT(EM_DIAGRAM):   end;
465403     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465404     *;
 
465405     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
465406     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
465407     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
465408     output;
MPRINT(EM_DIAGRAM):   output;
465409     stop;
MPRINT(EM_DIAGRAM):   stop;
465410     end;
MPRINT(EM_DIAGRAM):   end;
465411     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 62 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465412     *;
465413     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465414     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
465415     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
465416     output;
MPRINT(EM_DIAGRAM):   output;
465417     stop;
MPRINT(EM_DIAGRAM):   stop;
465418     end;
MPRINT(EM_DIAGRAM):   end;
465419     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465420     *;
MPRINT(EM_DIAGRAM):    *;
465421     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465422     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
465422   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
465423     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
465424     var _iter_ _aic_ _averr_ _misc_
465425     _vaverr_ _vmisc_
465426     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465427     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 314.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465428     title9;
MPRINT(EM_DIAGRAM):   title9;
465429     title10;
MPRINT(EM_DIAGRAM):   title10;
465430     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465431     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465432     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465433     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465434     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465435     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465436     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465437     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465438     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
465439     ;
MPRINT(EM_DIAGRAM):   ;
465440     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465441     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465442     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
465443     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
465444     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
465445     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
465446     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
465447     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465448     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
465449     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
465450     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465451     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
465452     ;
MPRINT(EM_DIAGRAM):   ;
465453     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_ESTDS;
465454     set EMWS8.AutoNeural31_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_BESTDS;
465455     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465456     *;
MPRINT(EM_DIAGRAM):    *;
465457     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
465458     validdata=EMWS8.Varsel_VALIDATE
465459     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
465460     *;
MPRINT(EM_DIAGRAM):   *;
465461     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
465462     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
465463     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
465464     target DepVar / level=NOMINAL id=DepVar
465465     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
465466     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465467     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
465468     ;
MPRINT(EM_DIAGRAM):   ;
465469     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465470     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
465471     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465472     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
465473     ;
MPRINT(EM_DIAGRAM):   ;
465474     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465475     Hidden 2 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=LOG;
465476     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
465477     Hidden 2 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x2_ act=LOG;
465478     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
465479     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465480     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
465481     ;
MPRINT(EM_DIAGRAM):   ;
465482     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465483     Hidden 2 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H2x1_ act=SOFTMAX;
465484     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
465485     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
465486     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
465487     *;
MPRINT(EM_DIAGRAM):   *;
465488     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
465489     *;
MPRINT(EM_DIAGRAM):   *;
465490     initial
465491     inest = EMWS8.AutoNeural31_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural31_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
465492     ;
MPRINT(EM_DIAGRAM):   ;
465493     *;
MPRINT(EM_DIAGRAM):   *;
465494     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465495     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
465495   ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
465496     prelim 10 outest=_anpre pretime=89 preiter=25
MPRINT(EM_DIAGRAM):   prelim 10 outest=_anpre pretime=89 preiter=25 tech =
Default inest = EMWS8.AutoNeural31_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 21 observations and 57 variables.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
MPRINT(EM_DIAGRAM):   *;
465497     tech = Default
465498     inest = EMWS8.AutoNeural31_ESTDS bylabel
465499     ;
465500     *;
465501     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465502     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
465502   ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=893
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANEST has 67 observations and 57 variables.
NOTE: The data set WORK._ANFIT has 48 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
465503     train estiter=1 outest=_anest outfit=_anfit maxtime=893 maxiter=50
MPRINT(EM_DIAGRAM):   run;
465504     tech = Default;
465505     ;
465506     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           6.46 seconds
      cpu time            6.42 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 315.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           6.47 seconds
      cpu time            6.44 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465507     *;
465508     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
465509     var _iter_ _aic_ _averr_ _misc_
465510     _vaverr_ _vmisc_
465511     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 316.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465513     *------------------------------------------------------------*;
465514     * Extract best iteration;
465515     ;
465516     *------------------------------------------------------------*;
465517     %global _iter;
465518     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
465519     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
465520     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
465521     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
465522     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
465523     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
465524     end;
MPRINT(EM_DIAGRAM):   end;
465525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465526     *;
 
465527     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
465528     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
465529     if _ITER_ eq 8 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 then do;
465530     output;
MPRINT(EM_DIAGRAM):   output;
465531     stop;
MPRINT(EM_DIAGRAM):   stop;
465532     end;
MPRINT(EM_DIAGRAM):   end;
465533     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 57 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465534     *;
465535     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465536     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
465537     if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
465538     output;
MPRINT(EM_DIAGRAM):   output;
465539     stop;
MPRINT(EM_DIAGRAM):   stop;
465540     end;
MPRINT(EM_DIAGRAM):   end;
465541     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465542     *;
MPRINT(EM_DIAGRAM):    *;
465543     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465544     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
465544   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
465545     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
465546     var _iter_ _aic_ _averr_ _misc_
465547     _vaverr_ _vmisc_
465548     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465549     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 317.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465550     title9;
MPRINT(EM_DIAGRAM):   title9;
465551     title10;
MPRINT(EM_DIAGRAM):   title10;
465552     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465553     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465554     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465555     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465556     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
465557     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465558     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
465559     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465560     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
465561     ;
MPRINT(EM_DIAGRAM):   ;
465562     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465563     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465564     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
465565     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
465566     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
465567     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
465568     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
465569     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465570     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
465571     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
465572     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465573     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
465574     set WORK.SAVEDS_AUTONEUR_0B94GKB;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_0B94GKB;
465575     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_0B94GKB.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465576     *;
MPRINT(EM_DIAGRAM):    *;
465577     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
465578     validdata=EMWS8.Varsel_VALIDATE
465579     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
465580     *;
MPRINT(EM_DIAGRAM):   *;
465581     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
465582     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
465583     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
465584     target DepVar / level=NOMINAL id=DepVar
465585     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
465586     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465587     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
465588     ;
MPRINT(EM_DIAGRAM):   ;
465589     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465590     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
465591     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465592     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
465593     ;
MPRINT(EM_DIAGRAM):   ;
465594     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465595     Hidden 2 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=LOG;
465596     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
465597     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
465598     *;
MPRINT(EM_DIAGRAM):   *;
465599     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
465600     *;
MPRINT(EM_DIAGRAM):   *;
465601     initial
465602     inest = EMWS8.AutoNeural31_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural31_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
465603     ;
MPRINT(EM_DIAGRAM):   ;
465604     *;
MPRINT(EM_DIAGRAM):   *;
465605     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465606     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
465606   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
465607     prelim 8 outest=_anpre pretime=111 preiter=25
MPRINT(EM_DIAGRAM):   prelim 8 outest=_anpre pretime=111 preiter=25 tech =
Default inest = EMWS8.AutoNeural31_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 38 variables.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
MPRINT(EM_DIAGRAM):   *;
465608     tech = Default
465609     inest = EMWS8.AutoNeural31_ESTDS bylabel
465610     ;
465611     *;
465612     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465613     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
465613   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=891
maxiter=5 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 31 observations and 38 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
465614     train estiter=1 outest=_anest outfit=_anfit maxtime=891 maxiter=5
MPRINT(EM_DIAGRAM):   run;
465615     tech = Default;
465616     ;
465617     run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.42 seconds
      cpu time            0.43 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 318.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.43 seconds
      cpu time            0.43 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465618     *;
465619     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
465620     var _iter_ _aic_ _averr_ _misc_
465621     _vaverr_ _vmisc_
465622     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465623     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 319.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465624     *------------------------------------------------------------*;
465625     * Extract best iteration;
465626     ;
465627     *------------------------------------------------------------*;
465628     %global _iter;
465629     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
465630     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
465631     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
465632     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
465633     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
465634     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
465635     end;
MPRINT(EM_DIAGRAM):   end;
465636     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465637     *;
 
465638     data EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_ESTDS;
465639     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
465640     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
465641     output;
MPRINT(EM_DIAGRAM):   output;
465642     stop;
MPRINT(EM_DIAGRAM):   stop;
465643     end;
MPRINT(EM_DIAGRAM):   end;
465644     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
465645     *;
465646     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465647     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
465648     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
465649     output;
MPRINT(EM_DIAGRAM):   output;
465650     stop;
MPRINT(EM_DIAGRAM):   stop;
465651     end;
MPRINT(EM_DIAGRAM):   end;
465652     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465653     *;
MPRINT(EM_DIAGRAM):    *;
465654     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
465655     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
465655   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
465656     proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_OUTFIT noobs;
465657     var _iter_ _aic_ _averr_ _misc_
465658     _vaverr_ _vmisc_
465659     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
465660     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 320.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465661     title9;
MPRINT(EM_DIAGRAM):   title9;
465662     title10;
MPRINT(EM_DIAGRAM):   title10;
465663     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
465664     ;
MPRINT(EM_DIAGRAM):   ;
465665     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465666     set EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT;
465667     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
465668     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
465669     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
465670     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
465671     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
465672     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465673     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_HISTORY;
465674     set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY EMWS8.AutoNeural31_OUTFIT;
465675     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL31_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465676     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
465677     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
465677   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
465678     proc print data=EMWS8.AutoNeural31_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_HISTORY noobs;
465679     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
465680     _vaverr_ _vmisc_
465681     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
465682     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: The PROCEDURE PRINT printed page 321.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465683     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
465684     set EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY;
465685     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
465686     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
465687     else neurons=2;
MPRINT(EM_DIAGRAM):   else neurons=2;
465688     label neurons="%sysfunc(sasmsg(sashelp.dmine,
465688   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
465689     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL31_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 2 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465690     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
465691     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
465691   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
465692     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
465692   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
465692   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
465693     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
465694     var _func_ _averr_
465695     _vaverr_
465696     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
465697     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
465698     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 322.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465699     title8;
MPRINT(EM_DIAGRAM):   title8;
465700     title9;
MPRINT(EM_DIAGRAM):   title9;
465701     title10;
MPRINT(EM_DIAGRAM):   title10;
465702     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465703     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
465704     ;
MPRINT(EM_DIAGRAM):   ;
465705     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465706     *;
MPRINT(EM_DIAGRAM):   *;
465707     proc neural data=EM_AutoNeural31 dmdbcat=WORK.AutoNeural31_DMDB
465708     validdata=EMWS8.Varsel_VALIDATE
465709     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural31
dmdbcat=WORK.AutoNeural31_DMDB validdata=EMWS8.Varsel_VALIDATE ;
465710     *;
MPRINT(EM_DIAGRAM):   *;
465711     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
465712     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
465713     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
465714     target DepVar / level=NOMINAL id=DepVar
465715     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
465716     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465717     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
465718     ;
MPRINT(EM_DIAGRAM):   ;
465719     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465720     Hidden 2 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 2 / id = H1x1_ act=LOG;
465721     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
465722     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
465723     *;
MPRINT(EM_DIAGRAM):   *;
465724     initial inest= EMWS8.AutoNeural31_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural31_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL31_ESTDS has 1 observations and 38 variables.
465725     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
465726     code
465726   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\SCO
465726   ! RECODE.sas"
465727     group=AutoNeural31
465728     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\SCORECODE.sas"
 group=AutoNeural31 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\SCORECODE.sas
      opened.
465729     ;
MPRINT(EM_DIAGRAM):   ;
465730     code
465730   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\RES
465730   ! IDUALSCORECODE.sas"
465731     group=AutoNeural31
465732     residual
465733     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\RESIDUALSCOREC
ODE.sas" group=AutoNeural31 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\RESIDUALSCOREC
      ODE.sas opened.
465734     ;
MPRINT(EM_DIAGRAM):   ;
465735     score data=EMWS8.Varsel_TRAIN out=_NULL_
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
465736     outfit=WORK.FIT1
465737     role=TRAIN
465738     outkey=EMWS8.AutoNeural31_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Varsel_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural31_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL31_OUTKEY has 20 observations and 8
      variables.
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.VARSEL_TRAIN has . observations and 46 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
465739     score data=EMWS8.Varsel_VALIDATE out=_NULL_
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
465740     outfit=WORK.FIT2
465741     outkey=EMWS8.AutoNeural31_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Varsel_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural31_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL31_OUTKEY has 20 observations and 8
      variables.
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
465742     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL31 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
 
 
465743     data EMWS8.AutoNeural31_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_OUTFIT;
465744     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
465745     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465746     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465747     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
465748     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
465749     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
465749   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
465750     set EMWS8.AutoNeural31_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_ESTDS;
465751     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465752     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
465753     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
465754     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 30 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
465755     proc transpose data=tempweight out=EMWS8.AutoNeural31_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural31_WEIGHTS;
465756     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
465757     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL31_WEIGHTS has 28 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
465758     data EMWS8.AutoNeural31_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_WEIGHTS;
465759     set EMWS8.AutoNeural31_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_WEIGHTS;
465760     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
465761     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
465762     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
465763     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
465764     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
465764   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
465764   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
465764   ! NOQUOTE))" WEIGHT =
465765        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
465766     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
465767     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set
      EMWS8.AUTONEURAL31_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL31_WEIGHTS has 23 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
465768     * restore printing options;
465769     ;
465770     title10;
MPRINT(EM_DIAGRAM):   title10;
465771     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
465772     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
465773     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
465774     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
465775     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
465776     *;
465777     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
465778     delete EM_AutoNeural31;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural31;
465779     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL31 (memtype=DATA).
465780     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
465781     data EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_HISTORY;
465782     set EMWS8.AutoNeural31_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_HISTORY;
465783     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
465784     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
465784   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
465785     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
465786     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS8.AUTONEURAL31_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL31_HISTORY has 14 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.09 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.09 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1568PTS
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1568PTS new;
MPRINT(EM_DIAGRAM):   run;
465888     filename emflow
465888   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465889     *------------------------------------------------------------*;
465890     * AutoNeural31: Scoring DATA data;
465891     *------------------------------------------------------------*;
465892     data EMWS8.AutoNeural31_TRAIN
465893     / view=EMWS8.AutoNeural31_TRAIN
465894     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_TRAIN / view=EMWS8.AutoNeural31_TRAIN ;
465895     set EMWS8.Varsel_TRAIN
465896     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
465897     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMFLOWSCORE.sas.
465898    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
465899    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
465900    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
465901    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
465902    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
465903    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
465904    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
465905    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
465906    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
465907    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
465908    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
465909    +LENGTH _WARN_ $4
465910    +      F_DepVar  $ 12
465911    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
465912    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
465913    +
465914    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
465915    +
465916    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
465917    +
465918    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
465919    +
465920    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
465921    +
465922    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
465923    +
465924    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
465925    +
465926    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
465927    +
465928    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
465929    +
465930    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
465931    +
465932    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
465933    +
465934    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
465935    +
465936    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
465937    +
465938    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
465939    +
465940    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
465941    +
465942    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
465943    +
465944    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465945    +*** Checking missing input Interval
465946    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
465947    +
465948    +IF NMISS(
465949    +   AcceptedCmpTotal ,
465950    +   Mnt ,
465951    +   MntMeatProducts ,
465952    +   NumCatalogPurchases ,
465953    +   RFMstat ,
465954    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
465955    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
465956    +
465957    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465958    +END;
MPRINT(EM_DIAGRAM):   END;
465959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465960    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
465961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465962    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465963    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
465964    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
465965    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
465966    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
465967    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
465968    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
465969    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
465970    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
465971    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
465972    +END;
MPRINT(EM_DIAGRAM):   END;
465973    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
465974    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
465975    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
465976    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
465977    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
465978    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
465979    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
465980    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
465981    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
465982    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
465983    +   ELSE S_NumCatalogPurchases
465984    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
465985    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
465986    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
465987    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
465988    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
465989    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
465990    +END;
MPRINT(EM_DIAGRAM):   END;
465991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465992    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
465993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465994    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465995    +   H1x1_1  =     0.88877074263455 * S_AcceptedCmpTotal
465996    +          +     -6.8647547731997 * S_Mnt  +     3.38470731995645 *
465997    +        S_MntMeatProducts  +     0.45686791470898 * S_NumCatalogPurchases
465998    +          +    -0.12981013682039 * S_RFMstat  +    -0.01175498343834 *
465999    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.88877074263455 * S_AcceptedCmpTotal + -6.8647547731997 *
S_Mnt + 3.38470731995645 * S_MntMeatProducts + 0.45686791470898 * S_NumCatalogPurchases +
-0.12981013682039 * S_RFMstat + -0.01175498343834 * S_Recency ;
466000    +   H1x1_2  =    -0.11003981472254 * S_AcceptedCmpTotal
466001    +          +    -0.85647328083992 * S_Mnt  +     10.0358306583456 *
466002    +        S_MntMeatProducts  +     1.92503432752831 * S_NumCatalogPurchases
466003    +          +     0.92971820927182 * S_RFMstat  +    -0.12489463268487 *
466004    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.11003981472254 * S_AcceptedCmpTotal + -0.85647328083992 *
S_Mnt + 10.0358306583456 * S_MntMeatProducts + 1.92503432752831 * S_NumCatalogPurchases +
0.92971820927182 * S_RFMstat + -0.12489463268487 * S_Recency ;
466005    +   H1x1_1  =    -2.35812752137322 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.35812752137322 + H1x1_1 ;
466006    +   H1x1_2  =     8.68969383477576 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 8.68969383477576 + H1x1_2 ;
466007    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
466008    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
466009    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
466010    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
466011    +END;
MPRINT(EM_DIAGRAM):   END;
466012    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
466013    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
466014    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
466015    +END;
MPRINT(EM_DIAGRAM):   END;
466016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466017    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
466018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466019    +
466020    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
466021    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
466022    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
466023    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
466024    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
466025    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466026    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
466027    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
466028    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
466029    +end;
MPRINT(EM_DIAGRAM):   end;
466030    +else do;
MPRINT(EM_DIAGRAM):   else do;
466031    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
466032    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
466033    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
466034    +   end;
MPRINT(EM_DIAGRAM):   end;
466035    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
466036    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
466037    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
466038    +   end;
MPRINT(EM_DIAGRAM):   end;
466039    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466040    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
466041    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
466042    +   end;
MPRINT(EM_DIAGRAM):   end;
466043    +end;
MPRINT(EM_DIAGRAM):   end;
466044    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
466045    +   P_DepVar1  =     6.72682466184772 * H1x1_1  +     8.11139972991132 * H1x1_2
466046    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.72682466184772 * H1x1_1 + 8.11139972991132 * H1x1_2 ;
466047    +   P_DepVar1  =    -12.3654701108229 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.3654701108229 + P_DepVar1 ;
466048    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
466049    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
466050    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
466051    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
466052    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
466053    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
466054    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
466055    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
466056    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
466057    +END;
MPRINT(EM_DIAGRAM):   END;
466058    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
466059    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
466060    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
466061    +END;
MPRINT(EM_DIAGRAM):   END;
466062    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
466063    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
466064    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
466065    +END;
MPRINT(EM_DIAGRAM):   END;
466066    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
466067    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
466068    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
466069    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
466070    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
466071    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
466072    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
466073    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466074    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
466075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466076    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
466077    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
466078    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
466079    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
466080    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
466081    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
466082    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
466083    +END;
MPRINT(EM_DIAGRAM):   END;
466084    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
466085    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
466086    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
466087    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
466088     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL31_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
466089     quit;
466090     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
466091     filename emflow
466091   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466092     *------------------------------------------------------------*;
466093     * AutoNeural31: Scoring VALIDATE data;
466094     *------------------------------------------------------------*;
466095     data EMWS8.AutoNeural31_VALIDATE
466096     / view=EMWS8.AutoNeural31_VALIDATE
466097     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_VALIDATE / view=EMWS8.AutoNeural31_VALIDATE ;
466098     set EMWS8.Varsel_VALIDATE
466099     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
466100     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMFLOWSCORE.sas.
466101    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
466102    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
466103    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
466104    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
466105    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
466106    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
466107    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
466108    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
466109    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
466110    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
466111    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
466112    +LENGTH _WARN_ $4
466113    +      F_DepVar  $ 12
466114    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
466115    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
466116    +
466117    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
466118    +
466119    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
466120    +
466121    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
466122    +
466123    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
466124    +
466125    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
466126    +
466127    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
466128    +
466129    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
466130    +
466131    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
466132    +
466133    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
466134    +
466135    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
466136    +
466137    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
466138    +
466139    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
466140    +
466141    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
466142    +
466143    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
466144    +
466145    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
466146    +
466147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466148    +*** Checking missing input Interval
466149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
466150    +
466151    +IF NMISS(
466152    +   AcceptedCmpTotal ,
466153    +   Mnt ,
466154    +   MntMeatProducts ,
466155    +   NumCatalogPurchases ,
466156    +   RFMstat ,
466157    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
466158    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
466159    +
466160    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466161    +END;
MPRINT(EM_DIAGRAM):   END;
466162    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466163    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
466164    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466165    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
466166    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
466167    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
466168    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
466169    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
466170    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
466171    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
466172    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
466173    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
466174    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
466175    +END;
MPRINT(EM_DIAGRAM):   END;
466176    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
466177    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
466178    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
466179    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
466180    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
466181    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
466182    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
466183    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
466184    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
466185    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
466186    +   ELSE S_NumCatalogPurchases
466187    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
466188    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
466189    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
466190    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
466191    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
466192    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
466193    +END;
MPRINT(EM_DIAGRAM):   END;
466194    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466195    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
466196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466197    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
466198    +   H1x1_1  =     0.88877074263455 * S_AcceptedCmpTotal
466199    +          +     -6.8647547731997 * S_Mnt  +     3.38470731995645 *
466200    +        S_MntMeatProducts  +     0.45686791470898 * S_NumCatalogPurchases
466201    +          +    -0.12981013682039 * S_RFMstat  +    -0.01175498343834 *
466202    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.88877074263455 * S_AcceptedCmpTotal + -6.8647547731997 *
S_Mnt + 3.38470731995645 * S_MntMeatProducts + 0.45686791470898 * S_NumCatalogPurchases +
-0.12981013682039 * S_RFMstat + -0.01175498343834 * S_Recency ;
466203    +   H1x1_2  =    -0.11003981472254 * S_AcceptedCmpTotal
466204    +          +    -0.85647328083992 * S_Mnt  +     10.0358306583456 *
466205    +        S_MntMeatProducts  +     1.92503432752831 * S_NumCatalogPurchases
466206    +          +     0.92971820927182 * S_RFMstat  +    -0.12489463268487 *
466207    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.11003981472254 * S_AcceptedCmpTotal + -0.85647328083992 *
S_Mnt + 10.0358306583456 * S_MntMeatProducts + 1.92503432752831 * S_NumCatalogPurchases +
0.92971820927182 * S_RFMstat + -0.12489463268487 * S_Recency ;
466208    +   H1x1_1  =    -2.35812752137322 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.35812752137322 + H1x1_1 ;
466209    +   H1x1_2  =     8.68969383477576 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 8.68969383477576 + H1x1_2 ;
466210    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
466211    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
466212    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
466213    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
466214    +END;
MPRINT(EM_DIAGRAM):   END;
466215    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
466216    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
466217    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
466218    +END;
MPRINT(EM_DIAGRAM):   END;
466219    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466220    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
466221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466222    +
466223    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
466224    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
466225    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
466226    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
466227    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
466228    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466229    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
466230    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
466231    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
466232    +end;
MPRINT(EM_DIAGRAM):   end;
466233    +else do;
MPRINT(EM_DIAGRAM):   else do;
466234    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
466235    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
466236    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
466237    +   end;
MPRINT(EM_DIAGRAM):   end;
466238    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
466239    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
466240    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
466241    +   end;
MPRINT(EM_DIAGRAM):   end;
466242    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466243    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
466244    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
466245    +   end;
MPRINT(EM_DIAGRAM):   end;
466246    +end;
MPRINT(EM_DIAGRAM):   end;
466247    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
466248    +   P_DepVar1  =     6.72682466184772 * H1x1_1  +     8.11139972991132 * H1x1_2
466249    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.72682466184772 * H1x1_1 + 8.11139972991132 * H1x1_2 ;
466250    +   P_DepVar1  =    -12.3654701108229 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.3654701108229 + P_DepVar1 ;
466251    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
466252    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
466253    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
466254    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
466255    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
466256    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
466257    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
466258    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
466259    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
466260    +END;
MPRINT(EM_DIAGRAM):   END;
466261    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
466262    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
466263    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
466264    +END;
MPRINT(EM_DIAGRAM):   END;
466265    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
466266    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
466267    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
466268    +END;
MPRINT(EM_DIAGRAM):   END;
466269    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
466270    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
466271    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
466272    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
466273    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
466274    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
466275    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
466276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466277    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
466278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466279    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
466280    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
466281    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
466282    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
466283    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
466284    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
466285    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
466286    +END;
MPRINT(EM_DIAGRAM):   END;
466287    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
466288    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
466289    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
466290    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
466291     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL31_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
466292     quit;
466293     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
466294     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
466295     * AutoNeural31: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Computing metadata for TRAIN data;
466296     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL31_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural31_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural31_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural31_TRAIN out=WORK.M3300CFE
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3300CFE;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3300CFE(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3300CFE;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3300CFE;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2RR8LX6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RR8LX6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RR8LX6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BM_DKI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RR8LX6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RR8LX6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RR8LX6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RR8LX6;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RR8LX6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural31";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural31";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural31: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
466608     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
466609     set EMWS8.AutoNeural31_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMINFO;
466610     where DATA='AutoNeural31' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural31' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
466611     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL31_EMINFO.
      WHERE (DATA='AutoNeural31') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
466612     data EMWS8.AutoNeural31_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_EMINFO;
466613     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
466614     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
466615     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL31_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
466619     run;
466620     data EMWS8.AutoNeural31_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_EMINFO;
466621     set EMWS8.AutoNeural31_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMINFO WORK.MODELTEMP_INFO;
466622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL31_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL31_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466623     proc sort data = EMWS8.AutoNeural31_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural31_EMINFO NOTHREADS;
466624     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
466625     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL31_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL31_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
466626     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
466627     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
466628     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466629     proc sort data = EMWS8.AutoNeural31_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural31_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
466630     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
466631     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL31_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
466632     data EMWS8.AutoNeural31_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_EMINFO;
466633     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
466634     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
466635     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL31_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466636     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
466637     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
466638     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
466639     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.AUTONEURAL31_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL31_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.09 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                16.09 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0I1WQBU
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0I1WQBU new;
MPRINT(EM_DIAGRAM):   run;
466663     proc sort data=EMWS8.AutoNeural31_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural31_OUTFIT nodupkey;
466664     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
466665     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL31_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL31_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466666     data EMWS8.AutoNeural31_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_EMOUTFIT(rename=(_NAME_=TARGET));
466667     set EMWS8.AutoNeural31_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_OUTFIT(where=(_NAME_ eq 'OVERALL'));
466668     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
466669     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
466670     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
466671     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL31_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466672     data EMWS8.AutoNeural31_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_EMOUTFIT;
466673     set EMWS8.AutoNeural31_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMOUTFIT;
466674     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
466675     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
466675   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
466676     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
466677     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466678     proc sort data=EMWS8.AutoNeural31_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural31_EMREPORTFIT nothreads;
466679     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
466680     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL31_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL31_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466681     %let _EMwarndup = 0;
466682     %let _EMtargetdup =;
466683     %let _EMASEtargetdup =;
466684     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
466685     set EMWS8.AutoNeural31_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMOUTFIT;
466686     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
466687     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
466688     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
466689     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
466690     end;
MPRINT(EM_DIAGRAM):   end;
466691     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL31_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466692     proc sort data=EMWS8.Varsel_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Varsel_CMeta_TRAIN out=WORK.SUBSETINMETA;
466693     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
466694     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 10 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
466695     proc sort data=EMWS8.AutoNeural31_VariableSet out=WORK.SUBSETVARSET(keep=NAME
466695   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural31_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
466696     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
466697     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL31_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466698     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
466699     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
466700     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
466701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 7 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 10 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
466702     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
466703     set EMWS8.AutoNeural31_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_CMeta_TRAIN;
466704     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
466704   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
466705     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL31_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
466706     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
466707     set EMWS8.AutoNeural31_TRAIN(keep=
466708     F_DepVar
466709     I_DepVar
466710     P_DepVar0
466711     P_DepVar1
466712     R_DepVar0
466713     R_DepVar1
466714     U_DepVar
466715     _WARN_
466716     DepVar
466717     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
466718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL31_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL31_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural31_0OCYC0X nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural31_0OCYC0X;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural31_0OCYC0X(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural31_0OCYC0X;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural31_0OCYC0X;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001695495 OVLMAX 0.9212910461 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
470984     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
470985     set EMWS8.AutoNeural31_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_CMeta_TRAIN;
470986     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
470986   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
470987     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL31_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
470988     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
470989     set EMWS8.AutoNeural31_VALIDATE(keep=
470990     F_DepVar
470991     I_DepVar
470992     P_DepVar0
470993     P_DepVar1
470994     R_DepVar0
470995     R_DepVar1
470996     U_DepVar
470997     _WARN_
470998     DepVar
470999     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
471000     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL31_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.VARSEL_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL31_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural31_36JZ8QU nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural31_36JZ8QU;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural31_36JZ8QU(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMCLASSIFICATION WORK.AutoNeural31_36JZ8QU;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural31_36JZ8QU;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural31_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0007961265 OVLMAX 0.9219002645 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
475275     %let _cn = %sysfunc(getoption(CENTER));
475276     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
475277     proc print data=EMWS8.AutoNeural31_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_EMREPORTFIT noobs label;
475278     var STAT LABEL TRAIN
475279     VALIDATE
475280     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
475281     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
475282     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
475283     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
475284     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL31_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 323.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
475285     title10;
MPRINT(EM_DIAGRAM):   title10;
475286     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
475287     proc sort data=EMWS8.AutoNeural31_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural31_EMCLASSIFICATION nothreads;
475288     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
475289     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL31_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL31_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
475290     %let _cn = %sysfunc(getoption(CENTER));
475291     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
475292     proc print data=EMWS8.AutoNeural31_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_EMCLASSIFICATION noobs label;
475293     var from into pct_row pct_col count percent
475294     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
475295     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
475296     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
475297     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
475298     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
475299     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
475300     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
475301     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
475302     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
475303     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
475304     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
475305     run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL31_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 324.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
475306     title9;
MPRINT(EM_DIAGRAM):   title9;
475307     title10;
MPRINT(EM_DIAGRAM):   title10;
475308     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
475309     %let _cn = %sysfunc(getoption(CENTER));
475310     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
475311     data EMWS8.AutoNeural31_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural31_EMEVENTREPORT;
475312     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
475312   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
475313     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
475313   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
475313   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
475313   ! FALSEEVENT
475314     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
475314   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
475314   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
475315        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
475316     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
475317     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
475318     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
475319     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
475320     set EMWS8.AutoNeural31_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMEVENTREPORT;
475321     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL31_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL31_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
475322     proc print data=EMWS8.AutoNeural31_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_EMEVENTREPORT noobs label;
475323     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
475324     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
475325     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
475326     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL31_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 325.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
475327     title10;
MPRINT(EM_DIAGRAM):   title10;
475328     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
475329     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
475330     modify AutoNeural31_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural31_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
475331     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
475332     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
475332   ! ;
MPRINT(EM_DIAGRAM):   run;
475333     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL31_EMRANK.DATA.
475334     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
475335     %let _cn = %sysfunc(getoption(CENTER));
475336     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
475337     proc print data=EMWS8.AutoNeural31_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_EMRANK label noobs;
475338     var
475339     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
475340     by
475341     notsorted DATAROLE
475342     notsorted TARGET
475343     notsorted TARGETLABEL
475344     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
475345     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
475346     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
475347     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL31_EMRANK.
NOTE: The PROCEDURE PRINT printed page 326.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
475348     title10;
MPRINT(EM_DIAGRAM):   title10;
475349     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
475350     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
475351     modify AutoNeural31_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural31_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
475352     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
475352   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
475353     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
475353   ! ;
MPRINT(EM_DIAGRAM):   run;
475354     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL31_EMSCOREDIST.DATA.
475355     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural31_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
