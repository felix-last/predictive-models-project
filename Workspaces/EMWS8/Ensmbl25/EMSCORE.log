MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.30 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                13.30 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2R0MGIV 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl25\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2R0MGIV new;
MPRINT(EM_DIAGRAM):   run;
463719     filename emflow
463719   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl25\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl25\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring NEURAL_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463720     *------------------------------------------------------------*;
463721     * Ensmbl25: Scoring NEURAL_TRAIN data;
463722     *------------------------------------------------------------*;
463723     data EMWS8.Ensmbl25_TRAIN
463724     / view=EMWS8.Ensmbl25_TRAIN
463725     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl25_TRAIN / view=EMWS8.Ensmbl25_TRAIN ;
463726     set EMWS8.Neural_TRAIN
463727     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural_TRAIN ;
463728     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl25\EMFLOWSCORE.sas.
463729    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463730    +* Ensmbl25: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Combine model for DepVar;
463731    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463732    +* Ensmbl25: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 1 of 10;
463733    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463734    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463735    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
463736    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
463737    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
463738    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463740    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
463741    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
463742    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
463743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463744    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463745    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
463746    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
463747    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
463748    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463749    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463750    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
463751    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
463752    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
463753    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463754    +
463755    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
463756    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
463756   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
463757    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
463758    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
463759    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
463760    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
463761    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
463762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463763    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
463764    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
463765    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
463766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463767    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463768    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
463769    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463770    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
463771    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
463772    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
463773    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463774    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
463775    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
463776    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
463777    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463778    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463779    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
463780    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
463781    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
463782    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463783    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463784    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
463785    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
463786    +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
463787    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463788    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
463789    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
463790    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
463791    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
463792    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
463793    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
463794    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
463795    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
463796    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
463797    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
463798    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
463799    +LENGTH _WARN_ $4
463800    +      F_DepVar  $ 12
463801    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
463802    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
463803    +
463804    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
463805    +
463806    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
463807    +
463808    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
463809    +
463810    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
463811    +
463812    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
463813    +
463814    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
463815    +
463816    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
463817    +
463818    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
463819    +
463820    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
463821    +
463822    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
463823    +
463824    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
463825    +
463826    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
463827    +
463828    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
463829    +
463830    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
463831    +
463832    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
463833    +
463834    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
463835    +
463836    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
463837    +
463838    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
463839    +
463840    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
463841    +
463842    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
463843    +
463844    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
463845    +
463846    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
463847    +
463848    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
463849    +
463850    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
463851    +
463852    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
463853    +
463854    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
463855    +
463856    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
463857    +
463858    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
463859    +
463860    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
463861    +
463862    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
463863    +
463864    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
463865    +
463866    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
463867    +
463868    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
463869    +
463870    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
463871    +
463872    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
463873    +
463874    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
463875    +
463876    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
463877    +
463878    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
463879    +
463880    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
463881    +
463882    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
463883    +
463884    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
463885    +
463886    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
463887    +
463888    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
463889    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
463890    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
463891    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
463892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463894    +end;
MPRINT(EM_DIAGRAM):   end;
463895    +else do;
MPRINT(EM_DIAGRAM):   else do;
463896    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463897    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
463898    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463899    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
463900    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
463901    +   end;
MPRINT(EM_DIAGRAM):   end;
463902    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
463903    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
463904    +   end;
MPRINT(EM_DIAGRAM):   end;
463905    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463906    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
463907    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463908    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463909    +   end;
MPRINT(EM_DIAGRAM):   end;
463910    +end;
MPRINT(EM_DIAGRAM):   end;
463911    +
463912    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
463913    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
463914    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
463915    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
463916    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463917    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463918    +end;
MPRINT(EM_DIAGRAM):   end;
463919    +else do;
MPRINT(EM_DIAGRAM):   else do;
463920    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463921    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
463922    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463923    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
463924    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
463925    +   end;
MPRINT(EM_DIAGRAM):   end;
463926    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
463927    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
463928    +   end;
MPRINT(EM_DIAGRAM):   end;
463929    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463930    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
463931    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463932    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463933    +   end;
MPRINT(EM_DIAGRAM):   end;
463934    +end;
MPRINT(EM_DIAGRAM):   end;
463935    +
463936    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
463937    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
463938    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
463939    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
463940    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463941    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463942    +end;
MPRINT(EM_DIAGRAM):   end;
463943    +else do;
MPRINT(EM_DIAGRAM):   else do;
463944    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463945    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
463946    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463947    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
463948    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
463949    +   end;
MPRINT(EM_DIAGRAM):   end;
463950    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
463951    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
463952    +   end;
MPRINT(EM_DIAGRAM):   end;
463953    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463954    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
463955    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463956    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463957    +   end;
MPRINT(EM_DIAGRAM):   end;
463958    +end;
MPRINT(EM_DIAGRAM):   end;
463959    +
463960    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
463961    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
463962    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
463963    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
463964    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463965    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463966    +end;
MPRINT(EM_DIAGRAM):   end;
463967    +else do;
MPRINT(EM_DIAGRAM):   else do;
463968    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463969    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
463970    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463971    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
463972    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
463973    +   end;
MPRINT(EM_DIAGRAM):   end;
463974    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
463975    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
463976    +   end;
MPRINT(EM_DIAGRAM):   end;
463977    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463978    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
463979    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463980    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463981    +   end;
MPRINT(EM_DIAGRAM):   end;
463982    +end;
MPRINT(EM_DIAGRAM):   end;
463983    +
463984    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
463985    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
463986    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
463987    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
463988    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463989    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463990    +end;
MPRINT(EM_DIAGRAM):   end;
463991    +else do;
MPRINT(EM_DIAGRAM):   else do;
463992    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463993    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
463994    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463995    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
463996    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
463997    +   end;
MPRINT(EM_DIAGRAM):   end;
463998    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
463999    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
464000    +   end;
MPRINT(EM_DIAGRAM):   end;
464001    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464002    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
464003    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464004    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464005    +   end;
MPRINT(EM_DIAGRAM):   end;
464006    +end;
MPRINT(EM_DIAGRAM):   end;
464007    +
464008    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
464009    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
464010    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
464011    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
464012    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464013    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464014    +end;
MPRINT(EM_DIAGRAM):   end;
464015    +else do;
MPRINT(EM_DIAGRAM):   else do;
464016    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464017    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
464018    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464019    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
464020    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
464021    +   end;
MPRINT(EM_DIAGRAM):   end;
464022    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
464023    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
464024    +   end;
MPRINT(EM_DIAGRAM):   end;
464025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464026    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
464027    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464028    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464029    +   end;
MPRINT(EM_DIAGRAM):   end;
464030    +end;
MPRINT(EM_DIAGRAM):   end;
464031    +
464032    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
464033    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
464034    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
464035    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
464036    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464037    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464038    +end;
MPRINT(EM_DIAGRAM):   end;
464039    +else do;
MPRINT(EM_DIAGRAM):   else do;
464040    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464041    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
464042    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464043    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
464044    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
464045    +   end;
MPRINT(EM_DIAGRAM):   end;
464046    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
464047    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
464048    +   end;
MPRINT(EM_DIAGRAM):   end;
464049    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464050    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
464051    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464052    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464053    +   end;
MPRINT(EM_DIAGRAM):   end;
464054    +end;
MPRINT(EM_DIAGRAM):   end;
464055    +
464056    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
464057    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
464058    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
464059    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
464060    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
464061    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
464062    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
464063    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
464064    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
464065    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
464066    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
464067    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
464068    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464069    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464070    +end;
MPRINT(EM_DIAGRAM):   end;
464071    +else do;
MPRINT(EM_DIAGRAM):   else do;
464072    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
464073    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
464074    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464075    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
464076    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
464077    +   end;
MPRINT(EM_DIAGRAM):   end;
464078    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
464079    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
464080    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
464081    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
464082    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
464083    +   end;
MPRINT(EM_DIAGRAM):   end;
464084    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
464085    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
464086    +   end;
MPRINT(EM_DIAGRAM):   end;
464087    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
464088    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
464089    +   end;
MPRINT(EM_DIAGRAM):   end;
464090    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
464091    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
464092    +   end;
MPRINT(EM_DIAGRAM):   end;
464093    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464094    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
464095    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
464096    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
464097    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
464098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464100    +   end;
MPRINT(EM_DIAGRAM):   end;
464101    +end;
MPRINT(EM_DIAGRAM):   end;
464102    +
464103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464104    +*** Checking missing input Interval
464105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
464106    +
464107    +IF NMISS(
464108    +   AcceptedCmpTotal ,
464109    +   Age ,
464110    +   Frq ,
464111    +   Income ,
464112    +   Kidhome ,
464113    +   Mnt ,
464114    +   MntFishProducts ,
464115    +   MntFruits ,
464116    +   MntGoldProds ,
464117    +   MntMeatProducts ,
464118    +   MntSweetProducts ,
464119    +   MntWines ,
464120    +   MonthsAsCustomer ,
464121    +   NumCatalogPurchases ,
464122    +   NumDealsPurchases ,
464123    +   NumDistPurchases ,
464124    +   NumStorePurchases ,
464125    +   NumWebPurchases ,
464126    +   NumWebVisitsMonth ,
464127    +   RFMstat ,
464128    +   RMntFrq ,
464129    +   Recency ,
464130    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
464131    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
464132    +
464133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464134    +END;
MPRINT(EM_DIAGRAM):   END;
464135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464136    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
464137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464138    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
464139    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
464140    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
464141    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
464142    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
464143    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
464144    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
464145    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
464146    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
464147    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
464148    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
464149    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
464150    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
464151    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
464152    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
464153    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
464154    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
464155    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
464156    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
464157    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
464158    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
464159    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
464160    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
464161    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
464162    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
464163    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
464164    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
464165    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
464166    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
464167    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
464168    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
464169    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
464170    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
464171    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
464172    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
464173    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
464174    +END;
MPRINT(EM_DIAGRAM):   END;
464175    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
464176    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
464177    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
464178    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
464179    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
464180    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
464181    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
464182    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
464183    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
464184    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
464185    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
464186    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
464187    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
464188    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
464189    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
464190    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
464191    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
464192    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
464193    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
464194    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
464195    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
464196    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
464197    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
464198    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
464199    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
464200    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
464201    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
464202    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
464203    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
464204    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
464205    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
464206    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
464207    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
464208    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
464209    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
464210    +   ELSE S_NumCatalogPurchases
464211    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
464212    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
464213    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
464214    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
464215    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
464216    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
464217    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
464218    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
464219    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
464220    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
464221    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
464222    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
464223    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
464224    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
464225    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
464226    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
464227    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
464228    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
464229    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
464230    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
464231    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
464232    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
464233    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
464234    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
464235    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
464236    +END;
MPRINT(EM_DIAGRAM):   END;
464237    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464238    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
464239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464241    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
464242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464244    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
464245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464246    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
464247    +   H11  =     0.17253933153192 * S_AcceptedCmpTotal  +    -0.00905682786307 *
464248    +        S_Age  +    -0.16189506426877 * S_Frq  +     0.04747866165156 *
464249    +        S_Income  +    -0.01003321974643 * S_Kidhome
464250    +          +      0.0295763599492 * S_Mnt  +    -0.01546318303003 *
464251    +        S_MntFishProducts  +    -0.01410665119089 * S_MntFruits
464252    +          +     0.00082923441873 * S_MntGoldProds  +     0.05549346930482 *
464253    +        S_MntMeatProducts  +    -0.01049992237931 * S_MntSweetProducts
464254    +          +    -0.07013234205633 * S_MntWines  +    -0.00721146825499 *
464255    +        S_MonthsAsCustomer  +     0.12264425658747 * S_NumCatalogPurchases
464256    +          +     0.04789435683014 * S_NumDealsPurchases
464257    +          +     0.03156899683016 * S_NumDistPurchases
464258    +          +     0.02920310465753 * S_NumStorePurchases
464259    +          +     -0.0008553015476 * S_NumWebPurchases
464260    +          +     0.09480487235301 * S_NumWebVisitsMonth
464261    +          +     0.01508383637372 * S_RFMstat  +     0.01456375884416 *
464262    +        S_RMntFrq  +    -0.10511528420774 * S_Recency
464263    +          +      -0.023971907884 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17253933153192 * S_AcceptedCmpTotal + -0.00905682786307 * S_Age 
+ -0.16189506426877 * S_Frq + 0.04747866165156 * S_Income + -0.01003321974643 * S_Kidhome + 
0.0295763599492 * S_Mnt + -0.01546318303003 * S_MntFishProducts + -0.01410665119089 * 
S_MntFruits + 0.00082923441873 * S_MntGoldProds + 0.05549346930482 * S_MntMeatProducts + 
-0.01049992237931 * S_MntSweetProducts + -0.07013234205633 * S_MntWines + -0.00721146825499 * 
S_MonthsAsCustomer + 0.12264425658747 * S_NumCatalogPurchases + 0.04789435683014 * 
S_NumDealsPurchases + 0.03156899683016 * S_NumDistPurchases + 0.02920310465753 * 
S_NumStorePurchases + -0.0008553015476 * S_NumWebPurchases + 0.09480487235301 * 
S_NumWebVisitsMonth + 0.01508383637372 * S_RFMstat + 0.01456375884416 * S_RMntFrq + 
-0.10511528420774 * S_Recency + -0.023971907884 * S_Teenhome ;
464264    +   H11  = H11  +     0.07798877961888 * AcceptedCmp10
464265    +          +     0.08545224835311 * AcceptedCmp20  +     0.07286185961898 *
464266    +        AcceptedCmp30  +     0.08445406170559 * AcceptedCmp40
464267    +          +     0.06102198752605 * AcceptedCmp50  +     0.01824734417591 *
464268    +        Complain0  +    -0.00626869897647 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.07798877961888 * AcceptedCmp10 + 0.08545224835311 * 
AcceptedCmp20 + 0.07286185961898 * AcceptedCmp30 + 0.08445406170559 * AcceptedCmp40 + 
0.06102198752605 * AcceptedCmp50 + 0.01824734417591 * Complain0 + -0.00626869897647 * 
HigherEducationBinary0 ;
464269    +   H11  = H11  +     0.00812441674075 * Education2n_Cycle
464270    +          +    -0.01198925622737 * EducationBasic  +     0.00714615715672 *
464271    +        EducationGraduation  +    -0.00200978992401 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00812441674075 * Education2n_Cycle + -0.01198925622737 * 
EducationBasic + 0.00714615715672 * EducationGraduation + -0.00200978992401 * EducationMaster ;
464272    +   H11  =     -0.3576236510542 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.3576236510542 + H11 ;
464273    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
464274    +END;
MPRINT(EM_DIAGRAM):   END;
464275    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
464276    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
464277    +END;
MPRINT(EM_DIAGRAM):   END;
464278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464279    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
464280    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464281    +
464282    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
464283    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
464284    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
464285    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
464286    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
464287    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464288    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
464289    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
464290    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
464291    +end;
MPRINT(EM_DIAGRAM):   end;
464292    +else do;
MPRINT(EM_DIAGRAM):   else do;
464293    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
464294    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
464295    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
464296    +   end;
MPRINT(EM_DIAGRAM):   end;
464297    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
464298    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
464299    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
464300    +   end;
MPRINT(EM_DIAGRAM):   end;
464301    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464302    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
464303    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
464304    +   end;
MPRINT(EM_DIAGRAM):   end;
464305    +end;
MPRINT(EM_DIAGRAM):   end;
464306    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
464307    +   P_DepVar1  =     25.9968153762534 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.9968153762534 * H11 ;
464308    +   P_DepVar1  =    -4.91742031612348 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.91742031612348 + P_DepVar1 ;
464309    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
464310    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
464311    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
464312    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
464313    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
464314    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
464315    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
464316    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
464317    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
464318    +END;
MPRINT(EM_DIAGRAM):   END;
464319    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
464320    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
464321    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
464322    +END;
MPRINT(EM_DIAGRAM):   END;
464323    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
464324    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
464325    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
464326    +END;
MPRINT(EM_DIAGRAM):   END;
464327    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
464328    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
464329    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
464330    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
464331    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
464332    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
464333    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
464334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464335    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
464336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464337    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
464338    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
464339    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
464340    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
464341    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
464342    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
464343    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
464344    +END;
MPRINT(EM_DIAGRAM):   END;
464345    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
464346    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
464347    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
464348    +drop
464349    +H11
464350    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
464351    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
464352    +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
464353    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464354    +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
464355    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464356    +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
464357    +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
464358    +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
464359    +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
464360    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464361    +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
464362    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464363    +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
464364    +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
464365    +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
464366    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464367    +* Ensmbl25: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 2 of 10;
464368    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464370    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
464371    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
464372    +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
464373    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464374    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
464375    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
464376    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
464377    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
464378    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
464379    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
464380    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
464381    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
464382    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
464383    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
464384    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
464385    +LENGTH _WARN_ $4
464386    +      F_DepVar  $ 12
464387    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
464388    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
464389    +
464390    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
464391    +
464392    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
464393    +
464394    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
464395    +
464396    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
464397    +
464398    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
464399    +
464400    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
464401    +
464402    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
464403    +
464404    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
464405    +
464406    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
464407    +
464408    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
464409    +
464410    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
464411    +
464412    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
464413    +
464414    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
464415    +
464416    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
464417    +
464418    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
464419    +
464420    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
464421    +
464422    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
464423    +
464424    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
464425    +
464426    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
464427    +
464428    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
464429    +
464430    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
464431    +
464432    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
464433    +
464434    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
464435    +
464436    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
464437    +
464438    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
464439    +
464440    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
464441    +
464442    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
464443    +
464444    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
464445    +
464446    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
464447    +
464448    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
464449    +
464450    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
464451    +
464452    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
464453    +
464454    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
464455    +
464456    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
464457    +
464458    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
464459    +
464460    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
464461    +
464462    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
464463    +
464464    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
464465    +
464466    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
464467    +
464468    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
464469    +
464470    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
464471    +
464472    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
464473    +
464474    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
464475    +
464476    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
464477    +
464478    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
464479    +
464480    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
464481    +
464482    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
464483    +
464484    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
464485    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
464486    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
464487    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
464488    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464489    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464490    +end;
MPRINT(EM_DIAGRAM):   end;
464491    +else do;
MPRINT(EM_DIAGRAM):   else do;
464492    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464493    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
464494    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464495    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
464496    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
464497    +   end;
MPRINT(EM_DIAGRAM):   end;
464498    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
464499    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
464500    +   end;
MPRINT(EM_DIAGRAM):   end;
464501    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464502    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
464503    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464504    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464505    +   end;
MPRINT(EM_DIAGRAM):   end;
464506    +end;
MPRINT(EM_DIAGRAM):   end;
464507    +
464508    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
464509    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
464510    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
464511    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
464512    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464514    +end;
MPRINT(EM_DIAGRAM):   end;
464515    +else do;
MPRINT(EM_DIAGRAM):   else do;
464516    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464517    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
464518    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464519    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
464520    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
464521    +   end;
MPRINT(EM_DIAGRAM):   end;
464522    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
464523    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
464524    +   end;
MPRINT(EM_DIAGRAM):   end;
464525    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464526    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
464527    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464528    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464529    +   end;
MPRINT(EM_DIAGRAM):   end;
464530    +end;
MPRINT(EM_DIAGRAM):   end;
464531    +
464532    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
464533    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
464534    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
464535    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
464536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464538    +end;
MPRINT(EM_DIAGRAM):   end;
464539    +else do;
MPRINT(EM_DIAGRAM):   else do;
464540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464541    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
464542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464543    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
464544    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
464545    +   end;
MPRINT(EM_DIAGRAM):   end;
464546    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
464547    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
464548    +   end;
MPRINT(EM_DIAGRAM):   end;
464549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464550    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
464551    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464552    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464553    +   end;
MPRINT(EM_DIAGRAM):   end;
464554    +end;
MPRINT(EM_DIAGRAM):   end;
464555    +
464556    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
464557    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
464558    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
464559    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
464560    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464561    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464562    +end;
MPRINT(EM_DIAGRAM):   end;
464563    +else do;
MPRINT(EM_DIAGRAM):   else do;
464564    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464565    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
464566    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464567    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
464568    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
464569    +   end;
MPRINT(EM_DIAGRAM):   end;
464570    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
464571    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
464572    +   end;
MPRINT(EM_DIAGRAM):   end;
464573    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464574    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
464575    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464576    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464577    +   end;
MPRINT(EM_DIAGRAM):   end;
464578    +end;
MPRINT(EM_DIAGRAM):   end;
464579    +
464580    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
464581    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
464582    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
464583    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
464584    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464585    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464586    +end;
MPRINT(EM_DIAGRAM):   end;
464587    +else do;
MPRINT(EM_DIAGRAM):   else do;
464588    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464589    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
464590    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464591    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
464592    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
464593    +   end;
MPRINT(EM_DIAGRAM):   end;
464594    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
464595    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
464596    +   end;
MPRINT(EM_DIAGRAM):   end;
464597    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464598    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
464599    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464600    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464601    +   end;
MPRINT(EM_DIAGRAM):   end;
464602    +end;
MPRINT(EM_DIAGRAM):   end;
464603    +
464604    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
464605    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
464606    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
464607    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
464608    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464609    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464610    +end;
MPRINT(EM_DIAGRAM):   end;
464611    +else do;
MPRINT(EM_DIAGRAM):   else do;
464612    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464613    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
464614    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464615    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
464616    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
464617    +   end;
MPRINT(EM_DIAGRAM):   end;
464618    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
464619    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
464620    +   end;
MPRINT(EM_DIAGRAM):   end;
464621    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464622    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
464623    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464624    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464625    +   end;
MPRINT(EM_DIAGRAM):   end;
464626    +end;
MPRINT(EM_DIAGRAM):   end;
464627    +
464628    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
464629    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
464630    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
464631    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
464632    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464633    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464634    +end;
MPRINT(EM_DIAGRAM):   end;
464635    +else do;
MPRINT(EM_DIAGRAM):   else do;
464636    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464637    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
464638    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464639    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
464640    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
464641    +   end;
MPRINT(EM_DIAGRAM):   end;
464642    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
464643    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
464644    +   end;
MPRINT(EM_DIAGRAM):   end;
464645    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464646    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
464647    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464648    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464649    +   end;
MPRINT(EM_DIAGRAM):   end;
464650    +end;
MPRINT(EM_DIAGRAM):   end;
464651    +
464652    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
464653    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
464654    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
464655    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
464656    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
464657    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
464658    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
464659    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
464660    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
464661    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
464662    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
464663    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
464664    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464665    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464666    +end;
MPRINT(EM_DIAGRAM):   end;
464667    +else do;
MPRINT(EM_DIAGRAM):   else do;
464668    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
464669    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
464670    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464671    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
464672    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
464673    +   end;
MPRINT(EM_DIAGRAM):   end;
464674    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
464675    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
464676    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
464677    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
464678    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
464679    +   end;
MPRINT(EM_DIAGRAM):   end;
464680    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
464681    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
464682    +   end;
MPRINT(EM_DIAGRAM):   end;
464683    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
464684    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
464685    +   end;
MPRINT(EM_DIAGRAM):   end;
464686    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
464687    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
464688    +   end;
MPRINT(EM_DIAGRAM):   end;
464689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464690    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
464691    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
464692    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
464693    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
464694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464696    +   end;
MPRINT(EM_DIAGRAM):   end;
464697    +end;
MPRINT(EM_DIAGRAM):   end;
464698    +
464699    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
464700    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
464701    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
464702    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
464703    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
464704    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
464705    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
464706    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
464707    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
464708    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
464709    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
464710    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
464711    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
464712    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464713    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464714    +end;
MPRINT(EM_DIAGRAM):   end;
464715    +else do;
MPRINT(EM_DIAGRAM):   else do;
464716    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
464717    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
464718    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464719    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
464720    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
464721    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
464722    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
464723    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
464724    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
464725    +         end;
MPRINT(EM_DIAGRAM):   end;
464726    +         else do;
MPRINT(EM_DIAGRAM):   else do;
464727    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
464728    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
464729    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
464730    +            end;
MPRINT(EM_DIAGRAM):   end;
464731    +         end;
MPRINT(EM_DIAGRAM):   end;
464732    +      end;
MPRINT(EM_DIAGRAM):   end;
464733    +      else do;
MPRINT(EM_DIAGRAM):   else do;
464734    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
464735    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
464736    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
464737    +         end;
MPRINT(EM_DIAGRAM):   end;
464738    +      end;
MPRINT(EM_DIAGRAM):   end;
464739    +   end;
MPRINT(EM_DIAGRAM):   end;
464740    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464741    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
464742    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
464743    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
464744    +      end;
MPRINT(EM_DIAGRAM):   end;
464745    +      else do;
MPRINT(EM_DIAGRAM):   else do;
464746    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
464747    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
464748    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
464749    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
464750    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
464751    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
464752    +         end;
MPRINT(EM_DIAGRAM):   end;
464753    +      end;
MPRINT(EM_DIAGRAM):   end;
464754    +   end;
MPRINT(EM_DIAGRAM):   end;
464755    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
464756    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
464757    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
464758    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
464759    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
464760    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464761    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464762    +   end;
MPRINT(EM_DIAGRAM):   end;
464763    +end;
MPRINT(EM_DIAGRAM):   end;
464764    +
464765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464766    +*** Checking missing input Interval
464767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
464768    +
464769    +IF NMISS(
464770    +   AcceptedCmpTotal ,
464771    +   Age ,
464772    +   Frq ,
464773    +   Income ,
464774    +   Kidhome ,
464775    +   Mnt ,
464776    +   MntFishProducts ,
464777    +   MntFruits ,
464778    +   MntGoldProds ,
464779    +   MntMeatProducts ,
464780    +   MntSweetProducts ,
464781    +   MntWines ,
464782    +   MonthsAsCustomer ,
464783    +   NumCatalogPurchases ,
464784    +   NumDealsPurchases ,
464785    +   NumDistPurchases ,
464786    +   NumStorePurchases ,
464787    +   NumWebPurchases ,
464788    +   NumWebVisitsMonth ,
464789    +   RFMstat ,
464790    +   RMntFrq ,
464791    +   Recency ,
464792    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
464793    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
464794    +
464795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464796    +END;
MPRINT(EM_DIAGRAM):   END;
464797    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464798    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
464799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464800    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
464801    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
464802    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
464803    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
464804    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
464805    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
464806    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
464807    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
464808    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
464809    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
464810    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
464811    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
464812    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
464813    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
464814    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
464815    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
464816    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
464817    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
464818    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
464819    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
464820    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
464821    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
464822    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
464823    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
464824    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
464825    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
464826    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
464827    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
464828    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
464829    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
464830    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
464831    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
464832    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
464833    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
464834    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
464835    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
464836    +END;
MPRINT(EM_DIAGRAM):   END;
464837    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
464838    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
464839    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
464840    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
464841    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
464842    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
464843    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
464844    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
464845    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
464846    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
464847    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
464848    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
464849    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
464850    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
464851    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
464852    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
464853    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
464854    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
464855    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
464856    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
464857    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
464858    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
464859    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
464860    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
464861    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
464862    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
464863    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
464864    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
464865    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
464866    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
464867    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
464868    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
464869    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
464870    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
464871    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
464872    +   ELSE S_NumCatalogPurchases
464873    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
464874    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
464875    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
464876    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
464877    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
464878    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
464879    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
464880    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
464881    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
464882    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
464883    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
464884    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
464885    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
464886    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
464887    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
464888    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
464889    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
464890    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
464891    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
464892    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
464893    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
464894    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
464895    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
464896    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
464897    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
464898    +END;
MPRINT(EM_DIAGRAM):   END;
464899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464900    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
464901    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464903    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
464904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464906    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
464907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464908    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
464909    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
464910    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
464911    +        S_Income  +    -1.07615700855274 * S_Kidhome
464912    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
464913    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
464914    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
464915    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
464916    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
464917    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
464918    +          +      0.3429043319369 * S_NumDealsPurchases
464919    +          +     0.71313309767469 * S_NumDistPurchases
464920    +          +     0.06017757740083 * S_NumStorePurchases
464921    +          +    -0.19817724925068 * S_NumWebPurchases
464922    +          +     1.34164122205952 * S_NumWebVisitsMonth
464923    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
464924    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
464925    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
464926    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
464927    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
464928    +        S_Income  +     -0.0027232441092 * S_Kidhome
464929    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
464930    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
464931    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
464932    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
464933    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
464934    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
464935    +          +      0.4576973746858 * S_NumDealsPurchases
464936    +          +     0.15590877272659 * S_NumDistPurchases
464937    +          +    -0.33414539713736 * S_NumStorePurchases
464938    +          +    -0.39370244666257 * S_NumWebPurchases
464939    +          +     0.52596714886704 * S_NumWebVisitsMonth
464940    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
464941    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
464942    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
464943    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
464944    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
464945    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
464946    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
464947    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
464948    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
464949    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
464950    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
464951    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
464952    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
464953    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
464954    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
464955    +        EducationGraduation  +      -0.333138438339 * EducationMaster
464956    +          +      0.4663802937397 * Marital_StatusDivorced
464957    +          +    -1.27401898796099 * Marital_StatusMarried
464958    +          +      1.3125969368079 * Marital_StatusSingle
464959    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
464960    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
464961    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
464962    +        EducationGraduation  +     0.00771527138053 * EducationMaster
464963    +          +     0.07419179522004 * Marital_StatusDivorced
464964    +          +     0.00234615813337 * Marital_StatusMarried
464965    +          +    -0.00725460458412 * Marital_StatusSingle
464966    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
464967    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
464968    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
464969    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
464970    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
464971    +END;
MPRINT(EM_DIAGRAM):   END;
464972    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
464973    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
464974    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
464975    +END;
MPRINT(EM_DIAGRAM):   END;
464976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464977    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
464978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464979    +
464980    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
464981    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
464982    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
464983    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
464984    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
464985    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464986    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
464987    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
464988    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
464989    +end;
MPRINT(EM_DIAGRAM):   end;
464990    +else do;
MPRINT(EM_DIAGRAM):   else do;
464991    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
464992    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
464993    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
464994    +   end;
MPRINT(EM_DIAGRAM):   end;
464995    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
464996    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
464997    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
464998    +   end;
MPRINT(EM_DIAGRAM):   end;
464999    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465000    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
465001    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
465002    +   end;
MPRINT(EM_DIAGRAM):   end;
465003    +end;
MPRINT(EM_DIAGRAM):   end;
465004    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465005    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
465006    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
465007    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
465008    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
465009    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
465010    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
465011    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
465012    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
465013    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
465014    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
465015    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
465016    +END;
MPRINT(EM_DIAGRAM):   END;
465017    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
465018    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
465019    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
465020    +END;
MPRINT(EM_DIAGRAM):   END;
465021    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
465022    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
465023    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
465024    +END;
MPRINT(EM_DIAGRAM):   END;
465025    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
465026    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
465027    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
465028    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
465029    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
465030    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
465031    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
465032    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465033    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
465034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465035    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
465036    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
465037    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
465038    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
465039    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
465040    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
465041    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
465042    +END;
MPRINT(EM_DIAGRAM):   END;
465043    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
465044    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
465045    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
465046    +drop
465047    +H11
465048    +H12
465049    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
465050    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
465051    +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
465052    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465053    +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
465054    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465055    +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
465056    +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
465057    +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
465058    +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
465059    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465060    +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
465061    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465062    +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
465063    +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
465064    +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
465065    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465066    +* Ensmbl25: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 3 of 10;
465067    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465069    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
465070    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
465071    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
465072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465073    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
465074    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
465075    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
465076    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
465077    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
465078    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
465079    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
465080    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
465081    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
465082    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
465083    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
465084    +LENGTH _WARN_ $4
465085    +      F_DepVar  $ 12
465086    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
465087    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
465088    +
465089    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
465090    +
465091    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
465092    +
465093    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
465094    +
465095    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
465096    +
465097    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
465098    +
465099    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
465100    +
465101    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
465102    +
465103    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
465104    +
465105    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
465106    +
465107    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
465108    +
465109    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
465110    +
465111    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
465112    +
465113    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
465114    +
465115    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
465116    +
465117    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
465118    +
465119    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
465120    +
465121    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
465122    +
465123    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
465124    +
465125    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
465126    +
465127    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
465128    +
465129    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
465130    +
465131    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
465132    +
465133    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
465134    +
465135    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
465136    +
465137    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
465138    +
465139    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
465140    +
465141    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
465142    +
465143    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
465144    +
465145    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
465146    +
465147    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
465148    +
465149    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
465150    +
465151    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
465152    +
465153    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
465154    +
465155    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
465156    +
465157    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
465158    +
465159    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
465160    +
465161    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
465162    +
465163    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
465164    +
465165    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
465166    +
465167    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
465168    +
465169    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
465170    +
465171    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
465172    +
465173    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
465174    +
465175    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
465176    +
465177    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
465178    +
465179    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
465180    +
465181    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
465182    +
465183    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
465184    +
465185    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
465186    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
465187    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
465188    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
465189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465191    +end;
MPRINT(EM_DIAGRAM):   end;
465192    +else do;
MPRINT(EM_DIAGRAM):   else do;
465193    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465194    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
465195    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465196    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465197    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
465198    +   end;
MPRINT(EM_DIAGRAM):   end;
465199    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465200    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
465201    +   end;
MPRINT(EM_DIAGRAM):   end;
465202    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465203    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
465204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465206    +   end;
MPRINT(EM_DIAGRAM):   end;
465207    +end;
MPRINT(EM_DIAGRAM):   end;
465208    +
465209    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
465210    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
465211    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
465212    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
465213    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465215    +end;
MPRINT(EM_DIAGRAM):   end;
465216    +else do;
MPRINT(EM_DIAGRAM):   else do;
465217    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465218    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
465219    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465220    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465221    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
465222    +   end;
MPRINT(EM_DIAGRAM):   end;
465223    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465224    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
465225    +   end;
MPRINT(EM_DIAGRAM):   end;
465226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465227    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
465228    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465229    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465230    +   end;
MPRINT(EM_DIAGRAM):   end;
465231    +end;
MPRINT(EM_DIAGRAM):   end;
465232    +
465233    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
465234    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
465235    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
465236    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
465237    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465238    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465239    +end;
MPRINT(EM_DIAGRAM):   end;
465240    +else do;
MPRINT(EM_DIAGRAM):   else do;
465241    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465242    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
465243    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465244    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465245    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
465246    +   end;
MPRINT(EM_DIAGRAM):   end;
465247    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465248    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
465249    +   end;
MPRINT(EM_DIAGRAM):   end;
465250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465251    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
465252    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465253    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465254    +   end;
MPRINT(EM_DIAGRAM):   end;
465255    +end;
MPRINT(EM_DIAGRAM):   end;
465256    +
465257    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
465258    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
465259    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
465260    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
465261    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465263    +end;
MPRINT(EM_DIAGRAM):   end;
465264    +else do;
MPRINT(EM_DIAGRAM):   else do;
465265    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465266    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
465267    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465268    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465269    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
465270    +   end;
MPRINT(EM_DIAGRAM):   end;
465271    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465272    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
465273    +   end;
MPRINT(EM_DIAGRAM):   end;
465274    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465275    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
465276    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465277    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465278    +   end;
MPRINT(EM_DIAGRAM):   end;
465279    +end;
MPRINT(EM_DIAGRAM):   end;
465280    +
465281    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
465282    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
465283    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
465284    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
465285    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465286    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465287    +end;
MPRINT(EM_DIAGRAM):   end;
465288    +else do;
MPRINT(EM_DIAGRAM):   else do;
465289    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465290    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
465291    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465292    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465293    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
465294    +   end;
MPRINT(EM_DIAGRAM):   end;
465295    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465296    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
465297    +   end;
MPRINT(EM_DIAGRAM):   end;
465298    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465299    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
465300    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465301    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465302    +   end;
MPRINT(EM_DIAGRAM):   end;
465303    +end;
MPRINT(EM_DIAGRAM):   end;
465304    +
465305    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
465306    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
465307    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
465308    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
465309    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465310    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465311    +end;
MPRINT(EM_DIAGRAM):   end;
465312    +else do;
MPRINT(EM_DIAGRAM):   else do;
465313    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465314    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
465315    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465316    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465317    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
465318    +   end;
MPRINT(EM_DIAGRAM):   end;
465319    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465320    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
465321    +   end;
MPRINT(EM_DIAGRAM):   end;
465322    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465323    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
465324    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465325    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465326    +   end;
MPRINT(EM_DIAGRAM):   end;
465327    +end;
MPRINT(EM_DIAGRAM):   end;
465328    +
465329    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
465330    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
465331    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
465332    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
465333    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465334    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465335    +end;
MPRINT(EM_DIAGRAM):   end;
465336    +else do;
MPRINT(EM_DIAGRAM):   else do;
465337    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465338    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
465339    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465340    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
465341    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
465342    +   end;
MPRINT(EM_DIAGRAM):   end;
465343    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
465344    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
465345    +   end;
MPRINT(EM_DIAGRAM):   end;
465346    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465347    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
465348    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465349    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465350    +   end;
MPRINT(EM_DIAGRAM):   end;
465351    +end;
MPRINT(EM_DIAGRAM):   end;
465352    +
465353    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
465354    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
465355    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
465356    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
465357    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
465358    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
465359    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
465360    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
465361    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
465362    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
465363    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
465364    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
465365    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465366    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465367    +end;
MPRINT(EM_DIAGRAM):   end;
465368    +else do;
MPRINT(EM_DIAGRAM):   else do;
465369    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
465370    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
465371    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465372    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
465373    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
465374    +   end;
MPRINT(EM_DIAGRAM):   end;
465375    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
465376    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
465377    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
465378    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
465379    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
465380    +   end;
MPRINT(EM_DIAGRAM):   end;
465381    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
465382    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
465383    +   end;
MPRINT(EM_DIAGRAM):   end;
465384    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
465385    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
465386    +   end;
MPRINT(EM_DIAGRAM):   end;
465387    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
465388    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
465389    +   end;
MPRINT(EM_DIAGRAM):   end;
465390    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465391    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
465392    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
465393    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
465394    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
465395    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465396    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465397    +   end;
MPRINT(EM_DIAGRAM):   end;
465398    +end;
MPRINT(EM_DIAGRAM):   end;
465399    +
465400    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
465401    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
465402    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
465403    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
465404    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
465405    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
465406    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
465407    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
465408    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
465409    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
465410    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
465411    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
465412    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
465413    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465414    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465415    +end;
MPRINT(EM_DIAGRAM):   end;
465416    +else do;
MPRINT(EM_DIAGRAM):   else do;
465417    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
465418    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
465419    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465420    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
465421    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
465422    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
465423    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
465424    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
465425    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
465426    +         end;
MPRINT(EM_DIAGRAM):   end;
465427    +         else do;
MPRINT(EM_DIAGRAM):   else do;
465428    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
465429    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
465430    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
465431    +            end;
MPRINT(EM_DIAGRAM):   end;
465432    +         end;
MPRINT(EM_DIAGRAM):   end;
465433    +      end;
MPRINT(EM_DIAGRAM):   end;
465434    +      else do;
MPRINT(EM_DIAGRAM):   else do;
465435    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
465436    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
465437    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
465438    +         end;
MPRINT(EM_DIAGRAM):   end;
465439    +      end;
MPRINT(EM_DIAGRAM):   end;
465440    +   end;
MPRINT(EM_DIAGRAM):   end;
465441    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465442    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
465443    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
465444    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
465445    +      end;
MPRINT(EM_DIAGRAM):   end;
465446    +      else do;
MPRINT(EM_DIAGRAM):   else do;
465447    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
465448    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
465449    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
465450    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
465451    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
465452    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
465453    +         end;
MPRINT(EM_DIAGRAM):   end;
465454    +      end;
MPRINT(EM_DIAGRAM):   end;
465455    +   end;
MPRINT(EM_DIAGRAM):   end;
465456    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
465457    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
465458    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
465459    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
465460    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
465461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465463    +   end;
MPRINT(EM_DIAGRAM):   end;
465464    +end;
MPRINT(EM_DIAGRAM):   end;
465465    +
465466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465467    +*** Checking missing input Interval
465468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
465469    +
465470    +IF NMISS(
465471    +   AcceptedCmpTotal ,
465472    +   Age ,
465473    +   Frq ,
465474    +   Income ,
465475    +   Kidhome ,
465476    +   Mnt ,
465477    +   MntFishProducts ,
465478    +   MntFruits ,
465479    +   MntGoldProds ,
465480    +   MntMeatProducts ,
465481    +   MntSweetProducts ,
465482    +   MntWines ,
465483    +   MonthsAsCustomer ,
465484    +   NumCatalogPurchases ,
465485    +   NumDealsPurchases ,
465486    +   NumDistPurchases ,
465487    +   NumStorePurchases ,
465488    +   NumWebPurchases ,
465489    +   NumWebVisitsMonth ,
465490    +   RFMstat ,
465491    +   RMntFrq ,
465492    +   Recency ,
465493    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
465494    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
465495    +
465496    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465497    +END;
MPRINT(EM_DIAGRAM):   END;
465498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465499    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
465500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465501    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465502    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
465503    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
465504    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
465505    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
465506    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
465507    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
465508    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
465509    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
465510    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
465511    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
465512    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
465513    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
465514    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
465515    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
465516    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
465517    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
465518    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
465519    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
465520    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
465521    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
465522    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
465523    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
465524    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
465525    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
465526    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
465527    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
465528    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
465529    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
465530    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
465531    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
465532    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
465533    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
465534    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
465535    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
465536    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
465537    +END;
MPRINT(EM_DIAGRAM):   END;
465538    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
465539    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
465540    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
465541    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
465542    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
465543    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
465544    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
465545    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
465546    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
465547    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
465548    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
465549    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
465550    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
465551    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
465552    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
465553    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
465554    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
465555    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
465556    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
465557    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
465558    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
465559    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
465560    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
465561    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
465562    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
465563    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
465564    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
465565    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
465566    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
465567    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
465568    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
465569    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
465570    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
465571    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
465572    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
465573    +   ELSE S_NumCatalogPurchases
465574    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
465575    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
465576    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
465577    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
465578    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
465579    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
465580    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
465581    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
465582    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
465583    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
465584    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
465585    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
465586    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
465587    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
465588    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
465589    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
465590    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
465591    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
465592    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
465593    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
465594    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
465595    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
465596    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
465597    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
465598    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
465599    +END;
MPRINT(EM_DIAGRAM):   END;
465600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465601    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
465602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465604    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
465605    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465607    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
465608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465609    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465610    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
465611    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
465612    +        S_Income  +     0.51123266106809 * S_Kidhome
465613    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
465614    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
465615    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
465616    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
465617    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
465618    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
465619    +          +     1.34095732961105 * S_NumDealsPurchases
465620    +          +     0.16605991333252 * S_NumDistPurchases
465621    +          +    -0.61746267736536 * S_NumStorePurchases
465622    +          +    -0.61812800689506 * S_NumWebPurchases
465623    +          +     1.44649145055387 * S_NumWebVisitsMonth
465624    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
465625    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
465626    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
465627    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
465628    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
465629    +        S_Income  +     0.52295323651199 * S_Kidhome
465630    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
465631    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
465632    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
465633    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
465634    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
465635    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
465636    +          +    -0.72543332317832 * S_NumDealsPurchases
465637    +          +    -0.05245472565117 * S_NumDistPurchases
465638    +          +     1.00667431585298 * S_NumStorePurchases
465639    +          +     1.02836701470962 * S_NumWebPurchases
465640    +          +    -1.25666606219201 * S_NumWebVisitsMonth
465641    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
465642    +        S_RMntFrq  +     1.50910531484632 * S_Recency
465643    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
465644    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
465645    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
465646    +        S_Income  +     0.58025720116696 * S_Kidhome
465647    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
465648    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
465649    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
465650    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
465651    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
465652    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
465653    +          +     0.12670438262487 * S_NumDealsPurchases
465654    +          +    -0.46113523834333 * S_NumDistPurchases
465655    +          +     0.07074818720567 * S_NumStorePurchases
465656    +          +    -0.05066645783537 * S_NumWebPurchases
465657    +          +    -0.65729410185804 * S_NumWebVisitsMonth
465658    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
465659    +        S_RMntFrq  +      1.4337242246086 * S_Recency
465660    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
465661    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
465662    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
465663    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
465664    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
465665    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
465666    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
465667    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
465668    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
465669    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
465670    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
465671    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
465672    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
465673    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
465674    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
465675    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
465676    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
465677    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
465678    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
465679    +          +     0.12692950862511 * Marital_StatusDivorced
465680    +          +     0.10026497666167 * Marital_StatusMarried
465681    +          +    -0.19893864592813 * Marital_StatusSingle
465682    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
465683    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
465684    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
465685    +        EducationGraduation  +     0.05580498138108 * EducationMaster
465686    +          +    -0.16785192490199 * Marital_StatusDivorced
465687    +          +     0.13153695130362 * Marital_StatusMarried
465688    +          +    -0.50411544587104 * Marital_StatusSingle
465689    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
465690    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
465691    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
465692    +        EducationGraduation  +     0.21882736952662 * EducationMaster
465693    +          +    -0.62654958087044 * Marital_StatusDivorced
465694    +          +     1.86250132393341 * Marital_StatusMarried
465695    +          +    -1.37067556451928 * Marital_StatusSingle
465696    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
465697    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
465698    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
465699    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
465700    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
465701    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
465702    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
465703    +END;
MPRINT(EM_DIAGRAM):   END;
465704    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
465705    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
465706    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
465707    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
465708    +END;
MPRINT(EM_DIAGRAM):   END;
465709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465710    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
465711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465712    +
465713    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
465714    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
465715    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
465716    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
465717    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
465718    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465719    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
465720    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
465721    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
465722    +end;
MPRINT(EM_DIAGRAM):   end;
465723    +else do;
MPRINT(EM_DIAGRAM):   else do;
465724    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
465725    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
465726    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
465727    +   end;
MPRINT(EM_DIAGRAM):   end;
465728    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
465729    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
465730    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
465731    +   end;
MPRINT(EM_DIAGRAM):   end;
465732    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465733    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
465734    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
465735    +   end;
MPRINT(EM_DIAGRAM):   end;
465736    +end;
MPRINT(EM_DIAGRAM):   end;
465737    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465738    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
465739    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
465740    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
465741    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
465742    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
465743    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
465744    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
465745    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
465746    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
465747    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
465748    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
465749    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
465750    +END;
MPRINT(EM_DIAGRAM):   END;
465751    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
465752    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
465753    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
465754    +END;
MPRINT(EM_DIAGRAM):   END;
465755    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
465756    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
465757    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
465758    +END;
MPRINT(EM_DIAGRAM):   END;
465759    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
465760    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
465761    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
465762    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
465763    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
465764    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
465765    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
465766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465767    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
465768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465769    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
465770    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
465771    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
465772    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
465773    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
465774    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
465775    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
465776    +END;
MPRINT(EM_DIAGRAM):   END;
465777    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
465778    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
465779    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
465780    +drop
465781    +H11
465782    +H12
465783    +H13
465784    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
465785    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
465786    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
465787    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465788    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
465789    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465790    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
465791    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
465792    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
465793    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
465794    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465795    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
465796    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465797    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
465798    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
465799    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
465800    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465801    +* Ensmbl25: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 4 of 10;
465802    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465803    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465804    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
465805    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
465806    +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
465807    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
465808    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
465809    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
465810    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
465811    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
465812    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
465813    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
465814    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
465815    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
465816    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
465817    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
465818    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
465819    +LENGTH _WARN_ $4
465820    +      F_DepVar  $ 12
465821    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
465822    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
465823    +
465824    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
465825    +
465826    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
465827    +
465828    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
465829    +
465830    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
465831    +
465832    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
465833    +
465834    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
465835    +
465836    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
465837    +
465838    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
465839    +
465840    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
465841    +
465842    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
465843    +
465844    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
465845    +
465846    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
465847    +
465848    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
465849    +
465850    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
465851    +
465852    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
465853    +
465854    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
465855    +
465856    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
465857    +
465858    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
465859    +
465860    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
465861    +
465862    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
465863    +
465864    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
465865    +
465866    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
465867    +
465868    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
465869    +
465870    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
465871    +
465872    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
465873    +
465874    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
465875    +
465876    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
465877    +
465878    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
465879    +
465880    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
465881    +
465882    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
465883    +
465884    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
465885    +
465886    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
465887    +
465888    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
465889    +
465890    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
465891    +
465892    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
465893    +
465894    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
465895    +
465896    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
465897    +
465898    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
465899    +
465900    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
465901    +
465902    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
465903    +
465904    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
465905    +
465906    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
465907    +
465908    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
465909    +
465910    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
465911    +
465912    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
465913    +
465914    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
465915    +
465916    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
465917    +
465918    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
465919    +
465920    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
465921    +
465922    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
465923    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
465924    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
465925    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
465926    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465927    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465928    +end;
MPRINT(EM_DIAGRAM):   end;
465929    +else do;
MPRINT(EM_DIAGRAM):   else do;
465930    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465931    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
465932    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465933    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465934    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
465935    +   end;
MPRINT(EM_DIAGRAM):   end;
465936    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465937    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
465938    +   end;
MPRINT(EM_DIAGRAM):   end;
465939    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465940    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
465941    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465942    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465943    +   end;
MPRINT(EM_DIAGRAM):   end;
465944    +end;
MPRINT(EM_DIAGRAM):   end;
465945    +
465946    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
465947    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
465948    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
465949    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
465950    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465951    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465952    +end;
MPRINT(EM_DIAGRAM):   end;
465953    +else do;
MPRINT(EM_DIAGRAM):   else do;
465954    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465955    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
465956    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465957    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465958    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
465959    +   end;
MPRINT(EM_DIAGRAM):   end;
465960    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465961    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
465962    +   end;
MPRINT(EM_DIAGRAM):   end;
465963    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465964    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
465965    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465966    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465967    +   end;
MPRINT(EM_DIAGRAM):   end;
465968    +end;
MPRINT(EM_DIAGRAM):   end;
465969    +
465970    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
465971    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
465972    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
465973    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
465974    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465975    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465976    +end;
MPRINT(EM_DIAGRAM):   end;
465977    +else do;
MPRINT(EM_DIAGRAM):   else do;
465978    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465979    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
465980    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465981    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
465982    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
465983    +   end;
MPRINT(EM_DIAGRAM):   end;
465984    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
465985    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
465986    +   end;
MPRINT(EM_DIAGRAM):   end;
465987    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465988    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
465989    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465990    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465991    +   end;
MPRINT(EM_DIAGRAM):   end;
465992    +end;
MPRINT(EM_DIAGRAM):   end;
465993    +
465994    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
465995    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
465996    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
465997    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
465998    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465999    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466000    +end;
MPRINT(EM_DIAGRAM):   end;
466001    +else do;
MPRINT(EM_DIAGRAM):   else do;
466002    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466003    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
466004    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466005    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466006    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
466007    +   end;
MPRINT(EM_DIAGRAM):   end;
466008    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466009    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
466010    +   end;
MPRINT(EM_DIAGRAM):   end;
466011    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466012    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
466013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466015    +   end;
MPRINT(EM_DIAGRAM):   end;
466016    +end;
MPRINT(EM_DIAGRAM):   end;
466017    +
466018    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
466019    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
466020    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
466021    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
466022    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466023    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466024    +end;
MPRINT(EM_DIAGRAM):   end;
466025    +else do;
MPRINT(EM_DIAGRAM):   else do;
466026    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466027    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
466028    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466029    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466030    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
466031    +   end;
MPRINT(EM_DIAGRAM):   end;
466032    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466033    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
466034    +   end;
MPRINT(EM_DIAGRAM):   end;
466035    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466036    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
466037    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466038    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466039    +   end;
MPRINT(EM_DIAGRAM):   end;
466040    +end;
MPRINT(EM_DIAGRAM):   end;
466041    +
466042    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
466043    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
466044    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
466045    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
466046    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466047    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466048    +end;
MPRINT(EM_DIAGRAM):   end;
466049    +else do;
MPRINT(EM_DIAGRAM):   else do;
466050    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466051    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
466052    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466053    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466054    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
466055    +   end;
MPRINT(EM_DIAGRAM):   end;
466056    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466057    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
466058    +   end;
MPRINT(EM_DIAGRAM):   end;
466059    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466060    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
466061    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466062    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466063    +   end;
MPRINT(EM_DIAGRAM):   end;
466064    +end;
MPRINT(EM_DIAGRAM):   end;
466065    +
466066    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
466067    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
466068    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
466069    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
466070    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466071    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466072    +end;
MPRINT(EM_DIAGRAM):   end;
466073    +else do;
MPRINT(EM_DIAGRAM):   else do;
466074    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466075    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
466076    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466077    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
466078    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
466079    +   end;
MPRINT(EM_DIAGRAM):   end;
466080    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
466081    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
466082    +   end;
MPRINT(EM_DIAGRAM):   end;
466083    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466084    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
466085    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466086    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466087    +   end;
MPRINT(EM_DIAGRAM):   end;
466088    +end;
MPRINT(EM_DIAGRAM):   end;
466089    +
466090    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
466091    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
466092    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
466093    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
466094    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
466095    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
466096    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
466097    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
466098    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
466099    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
466100    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
466101    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
466102    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466103    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466104    +end;
MPRINT(EM_DIAGRAM):   end;
466105    +else do;
MPRINT(EM_DIAGRAM):   else do;
466106    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
466107    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
466108    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466109    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
466110    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
466111    +   end;
MPRINT(EM_DIAGRAM):   end;
466112    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
466113    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
466114    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
466115    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
466116    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
466117    +   end;
MPRINT(EM_DIAGRAM):   end;
466118    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
466119    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
466120    +   end;
MPRINT(EM_DIAGRAM):   end;
466121    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
466122    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
466123    +   end;
MPRINT(EM_DIAGRAM):   end;
466124    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
466125    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
466126    +   end;
MPRINT(EM_DIAGRAM):   end;
466127    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466128    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
466129    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
466130    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
466131    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
466132    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466133    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466134    +   end;
MPRINT(EM_DIAGRAM):   end;
466135    +end;
MPRINT(EM_DIAGRAM):   end;
466136    +
466137    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
466138    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
466139    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
466140    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
466141    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
466142    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
466143    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
466144    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
466145    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
466146    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
466147    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
466148    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
466149    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
466150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466152    +end;
MPRINT(EM_DIAGRAM):   end;
466153    +else do;
MPRINT(EM_DIAGRAM):   else do;
466154    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
466155    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
466156    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466157    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
466158    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
466159    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
466160    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
466161    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
466162    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466163    +         end;
MPRINT(EM_DIAGRAM):   end;
466164    +         else do;
MPRINT(EM_DIAGRAM):   else do;
466165    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
466166    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
466167    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466168    +            end;
MPRINT(EM_DIAGRAM):   end;
466169    +         end;
MPRINT(EM_DIAGRAM):   end;
466170    +      end;
MPRINT(EM_DIAGRAM):   end;
466171    +      else do;
MPRINT(EM_DIAGRAM):   else do;
466172    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
466173    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
466174    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466175    +         end;
MPRINT(EM_DIAGRAM):   end;
466176    +      end;
MPRINT(EM_DIAGRAM):   end;
466177    +   end;
MPRINT(EM_DIAGRAM):   end;
466178    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466179    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
466180    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
466181    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466182    +      end;
MPRINT(EM_DIAGRAM):   end;
466183    +      else do;
MPRINT(EM_DIAGRAM):   else do;
466184    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
466185    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
466186    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
466187    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
466188    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
466189    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466190    +         end;
MPRINT(EM_DIAGRAM):   end;
466191    +      end;
MPRINT(EM_DIAGRAM):   end;
466192    +   end;
MPRINT(EM_DIAGRAM):   end;
466193    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
466194    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
466195    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
466196    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
466197    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
466198    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466199    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466200    +   end;
MPRINT(EM_DIAGRAM):   end;
466201    +end;
MPRINT(EM_DIAGRAM):   end;
466202    +
466203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466204    +*** Checking missing input Interval
466205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
466206    +
466207    +IF NMISS(
466208    +   AcceptedCmpTotal ,
466209    +   Age ,
466210    +   Frq ,
466211    +   Income ,
466212    +   Kidhome ,
466213    +   Mnt ,
466214    +   MntFishProducts ,
466215    +   MntFruits ,
466216    +   MntGoldProds ,
466217    +   MntMeatProducts ,
466218    +   MntSweetProducts ,
466219    +   MntWines ,
466220    +   MonthsAsCustomer ,
466221    +   NumCatalogPurchases ,
466222    +   NumDealsPurchases ,
466223    +   NumDistPurchases ,
466224    +   NumStorePurchases ,
466225    +   NumWebPurchases ,
466226    +   NumWebVisitsMonth ,
466227    +   RFMstat ,
466228    +   RMntFrq ,
466229    +   Recency ,
466230    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
466231    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
466232    +
466233    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466234    +END;
MPRINT(EM_DIAGRAM):   END;
466235    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466236    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
466237    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466238    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
466239    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
466240    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
466241    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
466242    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
466243    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
466244    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
466245    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
466246    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
466247    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
466248    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
466249    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
466250    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
466251    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
466252    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
466253    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
466254    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
466255    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
466256    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
466257    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
466258    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
466259    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
466260    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
466261    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
466262    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
466263    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
466264    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
466265    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
466266    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
466267    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
466268    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
466269    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
466270    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
466271    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
466272    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
466273    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
466274    +END;
MPRINT(EM_DIAGRAM):   END;
466275    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
466276    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
466277    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
466278    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
466279    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
466280    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
466281    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
466282    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
466283    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
466284    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
466285    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
466286    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
466287    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
466288    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
466289    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
466290    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
466291    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
466292    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
466293    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
466294    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
466295    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
466296    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
466297    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
466298    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
466299    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
466300    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
466301    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
466302    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
466303    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
466304    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
466305    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
466306    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
466307    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
466308    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
466309    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
466310    +   ELSE S_NumCatalogPurchases
466311    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
466312    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
466313    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
466314    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
466315    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
466316    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
466317    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
466318    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
466319    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
466320    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
466321    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
466322    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
466323    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
466324    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
466325    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
466326    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
466327    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
466328    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
466329    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
466330    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
466331    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
466332    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
466333    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
466334    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
466335    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
466336    +END;
MPRINT(EM_DIAGRAM):   END;
466337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466338    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
466339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466341    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
466342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466344    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
466345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466346    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
466347    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
466348    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
466349    +        S_Income  +    -0.27053363011695 * S_Kidhome
466350    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
466351    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
466352    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
466353    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
466354    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
466355    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
466356    +          +    -1.35624485206227 * S_NumDealsPurchases
466357    +          +    -0.54646115734684 * S_NumDistPurchases
466358    +          +     1.29794225108321 * S_NumStorePurchases
466359    +          +      1.8453064081809 * S_NumWebPurchases
466360    +          +    -0.92747144824026 * S_NumWebVisitsMonth
466361    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
466362    +        S_RMntFrq  +     0.73207333681971 * S_Recency
466363    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
466364    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
466365    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
466366    +        S_Income  +    -0.79821220724157 * S_Kidhome
466367    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
466368    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
466369    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
466370    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
466371    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
466372    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
466373    +          +     0.72513216556859 * S_NumDealsPurchases
466374    +          +    -0.15566774650584 * S_NumDistPurchases
466375    +          +     -0.8847675798982 * S_NumStorePurchases
466376    +          +    -0.79405200318252 * S_NumWebPurchases
466377    +          +     1.74003779802254 * S_NumWebVisitsMonth
466378    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
466379    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
466380    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
466381    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
466382    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
466383    +        S_Income  +    -0.58596240450544 * S_Kidhome
466384    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
466385    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
466386    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
466387    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
466388    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
466389    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
466390    +          +     0.17466385502192 * S_NumDealsPurchases
466391    +          +    -0.06219545947203 * S_NumDistPurchases
466392    +          +     0.16637546838853 * S_NumStorePurchases
466393    +          +    -0.06908729397635 * S_NumWebPurchases
466394    +          +     1.44269772444244 * S_NumWebVisitsMonth
466395    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
466396    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
466397    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
466398    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
466399    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
466400    +        S_Income  +    -0.42454238091412 * S_Kidhome
466401    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
466402    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
466403    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
466404    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
466405    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
466406    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
466407    +          +     0.77329078721398 * S_NumDealsPurchases
466408    +          +     0.31693324305765 * S_NumDistPurchases
466409    +          +    -1.08524196373091 * S_NumStorePurchases
466410    +          +    -0.96945384922979 * S_NumWebPurchases
466411    +          +     1.24659288571587 * S_NumWebVisitsMonth
466412    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
466413    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
466414    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
466415    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
466416    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
466417    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
466418    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
466419    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
466420    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
466421    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
466422    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
466423    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
466424    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
466425    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
466426    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
466427    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
466428    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
466429    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
466430    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
466431    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
466432    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
466433    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
466434    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
466435    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
466436    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
466437    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
466438    +          +     0.36788499721115 * Marital_StatusDivorced
466439    +          +    -0.16988636986433 * Marital_StatusMarried
466440    +          +    -0.24560973256761 * Marital_StatusSingle
466441    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
466442    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
466443    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
466444    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
466445    +          +     0.24497797058028 * Marital_StatusDivorced
466446    +          +    -1.44410245434424 * Marital_StatusMarried
466447    +          +     1.47441310087392 * Marital_StatusSingle
466448    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
466449    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
466450    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
466451    +        EducationGraduation  +     0.04653963359475 * EducationMaster
466452    +          +     0.15823225296452 * Marital_StatusDivorced
466453    +          +    -0.39129434667884 * Marital_StatusMarried
466454    +          +     0.84414069966504 * Marital_StatusSingle
466455    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
466456    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
466457    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
466458    +        EducationGraduation  +     0.40030852414737 * EducationMaster
466459    +          +     1.22039169814542 * Marital_StatusDivorced
466460    +          +     0.91592976063128 * Marital_StatusMarried
466461    +          +    -1.51267332883308 * Marital_StatusSingle
466462    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
466463    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
466464    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
466465    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
466466    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
466467    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
466468    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
466469    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
466470    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
466471    +END;
MPRINT(EM_DIAGRAM):   END;
466472    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
466473    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
466474    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
466475    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
466476    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
466477    +END;
MPRINT(EM_DIAGRAM):   END;
466478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466479    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
466480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466481    +
466482    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
466483    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
466484    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
466485    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
466486    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
466487    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466488    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
466489    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
466490    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
466491    +end;
MPRINT(EM_DIAGRAM):   end;
466492    +else do;
MPRINT(EM_DIAGRAM):   else do;
466493    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
466494    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
466495    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
466496    +   end;
MPRINT(EM_DIAGRAM):   end;
466497    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
466498    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
466499    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
466500    +   end;
MPRINT(EM_DIAGRAM):   end;
466501    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466502    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
466503    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
466504    +   end;
MPRINT(EM_DIAGRAM):   end;
466505    +end;
MPRINT(EM_DIAGRAM):   end;
466506    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
466507    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
466508    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
466509    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
466510    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
466511    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
466512    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
466513    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
466514    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
466515    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
466516    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
466517    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
466518    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
466519    +END;
MPRINT(EM_DIAGRAM):   END;
466520    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
466521    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
466522    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
466523    +END;
MPRINT(EM_DIAGRAM):   END;
466524    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
466525    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
466526    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
466527    +END;
MPRINT(EM_DIAGRAM):   END;
466528    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
466529    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
466530    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
466531    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
466532    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
466533    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
466534    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
466535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466536    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
466537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466538    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
466539    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
466540    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
466541    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
466542    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
466543    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
466544    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
466545    +END;
MPRINT(EM_DIAGRAM):   END;
466546    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
466547    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
466548    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
466549    +drop
466550    +H11
466551    +H12
466552    +H13
466553    +H14
466554    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
466555    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
466556    +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
466557    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466558    +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
466559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466560    +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
466561    +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
466562    +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
466563    +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
466564    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466565    +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
466566    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466567    +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
466568    +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
466569    +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
466570    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466571    +* Ensmbl25: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 5 of 10;
466572    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466573    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466574    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
466575    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
466576    +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
466577    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
466578    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
466579    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
466580    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
466581    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
466582    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
466583    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
466584    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
466585    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
466586    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
466587    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
466588    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
466589    +LENGTH _WARN_ $4
466590    +      F_DepVar  $ 12
466591    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
466592    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
466593    +
466594    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
466595    +
466596    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
466597    +
466598    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
466599    +
466600    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
466601    +
466602    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
466603    +
466604    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
466605    +
466606    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
466607    +
466608    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
466609    +
466610    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
466611    +
466612    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
466613    +
466614    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
466615    +
466616    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
466617    +
466618    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
466619    +
466620    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
466621    +
466622    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
466623    +
466624    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
466625    +
466626    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
466627    +
466628    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
466629    +
466630    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
466631    +
466632    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
466633    +
466634    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
466635    +
466636    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
466637    +
466638    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
466639    +
466640    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
466641    +
466642    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
466643    +
466644    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
466645    +
466646    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
466647    +
466648    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
466649    +
466650    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
466651    +
466652    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
466653    +
466654    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
466655    +
466656    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
466657    +
466658    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
466659    +
466660    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
466661    +
466662    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
466663    +
466664    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
466665    +
466666    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
466667    +
466668    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
466669    +
466670    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
466671    +
466672    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
466673    +
466674    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
466675    +
466676    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
466677    +
466678    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
466679    +
466680    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
466681    +
466682    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
466683    +
466684    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
466685    +
466686    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
466687    +
466688    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
466689    +
466690    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
466691    +
466692    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
466693    +
466694    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
466695    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
466696    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
466697    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
466698    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466699    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466700    +end;
MPRINT(EM_DIAGRAM):   end;
466701    +else do;
MPRINT(EM_DIAGRAM):   else do;
466702    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466703    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
466704    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466705    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466706    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
466707    +   end;
MPRINT(EM_DIAGRAM):   end;
466708    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466709    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
466710    +   end;
MPRINT(EM_DIAGRAM):   end;
466711    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466712    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
466713    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466714    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466715    +   end;
MPRINT(EM_DIAGRAM):   end;
466716    +end;
MPRINT(EM_DIAGRAM):   end;
466717    +
466718    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
466719    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
466720    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
466721    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
466722    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466723    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466724    +end;
MPRINT(EM_DIAGRAM):   end;
466725    +else do;
MPRINT(EM_DIAGRAM):   else do;
466726    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466727    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
466728    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466729    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466730    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
466731    +   end;
MPRINT(EM_DIAGRAM):   end;
466732    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466733    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
466734    +   end;
MPRINT(EM_DIAGRAM):   end;
466735    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466736    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
466737    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466738    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466739    +   end;
MPRINT(EM_DIAGRAM):   end;
466740    +end;
MPRINT(EM_DIAGRAM):   end;
466741    +
466742    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
466743    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
466744    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
466745    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
466746    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466747    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466748    +end;
MPRINT(EM_DIAGRAM):   end;
466749    +else do;
MPRINT(EM_DIAGRAM):   else do;
466750    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466751    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
466752    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466753    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466754    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
466755    +   end;
MPRINT(EM_DIAGRAM):   end;
466756    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466757    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
466758    +   end;
MPRINT(EM_DIAGRAM):   end;
466759    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466760    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
466761    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466762    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466763    +   end;
MPRINT(EM_DIAGRAM):   end;
466764    +end;
MPRINT(EM_DIAGRAM):   end;
466765    +
466766    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
466767    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
466768    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
466769    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
466770    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466771    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466772    +end;
MPRINT(EM_DIAGRAM):   end;
466773    +else do;
MPRINT(EM_DIAGRAM):   else do;
466774    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466775    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
466776    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466777    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466778    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
466779    +   end;
MPRINT(EM_DIAGRAM):   end;
466780    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466781    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
466782    +   end;
MPRINT(EM_DIAGRAM):   end;
466783    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466784    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
466785    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466786    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466787    +   end;
MPRINT(EM_DIAGRAM):   end;
466788    +end;
MPRINT(EM_DIAGRAM):   end;
466789    +
466790    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
466791    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
466792    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
466793    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
466794    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466796    +end;
MPRINT(EM_DIAGRAM):   end;
466797    +else do;
MPRINT(EM_DIAGRAM):   else do;
466798    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466799    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
466800    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466801    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466802    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
466803    +   end;
MPRINT(EM_DIAGRAM):   end;
466804    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466805    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
466806    +   end;
MPRINT(EM_DIAGRAM):   end;
466807    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466808    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
466809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466811    +   end;
MPRINT(EM_DIAGRAM):   end;
466812    +end;
MPRINT(EM_DIAGRAM):   end;
466813    +
466814    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
466815    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
466816    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
466817    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
466818    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466819    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466820    +end;
MPRINT(EM_DIAGRAM):   end;
466821    +else do;
MPRINT(EM_DIAGRAM):   else do;
466822    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466823    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
466824    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466825    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
466826    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
466827    +   end;
MPRINT(EM_DIAGRAM):   end;
466828    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
466829    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
466830    +   end;
MPRINT(EM_DIAGRAM):   end;
466831    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466832    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
466833    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466834    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466835    +   end;
MPRINT(EM_DIAGRAM):   end;
466836    +end;
MPRINT(EM_DIAGRAM):   end;
466837    +
466838    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
466839    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
466840    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
466841    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
466842    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466843    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466844    +end;
MPRINT(EM_DIAGRAM):   end;
466845    +else do;
MPRINT(EM_DIAGRAM):   else do;
466846    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
466847    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
466848    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466849    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
466850    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
466851    +   end;
MPRINT(EM_DIAGRAM):   end;
466852    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
466853    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
466854    +   end;
MPRINT(EM_DIAGRAM):   end;
466855    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466856    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
466857    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466858    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466859    +   end;
MPRINT(EM_DIAGRAM):   end;
466860    +end;
MPRINT(EM_DIAGRAM):   end;
466861    +
466862    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
466863    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
466864    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
466865    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
466866    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
466867    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
466868    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
466869    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
466870    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
466871    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
466872    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
466873    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
466874    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466875    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466876    +end;
MPRINT(EM_DIAGRAM):   end;
466877    +else do;
MPRINT(EM_DIAGRAM):   else do;
466878    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
466879    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
466880    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466881    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
466882    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
466883    +   end;
MPRINT(EM_DIAGRAM):   end;
466884    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
466885    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
466886    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
466887    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
466888    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
466889    +   end;
MPRINT(EM_DIAGRAM):   end;
466890    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
466891    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
466892    +   end;
MPRINT(EM_DIAGRAM):   end;
466893    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
466894    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
466895    +   end;
MPRINT(EM_DIAGRAM):   end;
466896    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
466897    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
466898    +   end;
MPRINT(EM_DIAGRAM):   end;
466899    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466900    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
466901    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
466902    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
466903    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
466904    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466905    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466906    +   end;
MPRINT(EM_DIAGRAM):   end;
466907    +end;
MPRINT(EM_DIAGRAM):   end;
466908    +
466909    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
466910    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
466911    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
466912    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
466913    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
466914    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
466915    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
466916    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
466917    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
466918    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
466919    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
466920    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
466921    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
466922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
466923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466924    +end;
MPRINT(EM_DIAGRAM):   end;
466925    +else do;
MPRINT(EM_DIAGRAM):   else do;
466926    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
466927    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
466928    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
466929    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
466930    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
466931    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
466932    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
466933    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
466934    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466935    +         end;
MPRINT(EM_DIAGRAM):   end;
466936    +         else do;
MPRINT(EM_DIAGRAM):   else do;
466937    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
466938    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
466939    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466940    +            end;
MPRINT(EM_DIAGRAM):   end;
466941    +         end;
MPRINT(EM_DIAGRAM):   end;
466942    +      end;
MPRINT(EM_DIAGRAM):   end;
466943    +      else do;
MPRINT(EM_DIAGRAM):   else do;
466944    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
466945    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
466946    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466947    +         end;
MPRINT(EM_DIAGRAM):   end;
466948    +      end;
MPRINT(EM_DIAGRAM):   end;
466949    +   end;
MPRINT(EM_DIAGRAM):   end;
466950    +   else do;
MPRINT(EM_DIAGRAM):   else do;
466951    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
466952    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
466953    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466954    +      end;
MPRINT(EM_DIAGRAM):   end;
466955    +      else do;
MPRINT(EM_DIAGRAM):   else do;
466956    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
466957    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
466958    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
466959    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
466960    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
466961    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
466962    +         end;
MPRINT(EM_DIAGRAM):   end;
466963    +      end;
MPRINT(EM_DIAGRAM):   end;
466964    +   end;
MPRINT(EM_DIAGRAM):   end;
466965    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
466966    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
466967    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
466968    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
466969    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
466970    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
466971    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
466972    +   end;
MPRINT(EM_DIAGRAM):   end;
466973    +end;
MPRINT(EM_DIAGRAM):   end;
466974    +
466975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
466976    +*** Checking missing input Interval
466977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
466978    +
466979    +IF NMISS(
466980    +   AcceptedCmpTotal ,
466981    +   Age ,
466982    +   Frq ,
466983    +   Income ,
466984    +   Kidhome ,
466985    +   Mnt ,
466986    +   MntFishProducts ,
466987    +   MntFruits ,
466988    +   MntGoldProds ,
466989    +   MntMeatProducts ,
466990    +   MntSweetProducts ,
466991    +   MntWines ,
466992    +   MonthsAsCustomer ,
466993    +   NumCatalogPurchases ,
466994    +   NumDealsPurchases ,
466995    +   NumDistPurchases ,
466996    +   NumStorePurchases ,
466997    +   NumWebPurchases ,
466998    +   NumWebVisitsMonth ,
466999    +   RFMstat ,
467000    +   RMntFrq ,
467001    +   Recency ,
467002    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
467003    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
467004    +
467005    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467006    +END;
MPRINT(EM_DIAGRAM):   END;
467007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467008    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
467009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467010    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
467011    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
467012    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
467013    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
467014    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
467015    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
467016    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
467017    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
467018    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
467019    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
467020    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
467021    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
467022    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
467023    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
467024    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
467025    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
467026    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
467027    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
467028    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
467029    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
467030    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
467031    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
467032    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
467033    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
467034    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
467035    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
467036    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
467037    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
467038    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
467039    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
467040    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
467041    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
467042    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
467043    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
467044    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
467045    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
467046    +END;
MPRINT(EM_DIAGRAM):   END;
467047    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
467048    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
467049    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
467050    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
467051    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
467052    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
467053    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
467054    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
467055    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
467056    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
467057    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
467058    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
467059    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
467060    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
467061    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
467062    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
467063    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
467064    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
467065    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
467066    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
467067    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
467068    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
467069    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
467070    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
467071    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
467072    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
467073    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
467074    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
467075    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
467076    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
467077    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
467078    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
467079    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
467080    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
467081    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
467082    +   ELSE S_NumCatalogPurchases
467083    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
467084    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
467085    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
467086    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
467087    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
467088    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
467089    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
467090    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
467091    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
467092    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
467093    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
467094    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
467095    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
467096    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
467097    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
467098    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
467099    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
467100    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
467101    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
467102    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
467103    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
467104    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
467105    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
467106    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
467107    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
467108    +END;
MPRINT(EM_DIAGRAM):   END;
467109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467110    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
467111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467113    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
467114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467116    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
467117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467118    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
467119    +   H11  =     0.13594465912127 * S_AcceptedCmpTotal  +    -0.04369874222877 *
467120    +        S_Age  +     -0.0222974124172 * S_Frq  +    -0.11043551468483 *
467121    +        S_Income  +    -0.32248758927071 * S_Kidhome
467122    +          +      0.0776161679259 * S_Mnt  +    -0.08725654580836 *
467123    +        S_MntFishProducts  +     0.14236031403157 * S_MntFruits
467124    +          +    -0.48581570899412 * S_MntGoldProds  +     0.03414406983139 *
467125    +        S_MntMeatProducts  +    -0.23271736394479 * S_MntSweetProducts
467126    +          +     0.43105893695077 * S_MntWines  +     0.31123874593742 *
467127    +        S_MonthsAsCustomer  +    -0.19669815006873 * S_NumCatalogPurchases
467128    +          +    -0.68207513361313 * S_NumDealsPurchases
467129    +          +    -0.37964850256921 * S_NumDistPurchases
467130    +          +     0.36066480603854 * S_NumStorePurchases
467131    +          +     0.25966011307033 * S_NumWebPurchases
467132    +          +    -0.03958464718959 * S_NumWebVisitsMonth
467133    +          +    -0.12441133162569 * S_RFMstat  +     0.05838942731159 *
467134    +        S_RMntFrq  +      0.2807801943237 * S_Recency
467135    +          +    -0.10186253847778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13594465912127 * S_AcceptedCmpTotal + -0.04369874222877 * S_Age 
+ -0.0222974124172 * S_Frq + -0.11043551468483 * S_Income + -0.32248758927071 * S_Kidhome + 
0.0776161679259 * S_Mnt + -0.08725654580836 * S_MntFishProducts + 0.14236031403157 * 
S_MntFruits + -0.48581570899412 * S_MntGoldProds + 0.03414406983139 * S_MntMeatProducts + 
-0.23271736394479 * S_MntSweetProducts + 0.43105893695077 * S_MntWines + 0.31123874593742 * 
S_MonthsAsCustomer + -0.19669815006873 * S_NumCatalogPurchases + -0.68207513361313 * 
S_NumDealsPurchases + -0.37964850256921 * S_NumDistPurchases + 0.36066480603854 * 
S_NumStorePurchases + 0.25966011307033 * S_NumWebPurchases + -0.03958464718959 * 
S_NumWebVisitsMonth + -0.12441133162569 * S_RFMstat + 0.05838942731159 * S_RMntFrq + 
0.2807801943237 * S_Recency + -0.10186253847778 * S_Teenhome ;
467136    +   H12  =     0.03443433887324 * S_AcceptedCmpTotal  +    -0.33034112884719 *
467137    +        S_Age  +    -0.29426561048486 * S_Frq  +      0.1259913339118 *
467138    +        S_Income  +    -0.01525271628925 * S_Kidhome
467139    +          +     0.12125196820394 * S_Mnt  +     0.27499561817138 *
467140    +        S_MntFishProducts  +     0.02702998039497 * S_MntFruits
467141    +          +     0.19117237676118 * S_MntGoldProds  +     0.14988798454777 *
467142    +        S_MntMeatProducts  +    -0.12004881951738 * S_MntSweetProducts
467143    +          +     0.21492388287889 * S_MntWines  +    -0.32645982553718 *
467144    +        S_MonthsAsCustomer  +     0.33162536777041 * S_NumCatalogPurchases
467145    +          +    -0.05060212016961 * S_NumDealsPurchases
467146    +          +    -0.14809619066524 * S_NumDistPurchases
467147    +          +    -0.02428798408125 * S_NumStorePurchases
467148    +          +     0.05554695337353 * S_NumWebPurchases
467149    +          +     -0.3347797414912 * S_NumWebVisitsMonth
467150    +          +    -0.08694305340873 * S_RFMstat  +    -0.34566171030649 *
467151    +        S_RMntFrq  +     0.34878481829389 * S_Recency
467152    +          +     0.10894516705031 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.03443433887324 * S_AcceptedCmpTotal + -0.33034112884719 * S_Age 
+ -0.29426561048486 * S_Frq + 0.1259913339118 * S_Income + -0.01525271628925 * S_Kidhome + 
0.12125196820394 * S_Mnt + 0.27499561817138 * S_MntFishProducts + 0.02702998039497 * 
S_MntFruits + 0.19117237676118 * S_MntGoldProds + 0.14988798454777 * S_MntMeatProducts + 
-0.12004881951738 * S_MntSweetProducts + 0.21492388287889 * S_MntWines + -0.32645982553718 * 
S_MonthsAsCustomer + 0.33162536777041 * S_NumCatalogPurchases + -0.05060212016961 * 
S_NumDealsPurchases + -0.14809619066524 * S_NumDistPurchases + -0.02428798408125 * 
S_NumStorePurchases + 0.05554695337353 * S_NumWebPurchases + -0.3347797414912 * 
S_NumWebVisitsMonth + -0.08694305340873 * S_RFMstat + -0.34566171030649 * S_RMntFrq + 
0.34878481829389 * S_Recency + 0.10894516705031 * S_Teenhome ;
467153    +   H13  =     0.00370096998686 * S_AcceptedCmpTotal  +    -0.51953611125691 *
467154    +        S_Age  +     0.17877016433586 * S_Frq  +     0.06789251642015 *
467155    +        S_Income  +    -0.05479760920776 * S_Kidhome
467156    +          +    -0.03872422009017 * S_Mnt  +    -0.14541111406951 *
467157    +        S_MntFishProducts  +     0.02855123883129 * S_MntFruits
467158    +          +     0.25306699654279 * S_MntGoldProds  +     0.08795222920616 *
467159    +        S_MntMeatProducts  +    -0.02903225924096 * S_MntSweetProducts
467160    +          +     0.15553330295402 * S_MntWines  +     0.02888022983016 *
467161    +        S_MonthsAsCustomer  +    -0.17290950123626 * S_NumCatalogPurchases
467162    +          +     0.18029447475323 * S_NumDealsPurchases
467163    +          +     0.05934542805435 * S_NumDistPurchases
467164    +          +     0.11232970412862 * S_NumStorePurchases
467165    +          +    -0.10916601726159 * S_NumWebPurchases
467166    +          +    -0.01910812243665 * S_NumWebVisitsMonth
467167    +          +    -0.21344753217364 * S_RFMstat  +      0.1645823437477 *
467168    +        S_RMntFrq  +    -0.40799689263706 * S_Recency
467169    +          +     0.02511588992095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.00370096998686 * S_AcceptedCmpTotal + -0.51953611125691 * S_Age 
+ 0.17877016433586 * S_Frq + 0.06789251642015 * S_Income + -0.05479760920776 * S_Kidhome + 
-0.03872422009017 * S_Mnt + -0.14541111406951 * S_MntFishProducts + 0.02855123883129 * 
S_MntFruits + 0.25306699654279 * S_MntGoldProds + 0.08795222920616 * S_MntMeatProducts + 
-0.02903225924096 * S_MntSweetProducts + 0.15553330295402 * S_MntWines + 0.02888022983016 * 
S_MonthsAsCustomer + -0.17290950123626 * S_NumCatalogPurchases + 0.18029447475323 * 
S_NumDealsPurchases + 0.05934542805435 * S_NumDistPurchases + 0.11232970412862 * 
S_NumStorePurchases + -0.10916601726159 * S_NumWebPurchases + -0.01910812243665 * 
S_NumWebVisitsMonth + -0.21344753217364 * S_RFMstat + 0.1645823437477 * S_RMntFrq + 
-0.40799689263706 * S_Recency + 0.02511588992095 * S_Teenhome ;
467170    +   H14  =    -0.61829421083246 * S_AcceptedCmpTotal  +    -0.16873052249719 *
467171    +        S_Age  +     0.13439351408573 * S_Frq  +    -0.50103344614666 *
467172    +        S_Income  +     0.31726096463976 * S_Kidhome
467173    +          +    -0.15181042208759 * S_Mnt  +     0.31922880035738 *
467174    +        S_MntFishProducts  +     0.09386333655585 * S_MntFruits
467175    +          +    -0.12620631685892 * S_MntGoldProds  +    -0.92555808639473 *
467176    +        S_MntMeatProducts  +    -0.15556710025124 * S_MntSweetProducts
467177    +          +     0.59625872106317 * S_MntWines  +    -0.14105032907988 *
467178    +        S_MonthsAsCustomer  +    -0.27105883046781 * S_NumCatalogPurchases
467179    +          +    -0.05889648319294 * S_NumDealsPurchases
467180    +          +     0.04297768152043 * S_NumDistPurchases
467181    +          +     0.08289772168464 * S_NumStorePurchases
467182    +          +     0.02925451736459 * S_NumWebPurchases
467183    +          +    -0.34806744064693 * S_NumWebVisitsMonth
467184    +          +    -0.10075155542626 * S_RFMstat  +    -0.54230386384017 *
467185    +        S_RMntFrq  +     0.54567939140523 * S_Recency
467186    +          +     0.75126712310981 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.61829421083246 * S_AcceptedCmpTotal + -0.16873052249719 * S_Age 
+ 0.13439351408573 * S_Frq + -0.50103344614666 * S_Income + 0.31726096463976 * S_Kidhome + 
-0.15181042208759 * S_Mnt + 0.31922880035738 * S_MntFishProducts + 0.09386333655585 * 
S_MntFruits + -0.12620631685892 * S_MntGoldProds + -0.92555808639473 * S_MntMeatProducts + 
-0.15556710025124 * S_MntSweetProducts + 0.59625872106317 * S_MntWines + -0.14105032907988 * 
S_MonthsAsCustomer + -0.27105883046781 * S_NumCatalogPurchases + -0.05889648319294 * 
S_NumDealsPurchases + 0.04297768152043 * S_NumDistPurchases + 0.08289772168464 * 
S_NumStorePurchases + 0.02925451736459 * S_NumWebPurchases + -0.34806744064693 * 
S_NumWebVisitsMonth + -0.10075155542626 * S_RFMstat + -0.54230386384017 * S_RMntFrq + 
0.54567939140523 * S_Recency + 0.75126712310981 * S_Teenhome ;
467187    +   H15  =     0.47250221965687 * S_AcceptedCmpTotal  +    -0.07487325745499 *
467188    +        S_Age  +      0.0382122049104 * S_Frq  +     0.55347292090838 *
467189    +        S_Income  +     -0.1831746721838 * S_Kidhome
467190    +          +    -0.12974904479016 * S_Mnt  +    -0.03773564357475 *
467191    +        S_MntFishProducts  +    -0.08740721632052 * S_MntFruits
467192    +          +    -0.10157053454184 * S_MntGoldProds  +     0.52457296443385 *
467193    +        S_MntMeatProducts  +    -0.13287009184486 * S_MntSweetProducts
467194    +          +    -0.37745748357546 * S_MntWines  +    -0.04143657431262 *
467195    +        S_MonthsAsCustomer  +     0.67758682109997 * S_NumCatalogPurchases
467196    +          +     0.46814119938755 * S_NumDealsPurchases
467197    +          +     0.03182241038425 * S_NumDistPurchases
467198    +          +    -0.51911846047007 * S_NumStorePurchases
467199    +          +    -0.53954754105242 * S_NumWebPurchases
467200    +          +     1.07208473057077 * S_NumWebVisitsMonth
467201    +          +     0.12556098363101 * S_RFMstat  +    -0.05748040855256 *
467202    +        S_RMntFrq  +    -0.95916513053649 * S_Recency
467203    +          +    -0.24142268692108 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.47250221965687 * S_AcceptedCmpTotal + -0.07487325745499 * S_Age 
+ 0.0382122049104 * S_Frq + 0.55347292090838 * S_Income + -0.1831746721838 * S_Kidhome + 
-0.12974904479016 * S_Mnt + -0.03773564357475 * S_MntFishProducts + -0.08740721632052 * 
S_MntFruits + -0.10157053454184 * S_MntGoldProds + 0.52457296443385 * S_MntMeatProducts + 
-0.13287009184486 * S_MntSweetProducts + -0.37745748357546 * S_MntWines + -0.04143657431262 * 
S_MonthsAsCustomer + 0.67758682109997 * S_NumCatalogPurchases + 0.46814119938755 * 
S_NumDealsPurchases + 0.03182241038425 * S_NumDistPurchases + -0.51911846047007 * 
S_NumStorePurchases + -0.53954754105242 * S_NumWebPurchases + 1.07208473057077 * 
S_NumWebVisitsMonth + 0.12556098363101 * S_RFMstat + -0.05748040855256 * S_RMntFrq + 
-0.95916513053649 * S_Recency + -0.24142268692108 * S_Teenhome ;
467204    +   H11  = H11  +      0.0203211213932 * AcceptedCmp10
467205    +          +    -0.24671835063904 * AcceptedCmp20  +    -0.16470646765907 *
467206    +        AcceptedCmp30  +     -0.4099897223583 * AcceptedCmp40
467207    +          +    -0.11336081432536 * AcceptedCmp50  +    -0.42649732753042 *
467208    +        Complain0  +     -0.0416551568273 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0203211213932 * AcceptedCmp10 + -0.24671835063904 * 
AcceptedCmp20 + -0.16470646765907 * AcceptedCmp30 + -0.4099897223583 * AcceptedCmp40 + 
-0.11336081432536 * AcceptedCmp50 + -0.42649732753042 * Complain0 + -0.0416551568273 * 
HigherEducationBinary0 ;
467209    +   H12  = H12  +     0.02213559506685 * AcceptedCmp10
467210    +          +      0.0220571091041 * AcceptedCmp20  +     0.17399856069521 *
467211    +        AcceptedCmp30  +    -0.18257604858416 * AcceptedCmp40
467212    +          +    -0.18091572749617 * AcceptedCmp50  +     0.05174557804497 *
467213    +        Complain0  +    -0.05809342634244 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02213559506685 * AcceptedCmp10 + 0.0220571091041 * 
AcceptedCmp20 + 0.17399856069521 * AcceptedCmp30 + -0.18257604858416 * AcceptedCmp40 + 
-0.18091572749617 * AcceptedCmp50 + 0.05174557804497 * Complain0 + -0.05809342634244 * 
HigherEducationBinary0 ;
467214    +   H13  = H13  +     0.18240929240485 * AcceptedCmp10
467215    +          +     0.08046156423197 * AcceptedCmp20  +    -0.09196288275429 *
467216    +        AcceptedCmp30  +     0.22693642674212 * AcceptedCmp40
467217    +          +    -0.22127877339648 * AcceptedCmp50  +     0.22787694199297 *
467218    +        Complain0  +    -0.20447728360836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18240929240485 * AcceptedCmp10 + 0.08046156423197 * 
AcceptedCmp20 + -0.09196288275429 * AcceptedCmp30 + 0.22693642674212 * AcceptedCmp40 + 
-0.22127877339648 * AcceptedCmp50 + 0.22787694199297 * Complain0 + -0.20447728360836 * 
HigherEducationBinary0 ;
467219    +   H14  = H14  +     0.15760334306304 * AcceptedCmp10
467220    +          +     0.25177195217647 * AcceptedCmp20  +     0.58646837477387 *
467221    +        AcceptedCmp30  +     0.35808865186096 * AcceptedCmp40
467222    +          +     0.24279152213079 * AcceptedCmp50  +    -0.03682926397711 *
467223    +        Complain0  +    -0.42398917474831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15760334306304 * AcceptedCmp10 + 0.25177195217647 * 
AcceptedCmp20 + 0.58646837477387 * AcceptedCmp30 + 0.35808865186096 * AcceptedCmp40 + 
0.24279152213079 * AcceptedCmp50 + -0.03682926397711 * Complain0 + -0.42398917474831 * 
HigherEducationBinary0 ;
467224    +   H15  = H15  +    -0.09968006776007 * AcceptedCmp10
467225    +          +     0.09022158834293 * AcceptedCmp20  +    -0.10842101964798 *
467226    +        AcceptedCmp30  +    -0.13099813140438 * AcceptedCmp40
467227    +          +    -0.22167423223515 * AcceptedCmp50  +    -0.04428927537039 *
467228    +        Complain0  +    -0.26182339546076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.09968006776007 * AcceptedCmp10 + 0.09022158834293 * 
AcceptedCmp20 + -0.10842101964798 * AcceptedCmp30 + -0.13099813140438 * AcceptedCmp40 + 
-0.22167423223515 * AcceptedCmp50 + -0.04428927537039 * Complain0 + -0.26182339546076 * 
HigherEducationBinary0 ;
467229    +   H11  = H11  +    -0.01959847584448 * Education2n_Cycle
467230    +          +    -0.23759194699722 * EducationBasic  +    -0.09694759635569 *
467231    +        EducationGraduation  +     0.16905118469563 * EducationMaster
467232    +          +     0.09920310143649 * Marital_StatusDivorced
467233    +          +    -0.03469710828426 * Marital_StatusMarried
467234    +          +     0.04524816569771 * Marital_StatusSingle
467235    +          +    -0.00616333143464 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01959847584448 * Education2n_Cycle + -0.23759194699722 * 
EducationBasic + -0.09694759635569 * EducationGraduation + 0.16905118469563 * EducationMaster 
+ 0.09920310143649 * Marital_StatusDivorced + -0.03469710828426 * Marital_StatusMarried + 
0.04524816569771 * Marital_StatusSingle + -0.00616333143464 * Marital_StatusTogether ;
467236    +   H12  = H12  +     0.05721184485318 * Education2n_Cycle
467237    +          +    -0.04983755787599 * EducationBasic  +    -0.05003868555341 *
467238    +        EducationGraduation  +     0.14755035027548 * EducationMaster
467239    +          +     0.15544361606364 * Marital_StatusDivorced
467240    +          +    -0.04549024479337 * Marital_StatusMarried
467241    +          +    -0.22192209058914 * Marital_StatusSingle
467242    +          +     0.27320991984549 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05721184485318 * Education2n_Cycle + -0.04983755787599 * 
EducationBasic + -0.05003868555341 * EducationGraduation + 0.14755035027548 * EducationMaster 
+ 0.15544361606364 * Marital_StatusDivorced + -0.04549024479337 * Marital_StatusMarried + 
-0.22192209058914 * Marital_StatusSingle + 0.27320991984549 * Marital_StatusTogether ;
467243    +   H13  = H13  +     0.00075033011137 * Education2n_Cycle
467244    +          +    -0.11503072939964 * EducationBasic  +     -0.4136153442156 *
467245    +        EducationGraduation  +    -0.10472711185558 * EducationMaster
467246    +          +     0.06080683366118 * Marital_StatusDivorced
467247    +          +    -0.29971612034722 * Marital_StatusMarried
467248    +          +    -0.28960939443613 * Marital_StatusSingle
467249    +          +     0.03465872178588 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00075033011137 * Education2n_Cycle + -0.11503072939964 * 
EducationBasic + -0.4136153442156 * EducationGraduation + -0.10472711185558 * EducationMaster 
+ 0.06080683366118 * Marital_StatusDivorced + -0.29971612034722 * Marital_StatusMarried + 
-0.28960939443613 * Marital_StatusSingle + 0.03465872178588 * Marital_StatusTogether ;
467250    +   H14  = H14  +      0.0962498664542 * Education2n_Cycle
467251    +          +     0.07755075978175 * EducationBasic  +     0.06918862821828 *
467252    +        EducationGraduation  +    -0.19451337075589 * EducationMaster
467253    +          +    -0.27877133922419 * Marital_StatusDivorced
467254    +          +     0.25867038797563 * Marital_StatusMarried
467255    +          +    -0.17854477297284 * Marital_StatusSingle
467256    +          +     0.35391632150142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0962498664542 * Education2n_Cycle + 0.07755075978175 * 
EducationBasic + 0.06918862821828 * EducationGraduation + -0.19451337075589 * EducationMaster 
+ -0.27877133922419 * Marital_StatusDivorced + 0.25867038797563 * Marital_StatusMarried + 
-0.17854477297284 * Marital_StatusSingle + 0.35391632150142 * Marital_StatusTogether ;
467257    +   H15  = H15  +     0.17326731400139 * Education2n_Cycle
467258    +          +    -0.09586091586548 * EducationBasic  +     0.08664696951776 *
467259    +        EducationGraduation  +    -0.05191600320717 * EducationMaster
467260    +          +     0.30169513410559 * Marital_StatusDivorced
467261    +          +    -0.33752566748869 * Marital_StatusMarried
467262    +          +     0.43876556032036 * Marital_StatusSingle
467263    +          +    -0.37953091676086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.17326731400139 * Education2n_Cycle + -0.09586091586548 * 
EducationBasic + 0.08664696951776 * EducationGraduation + -0.05191600320717 * EducationMaster 
+ 0.30169513410559 * Marital_StatusDivorced + -0.33752566748869 * Marital_StatusMarried + 
0.43876556032036 * Marital_StatusSingle + -0.37953091676086 * Marital_StatusTogether ;
467264    +   H11  =     1.66971140546954 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.66971140546954 + H11 ;
467265    +   H12  =    -2.00390550356371 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.00390550356371 + H12 ;
467266    +   H13  =    -1.90761416182049 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.90761416182049 + H13 ;
467267    +   H14  =     0.27067485542842 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27067485542842 + H14 ;
467268    +   H15  =       -0.78426510761 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.78426510761 + H15 ;
467269    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
467270    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
467271    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
467272    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
467273    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
467274    +END;
MPRINT(EM_DIAGRAM):   END;
467275    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
467276    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
467277    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
467278    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
467279    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
467280    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
467281    +END;
MPRINT(EM_DIAGRAM):   END;
467282    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467283    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
467284    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467285    +
467286    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
467287    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
467288    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
467289    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
467290    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
467291    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467292    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
467293    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
467294    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
467295    +end;
MPRINT(EM_DIAGRAM):   end;
467296    +else do;
MPRINT(EM_DIAGRAM):   else do;
467297    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
467298    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
467299    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
467300    +   end;
MPRINT(EM_DIAGRAM):   end;
467301    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
467302    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
467303    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
467304    +   end;
MPRINT(EM_DIAGRAM):   end;
467305    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467306    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
467307    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
467308    +   end;
MPRINT(EM_DIAGRAM):   end;
467309    +end;
MPRINT(EM_DIAGRAM):   end;
467310    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
467311    +   P_DepVar1  =    -0.93198210671128 * H11  +    -0.73339280381433 * H12
467312    +          +     0.55985350295663 * H13  +    -2.31937062548345 * H14
467313    +          +     3.74909670300365 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.93198210671128 * H11 + -0.73339280381433 * H12 + 
0.55985350295663 * H13 + -2.31937062548345 * H14 + 3.74909670300365 * H15 ;
467314    +   P_DepVar1  =    -1.27659529547813 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.27659529547813 + P_DepVar1 ;
467315    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
467316    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
467317    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
467318    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
467319    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
467320    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
467321    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
467322    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
467323    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
467324    +END;
MPRINT(EM_DIAGRAM):   END;
467325    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
467326    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
467327    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
467328    +END;
MPRINT(EM_DIAGRAM):   END;
467329    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
467330    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
467331    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
467332    +END;
MPRINT(EM_DIAGRAM):   END;
467333    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
467334    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
467335    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
467336    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
467337    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
467338    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
467339    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
467340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467341    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
467342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467343    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
467344    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
467345    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
467346    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
467347    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
467348    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
467349    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
467350    +END;
MPRINT(EM_DIAGRAM):   END;
467351    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
467352    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
467353    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
467354    +drop
467355    +H11
467356    +H12
467357    +H13
467358    +H14
467359    +H15
467360    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
467361    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
467362    +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
467363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
467364    +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
467365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
467366    +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
467367    +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
467368    +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
467369    +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
467370    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
467371    +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
467372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
467373    +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
467374    +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
467375    +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
467376    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
467377    +* Ensmbl25: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 6 of 10;
467378    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
467379    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
467380    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
467381    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
467382    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
467383    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
467384    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
467385    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
467386    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
467387    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
467388    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
467389    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
467390    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
467391    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
467392    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
467393    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
467394    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
467395    +LENGTH _WARN_ $4
467396    +      F_DepVar  $ 12
467397    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
467398    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
467399    +
467400    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
467401    +
467402    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
467403    +
467404    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
467405    +
467406    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
467407    +
467408    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
467409    +
467410    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
467411    +
467412    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
467413    +
467414    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
467415    +
467416    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
467417    +
467418    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
467419    +
467420    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
467421    +
467422    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
467423    +
467424    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
467425    +
467426    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
467427    +
467428    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
467429    +
467430    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
467431    +
467432    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
467433    +
The SAS System

467434    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
467435    +
467436    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
467437    +
467438    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
467439    +
467440    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
467441    +
467442    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
467443    +
467444    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
467445    +
467446    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
467447    +
467448    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
467449    +
467450    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
467451    +
467452    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
467453    +
467454    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
467455    +
467456    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
467457    +
467458    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
467459    +
467460    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
467461    +
467462    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
467463    +
467464    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
467465    +
467466    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
467467    +
467468    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
467469    +
467470    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
467471    +
467472    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
467473    +
467474    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
467475    +
467476    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
467477    +
467478    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
467479    +
467480    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
467481    +
467482    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
467483    +
467484    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
467485    +
467486    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
467487    +
467488    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
467489    +
467490    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
467491    +
467492    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
467493    +
467494    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
467495    +
467496    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
467497    +
467498    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
467499    +
467500    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
467501    +
467502    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
467503    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
467504    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
467505    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
467506    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467508    +end;
MPRINT(EM_DIAGRAM):   end;
467509    +else do;
MPRINT(EM_DIAGRAM):   else do;
467510    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
467511    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
467512    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467513    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
467514    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
467515    +   end;
MPRINT(EM_DIAGRAM):   end;
467516    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
467517    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
467518    +   end;
MPRINT(EM_DIAGRAM):   end;
467519    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467520    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
467521    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467522    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467523    +   end;
MPRINT(EM_DIAGRAM):   end;
467524    +end;
MPRINT(EM_DIAGRAM):   end;
467525    +
467526    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
467527    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
467528    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
467529    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
467530    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467531    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467532    +end;
MPRINT(EM_DIAGRAM):   end;
467533    +else do;
MPRINT(EM_DIAGRAM):   else do;
467534    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
467535    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
467536    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467537    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
467538    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
467539    +   end;
MPRINT(EM_DIAGRAM):   end;
467540    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
467541    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
467542    +   end;
MPRINT(EM_DIAGRAM):   end;
467543    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467544    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
467545    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467546    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467547    +   end;
MPRINT(EM_DIAGRAM):   end;
467548    +end;
MPRINT(EM_DIAGRAM):   end;
467549    +
467550    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
467551    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
467552    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
467553    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
467554    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467555    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467556    +end;
MPRINT(EM_DIAGRAM):   end;
467557    +else do;
MPRINT(EM_DIAGRAM):   else do;
467558    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
467559    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
467560    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467561    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
467562    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
467563    +   end;
MPRINT(EM_DIAGRAM):   end;
467564    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
467565    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
467566    +   end;
MPRINT(EM_DIAGRAM):   end;
467567    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467568    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
467569    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467570    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467571    +   end;
MPRINT(EM_DIAGRAM):   end;
467572    +end;
MPRINT(EM_DIAGRAM):   end;
467573    +
467574    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
467575    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
467576    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
467577    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
467578    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467579    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467580    +end;
MPRINT(EM_DIAGRAM):   end;
467581    +else do;
MPRINT(EM_DIAGRAM):   else do;
467582    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
467583    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
467584    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467585    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
467586    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
467587    +   end;
MPRINT(EM_DIAGRAM):   end;
467588    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
467589    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
467590    +   end;
MPRINT(EM_DIAGRAM):   end;
467591    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467592    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
467593    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467594    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467595    +   end;
MPRINT(EM_DIAGRAM):   end;
467596    +end;
MPRINT(EM_DIAGRAM):   end;
467597    +
467598    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
467599    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
467600    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
467601    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
467602    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467603    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467604    +end;
MPRINT(EM_DIAGRAM):   end;
467605    +else do;
MPRINT(EM_DIAGRAM):   else do;
467606    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
467607    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
467608    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467609    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
467610    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
467611    +   end;
MPRINT(EM_DIAGRAM):   end;
467612    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
467613    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
467614    +   end;
MPRINT(EM_DIAGRAM):   end;
467615    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467616    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
467617    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467618    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467619    +   end;
MPRINT(EM_DIAGRAM):   end;
467620    +end;
MPRINT(EM_DIAGRAM):   end;
467621    +
467622    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
467623    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
467624    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
467625    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
467626    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467627    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467628    +end;
MPRINT(EM_DIAGRAM):   end;
467629    +else do;
MPRINT(EM_DIAGRAM):   else do;
467630    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
467631    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
467632    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467633    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
467634    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
467635    +   end;
MPRINT(EM_DIAGRAM):   end;
467636    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
467637    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
467638    +   end;
MPRINT(EM_DIAGRAM):   end;
467639    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467640    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
467641    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467642    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467643    +   end;
MPRINT(EM_DIAGRAM):   end;
467644    +end;
MPRINT(EM_DIAGRAM):   end;
467645    +
467646    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
467647    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
467648    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
467649    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
467650    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467651    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467652    +end;
MPRINT(EM_DIAGRAM):   end;
467653    +else do;
MPRINT(EM_DIAGRAM):   else do;
467654    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
467655    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
467656    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467657    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
467658    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
467659    +   end;
MPRINT(EM_DIAGRAM):   end;
467660    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
467661    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
467662    +   end;
MPRINT(EM_DIAGRAM):   end;
467663    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467664    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
467665    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467666    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467667    +   end;
MPRINT(EM_DIAGRAM):   end;
467668    +end;
MPRINT(EM_DIAGRAM):   end;
467669    +
467670    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
467671    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
467672    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
467673    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
467674    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
467675    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
467676    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
467677    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
467678    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
467679    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
467680    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
467681    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
467682    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467684    +end;
MPRINT(EM_DIAGRAM):   end;
467685    +else do;
MPRINT(EM_DIAGRAM):   else do;
467686    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
467687    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
467688    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467689    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
467690    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
467691    +   end;
MPRINT(EM_DIAGRAM):   end;
467692    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
467693    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
467694    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
467695    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
467696    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
467697    +   end;
MPRINT(EM_DIAGRAM):   end;
467698    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
467699    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
467700    +   end;
MPRINT(EM_DIAGRAM):   end;
467701    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
467702    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
467703    +   end;
MPRINT(EM_DIAGRAM):   end;
467704    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
467705    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
467706    +   end;
MPRINT(EM_DIAGRAM):   end;
467707    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467708    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
467709    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
467710    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
467711    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
467712    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467713    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467714    +   end;
MPRINT(EM_DIAGRAM):   end;
467715    +end;
MPRINT(EM_DIAGRAM):   end;
467716    +
467717    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
467718    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
467719    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
467720    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
467721    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
467722    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
467723    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
467724    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
467725    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
467726    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
467727    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
467728    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
467729    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
467730    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
467731    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467732    +end;
MPRINT(EM_DIAGRAM):   end;
467733    +else do;
MPRINT(EM_DIAGRAM):   else do;
467734    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
467735    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
467736    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
467737    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
467738    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
467739    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
467740    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
467741    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
467742    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
467743    +         end;
MPRINT(EM_DIAGRAM):   end;
467744    +         else do;
MPRINT(EM_DIAGRAM):   else do;
467745    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
467746    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
467747    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
467748    +            end;
MPRINT(EM_DIAGRAM):   end;
467749    +         end;
MPRINT(EM_DIAGRAM):   end;
467750    +      end;
MPRINT(EM_DIAGRAM):   end;
467751    +      else do;
MPRINT(EM_DIAGRAM):   else do;
467752    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
467753    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
467754    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
467755    +         end;
MPRINT(EM_DIAGRAM):   end;
467756    +      end;
MPRINT(EM_DIAGRAM):   end;
467757    +   end;
MPRINT(EM_DIAGRAM):   end;
467758    +   else do;
MPRINT(EM_DIAGRAM):   else do;
467759    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
467760    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
467761    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
467762    +      end;
MPRINT(EM_DIAGRAM):   end;
467763    +      else do;
MPRINT(EM_DIAGRAM):   else do;
467764    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
467765    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
467766    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
467767    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
467768    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
467769    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
467770    +         end;
MPRINT(EM_DIAGRAM):   end;
467771    +      end;
MPRINT(EM_DIAGRAM):   end;
467772    +   end;
MPRINT(EM_DIAGRAM):   end;
467773    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
467774    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
467775    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
467776    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
467777    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
467778    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
467779    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467780    +   end;
MPRINT(EM_DIAGRAM):   end;
467781    +end;
MPRINT(EM_DIAGRAM):   end;
467782    +
467783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467784    +*** Checking missing input Interval
467785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
467786    +
467787    +IF NMISS(
467788    +   AcceptedCmpTotal ,
467789    +   Age ,
467790    +   Frq ,
467791    +   Income ,
467792    +   Kidhome ,
467793    +   Mnt ,
467794    +   MntFishProducts ,
467795    +   MntFruits ,
467796    +   MntGoldProds ,
467797    +   MntMeatProducts ,
467798    +   MntSweetProducts ,
467799    +   MntWines ,
467800    +   MonthsAsCustomer ,
467801    +   NumCatalogPurchases ,
467802    +   NumDealsPurchases ,
467803    +   NumDistPurchases ,
467804    +   NumStorePurchases ,
467805    +   NumWebPurchases ,
467806    +   NumWebVisitsMonth ,
467807    +   RFMstat ,
467808    +   RMntFrq ,
467809    +   Recency ,
467810    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
467811    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
467812    +
467813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
467814    +END;
MPRINT(EM_DIAGRAM):   END;
467815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467816    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
467817    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467818    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
467819    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
467820    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
467821    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
467822    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
467823    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
467824    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
467825    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
467826    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
467827    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
467828    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
467829    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
467830    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
467831    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
467832    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
467833    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
467834    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
467835    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
467836    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
467837    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
467838    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
467839    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
467840    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
467841    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
467842    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
467843    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
467844    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
467845    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
467846    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
467847    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
467848    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
467849    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
467850    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
467851    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
467852    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
467853    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
467854    +END;
MPRINT(EM_DIAGRAM):   END;
467855    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
467856    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
467857    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
467858    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
467859    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
467860    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
467861    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
467862    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
467863    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
467864    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
467865    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
467866    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
467867    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
467868    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
467869    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
467870    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
467871    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
467872    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
467873    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
467874    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
467875    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
467876    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
467877    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
467878    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
467879    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
467880    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
467881    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
467882    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
467883    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
467884    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
467885    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
467886    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
467887    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
467888    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
467889    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
467890    +   ELSE S_NumCatalogPurchases
467891    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
467892    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
467893    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
467894    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
467895    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
467896    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
467897    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
467898    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
467899    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
467900    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
467901    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
467902    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
467903    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
467904    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
467905    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
467906    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
467907    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
467908    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
467909    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
467910    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
467911    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
467912    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
467913    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
467914    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
467915    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
467916    +END;
MPRINT(EM_DIAGRAM):   END;
467917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467918    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
467919    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467920    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467921    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
467922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467924    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
467925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
467926    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
467927    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
467928    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
467929    +        S_Income  +    -0.14142658616971 * S_Kidhome
467930    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
467931    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
467932    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
467933    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
467934    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
467935    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
467936    +          +     0.96837841774168 * S_NumDealsPurchases
467937    +          +      0.2846105381881 * S_NumDistPurchases
467938    +          +    -0.69514041792943 * S_NumStorePurchases
467939    +          +    -0.96425407351749 * S_NumWebPurchases
467940    +          +     0.79545449599683 * S_NumWebVisitsMonth
467941    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
467942    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
467943    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
467944    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
467945    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
467946    +        S_Income  +    -0.55432195959203 * S_Kidhome
467947    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
467948    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
467949    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
467950    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
467951    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
467952    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
467953    +          +      0.2190184330724 * S_NumDealsPurchases
467954    +          +    -0.01682909442896 * S_NumDistPurchases
467955    +          +    -0.70244951048552 * S_NumStorePurchases
467956    +          +     -0.3057457659316 * S_NumWebPurchases
467957    +          +     0.95928538762715 * S_NumWebVisitsMonth
467958    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
467959    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
467960    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
467961    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
467962    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
467963    +        S_Income  +    -0.06354861159882 * S_Kidhome
467964    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
467965    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
467966    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
467967    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
467968    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
467969    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
467970    +          +    -0.21394230159696 * S_NumDealsPurchases
467971    +          +    -0.23833771124663 * S_NumDistPurchases
467972    +          +     0.45832031017813 * S_NumStorePurchases
467973    +          +    -0.30226952040179 * S_NumWebPurchases
467974    +          +    -0.29796387184481 * S_NumWebVisitsMonth
467975    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
467976    +        S_RMntFrq  +     0.87067423045258 * S_Recency
467977    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
467978    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
467979    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
467980    +        S_Income  +    -0.04839586846715 * S_Kidhome
467981    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
467982    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
467983    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
467984    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
467985    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
467986    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
467987    +          +    -0.43749647771198 * S_NumDealsPurchases
467988    +          +     0.21263473847472 * S_NumDistPurchases
467989    +          +     0.26102168039141 * S_NumStorePurchases
467990    +          +     0.54921725943657 * S_NumWebPurchases
467991    +          +    -0.75685843498122 * S_NumWebVisitsMonth
467992    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
467993    +        S_RMntFrq  +     0.80536256822347 * S_Recency
467994    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
467995    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
467996    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
467997    +        S_Income  +     0.71499527198653 * S_Kidhome
467998    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
467999    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
468000    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
468001    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
468002    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
468003    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
468004    +          +     0.09436067776126 * S_NumDealsPurchases
468005    +          +    -0.02824201859641 * S_NumDistPurchases
468006    +          +    -0.06770433780564 * S_NumStorePurchases
468007    +          +    -0.07177620319715 * S_NumWebPurchases
468008    +          +    -0.75589979685266 * S_NumWebVisitsMonth
468009    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
468010    +        S_RMntFrq  +     0.94408788011429 * S_Recency
468011    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
468012    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
468013    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
468014    +        S_Income  +    -0.63474522042341 * S_Kidhome
468015    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
468016    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
468017    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
468018    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
468019    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
468020    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
468021    +          +    -0.51154511343396 * S_NumDealsPurchases
468022    +          +    -0.52422915823572 * S_NumDistPurchases
468023    +          +     0.30305498422357 * S_NumStorePurchases
468024    +          +     0.12197321559338 * S_NumWebPurchases
468025    +          +    -0.10520335422769 * S_NumWebVisitsMonth
468026    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
468027    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
468028    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
468029    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
468030    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
468031    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
468032    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
468033    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
468034    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
468035    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
468036    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
468037    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
468038    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
468039    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
468040    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
468041    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
468042    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
468043    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
468044    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
468045    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
468046    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
468047    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
468048    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
468049    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
468050    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
468051    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
468052    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
468053    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
468054    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
468055    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
468056    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
468057    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
468058    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
468059    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
468060    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
468061    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
468062    +          +     0.10234616400375 * Marital_StatusDivorced
468063    +          +     0.27961650739075 * Marital_StatusMarried
468064    +          +    -0.40239488723767 * Marital_StatusSingle
468065    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
468066    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
468067    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
468068    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
468069    +          +     0.46385792428023 * Marital_StatusDivorced
468070    +          +    -0.62344590646391 * Marital_StatusMarried
468071    +          +     0.61767209252062 * Marital_StatusSingle
468072    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
468073    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
468074    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
468075    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
468076    +          +    -0.07839612590836 * Marital_StatusDivorced
468077    +          +     0.35316864062221 * Marital_StatusMarried
468078    +          +    -0.10730136429834 * Marital_StatusSingle
468079    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
468080    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
468081    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
468082    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
468083    +          +    -0.09942175269886 * Marital_StatusDivorced
468084    +          +     0.24385460865335 * Marital_StatusMarried
468085    +          +    -0.33658955096296 * Marital_StatusSingle
468086    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
468087    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
468088    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
468089    +        EducationGraduation  +     0.37352174719748 * EducationMaster
468090    +          +    -0.08047852561096 * Marital_StatusDivorced
468091    +          +     1.16485862694561 * Marital_StatusMarried
468092    +          +    -0.94140251178566 * Marital_StatusSingle
468093    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
468094    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
468095    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
468096    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
468097    +          +    -0.16621963893391 * Marital_StatusDivorced
468098    +          +    -0.44542186297324 * Marital_StatusMarried
468099    +          +     0.42176133228308 * Marital_StatusSingle
468100    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
468101    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
468102    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
468103    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
468104    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
468105    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
468106    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
468107    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
468108    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
468109    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
468110    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
468111    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
468112    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
468113    +END;
MPRINT(EM_DIAGRAM):   END;
468114    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
468115    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
468116    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
468117    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
468118    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
468119    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
468120    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
468121    +END;
MPRINT(EM_DIAGRAM):   END;
468122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468123    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
468124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468125    +
468126    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
468127    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
468128    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
468129    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
468130    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
468131    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468132    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
468133    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
468134    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
468135    +end;
MPRINT(EM_DIAGRAM):   end;
468136    +else do;
MPRINT(EM_DIAGRAM):   else do;
468137    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
468138    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
468139    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
468140    +   end;
MPRINT(EM_DIAGRAM):   end;
468141    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
468142    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
468143    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
468144    +   end;
MPRINT(EM_DIAGRAM):   end;
468145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468146    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
468147    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
468148    +   end;
MPRINT(EM_DIAGRAM):   end;
468149    +end;
MPRINT(EM_DIAGRAM):   end;
468150    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
468151    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
468152    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
468153    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
468154    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
468155    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
468156    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
468157    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
468158    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
468159    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
468160    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
468161    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
468162    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
468163    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
468164    +END;
MPRINT(EM_DIAGRAM):   END;
468165    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
468166    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
468167    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
468168    +END;
MPRINT(EM_DIAGRAM):   END;
468169    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
468170    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
468171    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
468172    +END;
MPRINT(EM_DIAGRAM):   END;
468173    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
468174    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
468175    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
468176    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
468177    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
468178    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
468179    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
468180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468181    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
468182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468183    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
468184    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
468185    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
468186    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
468187    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
468188    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
468189    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
468190    +END;
MPRINT(EM_DIAGRAM):   END;
468191    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
468192    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
468193    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
468194    +drop
468195    +H11
468196    +H12
468197    +H13
468198    +H14
468199    +H15
468200    +H16
468201    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
468202    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
468203    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
468204    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
468205    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
468206    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
468207    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
468208    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
468209    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
468210    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
468211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
468212    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
468213    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
468214    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
468215    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
468216    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
468217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
468218    +* Ensmbl25: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 7 of 10;
468219    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
468220    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
468221    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
468222    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
468223    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
468224    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
468225    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
468226    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
468227    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
468228    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
468229    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
468230    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
468231    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
468232    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
468233    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
468234    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
468235    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
468236    +LENGTH _WARN_ $4
468237    +      F_DepVar  $ 12
468238    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
468239    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
468240    +
468241    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
468242    +
468243    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
468244    +
468245    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
468246    +
468247    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
468248    +
468249    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
468250    +
468251    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
468252    +
468253    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
468254    +
468255    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
468256    +
468257    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
468258    +
468259    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
468260    +
468261    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
468262    +
468263    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
468264    +
468265    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
468266    +
468267    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
468268    +
468269    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
468270    +
468271    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
468272    +
468273    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
468274    +
468275    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
468276    +
468277    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
468278    +
468279    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
468280    +
468281    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
468282    +
468283    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
468284    +
468285    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
468286    +
468287    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
468288    +
468289    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
468290    +
468291    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
468292    +
468293    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
468294    +
468295    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
468296    +
468297    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
468298    +
468299    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
468300    +
468301    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
468302    +
468303    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
468304    +
468305    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
468306    +
468307    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
468308    +
468309    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
468310    +
468311    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
468312    +
468313    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
468314    +
468315    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
468316    +
468317    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
468318    +
468319    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
468320    +
468321    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
468322    +
468323    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
468324    +
468325    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
468326    +
468327    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
468328    +
468329    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
468330    +
468331    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
468332    +
468333    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
468334    +
468335    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
468336    +
468337    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
468338    +
468339    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
468340    +
468341    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
468342    +
468343    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
468344    +
468345    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
468346    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
468347    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
468348    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
468349    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468350    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468351    +end;
MPRINT(EM_DIAGRAM):   end;
468352    +else do;
MPRINT(EM_DIAGRAM):   else do;
468353    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
468354    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
468355    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468356    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
468357    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
468358    +   end;
MPRINT(EM_DIAGRAM):   end;
468359    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
468360    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
468361    +   end;
MPRINT(EM_DIAGRAM):   end;
468362    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468363    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
468364    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468365    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468366    +   end;
MPRINT(EM_DIAGRAM):   end;
468367    +end;
MPRINT(EM_DIAGRAM):   end;
468368    +
468369    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
468370    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
468371    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
468372    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
468373    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468374    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468375    +end;
MPRINT(EM_DIAGRAM):   end;
468376    +else do;
MPRINT(EM_DIAGRAM):   else do;
468377    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
468378    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
468379    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468380    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
468381    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
468382    +   end;
MPRINT(EM_DIAGRAM):   end;
468383    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
468384    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
468385    +   end;
MPRINT(EM_DIAGRAM):   end;
468386    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468387    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
468388    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468389    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468390    +   end;
MPRINT(EM_DIAGRAM):   end;
468391    +end;
MPRINT(EM_DIAGRAM):   end;
468392    +
468393    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
468394    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
468395    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
468396    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
468397    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468398    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468399    +end;
MPRINT(EM_DIAGRAM):   end;
468400    +else do;
MPRINT(EM_DIAGRAM):   else do;
468401    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
468402    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
468403    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468404    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
468405    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
468406    +   end;
MPRINT(EM_DIAGRAM):   end;
468407    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
468408    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
468409    +   end;
MPRINT(EM_DIAGRAM):   end;
468410    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468411    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
468412    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468413    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468414    +   end;
MPRINT(EM_DIAGRAM):   end;
468415    +end;
MPRINT(EM_DIAGRAM):   end;
468416    +
468417    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
468418    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
468419    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
468420    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
468421    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468422    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468423    +end;
MPRINT(EM_DIAGRAM):   end;
468424    +else do;
MPRINT(EM_DIAGRAM):   else do;
468425    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
468426    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
468427    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468428    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
468429    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
468430    +   end;
MPRINT(EM_DIAGRAM):   end;
468431    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
468432    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
468433    +   end;
MPRINT(EM_DIAGRAM):   end;
468434    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468435    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
468436    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468437    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468438    +   end;
MPRINT(EM_DIAGRAM):   end;
468439    +end;
MPRINT(EM_DIAGRAM):   end;
468440    +
468441    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
468442    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
468443    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
468444    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
468445    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468446    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468447    +end;
MPRINT(EM_DIAGRAM):   end;
468448    +else do;
MPRINT(EM_DIAGRAM):   else do;
468449    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
468450    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
468451    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468452    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
468453    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
468454    +   end;
MPRINT(EM_DIAGRAM):   end;
468455    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
468456    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
468457    +   end;
MPRINT(EM_DIAGRAM):   end;
468458    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468459    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
468460    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468461    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468462    +   end;
MPRINT(EM_DIAGRAM):   end;
468463    +end;
MPRINT(EM_DIAGRAM):   end;
468464    +
468465    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
468466    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
468467    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
468468    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
468469    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468470    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468471    +end;
MPRINT(EM_DIAGRAM):   end;
468472    +else do;
MPRINT(EM_DIAGRAM):   else do;
468473    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
468474    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
468475    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468476    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
468477    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
468478    +   end;
MPRINT(EM_DIAGRAM):   end;
468479    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
468480    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
468481    +   end;
MPRINT(EM_DIAGRAM):   end;
468482    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468483    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
468484    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468485    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468486    +   end;
MPRINT(EM_DIAGRAM):   end;
468487    +end;
MPRINT(EM_DIAGRAM):   end;
468488    +
468489    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
468490    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
468491    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
468492    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
468493    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468494    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468495    +end;
MPRINT(EM_DIAGRAM):   end;
468496    +else do;
MPRINT(EM_DIAGRAM):   else do;
468497    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
468498    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
468499    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468500    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
468501    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
468502    +   end;
MPRINT(EM_DIAGRAM):   end;
468503    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
468504    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
468505    +   end;
MPRINT(EM_DIAGRAM):   end;
468506    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468507    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
468508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468510    +   end;
MPRINT(EM_DIAGRAM):   end;
468511    +end;
MPRINT(EM_DIAGRAM):   end;
468512    +
468513    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
468514    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
468515    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
468516    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
468517    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
468518    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
468519    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
468520    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
468521    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
468522    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
468523    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
468524    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
468525    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468526    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468527    +end;
MPRINT(EM_DIAGRAM):   end;
468528    +else do;
MPRINT(EM_DIAGRAM):   else do;
468529    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
468530    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
468531    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468532    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
468533    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
468534    +   end;
MPRINT(EM_DIAGRAM):   end;
468535    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
468536    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
468537    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
468538    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
468539    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
468540    +   end;
MPRINT(EM_DIAGRAM):   end;
468541    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
468542    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
468543    +   end;
MPRINT(EM_DIAGRAM):   end;
468544    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
468545    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
468546    +   end;
MPRINT(EM_DIAGRAM):   end;
468547    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
468548    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
468549    +   end;
MPRINT(EM_DIAGRAM):   end;
468550    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468551    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
468552    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
468553    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
468554    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
468555    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468556    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468557    +   end;
MPRINT(EM_DIAGRAM):   end;
468558    +end;
MPRINT(EM_DIAGRAM):   end;
468559    +
468560    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
468561    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
468562    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
468563    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
468564    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
468565    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
468566    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
468567    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
468568    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
468569    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
468570    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
468571    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
468572    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
468573    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
468574    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468575    +end;
MPRINT(EM_DIAGRAM):   end;
468576    +else do;
MPRINT(EM_DIAGRAM):   else do;
468577    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
468578    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
468579    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
468580    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
468581    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
468582    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
468583    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
468584    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
468585    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
468586    +         end;
MPRINT(EM_DIAGRAM):   end;
468587    +         else do;
MPRINT(EM_DIAGRAM):   else do;
468588    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
468589    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
468590    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
468591    +            end;
MPRINT(EM_DIAGRAM):   end;
468592    +         end;
MPRINT(EM_DIAGRAM):   end;
468593    +      end;
MPRINT(EM_DIAGRAM):   end;
468594    +      else do;
MPRINT(EM_DIAGRAM):   else do;
468595    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
468596    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
468597    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
468598    +         end;
MPRINT(EM_DIAGRAM):   end;
468599    +      end;
MPRINT(EM_DIAGRAM):   end;
468600    +   end;
MPRINT(EM_DIAGRAM):   end;
468601    +   else do;
MPRINT(EM_DIAGRAM):   else do;
468602    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
468603    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
468604    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
468605    +      end;
MPRINT(EM_DIAGRAM):   end;
468606    +      else do;
MPRINT(EM_DIAGRAM):   else do;
468607    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
468608    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
468609    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
468610    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
468611    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
468612    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
468613    +         end;
MPRINT(EM_DIAGRAM):   end;
468614    +      end;
MPRINT(EM_DIAGRAM):   end;
468615    +   end;
MPRINT(EM_DIAGRAM):   end;
468616    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
468617    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
468618    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
468619    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
468620    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
468621    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
468622    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468623    +   end;
MPRINT(EM_DIAGRAM):   end;
468624    +end;
MPRINT(EM_DIAGRAM):   end;
468625    +
468626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468627    +*** Checking missing input Interval
468628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
468629    +
468630    +IF NMISS(
468631    +   AcceptedCmpTotal ,
468632    +   Age ,
468633    +   Frq ,
468634    +   Income ,
468635    +   Kidhome ,
468636    +   Mnt ,
468637    +   MntFishProducts ,
468638    +   MntFruits ,
468639    +   MntGoldProds ,
468640    +   MntMeatProducts ,
468641    +   MntSweetProducts ,
468642    +   MntWines ,
468643    +   MonthsAsCustomer ,
468644    +   NumCatalogPurchases ,
468645    +   NumDealsPurchases ,
468646    +   NumDistPurchases ,
468647    +   NumStorePurchases ,
468648    +   NumWebPurchases ,
468649    +   NumWebVisitsMonth ,
468650    +   RFMstat ,
468651    +   RMntFrq ,
468652    +   Recency ,
468653    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
468654    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
468655    +
468656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
468657    +END;
MPRINT(EM_DIAGRAM):   END;
468658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468659    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
468660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468661    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
468662    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
468663    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
468664    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
468665    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
468666    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
468667    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
468668    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
468669    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
468670    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
468671    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
468672    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
468673    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
468674    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
468675    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
468676    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
468677    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
468678    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
468679    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
468680    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
468681    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
468682    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
468683    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
468684    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
468685    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
468686    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
468687    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
468688    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
468689    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
468690    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
468691    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
468692    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
468693    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
468694    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
468695    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
468696    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
468697    +END;
MPRINT(EM_DIAGRAM):   END;
468698    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
468699    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
468700    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
468701    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
468702    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
468703    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
468704    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
468705    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
468706    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
468707    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
468708    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
468709    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
468710    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
468711    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
468712    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
468713    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
468714    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
468715    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
468716    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
468717    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
468718    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
468719    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
468720    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
468721    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
468722    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
468723    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
468724    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
468725    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
468726    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
468727    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
468728    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
468729    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
468730    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
468731    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
468732    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
468733    +   ELSE S_NumCatalogPurchases
468734    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
468735    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
468736    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
468737    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
468738    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
468739    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
468740    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
468741    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
468742    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
468743    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
468744    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
468745    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
468746    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
468747    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
468748    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
468749    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
468750    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
468751    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
468752    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
468753    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
468754    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
468755    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
468756    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
468757    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
468758    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
468759    +END;
MPRINT(EM_DIAGRAM):   END;
468760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468761    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
468762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468763    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468764    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
468765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468767    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
468768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468769    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
468770    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
468771    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
468772    +        S_Income  +    -0.43070069114587 * S_Kidhome
468773    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
468774    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
468775    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
468776    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
468777    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
468778    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
468779    +          +    -0.21858146166244 * S_NumDealsPurchases
468780    +          +     0.18409991080913 * S_NumDistPurchases
468781    +          +     0.35683163455594 * S_NumStorePurchases
468782    +          +     0.24429183714976 * S_NumWebPurchases
468783    +          +     -0.1263739191616 * S_NumWebVisitsMonth
468784    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
468785    +        S_RMntFrq  +      0.3452503815146 * S_Recency
468786    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
468787    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
468788    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
468789    +        S_Income  +     0.24623934031778 * S_Kidhome
468790    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
468791    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
468792    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
468793    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
468794    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
468795    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
468796    +          +    -0.08125614129909 * S_NumDealsPurchases
468797    +          +     0.38003696656333 * S_NumDistPurchases
468798    +          +     0.22006494588298 * S_NumStorePurchases
468799    +          +     0.26217639358993 * S_NumWebPurchases
468800    +          +    -0.56905781005459 * S_NumWebVisitsMonth
468801    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
468802    +        S_RMntFrq  +     0.33060213336674 * S_Recency
468803    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
468804    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
468805    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
468806    +        S_Income  +     0.18597632724783 * S_Kidhome
468807    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
468808    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
468809    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
468810    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
468811    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
468812    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
468813    +          +     0.08121213946217 * S_NumDealsPurchases
468814    +          +    -0.04963282234139 * S_NumDistPurchases
468815    +          +    -0.09521586837775 * S_NumStorePurchases
468816    +          +     0.00630626523742 * S_NumWebPurchases
468817    +          +    -0.03891587920939 * S_NumWebVisitsMonth
468818    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
468819    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
468820    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
468821    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
468822    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
468823    +        S_Income  +     0.25356767518099 * S_Kidhome
468824    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
468825    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
468826    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
468827    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
468828    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
468829    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
468830    +          +     0.83749876944877 * S_NumDealsPurchases
468831    +          +     0.29636537008068 * S_NumDistPurchases
468832    +          +    -0.61202052257506 * S_NumStorePurchases
468833    +          +    -0.96921731415369 * S_NumWebPurchases
468834    +          +     0.10056455703323 * S_NumWebVisitsMonth
468835    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
468836    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
468837    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
468838    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
468839    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
468840    +        S_Income  +    -0.66239517276633 * S_Kidhome
468841    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
468842    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
468843    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
468844    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
468845    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
468846    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
468847    +          +     0.63122884753912 * S_NumDealsPurchases
468848    +          +     0.00285388491049 * S_NumDistPurchases
468849    +          +    -0.76222252593182 * S_NumStorePurchases
468850    +          +    -0.71485070772733 * S_NumWebPurchases
468851    +          +     1.59020450778179 * S_NumWebVisitsMonth
468852    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
468853    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
468854    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
468855    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
468856    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
468857    +        S_Income  +    -0.22662005590555 * S_Kidhome
468858    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
468859    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
468860    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
468861    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
468862    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
468863    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
468864    +          +    -0.28143084367284 * S_NumDealsPurchases
468865    +          +     0.09640746756361 * S_NumDistPurchases
468866    +          +      0.1754994442449 * S_NumStorePurchases
468867    +          +     0.14321475617403 * S_NumWebPurchases
468868    +          +     -0.1908048876137 * S_NumWebVisitsMonth
468869    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
468870    +        S_RMntFrq  +     0.02280616139018 * S_Recency
468871    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
468872    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
468873    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
468874    +        S_Income  +    -0.45643247613458 * S_Kidhome
468875    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
468876    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
468877    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
468878    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
468879    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
468880    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
468881    +          +    -0.14623073736275 * S_NumDealsPurchases
468882    +          +      0.1591142102614 * S_NumDistPurchases
468883    +          +     0.10364624011419 * S_NumStorePurchases
468884    +          +     0.21545343951201 * S_NumWebPurchases
468885    +          +     0.61096997379603 * S_NumWebVisitsMonth
468886    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
468887    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
468888    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
468889    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
468890    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
468891    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
468892    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
468893    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
468894    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
468895    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
468896    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
468897    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
468898    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
468899    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
468900    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
468901    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
468902    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
468903    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
468904    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
468905    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
468906    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
468907    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
468908    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
468909    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
468910    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
468911    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
468912    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
468913    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
468914    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
468915    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
468916    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
468917    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
468918    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
468919    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
468920    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
468921    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
468922    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
468923    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
468924    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
468925    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
468926    +        EducationGraduation  +     0.00389495660452 * EducationMaster
468927    +          +     0.39856598367829 * Marital_StatusDivorced
468928    +          +    -0.45922754552461 * Marital_StatusMarried
468929    +          +     0.41270195301891 * Marital_StatusSingle
468930    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
468931    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
468932    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
468933    +        EducationGraduation  +      0.2609956614651 * EducationMaster
468934    +          +     0.12002180366932 * Marital_StatusDivorced
468935    +          +     0.50693056076018 * Marital_StatusMarried
468936    +          +    -0.40828651697464 * Marital_StatusSingle
468937    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
468938    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
468939    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
468940    +        EducationGraduation  +     0.20017847825938 * EducationMaster
468941    +          +    -0.05075621283629 * Marital_StatusDivorced
468942    +          +     0.06731276969307 * Marital_StatusMarried
468943    +          +     0.20458391966582 * Marital_StatusSingle
468944    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
468945    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
468946    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
468947    +        EducationGraduation  +     0.28829384238085 * EducationMaster
468948    +          +    -0.37925185401218 * Marital_StatusDivorced
468949    +          +     0.62971134740586 * Marital_StatusMarried
468950    +          +    -0.36562351730859 * Marital_StatusSingle
468951    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
468952    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
468953    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
468954    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
468955    +          +     0.84382044664305 * Marital_StatusDivorced
468956    +          +    -0.84062627203871 * Marital_StatusMarried
468957    +          +     0.74100406031127 * Marital_StatusSingle
468958    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
468959    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
468960    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
468961    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
468962    +          +     -0.1195105091383 * Marital_StatusDivorced
468963    +          +    -0.13486422945269 * Marital_StatusMarried
468964    +          +     0.33592403429156 * Marital_StatusSingle
468965    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
468966    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
468967    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
468968    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
468969    +          +     0.14792293029589 * Marital_StatusDivorced
468970    +          +    -0.96003393582564 * Marital_StatusMarried
468971    +          +     0.64637652355384 * Marital_StatusSingle
468972    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
468973    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
468974    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
468975    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
468976    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
468977    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
468978    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
468979    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
468980    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
468981    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
468982    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
468983    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
468984    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
468985    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
468986    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
468987    +END;
MPRINT(EM_DIAGRAM):   END;
468988    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
468989    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
468990    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
468991    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
468992    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
468993    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
468994    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
468995    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
468996    +END;
MPRINT(EM_DIAGRAM):   END;
468997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
468998    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
468999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
469000    +
469001    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
469002    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
469003    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
469004    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
469005    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
469006    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
469007    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
469008    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
469009    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
469010    +end;
MPRINT(EM_DIAGRAM):   end;
469011    +else do;
MPRINT(EM_DIAGRAM):   else do;
469012    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
469013    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
469014    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
469015    +   end;
MPRINT(EM_DIAGRAM):   end;
469016    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
469017    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
469018    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
469019    +   end;
MPRINT(EM_DIAGRAM):   end;
469020    +   else do;
MPRINT(EM_DIAGRAM):   else do;
469021    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
469022    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
469023    +   end;
MPRINT(EM_DIAGRAM):   end;
469024    +end;
MPRINT(EM_DIAGRAM):   end;
469025    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
469026    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
469027    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
469028    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
469029    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
469030    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
469031    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
469032    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
469033    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
469034    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
469035    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
469036    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
469037    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
469038    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
469039    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
469040    +END;
MPRINT(EM_DIAGRAM):   END;
469041    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469042    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
469043    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
469044    +END;
MPRINT(EM_DIAGRAM):   END;
469045    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
469046    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
469047    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
469048    +END;
MPRINT(EM_DIAGRAM):   END;
469049    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
469050    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
469051    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
469052    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
469053    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
469054    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
469055    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
469056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
469057    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
469058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
469059    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
469060    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
469061    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
469062    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
469063    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
469064    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
469065    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469066    +END;
MPRINT(EM_DIAGRAM):   END;
469067    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
469068    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
469069    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
469070    +drop
469071    +H11
469072    +H12
469073    +H13
469074    +H14
469075    +H15
469076    +H16
469077    +H17
469078    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
469079    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
469080    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
469081    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469082    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
469083    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469084    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
469085    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
469086    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
469087    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
469088    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469089    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
469090    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469091    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
469092    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
469093    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
469094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469095    +* Ensmbl25: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 8 of 10;
469096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469097    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469098    +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
469099    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
469100    +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
469101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469102    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
469103    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
469104    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
469105    +
469106    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
469107    +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
469108    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
469109    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
469110    +
469111    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
469112    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
469113    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
469114    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
469115    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
469116    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
469117    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
469118    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
469119    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
469120    +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
469121    +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
469122    +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
469123    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
469124    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
469125    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
469126    +
469127    +
469128    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
469129    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
469130    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
469131    +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
469132    +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
469133    +
469134    +
469135    +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
469136    + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
469137    +
469138    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
469139    +IF  NOT MISSING(AcceptedCmpTotal ) AND
469140    +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
469141    +  IF  NOT MISSING(Recency ) AND
469142    +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
469143    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
469144    +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
469145    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
469146    +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
469147    +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
469148    +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
469149    +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
469150    +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
469151    +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
469152    +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
469153    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
469154    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
469155    +      END;
MPRINT(EM_DIAGRAM):   END;
469156    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469157    +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
469158    +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
469159    +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
469160    +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
469161    +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
469162    +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
469163    +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
469164    +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
469165    +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
469166    +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
469167    +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
469168    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
469169    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
469170    +        END;
MPRINT(EM_DIAGRAM):   END;
469171    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469172    +        IF  NOT MISSING(NumStorePurchases ) AND
469173    +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
469174    +          IF  NOT MISSING(NumWebVisitsMonth ) AND
469175    +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
469176    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
469177    +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
469178    +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
469179    +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
469180    +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
469181    +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
469182    +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
469183    +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
469184    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469185    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469186    +            END;
MPRINT(EM_DIAGRAM):   END;
469187    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469188    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
469189    +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
469190    +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
469191    +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
469192    +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
469193    +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
469194    +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
469195    +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
469196    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
469197    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
469198    +            END;
MPRINT(EM_DIAGRAM):   END;
469199    +          END;
MPRINT(EM_DIAGRAM):   END;
469200    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469201    +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
469202    +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
469203    +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
469204    +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
469205    +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
469206    +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
469207    +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
469208    +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
469209    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469210    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469211    +          END;
MPRINT(EM_DIAGRAM):   END;
469212    +        END;
MPRINT(EM_DIAGRAM):   END;
469213    +      END;
MPRINT(EM_DIAGRAM):   END;
469214    +    END;
MPRINT(EM_DIAGRAM):   END;
469215    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469216    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
469217    +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
469218    +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
469219    +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
469220    +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
469221    +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
469222    +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
469223    +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
469224    +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
469225    +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
469226    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
469227    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
469228    +      END;
MPRINT(EM_DIAGRAM):   END;
469229    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469230    +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
469231    +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
469232    +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
469233    +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
469234    +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
469235    +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
469236    +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
469237    +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
469238    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469239    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469240    +      END;
MPRINT(EM_DIAGRAM):   END;
469241    +    END;
MPRINT(EM_DIAGRAM):   END;
469242    +  END;
MPRINT(EM_DIAGRAM):   END;
469243    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469244    +  IF  NOT MISSING(Recency ) AND
469245    +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
469246    +    IF  NOT MISSING(NumCatalogPurchases ) AND
469247    +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
469248    +      IF  NOT MISSING(NumStorePurchases ) AND
469249    +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
469250    +        IF  NOT MISSING(RFMstat ) AND
469251    +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
469252    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
469253    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
469254    +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
469255    +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
469256    +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
469257    +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
469258    +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
469259    +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
469260    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
469261    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
469262    +          END;
MPRINT(EM_DIAGRAM):   END;
469263    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469264    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
469265    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
469266    +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
469267    +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
469268    +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
469269    +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
469270    +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
469271    +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
469272    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469273    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469274    +          END;
MPRINT(EM_DIAGRAM):   END;
469275    +        END;
MPRINT(EM_DIAGRAM):   END;
469276    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469277    +        IF  NOT MISSING(MntFishProducts ) AND
469278    +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
469279    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
469280    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
469281    +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
469282    +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
469283    +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
469284    +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
469285    +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
469286    +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
469287    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469288    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469289    +          END;
MPRINT(EM_DIAGRAM):   END;
469290    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469291    +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
469292    +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
469293    +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
469294    +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
469295    +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
469296    +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
469297    +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
469298    +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
469299    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
469300    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
469301    +          END;
MPRINT(EM_DIAGRAM):   END;
469302    +        END;
MPRINT(EM_DIAGRAM):   END;
469303    +      END;
MPRINT(EM_DIAGRAM):   END;
469304    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469305    +      IF  NOT MISSING(NumWebVisitsMonth ) AND
469306    +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
469307    +        IF  NOT MISSING(NumCatalogPurchases ) AND
469308    +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
469309    +          IF  NOT MISSING(Kidhome ) AND
469310    +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
469311    +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
469312    +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
469313    +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
469314    +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
469315    +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
469316    +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
469317    +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
469318    +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
469319    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469320    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469321    +            END;
MPRINT(EM_DIAGRAM):   END;
469322    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469323    +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
469324    +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
469325    +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
469326    +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
469327    +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
469328    +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
469329    +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
469330    +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
469331    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
469332    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
469333    +            END;
MPRINT(EM_DIAGRAM):   END;
469334    +          END;
MPRINT(EM_DIAGRAM):   END;
469335    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469336    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
469337    +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
469338    +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
469339    +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
469340    +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
469341    +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
469342    +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
469343    +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
469344    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469345    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469346    +          END;
MPRINT(EM_DIAGRAM):   END;
469347    +        END;
MPRINT(EM_DIAGRAM):   END;
469348    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469349    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
469350    +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
469351    +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
469352    +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
469353    +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
469354    +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
469355    +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
469356    +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
469357    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469358    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469359    +        END;
MPRINT(EM_DIAGRAM):   END;
469360    +      END;
MPRINT(EM_DIAGRAM):   END;
469361    +    END;
MPRINT(EM_DIAGRAM):   END;
469362    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469363    +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
469364    +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
469365    +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
469366    +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
469367    +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
469368    +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
469369    +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
469370    +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
469371    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
469372    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
469373    +    END;
MPRINT(EM_DIAGRAM):   END;
469374    +  END;
MPRINT(EM_DIAGRAM):   END;
469375    +
469376    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
469377    +IF  F_DepVar  NE '0'
469378    +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
469379    +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
469380    +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
469381    + END;
MPRINT(EM_DIAGRAM):   END;
469382    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
469383    +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
469384    +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
469385    +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
469386    +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
469387    +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
469388    +       END;
MPRINT(EM_DIAGRAM):   END;
469389    + END;
MPRINT(EM_DIAGRAM):   END;
469390    +
469391    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
469392    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
469393    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
469394    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
469395    +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
469396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469397    +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
469398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469399    +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
469400    +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
469401    +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
469402    +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
469403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469404    +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
469405    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469406    +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
469407    +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
469408    +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
469409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469410    +* Ensmbl25: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 9 of 10;
469411    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469413    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
469414    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
469415    +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
469416    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469417    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
469418    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
469419    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
469420    +
469421    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
469422    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
469423    +
469424    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
469425    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
469426    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
469427    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
469428    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
469429    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
469430    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
469431    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
469432    +
469433    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
469434    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
469435    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
469436    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
469437    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
469438    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
469439    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
469440    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
469441    +end;
MPRINT(EM_DIAGRAM):   end;
469442    +else do;
MPRINT(EM_DIAGRAM):   else do;
469443    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
469444    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
469445    +   end;
MPRINT(EM_DIAGRAM):   end;
469446    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
469447    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
469448    +   end;
MPRINT(EM_DIAGRAM):   end;
469449    +   else do;
MPRINT(EM_DIAGRAM):   else do;
469450    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
469451    +   end;
MPRINT(EM_DIAGRAM):   end;
469452    +end;
MPRINT(EM_DIAGRAM):   end;
469453    +
469454    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
469455    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
469456    +
469457    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
469458    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
469459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469461    +end;
MPRINT(EM_DIAGRAM):   end;
469462    +
469463    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
469464    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
469465    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469466    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469467    +end;
MPRINT(EM_DIAGRAM):   end;
469468    +
469469    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
469470    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
469471    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469472    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469473    +end;
MPRINT(EM_DIAGRAM):   end;
469474    +
469475    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
469476    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
469477    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469478    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469479    +end;
MPRINT(EM_DIAGRAM):   end;
469480    +
469481    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
469482    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
469483    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469485    +end;
MPRINT(EM_DIAGRAM):   end;
469486    +
469487    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
469488    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
469489    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469490    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469491    +end;
MPRINT(EM_DIAGRAM):   end;
469492    +
469493    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
469494    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
469495    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469496    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469497    +end;
MPRINT(EM_DIAGRAM):   end;
469498    +
469499    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
469500    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
469501    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469502    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469503    +end;
MPRINT(EM_DIAGRAM):   end;
469504    +
469505    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
469506    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
469507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469509    +end;
MPRINT(EM_DIAGRAM):   end;
469510    +
469511    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
469512    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
469513    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469514    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469515    +end;
MPRINT(EM_DIAGRAM):   end;
469516    +
469517    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
469518    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
469519    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469520    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469521    +end;
MPRINT(EM_DIAGRAM):   end;
469522    +
469523    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
469524    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
469525    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469526    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469527    +end;
MPRINT(EM_DIAGRAM):   end;
469528    +
469529    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
469530    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
469531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469533    +end;
MPRINT(EM_DIAGRAM):   end;
469534    +
469535    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
469536    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
469537    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
469538    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
469539    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
469540    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
469541    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
469542    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
469543    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
469544    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
469545    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
469546    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
469547    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469548    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469549    +end;
MPRINT(EM_DIAGRAM):   end;
469550    +else do;
MPRINT(EM_DIAGRAM):   else do;
469551    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
469552    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
469553    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
469554    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
469555    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
469556    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
469557    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
469558    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
469559    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469560    +         end;
MPRINT(EM_DIAGRAM):   end;
469561    +         else do;
MPRINT(EM_DIAGRAM):   else do;
469562    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
469563    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
469564    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469565    +            end;
MPRINT(EM_DIAGRAM):   end;
469566    +         end;
MPRINT(EM_DIAGRAM):   end;
469567    +      end;
MPRINT(EM_DIAGRAM):   end;
469568    +      else do;
MPRINT(EM_DIAGRAM):   else do;
469569    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
469570    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
469571    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469572    +         end;
MPRINT(EM_DIAGRAM):   end;
469573    +      end;
MPRINT(EM_DIAGRAM):   end;
469574    +   end;
MPRINT(EM_DIAGRAM):   end;
469575    +   else do;
MPRINT(EM_DIAGRAM):   else do;
469576    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
469577    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
469578    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469579    +      end;
MPRINT(EM_DIAGRAM):   end;
469580    +      else do;
MPRINT(EM_DIAGRAM):   else do;
469581    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
469582    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
469583    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
469584    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
469585    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
469586    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469587    +         end;
MPRINT(EM_DIAGRAM):   end;
469588    +      end;
MPRINT(EM_DIAGRAM):   end;
469589    +   end;
MPRINT(EM_DIAGRAM):   end;
469590    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
469591    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
469592    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
469593    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
469594    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
469595    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
469596    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469597    +   end;
MPRINT(EM_DIAGRAM):   end;
469598    +end;
MPRINT(EM_DIAGRAM):   end;
469599    +
469600    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
469601    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
469602    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
469603    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
469604    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
469605    +end;
MPRINT(EM_DIAGRAM):   end;
469606    +
469607    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
469608    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
469609    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
469610    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
469611    +
469612    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
469613    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
469614    +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
469615    +
469616    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
469617    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
469618    +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
469619    +
469620    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
469621    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
469622    +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
469623    +
469624    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
469625    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
469626    +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
469627    +
469628    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
469629    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
469630    +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
469631    +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
469632    +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
469633    +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
469634    +
469635    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
469636    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
469637    +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
469638    +
469639    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
469640    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
469641    +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
469642    +
469643    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
469644    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
469645    +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
469646    +
469647    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
469648    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
469649    +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
469650    +
469651    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
469652    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
469653    +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
469654    +
469655    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
469656    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
469657    +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
469658    +
469659    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
469660    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
469661    +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
469662    +
469663    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
469664    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
469665    +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
469666    +
469667    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
469668    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
469669    +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
469670    +
469671    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
469672    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
469673    +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
469674    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
469675    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
469676    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
469677    +end;
MPRINT(EM_DIAGRAM):   end;
469678    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
469679    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
469680    +
469681    +REGDR1:
469682    +
469683    +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
469684    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
469685    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
469686    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
469687    +end;
MPRINT(EM_DIAGRAM):   end;
469688    +else do;
MPRINT(EM_DIAGRAM):   else do;
469689    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
469690    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
469691    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
469692    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
469693    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
469694    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
469695    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
469696    +   end;
MPRINT(EM_DIAGRAM):   end;
469697    +end;
MPRINT(EM_DIAGRAM):   end;
469698    +
469699    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
469700    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
469701    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
469702    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
469703    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
469704    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
469705    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
469706    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
469707    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
469708    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
469709    +end;
MPRINT(EM_DIAGRAM):   end;
469710    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
469711    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
469712    +
469713    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
469714    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
469715    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
469716    +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
469717    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469718    +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
469719    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469720    +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
469721    +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
469722    +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
469723    +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
469724    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469725    +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
469726    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469727    +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
469728    +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
469729    +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
469730    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469731    +* Ensmbl25: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 10 of 10;
469732    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469733    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469734    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
469735    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
469736    +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
469737    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
469738    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
469739    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
469740    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
469741    +
469742    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
469743    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
469744    +
469745    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
469746    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
469747    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
469748    +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
469749    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
469750    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
469751    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
469752    +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
469753    +
469754    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
469755    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
469756    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
469757    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
469758    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
469759    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
469760    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
469761    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
469762    +end;
MPRINT(EM_DIAGRAM):   end;
469763    +else do;
MPRINT(EM_DIAGRAM):   else do;
469764    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
469765    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
469766    +   end;
MPRINT(EM_DIAGRAM):   end;
469767    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
469768    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
469769    +   end;
MPRINT(EM_DIAGRAM):   end;
469770    +   else do;
MPRINT(EM_DIAGRAM):   else do;
469771    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
469772    +   end;
MPRINT(EM_DIAGRAM):   end;
469773    +end;
MPRINT(EM_DIAGRAM):   end;
469774    +
469775    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
469776    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
469777    +
469778    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
469779    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
469780    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469781    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469782    +end;
MPRINT(EM_DIAGRAM):   end;
469783    +
469784    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
469785    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
469786    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469787    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469788    +end;
MPRINT(EM_DIAGRAM):   end;
469789    +
469790    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
469791    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
469792    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469793    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469794    +end;
MPRINT(EM_DIAGRAM):   end;
469795    +
469796    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
469797    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
469798    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469799    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469800    +end;
MPRINT(EM_DIAGRAM):   end;
469801    +
469802    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
469803    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
469804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469806    +end;
MPRINT(EM_DIAGRAM):   end;
469807    +
469808    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
469809    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
469810    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469811    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469812    +end;
MPRINT(EM_DIAGRAM):   end;
469813    +
469814    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
469815    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
469816    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469817    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469818    +end;
MPRINT(EM_DIAGRAM):   end;
469819    +
469820    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
469821    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
469822    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469823    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469824    +end;
MPRINT(EM_DIAGRAM):   end;
469825    +
469826    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
469827    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
469828    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469829    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469830    +end;
MPRINT(EM_DIAGRAM):   end;
469831    +
469832    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
469833    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
469834    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469835    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469836    +end;
MPRINT(EM_DIAGRAM):   end;
469837    +
469838    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
469839    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
469840    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469841    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469842    +end;
MPRINT(EM_DIAGRAM):   end;
469843    +
469844    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
469845    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
469846    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469847    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469848    +end;
MPRINT(EM_DIAGRAM):   end;
469849    +
469850    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
469851    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
469852    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
469853    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
469854    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
469855    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
469856    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
469857    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
469858    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
469859    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
469860    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
469861    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
469862    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
469863    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469864    +end;
MPRINT(EM_DIAGRAM):   end;
469865    +else do;
MPRINT(EM_DIAGRAM):   else do;
469866    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
469867    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
469868    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
469869    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
469870    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
469871    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
469872    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
469873    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
469874    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469875    +         end;
MPRINT(EM_DIAGRAM):   end;
469876    +         else do;
MPRINT(EM_DIAGRAM):   else do;
469877    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
469878    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
469879    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469880    +            end;
MPRINT(EM_DIAGRAM):   end;
469881    +         end;
MPRINT(EM_DIAGRAM):   end;
469882    +      end;
MPRINT(EM_DIAGRAM):   end;
469883    +      else do;
MPRINT(EM_DIAGRAM):   else do;
469884    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
469885    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
469886    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469887    +         end;
MPRINT(EM_DIAGRAM):   end;
469888    +      end;
MPRINT(EM_DIAGRAM):   end;
469889    +   end;
MPRINT(EM_DIAGRAM):   end;
469890    +   else do;
MPRINT(EM_DIAGRAM):   else do;
469891    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
469892    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
469893    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469894    +      end;
MPRINT(EM_DIAGRAM):   end;
469895    +      else do;
MPRINT(EM_DIAGRAM):   else do;
469896    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
469897    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
469898    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
469899    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
469900    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
469901    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
469902    +         end;
MPRINT(EM_DIAGRAM):   end;
469903    +      end;
MPRINT(EM_DIAGRAM):   end;
469904    +   end;
MPRINT(EM_DIAGRAM):   end;
469905    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
469906    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
469907    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
469908    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
469909    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
469910    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
469911    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
469912    +   end;
MPRINT(EM_DIAGRAM):   end;
469913    +end;
MPRINT(EM_DIAGRAM):   end;
469914    +
469915    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
469916    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
469917    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
469918    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
469919    +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
469920    +end;
MPRINT(EM_DIAGRAM):   end;
469921    +
469922    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
469923    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
469924    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
469925    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
469926    +
469927    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
469928    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
469929    +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
469930    +
469931    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
469932    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
469933    +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
469934    +
469935    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
469936    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
469937    +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
469938    +
469939    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
469940    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
469941    +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
469942    +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
469943    +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
469944    +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
469945    +
469946    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
469947    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
469948    +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
469949    +
469950    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
469951    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
469952    +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
469953    +
469954    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
469955    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
469956    +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
469957    +
469958    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
469959    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
469960    +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
469961    +
469962    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
469963    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
469964    +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
469965    +
469966    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
469967    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
469968    +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
469969    +
469970    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
469971    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
469972    +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
469973    +
469974    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
469975    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
469976    +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
469977    +
469978    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
469979    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
469980    +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
469981    +
469982    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
469983    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
469984    +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
469985    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
469986    +
469987    +REG5DR1:
469988    +
469989    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
469990    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
469991    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
469992    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
469993    +end;
MPRINT(EM_DIAGRAM):   end;
469994    +else do;
MPRINT(EM_DIAGRAM):   else do;
469995    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
469996    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
469997    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
469998    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
469999    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
470000    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
470001    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
470002    +   end;
MPRINT(EM_DIAGRAM):   end;
470003    +end;
MPRINT(EM_DIAGRAM):   end;
470004    +
470005    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
470006    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
470007    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
470008    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
470009    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
470010    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
470011    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
470012    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
470013    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
470014    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
470015    +end;
MPRINT(EM_DIAGRAM):   end;
470016    +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
470017    +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
470018    +
470019    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
470020    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
470021    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
470022    +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
470023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470024    +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
470025    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470026    +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
470027    +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
470028    +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
470029    +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
470030    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470031    +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
470032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470033    +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
470034    +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
470035    +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
470036    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470037    +* Ensmbl25: Maximum Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Maximum Posteriors of 10 models;
470038    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470039    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
470040    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
470041    +P_DepVar1 = max(
470042    +Neural_P_DepVar1 ,
470043    +Neural2_P_DepVar1 ,
470044    +Neural3_P_DepVar1 ,
470045    +Neural4_P_DepVar1 ,
470046    +Neural7_P_DepVar1 ,
470047    +Neural9_P_DepVar1 ,
470048    +Neural10_P_DepVar1 ,
470049    +Tree_P_DepVar1 ,
470050    +Reg_P_DepVar1 ,
470051    +Reg5_P_DepVar1
470052    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural_P_DepVar1 , Neural2_P_DepVar1 , 
Neural3_P_DepVar1 , Neural4_P_DepVar1 , Neural7_P_DepVar1 , Neural9_P_DepVar1 , 
Neural10_P_DepVar1 , Tree_P_DepVar1 , Reg_P_DepVar1 , Reg5_P_DepVar1 );
470053    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
470054    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
470055    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
470056    +end;
MPRINT(EM_DIAGRAM):   end;
470057    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
470058    +P_DepVar0 = max(
470059    +Neural_P_DepVar0 ,
470060    +Neural2_P_DepVar0 ,
470061    +Neural3_P_DepVar0 ,
470062    +Neural4_P_DepVar0 ,
470063    +Neural7_P_DepVar0 ,
470064    +Neural9_P_DepVar0 ,
470065    +Neural10_P_DepVar0 ,
470066    +Tree_P_DepVar0 ,
470067    +Reg_P_DepVar0 ,
470068    +Reg5_P_DepVar0
470069    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural_P_DepVar0 , Neural2_P_DepVar0 , 
Neural3_P_DepVar0 , Neural4_P_DepVar0 , Neural7_P_DepVar0 , Neural9_P_DepVar0 , 
Neural10_P_DepVar0 , Tree_P_DepVar0 , Reg_P_DepVar0 , Reg5_P_DepVar0 );
470070    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
470071    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
470072    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
470073    +end;
MPRINT(EM_DIAGRAM):   end;
470074    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
470075    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470076    +* Ensmbl25: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Computing Classification Vars;
470077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470078    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
470079    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
470080    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
470081    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
470082    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
470083    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
470084    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
470085    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
470086    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
470087    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
470088    +end;
MPRINT(EM_DIAGRAM):   end;
470089    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
470090    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
470091    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
470092    +end;
MPRINT(EM_DIAGRAM):   end;
470093    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
470094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470095    +* Ensmbl25: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Producing Unformatted variable;
470096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470097    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
470098    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
470099    +else
470100    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
470101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470102    +* Ensmbl25: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Computing _WARN_ Variable;
470103    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470104    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
470105    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
470106    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
470107    +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
470108    +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
470109    +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
470110    +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
470111    +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
470112    +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
470113    +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
470114    +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
470115    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
470116    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
470117    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
470118    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
470119    +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
470120    +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
470121    +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
470122    +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
470123    +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
470124    +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
470125    +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
470126    +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
470127    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
470128    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
470129    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
470130    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
470131    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
470131   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
470132    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
470132   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
470133    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
470133   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
470134    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
470134   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
470135    +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
470136    +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
470137    +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
470138    +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
470139    +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
470140    +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
470141    +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
470142    +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
470143    +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
470144    +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
470145    +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
470146    +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
470147    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470148    +* Ensmbl25: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Computing Residual Vars;
470149    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470150    +if
470151    +F_DepVar NE '1'
470152    +AND F_DepVar NE '0'
470153    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
470154    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
470155    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
470156    +end;
MPRINT(EM_DIAGRAM):   end;
470157    +else do;
MPRINT(EM_DIAGRAM):   else do;
470158    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
470159    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
470160    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
470161    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
470162    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
470163    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
470164    +END;
MPRINT(EM_DIAGRAM):   END;
470165    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
470166     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL25_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
470167     quit;
470168     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
470169     filename emflow
470169   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl25\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl25\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring NEURAL_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470170     *------------------------------------------------------------*;
470171     * Ensmbl25: Scoring NEURAL_VALIDATE data;
470172     *------------------------------------------------------------*;
470173     data EMWS8.Ensmbl25_VALIDATE
470174     / view=EMWS8.Ensmbl25_VALIDATE
470175     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl25_VALIDATE / view=EMWS8.Ensmbl25_VALIDATE ;
470176     set EMWS8.Neural_VALIDATE
470177     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural_VALIDATE ;
470178     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl25\EMFLOWSCORE.sas.
470179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470180    +* Ensmbl25: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Combine model for DepVar;
470181    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470182    +* Ensmbl25: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 1 of 10;
470183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470185    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
470186    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
470187    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
470188    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470189    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470190    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
470191    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
470192    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
470193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470194    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470195    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
470196    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
470197    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
470198    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470200    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
470201    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
470202    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
470203    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470204    +
470205    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
470206    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
470206   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
470207    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
470208    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
470209    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
470210    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
470211    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
470212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470213    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
470214    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
470215    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
470216    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470218    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
470219    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470220    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
470221    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
470222    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
470223    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470224    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
470225    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
470226    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
470227    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470228    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470229    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
470230    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
470231    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
470232    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470233    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470234    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
470235    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
470236    +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
470237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470238    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
470239    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
470240    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
470241    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
470242    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
470243    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
470244    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
470245    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
470246    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
470247    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
470248    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
470249    +LENGTH _WARN_ $4
470250    +      F_DepVar  $ 12
470251    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
470252    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
470253    +
470254    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
470255    +
470256    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
470257    +
470258    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
470259    +
470260    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
470261    +
470262    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
470263    +
470264    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
470265    +
470266    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
470267    +
470268    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
470269    +
470270    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
470271    +
470272    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
470273    +
470274    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
470275    +
470276    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
470277    +
470278    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
470279    +
470280    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
470281    +
470282    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
470283    +
470284    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
470285    +
470286    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
470287    +
470288    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
470289    +
470290    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
470291    +
470292    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
470293    +
470294    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
470295    +
470296    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
470297    +
470298    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
470299    +
470300    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
470301    +
470302    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
470303    +
470304    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
470305    +
470306    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
470307    +
470308    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
470309    +
470310    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
470311    +
470312    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
470313    +
470314    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
470315    +
470316    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
470317    +
470318    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
470319    +
470320    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
470321    +
470322    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
470323    +
470324    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
470325    +
470326    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
470327    +
470328    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
470329    +
470330    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
470331    +
470332    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
470333    +
470334    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
470335    +
470336    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
470337    +
470338    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
470339    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
470340    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
470341    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
470342    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470343    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470344    +end;
MPRINT(EM_DIAGRAM):   end;
470345    +else do;
MPRINT(EM_DIAGRAM):   else do;
470346    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470347    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
470348    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470349    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470350    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
470351    +   end;
MPRINT(EM_DIAGRAM):   end;
470352    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470353    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
470354    +   end;
MPRINT(EM_DIAGRAM):   end;
470355    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470356    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
470357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470359    +   end;
MPRINT(EM_DIAGRAM):   end;
470360    +end;
MPRINT(EM_DIAGRAM):   end;
470361    +
470362    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
470363    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
470364    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
470365    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
470366    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470367    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470368    +end;
MPRINT(EM_DIAGRAM):   end;
470369    +else do;
MPRINT(EM_DIAGRAM):   else do;
470370    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470371    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
470372    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470373    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470374    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
470375    +   end;
MPRINT(EM_DIAGRAM):   end;
470376    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470377    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
470378    +   end;
MPRINT(EM_DIAGRAM):   end;
470379    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470380    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
470381    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470382    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470383    +   end;
MPRINT(EM_DIAGRAM):   end;
470384    +end;
MPRINT(EM_DIAGRAM):   end;
470385    +
470386    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
470387    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
470388    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
470389    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
470390    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470392    +end;
MPRINT(EM_DIAGRAM):   end;
470393    +else do;
MPRINT(EM_DIAGRAM):   else do;
470394    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470395    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
470396    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470397    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470398    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
470399    +   end;
MPRINT(EM_DIAGRAM):   end;
470400    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470401    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
470402    +   end;
MPRINT(EM_DIAGRAM):   end;
470403    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470404    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
470405    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470406    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470407    +   end;
MPRINT(EM_DIAGRAM):   end;
470408    +end;
MPRINT(EM_DIAGRAM):   end;
470409    +
470410    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
470411    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
470412    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
470413    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
470414    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470415    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470416    +end;
MPRINT(EM_DIAGRAM):   end;
470417    +else do;
MPRINT(EM_DIAGRAM):   else do;
470418    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470419    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
470420    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470421    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470422    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
470423    +   end;
MPRINT(EM_DIAGRAM):   end;
470424    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470425    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
470426    +   end;
MPRINT(EM_DIAGRAM):   end;
470427    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470428    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
470429    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470430    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470431    +   end;
MPRINT(EM_DIAGRAM):   end;
470432    +end;
MPRINT(EM_DIAGRAM):   end;
470433    +
470434    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
470435    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
470436    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
470437    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
470438    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470439    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470440    +end;
MPRINT(EM_DIAGRAM):   end;
470441    +else do;
MPRINT(EM_DIAGRAM):   else do;
470442    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470443    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
470444    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470445    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470446    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
470447    +   end;
MPRINT(EM_DIAGRAM):   end;
470448    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470449    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
470450    +   end;
MPRINT(EM_DIAGRAM):   end;
470451    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470452    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
470453    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470454    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470455    +   end;
MPRINT(EM_DIAGRAM):   end;
470456    +end;
MPRINT(EM_DIAGRAM):   end;
470457    +
470458    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
470459    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
470460    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
470461    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
470462    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470463    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470464    +end;
MPRINT(EM_DIAGRAM):   end;
470465    +else do;
MPRINT(EM_DIAGRAM):   else do;
470466    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470467    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
470468    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470469    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470470    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
470471    +   end;
MPRINT(EM_DIAGRAM):   end;
470472    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470473    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
470474    +   end;
MPRINT(EM_DIAGRAM):   end;
470475    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470476    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
470477    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470478    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470479    +   end;
MPRINT(EM_DIAGRAM):   end;
470480    +end;
MPRINT(EM_DIAGRAM):   end;
470481    +
470482    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
470483    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
470484    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
470485    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
470486    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470487    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470488    +end;
MPRINT(EM_DIAGRAM):   end;
470489    +else do;
MPRINT(EM_DIAGRAM):   else do;
470490    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470491    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
470492    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470493    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
470494    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
470495    +   end;
MPRINT(EM_DIAGRAM):   end;
470496    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
470497    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
470498    +   end;
MPRINT(EM_DIAGRAM):   end;
470499    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470500    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
470501    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470502    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470503    +   end;
MPRINT(EM_DIAGRAM):   end;
470504    +end;
MPRINT(EM_DIAGRAM):   end;
470505    +
470506    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
470507    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
470508    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
470509    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
470510    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
470511    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
470512    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
470513    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
470514    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
470515    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
470516    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
470517    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
470518    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470520    +end;
MPRINT(EM_DIAGRAM):   end;
470521    +else do;
MPRINT(EM_DIAGRAM):   else do;
470522    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
470523    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
470524    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470525    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
470526    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
470527    +   end;
MPRINT(EM_DIAGRAM):   end;
470528    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
470529    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
470530    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
470531    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
470532    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
470533    +   end;
MPRINT(EM_DIAGRAM):   end;
470534    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
470535    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
470536    +   end;
MPRINT(EM_DIAGRAM):   end;
470537    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
470538    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
470539    +   end;
MPRINT(EM_DIAGRAM):   end;
470540    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
470541    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
470542    +   end;
MPRINT(EM_DIAGRAM):   end;
470543    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470544    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
470545    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
470546    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
470547    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
470548    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470549    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470550    +   end;
MPRINT(EM_DIAGRAM):   end;
470551    +end;
MPRINT(EM_DIAGRAM):   end;
470552    +
470553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470554    +*** Checking missing input Interval
470555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
470556    +
470557    +IF NMISS(
470558    +   AcceptedCmpTotal ,
470559    +   Age ,
470560    +   Frq ,
470561    +   Income ,
470562    +   Kidhome ,
470563    +   Mnt ,
470564    +   MntFishProducts ,
470565    +   MntFruits ,
470566    +   MntGoldProds ,
470567    +   MntMeatProducts ,
470568    +   MntSweetProducts ,
470569    +   MntWines ,
470570    +   MonthsAsCustomer ,
470571    +   NumCatalogPurchases ,
470572    +   NumDealsPurchases ,
470573    +   NumDistPurchases ,
470574    +   NumStorePurchases ,
470575    +   NumWebPurchases ,
470576    +   NumWebVisitsMonth ,
470577    +   RFMstat ,
470578    +   RMntFrq ,
470579    +   Recency ,
470580    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
470581    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
470582    +
470583    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470584    +END;
MPRINT(EM_DIAGRAM):   END;
470585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470586    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
470587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470588    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
470589    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
470590    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
470591    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
470592    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
470593    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
470594    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
470595    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
470596    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
470597    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
470598    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
470599    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
470600    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
470601    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
470602    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
470603    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
470604    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
470605    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
470606    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
470607    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
470608    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
470609    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
470610    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
470611    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
470612    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
470613    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
470614    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
470615    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
470616    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
470617    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
470618    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
470619    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
470620    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
470621    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
470622    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
470623    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
470624    +END;
MPRINT(EM_DIAGRAM):   END;
470625    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
470626    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
470627    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
470628    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
470629    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
470630    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
470631    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
470632    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
470633    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
470634    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
470635    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
470636    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
470637    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
470638    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
470639    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
470640    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
470641    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
470642    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
470643    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
470644    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
470645    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
470646    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
470647    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
470648    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
470649    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
470650    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
470651    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
470652    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
470653    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
470654    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
470655    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
470656    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
470657    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
470658    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
470659    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
470660    +   ELSE S_NumCatalogPurchases
470661    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
470662    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
470663    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
470664    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
470665    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
470666    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
470667    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
470668    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
470669    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
470670    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
470671    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
470672    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
470673    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
470674    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
470675    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
470676    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
470677    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
470678    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
470679    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
470680    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
470681    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
470682    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
470683    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
470684    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
470685    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
470686    +END;
MPRINT(EM_DIAGRAM):   END;
470687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470688    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
470689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470691    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
470692    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470693    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470694    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
470695    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470696    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
470697    +   H11  =     0.17253933153192 * S_AcceptedCmpTotal  +    -0.00905682786307 *
470698    +        S_Age  +    -0.16189506426877 * S_Frq  +     0.04747866165156 *
470699    +        S_Income  +    -0.01003321974643 * S_Kidhome
470700    +          +      0.0295763599492 * S_Mnt  +    -0.01546318303003 *
470701    +        S_MntFishProducts  +    -0.01410665119089 * S_MntFruits
470702    +          +     0.00082923441873 * S_MntGoldProds  +     0.05549346930482 *
470703    +        S_MntMeatProducts  +    -0.01049992237931 * S_MntSweetProducts
470704    +          +    -0.07013234205633 * S_MntWines  +    -0.00721146825499 *
470705    +        S_MonthsAsCustomer  +     0.12264425658747 * S_NumCatalogPurchases
470706    +          +     0.04789435683014 * S_NumDealsPurchases
470707    +          +     0.03156899683016 * S_NumDistPurchases
470708    +          +     0.02920310465753 * S_NumStorePurchases
470709    +          +     -0.0008553015476 * S_NumWebPurchases
470710    +          +     0.09480487235301 * S_NumWebVisitsMonth
470711    +          +     0.01508383637372 * S_RFMstat  +     0.01456375884416 *
470712    +        S_RMntFrq  +    -0.10511528420774 * S_Recency
470713    +          +      -0.023971907884 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17253933153192 * S_AcceptedCmpTotal + -0.00905682786307 * S_Age 
+ -0.16189506426877 * S_Frq + 0.04747866165156 * S_Income + -0.01003321974643 * S_Kidhome + 
0.0295763599492 * S_Mnt + -0.01546318303003 * S_MntFishProducts + -0.01410665119089 * 
S_MntFruits + 0.00082923441873 * S_MntGoldProds + 0.05549346930482 * S_MntMeatProducts + 
-0.01049992237931 * S_MntSweetProducts + -0.07013234205633 * S_MntWines + -0.00721146825499 * 
S_MonthsAsCustomer + 0.12264425658747 * S_NumCatalogPurchases + 0.04789435683014 * 
S_NumDealsPurchases + 0.03156899683016 * S_NumDistPurchases + 0.02920310465753 * 
S_NumStorePurchases + -0.0008553015476 * S_NumWebPurchases + 0.09480487235301 * 
S_NumWebVisitsMonth + 0.01508383637372 * S_RFMstat + 0.01456375884416 * S_RMntFrq + 
-0.10511528420774 * S_Recency + -0.023971907884 * S_Teenhome ;
470714    +   H11  = H11  +     0.07798877961888 * AcceptedCmp10
470715    +          +     0.08545224835311 * AcceptedCmp20  +     0.07286185961898 *
470716    +        AcceptedCmp30  +     0.08445406170559 * AcceptedCmp40
470717    +          +     0.06102198752605 * AcceptedCmp50  +     0.01824734417591 *
470718    +        Complain0  +    -0.00626869897647 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.07798877961888 * AcceptedCmp10 + 0.08545224835311 * 
AcceptedCmp20 + 0.07286185961898 * AcceptedCmp30 + 0.08445406170559 * AcceptedCmp40 + 
0.06102198752605 * AcceptedCmp50 + 0.01824734417591 * Complain0 + -0.00626869897647 * 
HigherEducationBinary0 ;
470719    +   H11  = H11  +     0.00812441674075 * Education2n_Cycle
470720    +          +    -0.01198925622737 * EducationBasic  +     0.00714615715672 *
470721    +        EducationGraduation  +    -0.00200978992401 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00812441674075 * Education2n_Cycle + -0.01198925622737 * 
EducationBasic + 0.00714615715672 * EducationGraduation + -0.00200978992401 * EducationMaster ;
470722    +   H11  =     -0.3576236510542 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.3576236510542 + H11 ;
470723    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
470724    +END;
MPRINT(EM_DIAGRAM):   END;
470725    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
470726    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
470727    +END;
MPRINT(EM_DIAGRAM):   END;
470728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470729    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
470730    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470731    +
470732    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
470733    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
470734    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
470735    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
470736    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
470737    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470738    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
470739    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
470740    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
470741    +end;
MPRINT(EM_DIAGRAM):   end;
470742    +else do;
MPRINT(EM_DIAGRAM):   else do;
470743    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
470744    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
470745    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
470746    +   end;
MPRINT(EM_DIAGRAM):   end;
470747    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
470748    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
470749    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
470750    +   end;
MPRINT(EM_DIAGRAM):   end;
470751    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470752    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
470753    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
470754    +   end;
MPRINT(EM_DIAGRAM):   end;
470755    +end;
MPRINT(EM_DIAGRAM):   end;
470756    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
470757    +   P_DepVar1  =     25.9968153762534 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.9968153762534 * H11 ;
470758    +   P_DepVar1  =    -4.91742031612348 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.91742031612348 + P_DepVar1 ;
470759    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
470760    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
470761    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
470762    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
470763    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
470764    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
470765    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
470766    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
470767    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
470768    +END;
MPRINT(EM_DIAGRAM):   END;
470769    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
470770    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
470771    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
470772    +END;
MPRINT(EM_DIAGRAM):   END;
470773    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
470774    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
470775    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
470776    +END;
MPRINT(EM_DIAGRAM):   END;
470777    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
470778    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
470779    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
470780    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
470781    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
470782    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
470783    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
470784    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470785    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
470786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
470787    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
470788    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
470789    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
470790    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
470791    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
470792    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
470793    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
470794    +END;
MPRINT(EM_DIAGRAM):   END;
470795    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
470796    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
470797    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
470798    +drop
470799    +H11
470800    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
470801    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
470802    +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
470803    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470804    +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
470805    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470806    +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
470807    +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
470808    +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
470809    +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
470810    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470811    +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
470812    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470813    +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
470814    +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
470815    +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
470816    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470817    +* Ensmbl25: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 2 of 10;
470818    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470819    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470820    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
470821    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
470822    +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
470823    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
470824    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
470825    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
470826    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
470827    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
470828    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
470829    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
470830    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
470831    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
470832    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
470833    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
470834    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
470835    +LENGTH _WARN_ $4
470836    +      F_DepVar  $ 12
470837    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
470838    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
470839    +
470840    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
470841    +
470842    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
470843    +
470844    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
470845    +
470846    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
470847    +
470848    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
470849    +
470850    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
470851    +
470852    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
470853    +
470854    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
470855    +
470856    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
470857    +
470858    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
470859    +
470860    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
470861    +
470862    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
470863    +
470864    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
470865    +
470866    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
470867    +
470868    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
470869    +
470870    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
470871    +
470872    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
470873    +
470874    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
470875    +
470876    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
470877    +
470878    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
470879    +
470880    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
470881    +
470882    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
470883    +
470884    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
470885    +
470886    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
470887    +
470888    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
470889    +
470890    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
470891    +
470892    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
470893    +
470894    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
470895    +
470896    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
470897    +
470898    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
470899    +
470900    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
470901    +
470902    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
470903    +
470904    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
470905    +
470906    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
470907    +
470908    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
470909    +
470910    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
470911    +
470912    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
470913    +
470914    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
470915    +
470916    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
470917    +
470918    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
470919    +
470920    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
470921    +
470922    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
470923    +
470924    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
470925    +
470926    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
470927    +
470928    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
470929    +
470930    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
470931    +
470932    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
470933    +
470934    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
470935    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
470936    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
470937    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
470938    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470939    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470940    +end;
MPRINT(EM_DIAGRAM):   end;
470941    +else do;
MPRINT(EM_DIAGRAM):   else do;
470942    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470943    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
470944    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470945    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470946    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
470947    +   end;
MPRINT(EM_DIAGRAM):   end;
470948    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470949    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
470950    +   end;
MPRINT(EM_DIAGRAM):   end;
470951    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470952    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
470953    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470954    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470955    +   end;
MPRINT(EM_DIAGRAM):   end;
470956    +end;
MPRINT(EM_DIAGRAM):   end;
470957    +
470958    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
470959    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
470960    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
470961    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
470962    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470963    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470964    +end;
MPRINT(EM_DIAGRAM):   end;
470965    +else do;
MPRINT(EM_DIAGRAM):   else do;
470966    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470967    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
470968    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470969    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470970    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
470971    +   end;
MPRINT(EM_DIAGRAM):   end;
470972    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470973    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
470974    +   end;
MPRINT(EM_DIAGRAM):   end;
470975    +   else do;
MPRINT(EM_DIAGRAM):   else do;
470976    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
470977    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
470978    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470979    +   end;
MPRINT(EM_DIAGRAM):   end;
470980    +end;
MPRINT(EM_DIAGRAM):   end;
470981    +
470982    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
470983    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
470984    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
470985    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
470986    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
470987    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
470988    +end;
MPRINT(EM_DIAGRAM):   end;
470989    +else do;
MPRINT(EM_DIAGRAM):   else do;
470990    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
470991    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
470992    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
470993    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
470994    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
470995    +   end;
MPRINT(EM_DIAGRAM):   end;
470996    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
470997    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
470998    +   end;
MPRINT(EM_DIAGRAM):   end;
470999    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471000    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
471001    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471002    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471003    +   end;
MPRINT(EM_DIAGRAM):   end;
471004    +end;
MPRINT(EM_DIAGRAM):   end;
471005    +
471006    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
471007    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
471008    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
471009    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
471010    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471012    +end;
MPRINT(EM_DIAGRAM):   end;
471013    +else do;
MPRINT(EM_DIAGRAM):   else do;
471014    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471015    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
471016    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471017    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471018    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
471019    +   end;
MPRINT(EM_DIAGRAM):   end;
471020    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471021    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
471022    +   end;
MPRINT(EM_DIAGRAM):   end;
471023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471024    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
471025    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471026    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471027    +   end;
MPRINT(EM_DIAGRAM):   end;
471028    +end;
MPRINT(EM_DIAGRAM):   end;
471029    +
471030    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
471031    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
471032    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
471033    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
471034    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471035    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471036    +end;
MPRINT(EM_DIAGRAM):   end;
471037    +else do;
MPRINT(EM_DIAGRAM):   else do;
471038    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471039    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
471040    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471041    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471042    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
471043    +   end;
MPRINT(EM_DIAGRAM):   end;
471044    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471045    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
471046    +   end;
MPRINT(EM_DIAGRAM):   end;
471047    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471048    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
471049    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471050    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471051    +   end;
MPRINT(EM_DIAGRAM):   end;
471052    +end;
MPRINT(EM_DIAGRAM):   end;
471053    +
471054    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
471055    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
471056    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
471057    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
471058    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471059    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471060    +end;
MPRINT(EM_DIAGRAM):   end;
471061    +else do;
MPRINT(EM_DIAGRAM):   else do;
471062    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471063    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
471064    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471065    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471066    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
471067    +   end;
MPRINT(EM_DIAGRAM):   end;
471068    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471069    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
471070    +   end;
MPRINT(EM_DIAGRAM):   end;
471071    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471072    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
471073    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471074    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471075    +   end;
MPRINT(EM_DIAGRAM):   end;
471076    +end;
MPRINT(EM_DIAGRAM):   end;
471077    +
471078    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
471079    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
471080    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
471081    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
471082    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471083    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471084    +end;
MPRINT(EM_DIAGRAM):   end;
471085    +else do;
MPRINT(EM_DIAGRAM):   else do;
471086    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471087    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
471088    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471089    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
471090    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
471091    +   end;
MPRINT(EM_DIAGRAM):   end;
471092    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
471093    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
471094    +   end;
MPRINT(EM_DIAGRAM):   end;
471095    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471096    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
471097    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471098    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471099    +   end;
MPRINT(EM_DIAGRAM):   end;
471100    +end;
MPRINT(EM_DIAGRAM):   end;
471101    +
471102    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
471103    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
471104    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
471105    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
471106    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
471107    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
471108    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
471109    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
471110    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
471111    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
471112    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
471113    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
471114    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471115    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471116    +end;
MPRINT(EM_DIAGRAM):   end;
471117    +else do;
MPRINT(EM_DIAGRAM):   else do;
471118    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
471119    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
471120    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471121    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
471122    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
471123    +   end;
MPRINT(EM_DIAGRAM):   end;
471124    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
471125    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
471126    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
471127    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
471128    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
471129    +   end;
MPRINT(EM_DIAGRAM):   end;
471130    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
471131    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
471132    +   end;
MPRINT(EM_DIAGRAM):   end;
471133    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
471134    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
471135    +   end;
MPRINT(EM_DIAGRAM):   end;
471136    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
471137    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
471138    +   end;
MPRINT(EM_DIAGRAM):   end;
471139    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471140    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
471141    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
471142    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
471143    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
471144    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471145    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471146    +   end;
MPRINT(EM_DIAGRAM):   end;
471147    +end;
MPRINT(EM_DIAGRAM):   end;
471148    +
471149    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
471150    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
471151    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
471152    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
471153    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
471154    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
471155    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
471156    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
471157    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
471158    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
471159    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
471160    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
471161    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
471162    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471163    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471164    +end;
MPRINT(EM_DIAGRAM):   end;
471165    +else do;
MPRINT(EM_DIAGRAM):   else do;
471166    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
471167    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
471168    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471169    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
471170    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
471171    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
471172    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
471173    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
471174    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471175    +         end;
MPRINT(EM_DIAGRAM):   end;
471176    +         else do;
MPRINT(EM_DIAGRAM):   else do;
471177    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
471178    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
471179    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471180    +            end;
MPRINT(EM_DIAGRAM):   end;
471181    +         end;
MPRINT(EM_DIAGRAM):   end;
471182    +      end;
MPRINT(EM_DIAGRAM):   end;
471183    +      else do;
MPRINT(EM_DIAGRAM):   else do;
471184    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
471185    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
471186    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471187    +         end;
MPRINT(EM_DIAGRAM):   end;
471188    +      end;
MPRINT(EM_DIAGRAM):   end;
471189    +   end;
MPRINT(EM_DIAGRAM):   end;
471190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471191    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
471192    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
471193    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471194    +      end;
MPRINT(EM_DIAGRAM):   end;
471195    +      else do;
MPRINT(EM_DIAGRAM):   else do;
471196    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
471197    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
471198    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
471199    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
471200    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
471201    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471202    +         end;
MPRINT(EM_DIAGRAM):   end;
471203    +      end;
MPRINT(EM_DIAGRAM):   end;
471204    +   end;
MPRINT(EM_DIAGRAM):   end;
471205    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
471206    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
471207    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
471208    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
471209    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
471210    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471211    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471212    +   end;
MPRINT(EM_DIAGRAM):   end;
471213    +end;
MPRINT(EM_DIAGRAM):   end;
471214    +
471215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471216    +*** Checking missing input Interval
471217    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
471218    +
471219    +IF NMISS(
471220    +   AcceptedCmpTotal ,
471221    +   Age ,
471222    +   Frq ,
471223    +   Income ,
471224    +   Kidhome ,
471225    +   Mnt ,
471226    +   MntFishProducts ,
471227    +   MntFruits ,
471228    +   MntGoldProds ,
471229    +   MntMeatProducts ,
471230    +   MntSweetProducts ,
471231    +   MntWines ,
471232    +   MonthsAsCustomer ,
471233    +   NumCatalogPurchases ,
471234    +   NumDealsPurchases ,
471235    +   NumDistPurchases ,
471236    +   NumStorePurchases ,
471237    +   NumWebPurchases ,
471238    +   NumWebVisitsMonth ,
471239    +   RFMstat ,
471240    +   RMntFrq ,
471241    +   Recency ,
471242    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
471243    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
471244    +
471245    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471246    +END;
MPRINT(EM_DIAGRAM):   END;
471247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471248    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
471249    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471250    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
471251    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
471252    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
471253    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
471254    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
471255    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
471256    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
471257    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
471258    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
471259    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
471260    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
471261    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
471262    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
471263    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
471264    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
471265    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
471266    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
471267    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
471268    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
471269    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
471270    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
471271    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
471272    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
471273    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
471274    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
471275    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
471276    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
471277    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
471278    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
471279    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
471280    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
471281    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
471282    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
471283    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
471284    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
471285    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
471286    +END;
MPRINT(EM_DIAGRAM):   END;
471287    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
471288    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
471289    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
471290    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
471291    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
471292    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
471293    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
471294    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
471295    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
471296    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
471297    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
471298    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
471299    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
471300    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
471301    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
471302    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
471303    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
471304    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
471305    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
471306    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
471307    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
471308    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
471309    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
471310    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
471311    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
471312    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
471313    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
471314    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
471315    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
471316    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
471317    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
471318    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
471319    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
471320    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
471321    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
471322    +   ELSE S_NumCatalogPurchases
471323    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
471324    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
471325    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
471326    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
471327    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
471328    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
471329    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
471330    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
471331    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
471332    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
471333    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
471334    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
471335    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
471336    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
471337    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
471338    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
471339    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
471340    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
471341    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
471342    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
471343    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
471344    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
471345    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
471346    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
471347    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
471348    +END;
MPRINT(EM_DIAGRAM):   END;
471349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471350    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
471351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471353    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
471354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471356    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
471357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471358    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
471359    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
471360    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
471361    +        S_Income  +    -1.07615700855274 * S_Kidhome
471362    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
471363    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
471364    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
471365    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
471366    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
471367    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
471368    +          +      0.3429043319369 * S_NumDealsPurchases
471369    +          +     0.71313309767469 * S_NumDistPurchases
471370    +          +     0.06017757740083 * S_NumStorePurchases
471371    +          +    -0.19817724925068 * S_NumWebPurchases
471372    +          +     1.34164122205952 * S_NumWebVisitsMonth
471373    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
471374    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
471375    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
471376    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
471377    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
471378    +        S_Income  +     -0.0027232441092 * S_Kidhome
471379    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
471380    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
471381    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
471382    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
471383    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
471384    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
471385    +          +      0.4576973746858 * S_NumDealsPurchases
471386    +          +     0.15590877272659 * S_NumDistPurchases
471387    +          +    -0.33414539713736 * S_NumStorePurchases
471388    +          +    -0.39370244666257 * S_NumWebPurchases
471389    +          +     0.52596714886704 * S_NumWebVisitsMonth
471390    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
471391    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
471392    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
471393    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
471394    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
471395    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
471396    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
471397    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
471398    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
471399    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
471400    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
471401    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
471402    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
471403    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
471404    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
471405    +        EducationGraduation  +      -0.333138438339 * EducationMaster
471406    +          +      0.4663802937397 * Marital_StatusDivorced
471407    +          +    -1.27401898796099 * Marital_StatusMarried
471408    +          +      1.3125969368079 * Marital_StatusSingle
471409    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
471410    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
471411    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
471412    +        EducationGraduation  +     0.00771527138053 * EducationMaster
471413    +          +     0.07419179522004 * Marital_StatusDivorced
471414    +          +     0.00234615813337 * Marital_StatusMarried
471415    +          +    -0.00725460458412 * Marital_StatusSingle
471416    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
471417    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
471418    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
471419    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
471420    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
471421    +END;
MPRINT(EM_DIAGRAM):   END;
471422    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
471423    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
471424    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
471425    +END;
MPRINT(EM_DIAGRAM):   END;
471426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471427    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
471428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471429    +
471430    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
471431    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
471432    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
471433    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
471434    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
471435    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471436    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
471437    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
471438    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
471439    +end;
MPRINT(EM_DIAGRAM):   end;
471440    +else do;
MPRINT(EM_DIAGRAM):   else do;
471441    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
471442    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
471443    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
471444    +   end;
MPRINT(EM_DIAGRAM):   end;
471445    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
471446    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
471447    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
471448    +   end;
MPRINT(EM_DIAGRAM):   end;
471449    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471450    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
471451    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
471452    +   end;
MPRINT(EM_DIAGRAM):   end;
471453    +end;
MPRINT(EM_DIAGRAM):   end;
471454    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
471455    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
471456    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
471457    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
471458    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
471459    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
471460    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
471461    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
471462    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
471463    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
471464    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
471465    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
471466    +END;
MPRINT(EM_DIAGRAM):   END;
471467    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
471468    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
471469    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
471470    +END;
MPRINT(EM_DIAGRAM):   END;
471471    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
471472    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
471473    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
471474    +END;
MPRINT(EM_DIAGRAM):   END;
471475    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
471476    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
471477    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
471478    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
471479    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
471480    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
471481    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
471482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471483    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
471484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471485    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
471486    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
471487    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
471488    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
471489    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
471490    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
471491    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
471492    +END;
MPRINT(EM_DIAGRAM):   END;
471493    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
471494    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
471495    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
471496    +drop
471497    +H11
471498    +H12
471499    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
471500    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
471501    +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
471502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
471503    +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
471504    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
471505    +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
471506    +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
471507    +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
471508    +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
471509    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
471510    +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
471511    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
471512    +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
471513    +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
471514    +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
471515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
471516    +* Ensmbl25: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 3 of 10;
471517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
471518    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
471519    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
471520    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
471521    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
471522    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
471523    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
471524    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
471525    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
471526    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
471527    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
471528    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
471529    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
471530    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
471531    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
471532    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
471533    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
471534    +LENGTH _WARN_ $4
471535    +      F_DepVar  $ 12
471536    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
471537    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
471538    +
471539    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
471540    +
471541    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
471542    +
471543    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
471544    +
471545    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
471546    +
471547    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
471548    +
471549    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
471550    +
471551    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
471552    +
471553    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
471554    +
471555    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
471556    +
471557    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
471558    +
471559    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
471560    +
471561    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
471562    +
471563    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
471564    +
471565    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
471566    +
471567    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
471568    +
471569    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
471570    +
471571    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
471572    +
471573    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
471574    +
471575    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
471576    +
471577    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
471578    +
471579    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
471580    +
471581    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
471582    +
471583    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
471584    +
471585    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
471586    +
471587    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
471588    +
471589    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
471590    +
471591    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
471592    +
471593    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
471594    +
471595    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
471596    +
471597    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
471598    +
471599    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
471600    +
471601    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
471602    +
471603    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
471604    +
471605    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
471606    +
471607    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
471608    +
471609    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
471610    +
471611    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
471612    +
471613    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
471614    +
471615    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
471616    +
471617    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
471618    +
471619    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
471620    +
471621    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
471622    +
471623    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
471624    +
471625    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
471626    +
471627    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
471628    +
471629    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
471630    +
471631    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
471632    +
471633    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
471634    +
471635    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
471636    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
471637    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
471638    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
471639    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471640    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471641    +end;
MPRINT(EM_DIAGRAM):   end;
471642    +else do;
MPRINT(EM_DIAGRAM):   else do;
471643    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471644    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
471645    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471646    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471647    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
471648    +   end;
MPRINT(EM_DIAGRAM):   end;
471649    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471650    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
471651    +   end;
MPRINT(EM_DIAGRAM):   end;
471652    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471653    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
471654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471656    +   end;
MPRINT(EM_DIAGRAM):   end;
471657    +end;
MPRINT(EM_DIAGRAM):   end;
471658    +
471659    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
471660    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
471661    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
471662    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
471663    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471664    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471665    +end;
MPRINT(EM_DIAGRAM):   end;
471666    +else do;
MPRINT(EM_DIAGRAM):   else do;
471667    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471668    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
471669    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471670    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471671    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
471672    +   end;
MPRINT(EM_DIAGRAM):   end;
471673    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471674    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
471675    +   end;
MPRINT(EM_DIAGRAM):   end;
471676    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471677    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
471678    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471679    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471680    +   end;
MPRINT(EM_DIAGRAM):   end;
471681    +end;
MPRINT(EM_DIAGRAM):   end;
471682    +
471683    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
471684    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
471685    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
471686    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
471687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471689    +end;
MPRINT(EM_DIAGRAM):   end;
471690    +else do;
MPRINT(EM_DIAGRAM):   else do;
471691    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471692    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
471693    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471694    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471695    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
471696    +   end;
MPRINT(EM_DIAGRAM):   end;
471697    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471698    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
471699    +   end;
MPRINT(EM_DIAGRAM):   end;
471700    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471701    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
471702    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471703    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471704    +   end;
MPRINT(EM_DIAGRAM):   end;
471705    +end;
MPRINT(EM_DIAGRAM):   end;
471706    +
471707    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
471708    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
471709    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
471710    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
471711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471713    +end;
MPRINT(EM_DIAGRAM):   end;
471714    +else do;
MPRINT(EM_DIAGRAM):   else do;
471715    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471716    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
471717    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471718    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471719    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
471720    +   end;
MPRINT(EM_DIAGRAM):   end;
471721    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471722    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
471723    +   end;
MPRINT(EM_DIAGRAM):   end;
471724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471725    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
471726    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471727    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471728    +   end;
MPRINT(EM_DIAGRAM):   end;
471729    +end;
MPRINT(EM_DIAGRAM):   end;
471730    +
471731    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
471732    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
471733    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
471734    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
471735    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471737    +end;
MPRINT(EM_DIAGRAM):   end;
471738    +else do;
MPRINT(EM_DIAGRAM):   else do;
471739    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471740    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
471741    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471742    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471743    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
471744    +   end;
MPRINT(EM_DIAGRAM):   end;
471745    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471746    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
471747    +   end;
MPRINT(EM_DIAGRAM):   end;
471748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471749    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
471750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471752    +   end;
MPRINT(EM_DIAGRAM):   end;
471753    +end;
MPRINT(EM_DIAGRAM):   end;
471754    +
471755    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
471756    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
471757    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
471758    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
471759    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471760    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471761    +end;
MPRINT(EM_DIAGRAM):   end;
471762    +else do;
MPRINT(EM_DIAGRAM):   else do;
471763    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471764    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
471765    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471766    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
471767    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
471768    +   end;
MPRINT(EM_DIAGRAM):   end;
471769    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
471770    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
471771    +   end;
MPRINT(EM_DIAGRAM):   end;
471772    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471773    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
471774    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471775    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471776    +   end;
MPRINT(EM_DIAGRAM):   end;
471777    +end;
MPRINT(EM_DIAGRAM):   end;
471778    +
471779    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
471780    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
471781    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
471782    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
471783    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471784    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471785    +end;
MPRINT(EM_DIAGRAM):   end;
471786    +else do;
MPRINT(EM_DIAGRAM):   else do;
471787    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
471788    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
471789    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471790    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
471791    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
471792    +   end;
MPRINT(EM_DIAGRAM):   end;
471793    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
471794    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
471795    +   end;
MPRINT(EM_DIAGRAM):   end;
471796    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471797    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
471798    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471799    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471800    +   end;
MPRINT(EM_DIAGRAM):   end;
471801    +end;
MPRINT(EM_DIAGRAM):   end;
471802    +
471803    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
471804    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
471805    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
471806    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
471807    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
471808    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
471809    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
471810    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
471811    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
471812    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
471813    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
471814    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
471815    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471816    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471817    +end;
MPRINT(EM_DIAGRAM):   end;
471818    +else do;
MPRINT(EM_DIAGRAM):   else do;
471819    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
471820    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
471821    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471822    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
471823    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
471824    +   end;
MPRINT(EM_DIAGRAM):   end;
471825    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
471826    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
471827    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
471828    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
471829    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
471830    +   end;
MPRINT(EM_DIAGRAM):   end;
471831    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
471832    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
471833    +   end;
MPRINT(EM_DIAGRAM):   end;
471834    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
471835    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
471836    +   end;
MPRINT(EM_DIAGRAM):   end;
471837    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
471838    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
471839    +   end;
MPRINT(EM_DIAGRAM):   end;
471840    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471841    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
471842    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
471843    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
471844    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
471845    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471846    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471847    +   end;
MPRINT(EM_DIAGRAM):   end;
471848    +end;
MPRINT(EM_DIAGRAM):   end;
471849    +
471850    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
471851    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
471852    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
471853    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
471854    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
471855    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
471856    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
471857    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
471858    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
471859    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
471860    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
471861    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
471862    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
471863    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
471864    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471865    +end;
MPRINT(EM_DIAGRAM):   end;
471866    +else do;
MPRINT(EM_DIAGRAM):   else do;
471867    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
471868    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
471869    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
471870    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
471871    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
471872    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
471873    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
471874    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
471875    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471876    +         end;
MPRINT(EM_DIAGRAM):   end;
471877    +         else do;
MPRINT(EM_DIAGRAM):   else do;
471878    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
471879    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
471880    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471881    +            end;
MPRINT(EM_DIAGRAM):   end;
471882    +         end;
MPRINT(EM_DIAGRAM):   end;
471883    +      end;
MPRINT(EM_DIAGRAM):   end;
471884    +      else do;
MPRINT(EM_DIAGRAM):   else do;
471885    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
471886    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
471887    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471888    +         end;
MPRINT(EM_DIAGRAM):   end;
471889    +      end;
MPRINT(EM_DIAGRAM):   end;
471890    +   end;
MPRINT(EM_DIAGRAM):   end;
471891    +   else do;
MPRINT(EM_DIAGRAM):   else do;
471892    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
471893    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
471894    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471895    +      end;
MPRINT(EM_DIAGRAM):   end;
471896    +      else do;
MPRINT(EM_DIAGRAM):   else do;
471897    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
471898    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
471899    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
471900    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
471901    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
471902    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
471903    +         end;
MPRINT(EM_DIAGRAM):   end;
471904    +      end;
MPRINT(EM_DIAGRAM):   end;
471905    +   end;
MPRINT(EM_DIAGRAM):   end;
471906    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
471907    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
471908    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
471909    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
471910    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
471911    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
471912    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471913    +   end;
MPRINT(EM_DIAGRAM):   end;
471914    +end;
MPRINT(EM_DIAGRAM):   end;
471915    +
471916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471917    +*** Checking missing input Interval
471918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
471919    +
471920    +IF NMISS(
471921    +   AcceptedCmpTotal ,
471922    +   Age ,
471923    +   Frq ,
471924    +   Income ,
471925    +   Kidhome ,
471926    +   Mnt ,
471927    +   MntFishProducts ,
471928    +   MntFruits ,
471929    +   MntGoldProds ,
471930    +   MntMeatProducts ,
471931    +   MntSweetProducts ,
471932    +   MntWines ,
471933    +   MonthsAsCustomer ,
471934    +   NumCatalogPurchases ,
471935    +   NumDealsPurchases ,
471936    +   NumDistPurchases ,
471937    +   NumStorePurchases ,
471938    +   NumWebPurchases ,
471939    +   NumWebVisitsMonth ,
471940    +   RFMstat ,
471941    +   RMntFrq ,
471942    +   Recency ,
471943    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
471944    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
471945    +
471946    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
471947    +END;
MPRINT(EM_DIAGRAM):   END;
471948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471949    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
471950    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
471951    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
471952    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
471953    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
471954    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
471955    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
471956    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
471957    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
471958    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
471959    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
471960    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
471961    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
471962    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
471963    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
471964    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
471965    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
471966    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
471967    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
471968    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
471969    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
471970    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
471971    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
471972    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
471973    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
471974    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
471975    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
471976    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
471977    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
471978    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
471979    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
471980    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
471981    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
471982    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
471983    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
471984    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
471985    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
471986    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
471987    +END;
MPRINT(EM_DIAGRAM):   END;
471988    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
471989    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
471990    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
471991    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
471992    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
471993    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
471994    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
471995    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
471996    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
471997    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
471998    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
471999    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
472000    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
472001    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
472002    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
472003    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
472004    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
472005    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
472006    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
472007    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
472008    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
472009    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
472010    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
472011    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
472012    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
472013    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
472014    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
472015    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
472016    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
472017    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
472018    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
472019    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
472020    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
472021    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
472022    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
472023    +   ELSE S_NumCatalogPurchases
472024    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
472025    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
472026    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
472027    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
472028    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
472029    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
472030    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
472031    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
472032    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
472033    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
472034    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
472035    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
472036    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
472037    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
472038    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
472039    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
472040    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
472041    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
472042    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
472043    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
472044    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
472045    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
472046    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
472047    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
472048    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
472049    +END;
MPRINT(EM_DIAGRAM):   END;
472050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472051    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
472052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472054    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
472055    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472057    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
472058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472059    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
472060    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
472061    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
472062    +        S_Income  +     0.51123266106809 * S_Kidhome
472063    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
472064    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
472065    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
472066    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
472067    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
472068    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
472069    +          +     1.34095732961105 * S_NumDealsPurchases
472070    +          +     0.16605991333252 * S_NumDistPurchases
472071    +          +    -0.61746267736536 * S_NumStorePurchases
472072    +          +    -0.61812800689506 * S_NumWebPurchases
472073    +          +     1.44649145055387 * S_NumWebVisitsMonth
472074    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
472075    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
472076    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
472077    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
472078    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
472079    +        S_Income  +     0.52295323651199 * S_Kidhome
472080    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
472081    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
472082    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
472083    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
472084    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
472085    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
472086    +          +    -0.72543332317832 * S_NumDealsPurchases
472087    +          +    -0.05245472565117 * S_NumDistPurchases
472088    +          +     1.00667431585298 * S_NumStorePurchases
472089    +          +     1.02836701470962 * S_NumWebPurchases
472090    +          +    -1.25666606219201 * S_NumWebVisitsMonth
472091    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
472092    +        S_RMntFrq  +     1.50910531484632 * S_Recency
472093    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
472094    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
472095    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
472096    +        S_Income  +     0.58025720116696 * S_Kidhome
472097    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
472098    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
472099    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
472100    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
472101    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
472102    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
472103    +          +     0.12670438262487 * S_NumDealsPurchases
472104    +          +    -0.46113523834333 * S_NumDistPurchases
472105    +          +     0.07074818720567 * S_NumStorePurchases
472106    +          +    -0.05066645783537 * S_NumWebPurchases
472107    +          +    -0.65729410185804 * S_NumWebVisitsMonth
472108    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
472109    +        S_RMntFrq  +      1.4337242246086 * S_Recency
472110    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
472111    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
472112    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
472113    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
472114    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
472115    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
472116    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
472117    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
472118    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
472119    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
472120    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
472121    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
472122    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
472123    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
472124    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
472125    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
472126    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
472127    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
472128    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
472129    +          +     0.12692950862511 * Marital_StatusDivorced
472130    +          +     0.10026497666167 * Marital_StatusMarried
472131    +          +    -0.19893864592813 * Marital_StatusSingle
472132    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
472133    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
472134    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
472135    +        EducationGraduation  +     0.05580498138108 * EducationMaster
472136    +          +    -0.16785192490199 * Marital_StatusDivorced
472137    +          +     0.13153695130362 * Marital_StatusMarried
472138    +          +    -0.50411544587104 * Marital_StatusSingle
472139    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
472140    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
472141    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
472142    +        EducationGraduation  +     0.21882736952662 * EducationMaster
472143    +          +    -0.62654958087044 * Marital_StatusDivorced
472144    +          +     1.86250132393341 * Marital_StatusMarried
472145    +          +    -1.37067556451928 * Marital_StatusSingle
472146    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
472147    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
472148    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
472149    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
472150    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
472151    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
472152    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
472153    +END;
MPRINT(EM_DIAGRAM):   END;
472154    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
472155    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
472156    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
472157    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
472158    +END;
MPRINT(EM_DIAGRAM):   END;
472159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472160    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
472161    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472162    +
472163    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
472164    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
472165    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
472166    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
472167    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
472168    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472169    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
472170    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
472171    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
472172    +end;
MPRINT(EM_DIAGRAM):   end;
472173    +else do;
MPRINT(EM_DIAGRAM):   else do;
472174    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
472175    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
472176    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
472177    +   end;
MPRINT(EM_DIAGRAM):   end;
472178    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
472179    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
472180    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
472181    +   end;
MPRINT(EM_DIAGRAM):   end;
472182    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472183    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
472184    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
472185    +   end;
MPRINT(EM_DIAGRAM):   end;
472186    +end;
MPRINT(EM_DIAGRAM):   end;
472187    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
472188    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
472189    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
472190    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
472191    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
472192    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
472193    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
472194    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
472195    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
472196    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
472197    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
472198    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
472199    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
472200    +END;
MPRINT(EM_DIAGRAM):   END;
472201    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
472202    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
472203    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
472204    +END;
MPRINT(EM_DIAGRAM):   END;
472205    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
472206    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
472207    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
472208    +END;
MPRINT(EM_DIAGRAM):   END;
472209    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
472210    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
472211    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
472212    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
472213    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
472214    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
472215    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
472216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472217    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
472218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472219    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
472220    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
472221    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
472222    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
472223    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
472224    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
472225    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
472226    +END;
MPRINT(EM_DIAGRAM):   END;
472227    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
472228    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
472229    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
472230    +drop
472231    +H11
472232    +H12
472233    +H13
472234    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
472235    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
472236    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
472237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
472238    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
472239    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
472240    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
472241    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
472242    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
472243    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
472244    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
472245    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
472246    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
472247    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
472248    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
472249    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
472250    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
472251    +* Ensmbl25: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 4 of 10;
472252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
472253    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
472254    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
472255    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
472256    +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
472257    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
472258    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
472259    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
472260    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
472261    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
472262    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
472263    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
472264    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
472265    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
472266    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
472267    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
472268    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
472269    +LENGTH _WARN_ $4
472270    +      F_DepVar  $ 12
472271    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
472272    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
472273    +
472274    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
472275    +
472276    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
472277    +
472278    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
472279    +
472280    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
472281    +
472282    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
472283    +
472284    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
472285    +
472286    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
472287    +
472288    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
472289    +
472290    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
472291    +
472292    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
472293    +
472294    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
472295    +
472296    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
472297    +
472298    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
472299    +
472300    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
472301    +
472302    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
472303    +
472304    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
472305    +
472306    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
472307    +
472308    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
472309    +
472310    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
472311    +
472312    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
472313    +
472314    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
472315    +
472316    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
472317    +
472318    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
472319    +
472320    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
472321    +
472322    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
472323    +
472324    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
472325    +
472326    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
472327    +
472328    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
472329    +
472330    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
472331    +
472332    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
472333    +
472334    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
472335    +
472336    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
472337    +
472338    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
472339    +
472340    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
472341    +
472342    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
472343    +
472344    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
472345    +
472346    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
472347    +
472348    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
472349    +
472350    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
472351    +
472352    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
472353    +
472354    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
472355    +
472356    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
472357    +
472358    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
472359    +
472360    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
472361    +
472362    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
472363    +
472364    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
472365    +
472366    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
472367    +
472368    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
472369    +
472370    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
472371    +
472372    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
472373    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
472374    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
472375    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
472376    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472377    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472378    +end;
MPRINT(EM_DIAGRAM):   end;
472379    +else do;
MPRINT(EM_DIAGRAM):   else do;
472380    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
472381    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
472382    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472383    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
472384    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
472385    +   end;
MPRINT(EM_DIAGRAM):   end;
472386    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
472387    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
472388    +   end;
MPRINT(EM_DIAGRAM):   end;
472389    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472390    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
472391    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472392    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472393    +   end;
MPRINT(EM_DIAGRAM):   end;
472394    +end;
MPRINT(EM_DIAGRAM):   end;
472395    +
472396    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
472397    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
472398    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
472399    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
472400    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472401    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472402    +end;
MPRINT(EM_DIAGRAM):   end;
472403    +else do;
MPRINT(EM_DIAGRAM):   else do;
472404    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
472405    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
472406    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472407    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
472408    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
472409    +   end;
MPRINT(EM_DIAGRAM):   end;
472410    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
472411    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
472412    +   end;
MPRINT(EM_DIAGRAM):   end;
472413    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472414    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
472415    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472416    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472417    +   end;
MPRINT(EM_DIAGRAM):   end;
472418    +end;
MPRINT(EM_DIAGRAM):   end;
472419    +
472420    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
472421    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
472422    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
472423    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
472424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472426    +end;
MPRINT(EM_DIAGRAM):   end;
472427    +else do;
MPRINT(EM_DIAGRAM):   else do;
472428    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
472429    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
472430    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472431    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
472432    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
472433    +   end;
MPRINT(EM_DIAGRAM):   end;
472434    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
472435    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
472436    +   end;
MPRINT(EM_DIAGRAM):   end;
472437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472438    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
472439    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472440    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472441    +   end;
MPRINT(EM_DIAGRAM):   end;
472442    +end;
MPRINT(EM_DIAGRAM):   end;
472443    +
472444    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
472445    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
472446    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
472447    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
472448    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472449    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472450    +end;
MPRINT(EM_DIAGRAM):   end;
472451    +else do;
MPRINT(EM_DIAGRAM):   else do;
472452    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
472453    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
472454    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472455    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
472456    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
472457    +   end;
MPRINT(EM_DIAGRAM):   end;
472458    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
472459    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
472460    +   end;
MPRINT(EM_DIAGRAM):   end;
472461    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472462    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
472463    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472464    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472465    +   end;
MPRINT(EM_DIAGRAM):   end;
472466    +end;
MPRINT(EM_DIAGRAM):   end;
472467    +
472468    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
472469    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
472470    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
472471    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
472472    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472473    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472474    +end;
MPRINT(EM_DIAGRAM):   end;
472475    +else do;
MPRINT(EM_DIAGRAM):   else do;
472476    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
472477    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
472478    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472479    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
472480    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
472481    +   end;
MPRINT(EM_DIAGRAM):   end;
472482    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
472483    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
472484    +   end;
MPRINT(EM_DIAGRAM):   end;
472485    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472486    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
472487    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472488    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472489    +   end;
MPRINT(EM_DIAGRAM):   end;
472490    +end;
MPRINT(EM_DIAGRAM):   end;
472491    +
472492    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
472493    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
472494    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
472495    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
472496    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472497    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472498    +end;
MPRINT(EM_DIAGRAM):   end;
472499    +else do;
MPRINT(EM_DIAGRAM):   else do;
472500    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
472501    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
472502    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472503    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
472504    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
472505    +   end;
MPRINT(EM_DIAGRAM):   end;
472506    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
472507    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
472508    +   end;
MPRINT(EM_DIAGRAM):   end;
472509    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472510    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
472511    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472512    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472513    +   end;
MPRINT(EM_DIAGRAM):   end;
472514    +end;
MPRINT(EM_DIAGRAM):   end;
472515    +
472516    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
472517    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
472518    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
472519    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
472520    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472521    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472522    +end;
MPRINT(EM_DIAGRAM):   end;
472523    +else do;
MPRINT(EM_DIAGRAM):   else do;
472524    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
472525    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
472526    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472527    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
472528    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
472529    +   end;
MPRINT(EM_DIAGRAM):   end;
472530    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
472531    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
472532    +   end;
MPRINT(EM_DIAGRAM):   end;
472533    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472534    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
472535    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472536    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472537    +   end;
MPRINT(EM_DIAGRAM):   end;
472538    +end;
MPRINT(EM_DIAGRAM):   end;
472539    +
472540    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
472541    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
472542    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
472543    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
472544    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
472545    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
472546    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
472547    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
472548    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
472549    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
472550    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
472551    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
472552    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472553    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472554    +end;
MPRINT(EM_DIAGRAM):   end;
472555    +else do;
MPRINT(EM_DIAGRAM):   else do;
472556    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
472557    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
472558    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472559    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
472560    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
472561    +   end;
MPRINT(EM_DIAGRAM):   end;
472562    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
472563    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
472564    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
472565    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
472566    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
472567    +   end;
MPRINT(EM_DIAGRAM):   end;
472568    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
472569    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
472570    +   end;
MPRINT(EM_DIAGRAM):   end;
472571    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
472572    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
472573    +   end;
MPRINT(EM_DIAGRAM):   end;
472574    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
472575    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
472576    +   end;
MPRINT(EM_DIAGRAM):   end;
472577    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472578    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
472579    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
472580    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
472581    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
472582    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472583    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472584    +   end;
MPRINT(EM_DIAGRAM):   end;
472585    +end;
MPRINT(EM_DIAGRAM):   end;
472586    +
472587    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
472588    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
472589    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
472590    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
472591    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
472592    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
472593    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
472594    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
472595    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
472596    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
472597    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
472598    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
472599    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
472600    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
472601    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472602    +end;
MPRINT(EM_DIAGRAM):   end;
472603    +else do;
MPRINT(EM_DIAGRAM):   else do;
472604    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
472605    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
472606    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472607    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
472608    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
472609    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
472610    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
472611    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
472612    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
472613    +         end;
MPRINT(EM_DIAGRAM):   end;
472614    +         else do;
MPRINT(EM_DIAGRAM):   else do;
472615    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
472616    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
472617    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
472618    +            end;
MPRINT(EM_DIAGRAM):   end;
472619    +         end;
MPRINT(EM_DIAGRAM):   end;
472620    +      end;
MPRINT(EM_DIAGRAM):   end;
472621    +      else do;
MPRINT(EM_DIAGRAM):   else do;
472622    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
472623    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
472624    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
472625    +         end;
MPRINT(EM_DIAGRAM):   end;
472626    +      end;
MPRINT(EM_DIAGRAM):   end;
472627    +   end;
MPRINT(EM_DIAGRAM):   end;
472628    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472629    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
472630    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
472631    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
472632    +      end;
MPRINT(EM_DIAGRAM):   end;
472633    +      else do;
MPRINT(EM_DIAGRAM):   else do;
472634    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
472635    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
472636    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
472637    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
472638    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
472639    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
472640    +         end;
MPRINT(EM_DIAGRAM):   end;
472641    +      end;
MPRINT(EM_DIAGRAM):   end;
472642    +   end;
MPRINT(EM_DIAGRAM):   end;
472643    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
472644    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
472645    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
472646    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
472647    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
472648    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
472649    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472650    +   end;
MPRINT(EM_DIAGRAM):   end;
472651    +end;
MPRINT(EM_DIAGRAM):   end;
472652    +
472653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472654    +*** Checking missing input Interval
472655    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
472656    +
472657    +IF NMISS(
472658    +   AcceptedCmpTotal ,
472659    +   Age ,
472660    +   Frq ,
472661    +   Income ,
472662    +   Kidhome ,
472663    +   Mnt ,
472664    +   MntFishProducts ,
472665    +   MntFruits ,
472666    +   MntGoldProds ,
472667    +   MntMeatProducts ,
472668    +   MntSweetProducts ,
472669    +   MntWines ,
472670    +   MonthsAsCustomer ,
472671    +   NumCatalogPurchases ,
472672    +   NumDealsPurchases ,
472673    +   NumDistPurchases ,
472674    +   NumStorePurchases ,
472675    +   NumWebPurchases ,
472676    +   NumWebVisitsMonth ,
472677    +   RFMstat ,
472678    +   RMntFrq ,
472679    +   Recency ,
472680    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
472681    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
472682    +
472683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
472684    +END;
MPRINT(EM_DIAGRAM):   END;
472685    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472686    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
472687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472688    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
472689    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
472690    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
472691    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
472692    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
472693    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
472694    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
472695    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
472696    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
472697    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
472698    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
472699    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
472700    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
472701    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
472702    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
472703    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
472704    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
472705    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
472706    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
472707    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
472708    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
472709    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
472710    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
472711    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
472712    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
472713    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
472714    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
472715    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
472716    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
472717    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
472718    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
472719    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
472720    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
472721    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
472722    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
472723    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
The SAS System

MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
472724    +END;
MPRINT(EM_DIAGRAM):   END;
472725    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
472726    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
472727    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
472728    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
472729    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
472730    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
472731    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
472732    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
472733    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
472734    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
472735    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
472736    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
472737    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
472738    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
472739    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
472740    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
472741    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
472742    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
472743    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
472744    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
472745    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
472746    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
472747    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
472748    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
472749    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
472750    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
472751    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
472752    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
472753    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
472754    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
472755    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
472756    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
472757    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
472758    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
472759    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
472760    +   ELSE S_NumCatalogPurchases
472761    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
472762    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
472763    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
472764    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
472765    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
472766    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
472767    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
472768    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
472769    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
472770    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
472771    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
472772    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
472773    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
472774    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
472775    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
472776    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
472777    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
472778    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
472779    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
472780    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
472781    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
472782    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
472783    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
472784    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
472785    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
472786    +END;
MPRINT(EM_DIAGRAM):   END;
472787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472788    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
472789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472790    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472791    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
472792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472793    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472794    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
472795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472796    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
472797    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
472798    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
472799    +        S_Income  +    -0.27053363011695 * S_Kidhome
472800    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
472801    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
472802    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
472803    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
472804    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
472805    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
472806    +          +    -1.35624485206227 * S_NumDealsPurchases
472807    +          +    -0.54646115734684 * S_NumDistPurchases
472808    +          +     1.29794225108321 * S_NumStorePurchases
472809    +          +      1.8453064081809 * S_NumWebPurchases
472810    +          +    -0.92747144824026 * S_NumWebVisitsMonth
472811    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
472812    +        S_RMntFrq  +     0.73207333681971 * S_Recency
472813    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
472814    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
472815    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
472816    +        S_Income  +    -0.79821220724157 * S_Kidhome
472817    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
472818    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
472819    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
472820    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
472821    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
472822    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
472823    +          +     0.72513216556859 * S_NumDealsPurchases
472824    +          +    -0.15566774650584 * S_NumDistPurchases
472825    +          +     -0.8847675798982 * S_NumStorePurchases
472826    +          +    -0.79405200318252 * S_NumWebPurchases
472827    +          +     1.74003779802254 * S_NumWebVisitsMonth
472828    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
472829    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
472830    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
472831    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
472832    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
472833    +        S_Income  +    -0.58596240450544 * S_Kidhome
472834    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
472835    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
472836    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
472837    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
472838    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
472839    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
472840    +          +     0.17466385502192 * S_NumDealsPurchases
472841    +          +    -0.06219545947203 * S_NumDistPurchases
472842    +          +     0.16637546838853 * S_NumStorePurchases
472843    +          +    -0.06908729397635 * S_NumWebPurchases
472844    +          +     1.44269772444244 * S_NumWebVisitsMonth
472845    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
472846    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
472847    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
472848    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
472849    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
472850    +        S_Income  +    -0.42454238091412 * S_Kidhome
472851    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
472852    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
472853    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
472854    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
472855    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
472856    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
472857    +          +     0.77329078721398 * S_NumDealsPurchases
472858    +          +     0.31693324305765 * S_NumDistPurchases
472859    +          +    -1.08524196373091 * S_NumStorePurchases
472860    +          +    -0.96945384922979 * S_NumWebPurchases
472861    +          +     1.24659288571587 * S_NumWebVisitsMonth
472862    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
472863    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
472864    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
472865    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
472866    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
472867    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
472868    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
472869    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
472870    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
472871    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
472872    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
472873    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
472874    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
472875    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
472876    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
472877    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
472878    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
472879    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
472880    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
472881    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
472882    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
472883    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
472884    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
472885    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
472886    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
472887    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
472888    +          +     0.36788499721115 * Marital_StatusDivorced
472889    +          +    -0.16988636986433 * Marital_StatusMarried
472890    +          +    -0.24560973256761 * Marital_StatusSingle
472891    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
472892    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
472893    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
472894    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
472895    +          +     0.24497797058028 * Marital_StatusDivorced
472896    +          +    -1.44410245434424 * Marital_StatusMarried
472897    +          +     1.47441310087392 * Marital_StatusSingle
472898    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
472899    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
472900    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
472901    +        EducationGraduation  +     0.04653963359475 * EducationMaster
472902    +          +     0.15823225296452 * Marital_StatusDivorced
472903    +          +    -0.39129434667884 * Marital_StatusMarried
472904    +          +     0.84414069966504 * Marital_StatusSingle
472905    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
472906    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
472907    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
472908    +        EducationGraduation  +     0.40030852414737 * EducationMaster
472909    +          +     1.22039169814542 * Marital_StatusDivorced
472910    +          +     0.91592976063128 * Marital_StatusMarried
472911    +          +    -1.51267332883308 * Marital_StatusSingle
472912    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
472913    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
472914    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
472915    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
472916    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
472917    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
472918    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
472919    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
472920    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
472921    +END;
MPRINT(EM_DIAGRAM):   END;
472922    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
472923    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
472924    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
472925    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
472926    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
472927    +END;
MPRINT(EM_DIAGRAM):   END;
472928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472929    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
472930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472931    +
472932    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
472933    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
472934    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
472935    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
472936    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
472937    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
472938    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
472939    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
472940    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
472941    +end;
MPRINT(EM_DIAGRAM):   end;
472942    +else do;
MPRINT(EM_DIAGRAM):   else do;
472943    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
472944    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
472945    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
472946    +   end;
MPRINT(EM_DIAGRAM):   end;
472947    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
472948    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
472949    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
472950    +   end;
MPRINT(EM_DIAGRAM):   end;
472951    +   else do;
MPRINT(EM_DIAGRAM):   else do;
472952    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
472953    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
472954    +   end;
MPRINT(EM_DIAGRAM):   end;
472955    +end;
MPRINT(EM_DIAGRAM):   end;
472956    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
472957    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
472958    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
472959    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
472960    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
472961    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
472962    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
472963    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
472964    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
472965    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
472966    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
472967    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
472968    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
472969    +END;
MPRINT(EM_DIAGRAM):   END;
472970    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
472971    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
472972    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
472973    +END;
MPRINT(EM_DIAGRAM):   END;
472974    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
472975    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
472976    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
472977    +END;
MPRINT(EM_DIAGRAM):   END;
472978    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
472979    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
472980    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
472981    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
472982    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
472983    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
472984    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
472985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472986    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
472987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
472988    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
472989    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
472990    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
472991    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
472992    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
472993    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
472994    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
472995    +END;
MPRINT(EM_DIAGRAM):   END;
472996    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
472997    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
472998    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
472999    +drop
473000    +H11
473001    +H12
473002    +H13
473003    +H14
473004    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
473005    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
473006    +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
473007    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473008    +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
473009    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473010    +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
473011    +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
473012    +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
473013    +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
473014    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473015    +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
473016    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473017    +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
473018    +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
473019    +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
473020    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473021    +* Ensmbl25: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 5 of 10;
473022    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473024    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
473025    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
473026    +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
473027    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473028    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
473029    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
473030    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
473031    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
473032    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
473033    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
473034    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
473035    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
473036    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
473037    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
473038    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
473039    +LENGTH _WARN_ $4
473040    +      F_DepVar  $ 12
473041    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
473042    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
473043    +
473044    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
473045    +
473046    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
473047    +
473048    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
473049    +
473050    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
473051    +
473052    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
473053    +
473054    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
473055    +
473056    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
473057    +
473058    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
473059    +
473060    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
473061    +
473062    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
473063    +
473064    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
473065    +
473066    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
473067    +
473068    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
473069    +
473070    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
473071    +
473072    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
473073    +
473074    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
473075    +
473076    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
473077    +
473078    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
473079    +
473080    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
473081    +
473082    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
473083    +
473084    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
473085    +
473086    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
473087    +
473088    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
473089    +
473090    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
473091    +
473092    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
473093    +
473094    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
473095    +
473096    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
473097    +
473098    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
473099    +
473100    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
473101    +
473102    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
473103    +
473104    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
473105    +
473106    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
473107    +
473108    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
473109    +
473110    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
473111    +
473112    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
473113    +
473114    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
473115    +
473116    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
473117    +
473118    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
473119    +
473120    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
473121    +
473122    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
473123    +
473124    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
473125    +
473126    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
473127    +
473128    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
473129    +
473130    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
473131    +
473132    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
473133    +
473134    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
473135    +
473136    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
473137    +
473138    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
473139    +
473140    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
473141    +
473142    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
473143    +
473144    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
473145    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
473146    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
473147    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
473148    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473150    +end;
MPRINT(EM_DIAGRAM):   end;
473151    +else do;
MPRINT(EM_DIAGRAM):   else do;
473152    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473153    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
473154    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473155    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
473156    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
473157    +   end;
MPRINT(EM_DIAGRAM):   end;
473158    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
473159    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
473160    +   end;
MPRINT(EM_DIAGRAM):   end;
473161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473162    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
473163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473165    +   end;
MPRINT(EM_DIAGRAM):   end;
473166    +end;
MPRINT(EM_DIAGRAM):   end;
473167    +
473168    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
473169    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
473170    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
473171    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
473172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473174    +end;
MPRINT(EM_DIAGRAM):   end;
473175    +else do;
MPRINT(EM_DIAGRAM):   else do;
473176    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473177    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
473178    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473179    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
473180    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
473181    +   end;
MPRINT(EM_DIAGRAM):   end;
473182    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
473183    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
473184    +   end;
MPRINT(EM_DIAGRAM):   end;
473185    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473186    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
473187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473189    +   end;
MPRINT(EM_DIAGRAM):   end;
473190    +end;
MPRINT(EM_DIAGRAM):   end;
473191    +
473192    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
473193    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
473194    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
473195    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
473196    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473197    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473198    +end;
MPRINT(EM_DIAGRAM):   end;
473199    +else do;
MPRINT(EM_DIAGRAM):   else do;
473200    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473201    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
473202    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473203    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
473204    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
473205    +   end;
MPRINT(EM_DIAGRAM):   end;
473206    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
473207    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
473208    +   end;
MPRINT(EM_DIAGRAM):   end;
473209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473210    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
473211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473213    +   end;
MPRINT(EM_DIAGRAM):   end;
473214    +end;
MPRINT(EM_DIAGRAM):   end;
473215    +
473216    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
473217    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
473218    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
473219    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
473220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473222    +end;
MPRINT(EM_DIAGRAM):   end;
473223    +else do;
MPRINT(EM_DIAGRAM):   else do;
473224    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473225    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
473226    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473227    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
473228    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
473229    +   end;
MPRINT(EM_DIAGRAM):   end;
473230    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
473231    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
473232    +   end;
MPRINT(EM_DIAGRAM):   end;
473233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473234    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
473235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473237    +   end;
MPRINT(EM_DIAGRAM):   end;
473238    +end;
MPRINT(EM_DIAGRAM):   end;
473239    +
473240    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
473241    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
473242    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
473243    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
473244    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473245    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473246    +end;
MPRINT(EM_DIAGRAM):   end;
473247    +else do;
MPRINT(EM_DIAGRAM):   else do;
473248    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473249    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
473250    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473251    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
473252    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
473253    +   end;
MPRINT(EM_DIAGRAM):   end;
473254    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
473255    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
473256    +   end;
MPRINT(EM_DIAGRAM):   end;
473257    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473258    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
473259    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473260    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473261    +   end;
MPRINT(EM_DIAGRAM):   end;
473262    +end;
MPRINT(EM_DIAGRAM):   end;
473263    +
473264    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
473265    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
473266    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
473267    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
473268    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473269    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473270    +end;
MPRINT(EM_DIAGRAM):   end;
473271    +else do;
MPRINT(EM_DIAGRAM):   else do;
473272    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473273    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
473274    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473275    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
473276    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
473277    +   end;
MPRINT(EM_DIAGRAM):   end;
473278    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
473279    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
473280    +   end;
MPRINT(EM_DIAGRAM):   end;
473281    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473282    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
473283    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473284    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473285    +   end;
MPRINT(EM_DIAGRAM):   end;
473286    +end;
MPRINT(EM_DIAGRAM):   end;
473287    +
473288    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
473289    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
473290    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
473291    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
473292    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473293    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473294    +end;
MPRINT(EM_DIAGRAM):   end;
473295    +else do;
MPRINT(EM_DIAGRAM):   else do;
473296    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473297    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
473298    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473299    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
473300    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
473301    +   end;
MPRINT(EM_DIAGRAM):   end;
473302    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
473303    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
473304    +   end;
MPRINT(EM_DIAGRAM):   end;
473305    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473306    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
473307    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473308    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473309    +   end;
MPRINT(EM_DIAGRAM):   end;
473310    +end;
MPRINT(EM_DIAGRAM):   end;
473311    +
473312    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
473313    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
473314    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
473315    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
473316    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
473317    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
473318    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
473319    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
473320    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
473321    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
473322    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
473323    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
473324    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473325    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473326    +end;
MPRINT(EM_DIAGRAM):   end;
473327    +else do;
MPRINT(EM_DIAGRAM):   else do;
473328    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
473329    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
473330    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473331    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
473332    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
473333    +   end;
MPRINT(EM_DIAGRAM):   end;
473334    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
473335    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
473336    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
473337    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
473338    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
473339    +   end;
MPRINT(EM_DIAGRAM):   end;
473340    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
473341    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
473342    +   end;
MPRINT(EM_DIAGRAM):   end;
473343    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
473344    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
473345    +   end;
MPRINT(EM_DIAGRAM):   end;
473346    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
473347    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
473348    +   end;
MPRINT(EM_DIAGRAM):   end;
473349    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473350    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
473351    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
473352    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
473353    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
473354    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473355    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473356    +   end;
MPRINT(EM_DIAGRAM):   end;
473357    +end;
MPRINT(EM_DIAGRAM):   end;
473358    +
473359    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
473360    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
473361    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
473362    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
473363    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
473364    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
473365    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
473366    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
473367    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
473368    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
473369    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
473370    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
473371    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
473372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473374    +end;
MPRINT(EM_DIAGRAM):   end;
473375    +else do;
MPRINT(EM_DIAGRAM):   else do;
473376    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
473377    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
473378    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473379    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
473380    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
473381    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
473382    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
473383    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
473384    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
473385    +         end;
MPRINT(EM_DIAGRAM):   end;
473386    +         else do;
MPRINT(EM_DIAGRAM):   else do;
473387    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
473388    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
473389    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
473390    +            end;
MPRINT(EM_DIAGRAM):   end;
473391    +         end;
MPRINT(EM_DIAGRAM):   end;
473392    +      end;
MPRINT(EM_DIAGRAM):   end;
473393    +      else do;
MPRINT(EM_DIAGRAM):   else do;
473394    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
473395    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
473396    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
473397    +         end;
MPRINT(EM_DIAGRAM):   end;
473398    +      end;
MPRINT(EM_DIAGRAM):   end;
473399    +   end;
MPRINT(EM_DIAGRAM):   end;
473400    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473401    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
473402    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
473403    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
473404    +      end;
MPRINT(EM_DIAGRAM):   end;
473405    +      else do;
MPRINT(EM_DIAGRAM):   else do;
473406    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
473407    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
473408    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
473409    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
473410    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
473411    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
473412    +         end;
MPRINT(EM_DIAGRAM):   end;
473413    +      end;
MPRINT(EM_DIAGRAM):   end;
473414    +   end;
MPRINT(EM_DIAGRAM):   end;
473415    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
473416    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
473417    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
473418    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
473419    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
473420    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473421    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473422    +   end;
MPRINT(EM_DIAGRAM):   end;
473423    +end;
MPRINT(EM_DIAGRAM):   end;
473424    +
473425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473426    +*** Checking missing input Interval
473427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
473428    +
473429    +IF NMISS(
473430    +   AcceptedCmpTotal ,
473431    +   Age ,
473432    +   Frq ,
473433    +   Income ,
473434    +   Kidhome ,
473435    +   Mnt ,
473436    +   MntFishProducts ,
473437    +   MntFruits ,
473438    +   MntGoldProds ,
473439    +   MntMeatProducts ,
473440    +   MntSweetProducts ,
473441    +   MntWines ,
473442    +   MonthsAsCustomer ,
473443    +   NumCatalogPurchases ,
473444    +   NumDealsPurchases ,
473445    +   NumDistPurchases ,
473446    +   NumStorePurchases ,
473447    +   NumWebPurchases ,
473448    +   NumWebVisitsMonth ,
473449    +   RFMstat ,
473450    +   RMntFrq ,
473451    +   Recency ,
473452    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
473453    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
473454    +
473455    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473456    +END;
MPRINT(EM_DIAGRAM):   END;
473457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473458    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
473459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473460    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
473461    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
473462    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
473463    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
473464    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
473465    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
473466    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
473467    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
473468    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
473469    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
473470    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
473471    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
473472    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
473473    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
473474    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
473475    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
473476    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
473477    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
473478    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
473479    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
473480    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
473481    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
473482    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
473483    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
473484    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
473485    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
473486    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
473487    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
473488    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
473489    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
473490    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
473491    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
473492    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
473493    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
473494    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
473495    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
473496    +END;
MPRINT(EM_DIAGRAM):   END;
473497    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
473498    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
473499    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
473500    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
473501    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
473502    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
473503    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
473504    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
473505    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
473506    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
473507    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
473508    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
473509    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
473510    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
473511    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
473512    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
473513    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
473514    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
473515    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
473516    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
473517    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
473518    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
473519    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
473520    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
473521    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
473522    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
473523    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
473524    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
473525    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
473526    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
473527    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
473528    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
473529    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
473530    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
473531    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
473532    +   ELSE S_NumCatalogPurchases
473533    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
473534    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
473535    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
473536    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
473537    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
473538    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
473539    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
473540    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
473541    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
473542    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
473543    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
473544    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
473545    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
473546    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
473547    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
473548    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
473549    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
473550    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
473551    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
473552    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
473553    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
473554    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
473555    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
473556    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
473557    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
473558    +END;
MPRINT(EM_DIAGRAM):   END;
473559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473560    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
473561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473563    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
473564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473566    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
473567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473568    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
473569    +   H11  =     0.13594465912127 * S_AcceptedCmpTotal  +    -0.04369874222877 *
473570    +        S_Age  +     -0.0222974124172 * S_Frq  +    -0.11043551468483 *
473571    +        S_Income  +    -0.32248758927071 * S_Kidhome
473572    +          +      0.0776161679259 * S_Mnt  +    -0.08725654580836 *
473573    +        S_MntFishProducts  +     0.14236031403157 * S_MntFruits
473574    +          +    -0.48581570899412 * S_MntGoldProds  +     0.03414406983139 *
473575    +        S_MntMeatProducts  +    -0.23271736394479 * S_MntSweetProducts
473576    +          +     0.43105893695077 * S_MntWines  +     0.31123874593742 *
473577    +        S_MonthsAsCustomer  +    -0.19669815006873 * S_NumCatalogPurchases
473578    +          +    -0.68207513361313 * S_NumDealsPurchases
473579    +          +    -0.37964850256921 * S_NumDistPurchases
473580    +          +     0.36066480603854 * S_NumStorePurchases
473581    +          +     0.25966011307033 * S_NumWebPurchases
473582    +          +    -0.03958464718959 * S_NumWebVisitsMonth
473583    +          +    -0.12441133162569 * S_RFMstat  +     0.05838942731159 *
473584    +        S_RMntFrq  +      0.2807801943237 * S_Recency
473585    +          +    -0.10186253847778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13594465912127 * S_AcceptedCmpTotal + -0.04369874222877 * S_Age 
+ -0.0222974124172 * S_Frq + -0.11043551468483 * S_Income + -0.32248758927071 * S_Kidhome + 
0.0776161679259 * S_Mnt + -0.08725654580836 * S_MntFishProducts + 0.14236031403157 * 
S_MntFruits + -0.48581570899412 * S_MntGoldProds + 0.03414406983139 * S_MntMeatProducts + 
-0.23271736394479 * S_MntSweetProducts + 0.43105893695077 * S_MntWines + 0.31123874593742 * 
S_MonthsAsCustomer + -0.19669815006873 * S_NumCatalogPurchases + -0.68207513361313 * 
S_NumDealsPurchases + -0.37964850256921 * S_NumDistPurchases + 0.36066480603854 * 
S_NumStorePurchases + 0.25966011307033 * S_NumWebPurchases + -0.03958464718959 * 
S_NumWebVisitsMonth + -0.12441133162569 * S_RFMstat + 0.05838942731159 * S_RMntFrq + 
0.2807801943237 * S_Recency + -0.10186253847778 * S_Teenhome ;
473586    +   H12  =     0.03443433887324 * S_AcceptedCmpTotal  +    -0.33034112884719 *
473587    +        S_Age  +    -0.29426561048486 * S_Frq  +      0.1259913339118 *
473588    +        S_Income  +    -0.01525271628925 * S_Kidhome
473589    +          +     0.12125196820394 * S_Mnt  +     0.27499561817138 *
473590    +        S_MntFishProducts  +     0.02702998039497 * S_MntFruits
473591    +          +     0.19117237676118 * S_MntGoldProds  +     0.14988798454777 *
473592    +        S_MntMeatProducts  +    -0.12004881951738 * S_MntSweetProducts
473593    +          +     0.21492388287889 * S_MntWines  +    -0.32645982553718 *
473594    +        S_MonthsAsCustomer  +     0.33162536777041 * S_NumCatalogPurchases
473595    +          +    -0.05060212016961 * S_NumDealsPurchases
473596    +          +    -0.14809619066524 * S_NumDistPurchases
473597    +          +    -0.02428798408125 * S_NumStorePurchases
473598    +          +     0.05554695337353 * S_NumWebPurchases
473599    +          +     -0.3347797414912 * S_NumWebVisitsMonth
473600    +          +    -0.08694305340873 * S_RFMstat  +    -0.34566171030649 *
473601    +        S_RMntFrq  +     0.34878481829389 * S_Recency
473602    +          +     0.10894516705031 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.03443433887324 * S_AcceptedCmpTotal + -0.33034112884719 * S_Age 
+ -0.29426561048486 * S_Frq + 0.1259913339118 * S_Income + -0.01525271628925 * S_Kidhome + 
0.12125196820394 * S_Mnt + 0.27499561817138 * S_MntFishProducts + 0.02702998039497 * 
S_MntFruits + 0.19117237676118 * S_MntGoldProds + 0.14988798454777 * S_MntMeatProducts + 
-0.12004881951738 * S_MntSweetProducts + 0.21492388287889 * S_MntWines + -0.32645982553718 * 
S_MonthsAsCustomer + 0.33162536777041 * S_NumCatalogPurchases + -0.05060212016961 * 
S_NumDealsPurchases + -0.14809619066524 * S_NumDistPurchases + -0.02428798408125 * 
S_NumStorePurchases + 0.05554695337353 * S_NumWebPurchases + -0.3347797414912 * 
S_NumWebVisitsMonth + -0.08694305340873 * S_RFMstat + -0.34566171030649 * S_RMntFrq + 
0.34878481829389 * S_Recency + 0.10894516705031 * S_Teenhome ;
473603    +   H13  =     0.00370096998686 * S_AcceptedCmpTotal  +    -0.51953611125691 *
473604    +        S_Age  +     0.17877016433586 * S_Frq  +     0.06789251642015 *
473605    +        S_Income  +    -0.05479760920776 * S_Kidhome
473606    +          +    -0.03872422009017 * S_Mnt  +    -0.14541111406951 *
473607    +        S_MntFishProducts  +     0.02855123883129 * S_MntFruits
473608    +          +     0.25306699654279 * S_MntGoldProds  +     0.08795222920616 *
473609    +        S_MntMeatProducts  +    -0.02903225924096 * S_MntSweetProducts
473610    +          +     0.15553330295402 * S_MntWines  +     0.02888022983016 *
473611    +        S_MonthsAsCustomer  +    -0.17290950123626 * S_NumCatalogPurchases
473612    +          +     0.18029447475323 * S_NumDealsPurchases
473613    +          +     0.05934542805435 * S_NumDistPurchases
473614    +          +     0.11232970412862 * S_NumStorePurchases
473615    +          +    -0.10916601726159 * S_NumWebPurchases
473616    +          +    -0.01910812243665 * S_NumWebVisitsMonth
473617    +          +    -0.21344753217364 * S_RFMstat  +      0.1645823437477 *
473618    +        S_RMntFrq  +    -0.40799689263706 * S_Recency
473619    +          +     0.02511588992095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.00370096998686 * S_AcceptedCmpTotal + -0.51953611125691 * S_Age 
+ 0.17877016433586 * S_Frq + 0.06789251642015 * S_Income + -0.05479760920776 * S_Kidhome + 
-0.03872422009017 * S_Mnt + -0.14541111406951 * S_MntFishProducts + 0.02855123883129 * 
S_MntFruits + 0.25306699654279 * S_MntGoldProds + 0.08795222920616 * S_MntMeatProducts + 
-0.02903225924096 * S_MntSweetProducts + 0.15553330295402 * S_MntWines + 0.02888022983016 * 
S_MonthsAsCustomer + -0.17290950123626 * S_NumCatalogPurchases + 0.18029447475323 * 
S_NumDealsPurchases + 0.05934542805435 * S_NumDistPurchases + 0.11232970412862 * 
S_NumStorePurchases + -0.10916601726159 * S_NumWebPurchases + -0.01910812243665 * 
S_NumWebVisitsMonth + -0.21344753217364 * S_RFMstat + 0.1645823437477 * S_RMntFrq + 
-0.40799689263706 * S_Recency + 0.02511588992095 * S_Teenhome ;
473620    +   H14  =    -0.61829421083246 * S_AcceptedCmpTotal  +    -0.16873052249719 *
473621    +        S_Age  +     0.13439351408573 * S_Frq  +    -0.50103344614666 *
473622    +        S_Income  +     0.31726096463976 * S_Kidhome
473623    +          +    -0.15181042208759 * S_Mnt  +     0.31922880035738 *
473624    +        S_MntFishProducts  +     0.09386333655585 * S_MntFruits
473625    +          +    -0.12620631685892 * S_MntGoldProds  +    -0.92555808639473 *
473626    +        S_MntMeatProducts  +    -0.15556710025124 * S_MntSweetProducts
473627    +          +     0.59625872106317 * S_MntWines  +    -0.14105032907988 *
473628    +        S_MonthsAsCustomer  +    -0.27105883046781 * S_NumCatalogPurchases
473629    +          +    -0.05889648319294 * S_NumDealsPurchases
473630    +          +     0.04297768152043 * S_NumDistPurchases
473631    +          +     0.08289772168464 * S_NumStorePurchases
473632    +          +     0.02925451736459 * S_NumWebPurchases
473633    +          +    -0.34806744064693 * S_NumWebVisitsMonth
473634    +          +    -0.10075155542626 * S_RFMstat  +    -0.54230386384017 *
473635    +        S_RMntFrq  +     0.54567939140523 * S_Recency
473636    +          +     0.75126712310981 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.61829421083246 * S_AcceptedCmpTotal + -0.16873052249719 * S_Age 
+ 0.13439351408573 * S_Frq + -0.50103344614666 * S_Income + 0.31726096463976 * S_Kidhome + 
-0.15181042208759 * S_Mnt + 0.31922880035738 * S_MntFishProducts + 0.09386333655585 * 
S_MntFruits + -0.12620631685892 * S_MntGoldProds + -0.92555808639473 * S_MntMeatProducts + 
-0.15556710025124 * S_MntSweetProducts + 0.59625872106317 * S_MntWines + -0.14105032907988 * 
S_MonthsAsCustomer + -0.27105883046781 * S_NumCatalogPurchases + -0.05889648319294 * 
S_NumDealsPurchases + 0.04297768152043 * S_NumDistPurchases + 0.08289772168464 * 
S_NumStorePurchases + 0.02925451736459 * S_NumWebPurchases + -0.34806744064693 * 
S_NumWebVisitsMonth + -0.10075155542626 * S_RFMstat + -0.54230386384017 * S_RMntFrq + 
0.54567939140523 * S_Recency + 0.75126712310981 * S_Teenhome ;
473637    +   H15  =     0.47250221965687 * S_AcceptedCmpTotal  +    -0.07487325745499 *
473638    +        S_Age  +      0.0382122049104 * S_Frq  +     0.55347292090838 *
473639    +        S_Income  +     -0.1831746721838 * S_Kidhome
473640    +          +    -0.12974904479016 * S_Mnt  +    -0.03773564357475 *
473641    +        S_MntFishProducts  +    -0.08740721632052 * S_MntFruits
473642    +          +    -0.10157053454184 * S_MntGoldProds  +     0.52457296443385 *
473643    +        S_MntMeatProducts  +    -0.13287009184486 * S_MntSweetProducts
473644    +          +    -0.37745748357546 * S_MntWines  +    -0.04143657431262 *
473645    +        S_MonthsAsCustomer  +     0.67758682109997 * S_NumCatalogPurchases
473646    +          +     0.46814119938755 * S_NumDealsPurchases
473647    +          +     0.03182241038425 * S_NumDistPurchases
473648    +          +    -0.51911846047007 * S_NumStorePurchases
473649    +          +    -0.53954754105242 * S_NumWebPurchases
473650    +          +     1.07208473057077 * S_NumWebVisitsMonth
473651    +          +     0.12556098363101 * S_RFMstat  +    -0.05748040855256 *
473652    +        S_RMntFrq  +    -0.95916513053649 * S_Recency
473653    +          +    -0.24142268692108 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.47250221965687 * S_AcceptedCmpTotal + -0.07487325745499 * S_Age 
+ 0.0382122049104 * S_Frq + 0.55347292090838 * S_Income + -0.1831746721838 * S_Kidhome + 
-0.12974904479016 * S_Mnt + -0.03773564357475 * S_MntFishProducts + -0.08740721632052 * 
S_MntFruits + -0.10157053454184 * S_MntGoldProds + 0.52457296443385 * S_MntMeatProducts + 
-0.13287009184486 * S_MntSweetProducts + -0.37745748357546 * S_MntWines + -0.04143657431262 * 
S_MonthsAsCustomer + 0.67758682109997 * S_NumCatalogPurchases + 0.46814119938755 * 
S_NumDealsPurchases + 0.03182241038425 * S_NumDistPurchases + -0.51911846047007 * 
S_NumStorePurchases + -0.53954754105242 * S_NumWebPurchases + 1.07208473057077 * 
S_NumWebVisitsMonth + 0.12556098363101 * S_RFMstat + -0.05748040855256 * S_RMntFrq + 
-0.95916513053649 * S_Recency + -0.24142268692108 * S_Teenhome ;
473654    +   H11  = H11  +      0.0203211213932 * AcceptedCmp10
473655    +          +    -0.24671835063904 * AcceptedCmp20  +    -0.16470646765907 *
473656    +        AcceptedCmp30  +     -0.4099897223583 * AcceptedCmp40
473657    +          +    -0.11336081432536 * AcceptedCmp50  +    -0.42649732753042 *
473658    +        Complain0  +     -0.0416551568273 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0203211213932 * AcceptedCmp10 + -0.24671835063904 * 
AcceptedCmp20 + -0.16470646765907 * AcceptedCmp30 + -0.4099897223583 * AcceptedCmp40 + 
-0.11336081432536 * AcceptedCmp50 + -0.42649732753042 * Complain0 + -0.0416551568273 * 
HigherEducationBinary0 ;
473659    +   H12  = H12  +     0.02213559506685 * AcceptedCmp10
473660    +          +      0.0220571091041 * AcceptedCmp20  +     0.17399856069521 *
473661    +        AcceptedCmp30  +    -0.18257604858416 * AcceptedCmp40
473662    +          +    -0.18091572749617 * AcceptedCmp50  +     0.05174557804497 *
473663    +        Complain0  +    -0.05809342634244 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02213559506685 * AcceptedCmp10 + 0.0220571091041 * 
AcceptedCmp20 + 0.17399856069521 * AcceptedCmp30 + -0.18257604858416 * AcceptedCmp40 + 
-0.18091572749617 * AcceptedCmp50 + 0.05174557804497 * Complain0 + -0.05809342634244 * 
HigherEducationBinary0 ;
473664    +   H13  = H13  +     0.18240929240485 * AcceptedCmp10
473665    +          +     0.08046156423197 * AcceptedCmp20  +    -0.09196288275429 *
473666    +        AcceptedCmp30  +     0.22693642674212 * AcceptedCmp40
473667    +          +    -0.22127877339648 * AcceptedCmp50  +     0.22787694199297 *
473668    +        Complain0  +    -0.20447728360836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18240929240485 * AcceptedCmp10 + 0.08046156423197 * 
AcceptedCmp20 + -0.09196288275429 * AcceptedCmp30 + 0.22693642674212 * AcceptedCmp40 + 
-0.22127877339648 * AcceptedCmp50 + 0.22787694199297 * Complain0 + -0.20447728360836 * 
HigherEducationBinary0 ;
473669    +   H14  = H14  +     0.15760334306304 * AcceptedCmp10
473670    +          +     0.25177195217647 * AcceptedCmp20  +     0.58646837477387 *
473671    +        AcceptedCmp30  +     0.35808865186096 * AcceptedCmp40
473672    +          +     0.24279152213079 * AcceptedCmp50  +    -0.03682926397711 *
473673    +        Complain0  +    -0.42398917474831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15760334306304 * AcceptedCmp10 + 0.25177195217647 * 
AcceptedCmp20 + 0.58646837477387 * AcceptedCmp30 + 0.35808865186096 * AcceptedCmp40 + 
0.24279152213079 * AcceptedCmp50 + -0.03682926397711 * Complain0 + -0.42398917474831 * 
HigherEducationBinary0 ;
473674    +   H15  = H15  +    -0.09968006776007 * AcceptedCmp10
473675    +          +     0.09022158834293 * AcceptedCmp20  +    -0.10842101964798 *
473676    +        AcceptedCmp30  +    -0.13099813140438 * AcceptedCmp40
473677    +          +    -0.22167423223515 * AcceptedCmp50  +    -0.04428927537039 *
473678    +        Complain0  +    -0.26182339546076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.09968006776007 * AcceptedCmp10 + 0.09022158834293 * 
AcceptedCmp20 + -0.10842101964798 * AcceptedCmp30 + -0.13099813140438 * AcceptedCmp40 + 
-0.22167423223515 * AcceptedCmp50 + -0.04428927537039 * Complain0 + -0.26182339546076 * 
HigherEducationBinary0 ;
473679    +   H11  = H11  +    -0.01959847584448 * Education2n_Cycle
473680    +          +    -0.23759194699722 * EducationBasic  +    -0.09694759635569 *
473681    +        EducationGraduation  +     0.16905118469563 * EducationMaster
473682    +          +     0.09920310143649 * Marital_StatusDivorced
473683    +          +    -0.03469710828426 * Marital_StatusMarried
473684    +          +     0.04524816569771 * Marital_StatusSingle
473685    +          +    -0.00616333143464 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01959847584448 * Education2n_Cycle + -0.23759194699722 * 
EducationBasic + -0.09694759635569 * EducationGraduation + 0.16905118469563 * EducationMaster 
+ 0.09920310143649 * Marital_StatusDivorced + -0.03469710828426 * Marital_StatusMarried + 
0.04524816569771 * Marital_StatusSingle + -0.00616333143464 * Marital_StatusTogether ;
473686    +   H12  = H12  +     0.05721184485318 * Education2n_Cycle
473687    +          +    -0.04983755787599 * EducationBasic  +    -0.05003868555341 *
473688    +        EducationGraduation  +     0.14755035027548 * EducationMaster
473689    +          +     0.15544361606364 * Marital_StatusDivorced
473690    +          +    -0.04549024479337 * Marital_StatusMarried
473691    +          +    -0.22192209058914 * Marital_StatusSingle
473692    +          +     0.27320991984549 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05721184485318 * Education2n_Cycle + -0.04983755787599 * 
EducationBasic + -0.05003868555341 * EducationGraduation + 0.14755035027548 * EducationMaster 
+ 0.15544361606364 * Marital_StatusDivorced + -0.04549024479337 * Marital_StatusMarried + 
-0.22192209058914 * Marital_StatusSingle + 0.27320991984549 * Marital_StatusTogether ;
473693    +   H13  = H13  +     0.00075033011137 * Education2n_Cycle
473694    +          +    -0.11503072939964 * EducationBasic  +     -0.4136153442156 *
473695    +        EducationGraduation  +    -0.10472711185558 * EducationMaster
473696    +          +     0.06080683366118 * Marital_StatusDivorced
473697    +          +    -0.29971612034722 * Marital_StatusMarried
473698    +          +    -0.28960939443613 * Marital_StatusSingle
473699    +          +     0.03465872178588 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00075033011137 * Education2n_Cycle + -0.11503072939964 * 
EducationBasic + -0.4136153442156 * EducationGraduation + -0.10472711185558 * EducationMaster 
+ 0.06080683366118 * Marital_StatusDivorced + -0.29971612034722 * Marital_StatusMarried + 
-0.28960939443613 * Marital_StatusSingle + 0.03465872178588 * Marital_StatusTogether ;
473700    +   H14  = H14  +      0.0962498664542 * Education2n_Cycle
473701    +          +     0.07755075978175 * EducationBasic  +     0.06918862821828 *
473702    +        EducationGraduation  +    -0.19451337075589 * EducationMaster
473703    +          +    -0.27877133922419 * Marital_StatusDivorced
473704    +          +     0.25867038797563 * Marital_StatusMarried
473705    +          +    -0.17854477297284 * Marital_StatusSingle
473706    +          +     0.35391632150142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0962498664542 * Education2n_Cycle + 0.07755075978175 * 
EducationBasic + 0.06918862821828 * EducationGraduation + -0.19451337075589 * EducationMaster 
+ -0.27877133922419 * Marital_StatusDivorced + 0.25867038797563 * Marital_StatusMarried + 
-0.17854477297284 * Marital_StatusSingle + 0.35391632150142 * Marital_StatusTogether ;
473707    +   H15  = H15  +     0.17326731400139 * Education2n_Cycle
473708    +          +    -0.09586091586548 * EducationBasic  +     0.08664696951776 *
473709    +        EducationGraduation  +    -0.05191600320717 * EducationMaster
473710    +          +     0.30169513410559 * Marital_StatusDivorced
473711    +          +    -0.33752566748869 * Marital_StatusMarried
473712    +          +     0.43876556032036 * Marital_StatusSingle
473713    +          +    -0.37953091676086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.17326731400139 * Education2n_Cycle + -0.09586091586548 * 
EducationBasic + 0.08664696951776 * EducationGraduation + -0.05191600320717 * EducationMaster 
+ 0.30169513410559 * Marital_StatusDivorced + -0.33752566748869 * Marital_StatusMarried + 
0.43876556032036 * Marital_StatusSingle + -0.37953091676086 * Marital_StatusTogether ;
473714    +   H11  =     1.66971140546954 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.66971140546954 + H11 ;
473715    +   H12  =    -2.00390550356371 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.00390550356371 + H12 ;
473716    +   H13  =    -1.90761416182049 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.90761416182049 + H13 ;
473717    +   H14  =     0.27067485542842 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27067485542842 + H14 ;
473718    +   H15  =       -0.78426510761 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.78426510761 + H15 ;
473719    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
473720    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
473721    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
473722    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
473723    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
473724    +END;
MPRINT(EM_DIAGRAM):   END;
473725    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
473726    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
473727    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
473728    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
473729    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
473730    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
473731    +END;
MPRINT(EM_DIAGRAM):   END;
473732    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473733    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
473734    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473735    +
473736    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
473737    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
473738    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
473739    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
473740    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
473741    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473742    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
473743    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
473744    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
473745    +end;
MPRINT(EM_DIAGRAM):   end;
473746    +else do;
MPRINT(EM_DIAGRAM):   else do;
473747    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
473748    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
473749    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
473750    +   end;
MPRINT(EM_DIAGRAM):   end;
473751    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
473752    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
473753    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
473754    +   end;
MPRINT(EM_DIAGRAM):   end;
473755    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473756    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
473757    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
473758    +   end;
MPRINT(EM_DIAGRAM):   end;
473759    +end;
MPRINT(EM_DIAGRAM):   end;
473760    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
473761    +   P_DepVar1  =    -0.93198210671128 * H11  +    -0.73339280381433 * H12
473762    +          +     0.55985350295663 * H13  +    -2.31937062548345 * H14
473763    +          +     3.74909670300365 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.93198210671128 * H11 + -0.73339280381433 * H12 + 
0.55985350295663 * H13 + -2.31937062548345 * H14 + 3.74909670300365 * H15 ;
473764    +   P_DepVar1  =    -1.27659529547813 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.27659529547813 + P_DepVar1 ;
473765    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
473766    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
473767    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
473768    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
473769    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
473770    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
473771    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
473772    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
473773    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
473774    +END;
MPRINT(EM_DIAGRAM):   END;
473775    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
473776    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
473777    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
473778    +END;
MPRINT(EM_DIAGRAM):   END;
473779    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
473780    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
473781    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
473782    +END;
MPRINT(EM_DIAGRAM):   END;
473783    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
473784    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
473785    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
473786    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
473787    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
473788    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
473789    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
473790    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473791    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
473792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
473793    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
473794    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
473795    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
473796    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
473797    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
473798    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
473799    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
473800    +END;
MPRINT(EM_DIAGRAM):   END;
473801    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
473802    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
473803    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
473804    +drop
473805    +H11
473806    +H12
473807    +H13
473808    +H14
473809    +H15
473810    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
473811    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
473812    +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
473813    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473814    +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
473815    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473816    +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
473817    +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
473818    +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
473819    +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
473820    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473821    +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
473822    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473823    +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
473824    +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
473825    +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
473826    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473827    +* Ensmbl25: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 6 of 10;
473828    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473829    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473830    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
473831    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
473832    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
473833    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
473834    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
473835    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
473836    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
473837    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
473838    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
473839    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
473840    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
473841    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
473842    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
473843    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
473844    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
473845    +LENGTH _WARN_ $4
473846    +      F_DepVar  $ 12
473847    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
473848    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
473849    +
473850    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
473851    +
473852    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
473853    +
473854    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
473855    +
473856    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
473857    +
473858    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
473859    +
473860    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
473861    +
473862    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
473863    +
473864    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
473865    +
473866    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
473867    +
473868    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
473869    +
473870    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
473871    +
473872    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
473873    +
473874    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
473875    +
473876    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
473877    +
473878    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
473879    +
473880    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
473881    +
473882    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
473883    +
473884    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
473885    +
473886    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
473887    +
473888    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
473889    +
473890    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
473891    +
473892    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
473893    +
473894    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
473895    +
473896    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
473897    +
473898    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
473899    +
473900    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
473901    +
473902    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
473903    +
473904    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
473905    +
473906    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
473907    +
473908    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
473909    +
473910    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
473911    +
473912    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
473913    +
473914    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
473915    +
473916    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
473917    +
473918    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
473919    +
473920    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
473921    +
473922    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
473923    +
473924    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
473925    +
473926    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
473927    +
473928    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
473929    +
473930    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
473931    +
473932    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
473933    +
473934    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
473935    +
473936    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
473937    +
473938    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
473939    +
473940    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
473941    +
473942    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
473943    +
473944    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
473945    +
473946    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
473947    +
473948    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
473949    +
473950    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
473951    +
473952    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
473953    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
473954    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
473955    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
473956    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473957    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473958    +end;
MPRINT(EM_DIAGRAM):   end;
473959    +else do;
MPRINT(EM_DIAGRAM):   else do;
473960    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473961    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
473962    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473963    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
473964    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
473965    +   end;
MPRINT(EM_DIAGRAM):   end;
473966    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
473967    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
473968    +   end;
MPRINT(EM_DIAGRAM):   end;
473969    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473970    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
473971    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473972    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473973    +   end;
MPRINT(EM_DIAGRAM):   end;
473974    +end;
MPRINT(EM_DIAGRAM):   end;
473975    +
473976    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
473977    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
473978    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
473979    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
473980    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
473981    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473982    +end;
MPRINT(EM_DIAGRAM):   end;
473983    +else do;
MPRINT(EM_DIAGRAM):   else do;
473984    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
473985    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
473986    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
473987    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
473988    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
473989    +   end;
MPRINT(EM_DIAGRAM):   end;
473990    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
473991    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
473992    +   end;
MPRINT(EM_DIAGRAM):   end;
473993    +   else do;
MPRINT(EM_DIAGRAM):   else do;
473994    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
473995    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
473996    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
473997    +   end;
MPRINT(EM_DIAGRAM):   end;
473998    +end;
MPRINT(EM_DIAGRAM):   end;
473999    +
474000    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
474001    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
474002    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
474003    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
474004    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474005    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474006    +end;
MPRINT(EM_DIAGRAM):   end;
474007    +else do;
MPRINT(EM_DIAGRAM):   else do;
474008    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474009    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
474010    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474011    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474012    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
474013    +   end;
MPRINT(EM_DIAGRAM):   end;
474014    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474015    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
474016    +   end;
MPRINT(EM_DIAGRAM):   end;
474017    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474018    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
474019    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474020    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474021    +   end;
MPRINT(EM_DIAGRAM):   end;
474022    +end;
MPRINT(EM_DIAGRAM):   end;
474023    +
474024    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
474025    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
474026    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
474027    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
474028    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474029    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474030    +end;
MPRINT(EM_DIAGRAM):   end;
474031    +else do;
MPRINT(EM_DIAGRAM):   else do;
474032    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474033    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
474034    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474035    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474036    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
474037    +   end;
MPRINT(EM_DIAGRAM):   end;
474038    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474039    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
474040    +   end;
MPRINT(EM_DIAGRAM):   end;
474041    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474042    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
474043    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474044    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474045    +   end;
MPRINT(EM_DIAGRAM):   end;
474046    +end;
MPRINT(EM_DIAGRAM):   end;
474047    +
474048    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
474049    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
474050    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
474051    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
474052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474054    +end;
MPRINT(EM_DIAGRAM):   end;
474055    +else do;
MPRINT(EM_DIAGRAM):   else do;
474056    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474057    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
474058    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474059    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474060    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
474061    +   end;
MPRINT(EM_DIAGRAM):   end;
474062    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474063    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
474064    +   end;
MPRINT(EM_DIAGRAM):   end;
474065    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474066    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
474067    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474068    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474069    +   end;
MPRINT(EM_DIAGRAM):   end;
474070    +end;
MPRINT(EM_DIAGRAM):   end;
474071    +
474072    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
474073    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
474074    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
474075    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
474076    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474077    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474078    +end;
MPRINT(EM_DIAGRAM):   end;
474079    +else do;
MPRINT(EM_DIAGRAM):   else do;
474080    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474081    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
474082    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474083    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474084    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
474085    +   end;
MPRINT(EM_DIAGRAM):   end;
474086    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474087    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
474088    +   end;
MPRINT(EM_DIAGRAM):   end;
474089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474090    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
474091    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474092    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474093    +   end;
MPRINT(EM_DIAGRAM):   end;
474094    +end;
MPRINT(EM_DIAGRAM):   end;
474095    +
474096    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
474097    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
474098    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
474099    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
474100    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474101    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474102    +end;
MPRINT(EM_DIAGRAM):   end;
474103    +else do;
MPRINT(EM_DIAGRAM):   else do;
474104    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474105    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
474106    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474107    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
474108    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
474109    +   end;
MPRINT(EM_DIAGRAM):   end;
474110    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
474111    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
474112    +   end;
MPRINT(EM_DIAGRAM):   end;
474113    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474114    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
474115    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474116    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474117    +   end;
MPRINT(EM_DIAGRAM):   end;
474118    +end;
MPRINT(EM_DIAGRAM):   end;
474119    +
474120    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
474121    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
474122    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
474123    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
474124    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
474125    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
474126    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
474127    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
474128    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
474129    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
474130    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
474131    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
474132    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474134    +end;
MPRINT(EM_DIAGRAM):   end;
474135    +else do;
MPRINT(EM_DIAGRAM):   else do;
474136    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
474137    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
474138    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474139    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
474140    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
474141    +   end;
MPRINT(EM_DIAGRAM):   end;
474142    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
474143    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
474144    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
474145    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
474146    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
474147    +   end;
MPRINT(EM_DIAGRAM):   end;
474148    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
474149    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
474150    +   end;
MPRINT(EM_DIAGRAM):   end;
474151    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
474152    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
474153    +   end;
MPRINT(EM_DIAGRAM):   end;
474154    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
474155    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
474156    +   end;
MPRINT(EM_DIAGRAM):   end;
474157    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474158    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
474159    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
474160    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
474161    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
474162    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474163    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474164    +   end;
MPRINT(EM_DIAGRAM):   end;
474165    +end;
MPRINT(EM_DIAGRAM):   end;
474166    +
474167    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
474168    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
474169    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
474170    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
474171    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
474172    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
474173    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
474174    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
474175    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
474176    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
474177    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
474178    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
474179    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
474180    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474181    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474182    +end;
MPRINT(EM_DIAGRAM):   end;
474183    +else do;
MPRINT(EM_DIAGRAM):   else do;
474184    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
474185    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
474186    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474187    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
474188    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
474189    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
474190    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
474191    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
474192    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
474193    +         end;
MPRINT(EM_DIAGRAM):   end;
474194    +         else do;
MPRINT(EM_DIAGRAM):   else do;
474195    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
474196    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
474197    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
474198    +            end;
MPRINT(EM_DIAGRAM):   end;
474199    +         end;
MPRINT(EM_DIAGRAM):   end;
474200    +      end;
MPRINT(EM_DIAGRAM):   end;
474201    +      else do;
MPRINT(EM_DIAGRAM):   else do;
474202    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
474203    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
474204    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
474205    +         end;
MPRINT(EM_DIAGRAM):   end;
474206    +      end;
MPRINT(EM_DIAGRAM):   end;
474207    +   end;
MPRINT(EM_DIAGRAM):   end;
474208    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474209    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
474210    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
474211    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
474212    +      end;
MPRINT(EM_DIAGRAM):   end;
474213    +      else do;
MPRINT(EM_DIAGRAM):   else do;
474214    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
474215    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
474216    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
474217    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
474218    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
474219    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
474220    +         end;
MPRINT(EM_DIAGRAM):   end;
474221    +      end;
MPRINT(EM_DIAGRAM):   end;
474222    +   end;
MPRINT(EM_DIAGRAM):   end;
474223    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
474224    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
474225    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
474226    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
474227    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
474228    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474229    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474230    +   end;
MPRINT(EM_DIAGRAM):   end;
474231    +end;
MPRINT(EM_DIAGRAM):   end;
474232    +
474233    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474234    +*** Checking missing input Interval
474235    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
474236    +
474237    +IF NMISS(
474238    +   AcceptedCmpTotal ,
474239    +   Age ,
474240    +   Frq ,
474241    +   Income ,
474242    +   Kidhome ,
474243    +   Mnt ,
474244    +   MntFishProducts ,
474245    +   MntFruits ,
474246    +   MntGoldProds ,
474247    +   MntMeatProducts ,
474248    +   MntSweetProducts ,
474249    +   MntWines ,
474250    +   MonthsAsCustomer ,
474251    +   NumCatalogPurchases ,
474252    +   NumDealsPurchases ,
474253    +   NumDistPurchases ,
474254    +   NumStorePurchases ,
474255    +   NumWebPurchases ,
474256    +   NumWebVisitsMonth ,
474257    +   RFMstat ,
474258    +   RMntFrq ,
474259    +   Recency ,
474260    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
474261    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
474262    +
474263    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474264    +END;
MPRINT(EM_DIAGRAM):   END;
474265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474266    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
474267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474268    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
474269    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
474270    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
474271    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
474272    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
474273    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
474274    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
474275    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
474276    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
474277    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
474278    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
474279    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
474280    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
474281    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
474282    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
474283    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
474284    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
474285    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
474286    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
474287    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
474288    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
474289    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
474290    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
474291    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
474292    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
474293    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
474294    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
474295    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
474296    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
474297    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
474298    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
474299    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
474300    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
474301    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
474302    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
474303    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
474304    +END;
MPRINT(EM_DIAGRAM):   END;
474305    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
474306    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
474307    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
474308    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
474309    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
474310    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
474311    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
474312    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
474313    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
474314    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
474315    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
474316    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
474317    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
474318    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
474319    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
474320    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
474321    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
474322    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
474323    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
474324    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
474325    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
474326    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
474327    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
474328    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
474329    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
474330    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
474331    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
474332    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
474333    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
474334    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
474335    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
474336    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
474337    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
474338    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
474339    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
474340    +   ELSE S_NumCatalogPurchases
474341    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
474342    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
474343    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
474344    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
474345    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
474346    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
474347    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
474348    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
474349    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
474350    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
474351    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
474352    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
474353    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
474354    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
474355    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
474356    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
474357    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
474358    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
474359    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
474360    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
474361    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
474362    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
474363    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
474364    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
474365    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
474366    +END;
MPRINT(EM_DIAGRAM):   END;
474367    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474368    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
474369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474371    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
474372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474374    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
474375    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474376    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
474377    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
474378    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
474379    +        S_Income  +    -0.14142658616971 * S_Kidhome
474380    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
474381    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
474382    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
474383    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
474384    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
474385    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
474386    +          +     0.96837841774168 * S_NumDealsPurchases
474387    +          +      0.2846105381881 * S_NumDistPurchases
474388    +          +    -0.69514041792943 * S_NumStorePurchases
474389    +          +    -0.96425407351749 * S_NumWebPurchases
474390    +          +     0.79545449599683 * S_NumWebVisitsMonth
474391    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
474392    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
474393    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
474394    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
474395    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
474396    +        S_Income  +    -0.55432195959203 * S_Kidhome
474397    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
474398    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
474399    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
474400    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
474401    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
474402    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
474403    +          +      0.2190184330724 * S_NumDealsPurchases
474404    +          +    -0.01682909442896 * S_NumDistPurchases
474405    +          +    -0.70244951048552 * S_NumStorePurchases
474406    +          +     -0.3057457659316 * S_NumWebPurchases
474407    +          +     0.95928538762715 * S_NumWebVisitsMonth
474408    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
474409    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
474410    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
474411    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
474412    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
474413    +        S_Income  +    -0.06354861159882 * S_Kidhome
474414    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
474415    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
474416    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
474417    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
474418    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
474419    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
474420    +          +    -0.21394230159696 * S_NumDealsPurchases
474421    +          +    -0.23833771124663 * S_NumDistPurchases
474422    +          +     0.45832031017813 * S_NumStorePurchases
474423    +          +    -0.30226952040179 * S_NumWebPurchases
474424    +          +    -0.29796387184481 * S_NumWebVisitsMonth
474425    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
474426    +        S_RMntFrq  +     0.87067423045258 * S_Recency
474427    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
474428    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
474429    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
474430    +        S_Income  +    -0.04839586846715 * S_Kidhome
474431    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
474432    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
474433    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
474434    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
474435    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
474436    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
474437    +          +    -0.43749647771198 * S_NumDealsPurchases
474438    +          +     0.21263473847472 * S_NumDistPurchases
474439    +          +     0.26102168039141 * S_NumStorePurchases
474440    +          +     0.54921725943657 * S_NumWebPurchases
474441    +          +    -0.75685843498122 * S_NumWebVisitsMonth
474442    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
474443    +        S_RMntFrq  +     0.80536256822347 * S_Recency
474444    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
474445    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
474446    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
474447    +        S_Income  +     0.71499527198653 * S_Kidhome
474448    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
474449    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
474450    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
474451    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
474452    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
474453    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
474454    +          +     0.09436067776126 * S_NumDealsPurchases
474455    +          +    -0.02824201859641 * S_NumDistPurchases
474456    +          +    -0.06770433780564 * S_NumStorePurchases
474457    +          +    -0.07177620319715 * S_NumWebPurchases
474458    +          +    -0.75589979685266 * S_NumWebVisitsMonth
474459    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
474460    +        S_RMntFrq  +     0.94408788011429 * S_Recency
474461    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
474462    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
474463    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
474464    +        S_Income  +    -0.63474522042341 * S_Kidhome
474465    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
474466    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
474467    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
474468    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
474469    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
474470    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
474471    +          +    -0.51154511343396 * S_NumDealsPurchases
474472    +          +    -0.52422915823572 * S_NumDistPurchases
474473    +          +     0.30305498422357 * S_NumStorePurchases
474474    +          +     0.12197321559338 * S_NumWebPurchases
474475    +          +    -0.10520335422769 * S_NumWebVisitsMonth
474476    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
474477    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
474478    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
474479    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
474480    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
474481    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
474482    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
474483    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
474484    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
474485    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
474486    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
474487    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
474488    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
474489    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
474490    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
474491    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
474492    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
474493    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
474494    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
474495    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
474496    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
474497    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
474498    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
474499    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
474500    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
474501    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
474502    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
474503    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
474504    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
474505    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
474506    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
474507    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
474508    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
474509    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
474510    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
474511    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
474512    +          +     0.10234616400375 * Marital_StatusDivorced
474513    +          +     0.27961650739075 * Marital_StatusMarried
474514    +          +    -0.40239488723767 * Marital_StatusSingle
474515    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
474516    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
474517    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
474518    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
474519    +          +     0.46385792428023 * Marital_StatusDivorced
474520    +          +    -0.62344590646391 * Marital_StatusMarried
474521    +          +     0.61767209252062 * Marital_StatusSingle
474522    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
474523    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
474524    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
474525    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
474526    +          +    -0.07839612590836 * Marital_StatusDivorced
474527    +          +     0.35316864062221 * Marital_StatusMarried
474528    +          +    -0.10730136429834 * Marital_StatusSingle
474529    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
474530    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
474531    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
474532    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
474533    +          +    -0.09942175269886 * Marital_StatusDivorced
474534    +          +     0.24385460865335 * Marital_StatusMarried
474535    +          +    -0.33658955096296 * Marital_StatusSingle
474536    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
474537    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
474538    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
474539    +        EducationGraduation  +     0.37352174719748 * EducationMaster
474540    +          +    -0.08047852561096 * Marital_StatusDivorced
474541    +          +     1.16485862694561 * Marital_StatusMarried
474542    +          +    -0.94140251178566 * Marital_StatusSingle
474543    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
474544    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
474545    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
474546    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
474547    +          +    -0.16621963893391 * Marital_StatusDivorced
474548    +          +    -0.44542186297324 * Marital_StatusMarried
474549    +          +     0.42176133228308 * Marital_StatusSingle
474550    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
474551    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
474552    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
474553    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
474554    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
474555    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
474556    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
474557    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
474558    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
474559    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
474560    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
474561    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
474562    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
474563    +END;
MPRINT(EM_DIAGRAM):   END;
474564    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
474565    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
474566    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
474567    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
474568    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
474569    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
474570    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
474571    +END;
MPRINT(EM_DIAGRAM):   END;
474572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474573    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
474574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474575    +
474576    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
474577    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
474578    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
474579    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
474580    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
474581    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474582    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
474583    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
474584    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
474585    +end;
MPRINT(EM_DIAGRAM):   end;
474586    +else do;
MPRINT(EM_DIAGRAM):   else do;
474587    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
474588    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
474589    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
474590    +   end;
MPRINT(EM_DIAGRAM):   end;
474591    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
474592    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
474593    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
474594    +   end;
MPRINT(EM_DIAGRAM):   end;
474595    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474596    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
474597    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
474598    +   end;
MPRINT(EM_DIAGRAM):   end;
474599    +end;
MPRINT(EM_DIAGRAM):   end;
474600    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
474601    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
474602    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
474603    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
474604    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
474605    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
474606    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
474607    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
474608    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
474609    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
474610    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
474611    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
474612    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
474613    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
474614    +END;
MPRINT(EM_DIAGRAM):   END;
474615    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
474616    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
474617    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
474618    +END;
MPRINT(EM_DIAGRAM):   END;
474619    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
474620    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
474621    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
474622    +END;
MPRINT(EM_DIAGRAM):   END;
474623    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
474624    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
474625    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
474626    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
474627    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
474628    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
474629    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
474630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474631    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
474632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
474633    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
474634    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
474635    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
474636    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
474637    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
474638    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
474639    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
474640    +END;
MPRINT(EM_DIAGRAM):   END;
474641    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
474642    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
474643    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
474644    +drop
474645    +H11
474646    +H12
474647    +H13
474648    +H14
474649    +H15
474650    +H16
474651    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
474652    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
474653    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
474654    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
474655    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
474656    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
474657    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
474658    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
474659    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
474660    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
474661    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
474662    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
474663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
474664    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
474665    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
474666    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
474667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
474668    +* Ensmbl25: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 7 of 10;
474669    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
474670    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
474671    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
474672    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
474673    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
474674    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
474675    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
474676    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
474677    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
474678    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
474679    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
474680    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
474681    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
474682    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
474683    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
474684    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
474685    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
474686    +LENGTH _WARN_ $4
474687    +      F_DepVar  $ 12
474688    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
474689    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
474690    +
474691    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
474692    +
474693    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
474694    +
474695    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
474696    +
474697    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
474698    +
474699    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
474700    +
474701    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
474702    +
474703    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
474704    +
474705    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
474706    +
474707    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
474708    +
474709    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
474710    +
474711    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
474712    +
474713    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
474714    +
474715    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
474716    +
474717    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
474718    +
474719    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
474720    +
474721    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
474722    +
474723    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
474724    +
474725    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
474726    +
474727    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
474728    +
474729    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
474730    +
474731    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
474732    +
474733    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
474734    +
474735    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
474736    +
474737    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
474738    +
474739    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
474740    +
474741    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
474742    +
474743    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
474744    +
474745    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
474746    +
474747    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
474748    +
474749    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
474750    +
474751    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
474752    +
474753    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
474754    +
474755    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
474756    +
474757    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
474758    +
474759    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
474760    +
474761    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
474762    +
474763    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
474764    +
474765    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
474766    +
474767    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
474768    +
474769    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
474770    +
474771    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
474772    +
474773    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
474774    +
474775    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
474776    +
474777    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
474778    +
474779    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
474780    +
474781    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
474782    +
474783    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
474784    +
474785    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
474786    +
474787    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
474788    +
474789    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
474790    +
474791    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
474792    +
474793    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
474794    +
474795    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
474796    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
474797    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
474798    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
474799    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474800    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474801    +end;
MPRINT(EM_DIAGRAM):   end;
474802    +else do;
MPRINT(EM_DIAGRAM):   else do;
474803    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474804    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
474805    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474806    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474807    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
474808    +   end;
MPRINT(EM_DIAGRAM):   end;
474809    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474810    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
474811    +   end;
MPRINT(EM_DIAGRAM):   end;
474812    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474813    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
474814    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474815    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474816    +   end;
MPRINT(EM_DIAGRAM):   end;
474817    +end;
MPRINT(EM_DIAGRAM):   end;
474818    +
474819    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
474820    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
474821    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
474822    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
474823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474825    +end;
MPRINT(EM_DIAGRAM):   end;
474826    +else do;
MPRINT(EM_DIAGRAM):   else do;
474827    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474828    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
474829    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474830    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474831    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
474832    +   end;
MPRINT(EM_DIAGRAM):   end;
474833    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474834    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
474835    +   end;
MPRINT(EM_DIAGRAM):   end;
474836    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474837    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
474838    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474839    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474840    +   end;
MPRINT(EM_DIAGRAM):   end;
474841    +end;
MPRINT(EM_DIAGRAM):   end;
474842    +
474843    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
474844    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
474845    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
474846    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
474847    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474848    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474849    +end;
MPRINT(EM_DIAGRAM):   end;
474850    +else do;
MPRINT(EM_DIAGRAM):   else do;
474851    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474852    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
474853    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474854    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474855    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
474856    +   end;
MPRINT(EM_DIAGRAM):   end;
474857    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474858    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
474859    +   end;
MPRINT(EM_DIAGRAM):   end;
474860    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474861    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
474862    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474863    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474864    +   end;
MPRINT(EM_DIAGRAM):   end;
474865    +end;
MPRINT(EM_DIAGRAM):   end;
474866    +
474867    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
474868    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
474869    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
474870    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
474871    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474872    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474873    +end;
MPRINT(EM_DIAGRAM):   end;
474874    +else do;
MPRINT(EM_DIAGRAM):   else do;
474875    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474876    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
474877    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474878    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474879    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
474880    +   end;
MPRINT(EM_DIAGRAM):   end;
474881    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474882    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
474883    +   end;
MPRINT(EM_DIAGRAM):   end;
474884    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474885    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
474886    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474887    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474888    +   end;
MPRINT(EM_DIAGRAM):   end;
474889    +end;
MPRINT(EM_DIAGRAM):   end;
474890    +
474891    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
474892    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
474893    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
474894    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
474895    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474896    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474897    +end;
MPRINT(EM_DIAGRAM):   end;
474898    +else do;
MPRINT(EM_DIAGRAM):   else do;
474899    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474900    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
474901    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474902    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474903    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
474904    +   end;
MPRINT(EM_DIAGRAM):   end;
474905    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474906    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
474907    +   end;
MPRINT(EM_DIAGRAM):   end;
474908    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474909    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
474910    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474911    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474912    +   end;
MPRINT(EM_DIAGRAM):   end;
474913    +end;
MPRINT(EM_DIAGRAM):   end;
474914    +
474915    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
474916    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
474917    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
474918    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
474919    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474920    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474921    +end;
MPRINT(EM_DIAGRAM):   end;
474922    +else do;
MPRINT(EM_DIAGRAM):   else do;
474923    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474924    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
474925    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474926    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
474927    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
474928    +   end;
MPRINT(EM_DIAGRAM):   end;
474929    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
474930    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
474931    +   end;
MPRINT(EM_DIAGRAM):   end;
474932    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474933    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
474934    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474935    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474936    +   end;
MPRINT(EM_DIAGRAM):   end;
474937    +end;
MPRINT(EM_DIAGRAM):   end;
474938    +
474939    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
474940    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
474941    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
474942    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
474943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474945    +end;
MPRINT(EM_DIAGRAM):   end;
474946    +else do;
MPRINT(EM_DIAGRAM):   else do;
474947    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
474948    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
474949    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474950    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
474951    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
474952    +   end;
MPRINT(EM_DIAGRAM):   end;
474953    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
474954    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
474955    +   end;
MPRINT(EM_DIAGRAM):   end;
474956    +   else do;
MPRINT(EM_DIAGRAM):   else do;
474957    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
474958    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
474959    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474960    +   end;
MPRINT(EM_DIAGRAM):   end;
474961    +end;
MPRINT(EM_DIAGRAM):   end;
474962    +
474963    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
474964    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
474965    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
474966    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
474967    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
474968    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
474969    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
474970    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
474971    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
474972    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
474973    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
474974    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
474975    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
474976    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
474977    +end;
MPRINT(EM_DIAGRAM):   end;
474978    +else do;
MPRINT(EM_DIAGRAM):   else do;
474979    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
474980    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
474981    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
474982    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
474983    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
474984    +   end;
MPRINT(EM_DIAGRAM):   end;
474985    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
474986    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
474987    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
474988    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
474989    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
474990    +   end;
MPRINT(EM_DIAGRAM):   end;
474991    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
474992    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
474993    +   end;
MPRINT(EM_DIAGRAM):   end;
474994    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
474995    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
474996    +   end;
MPRINT(EM_DIAGRAM):   end;
474997    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
474998    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
474999    +   end;
MPRINT(EM_DIAGRAM):   end;
475000    +   else do;
MPRINT(EM_DIAGRAM):   else do;
475001    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
475002    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
475003    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
475004    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
475005    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
475006    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475007    +   end;
MPRINT(EM_DIAGRAM):   end;
475008    +end;
MPRINT(EM_DIAGRAM):   end;
475009    +
475010    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
475011    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
475012    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
475013    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
475014    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
475015    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
475016    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
475017    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
475018    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
475019    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
475020    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
475021    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
475022    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
475023    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475024    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475025    +end;
MPRINT(EM_DIAGRAM):   end;
475026    +else do;
MPRINT(EM_DIAGRAM):   else do;
475027    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
475028    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
475029    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
475030    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
475031    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
475032    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
475033    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
475034    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
475035    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
475036    +         end;
MPRINT(EM_DIAGRAM):   end;
475037    +         else do;
MPRINT(EM_DIAGRAM):   else do;
475038    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
475039    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
475040    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
475041    +            end;
MPRINT(EM_DIAGRAM):   end;
475042    +         end;
MPRINT(EM_DIAGRAM):   end;
475043    +      end;
MPRINT(EM_DIAGRAM):   end;
475044    +      else do;
MPRINT(EM_DIAGRAM):   else do;
475045    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
475046    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
475047    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
475048    +         end;
MPRINT(EM_DIAGRAM):   end;
475049    +      end;
MPRINT(EM_DIAGRAM):   end;
475050    +   end;
MPRINT(EM_DIAGRAM):   end;
475051    +   else do;
MPRINT(EM_DIAGRAM):   else do;
475052    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
475053    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
475054    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
475055    +      end;
MPRINT(EM_DIAGRAM):   end;
475056    +      else do;
MPRINT(EM_DIAGRAM):   else do;
475057    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
475058    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
475059    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
475060    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
475061    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
475062    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
475063    +         end;
MPRINT(EM_DIAGRAM):   end;
475064    +      end;
MPRINT(EM_DIAGRAM):   end;
475065    +   end;
MPRINT(EM_DIAGRAM):   end;
475066    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
475067    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
475068    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
475069    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
475070    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
475071    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
475072    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475073    +   end;
MPRINT(EM_DIAGRAM):   end;
475074    +end;
MPRINT(EM_DIAGRAM):   end;
475075    +
475076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475077    +*** Checking missing input Interval
475078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
475079    +
475080    +IF NMISS(
475081    +   AcceptedCmpTotal ,
475082    +   Age ,
475083    +   Frq ,
475084    +   Income ,
475085    +   Kidhome ,
475086    +   Mnt ,
475087    +   MntFishProducts ,
475088    +   MntFruits ,
475089    +   MntGoldProds ,
475090    +   MntMeatProducts ,
475091    +   MntSweetProducts ,
475092    +   MntWines ,
475093    +   MonthsAsCustomer ,
475094    +   NumCatalogPurchases ,
475095    +   NumDealsPurchases ,
475096    +   NumDistPurchases ,
475097    +   NumStorePurchases ,
475098    +   NumWebPurchases ,
475099    +   NumWebVisitsMonth ,
475100    +   RFMstat ,
475101    +   RMntFrq ,
475102    +   Recency ,
475103    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
475104    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
475105    +
475106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475107    +END;
MPRINT(EM_DIAGRAM):   END;
475108    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475109    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
475110    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475111    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
475112    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
475113    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
475114    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
475115    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
475116    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
475117    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
475118    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
475119    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
475120    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
475121    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
475122    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
475123    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
475124    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
475125    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
475126    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
475127    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
475128    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
475129    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
475130    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
475131    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
475132    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
475133    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
475134    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
475135    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
475136    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
475137    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
475138    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
475139    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
475140    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
475141    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
475142    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
475143    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
475144    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
475145    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
475146    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
475147    +END;
MPRINT(EM_DIAGRAM):   END;
475148    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475149    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
475150    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
475151    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
475152    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
475153    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
475154    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
475155    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
475156    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
475157    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
475158    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
475159    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
475160    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
475161    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
475162    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
475163    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
475164    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
475165    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
475166    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
475167    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
475168    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
475169    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
475170    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
475171    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
475172    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
475173    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
475174    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
475175    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
475176    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
475177    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
475178    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
475179    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
475180    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
475181    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
475182    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
475183    +   ELSE S_NumCatalogPurchases
475184    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
475185    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
475186    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
475187    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
475188    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
475189    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
475190    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
475191    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
475192    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
475193    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
475194    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
475195    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
475196    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
475197    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
475198    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
475199    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
475200    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
475201    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
475202    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
475203    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
475204    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
475205    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
475206    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
475207    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
475208    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
475209    +END;
MPRINT(EM_DIAGRAM):   END;
475210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475211    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
475212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475214    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
475215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475217    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
475218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475219    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
475220    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
475221    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
475222    +        S_Income  +    -0.43070069114587 * S_Kidhome
475223    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
475224    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
475225    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
475226    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
475227    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
475228    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
475229    +          +    -0.21858146166244 * S_NumDealsPurchases
475230    +          +     0.18409991080913 * S_NumDistPurchases
475231    +          +     0.35683163455594 * S_NumStorePurchases
475232    +          +     0.24429183714976 * S_NumWebPurchases
475233    +          +     -0.1263739191616 * S_NumWebVisitsMonth
475234    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
475235    +        S_RMntFrq  +      0.3452503815146 * S_Recency
475236    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
475237    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
475238    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
475239    +        S_Income  +     0.24623934031778 * S_Kidhome
475240    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
475241    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
475242    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
475243    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
475244    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
475245    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
475246    +          +    -0.08125614129909 * S_NumDealsPurchases
475247    +          +     0.38003696656333 * S_NumDistPurchases
475248    +          +     0.22006494588298 * S_NumStorePurchases
475249    +          +     0.26217639358993 * S_NumWebPurchases
475250    +          +    -0.56905781005459 * S_NumWebVisitsMonth
475251    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
475252    +        S_RMntFrq  +     0.33060213336674 * S_Recency
475253    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
475254    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
475255    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
475256    +        S_Income  +     0.18597632724783 * S_Kidhome
475257    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
475258    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
475259    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
475260    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
475261    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
475262    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
475263    +          +     0.08121213946217 * S_NumDealsPurchases
475264    +          +    -0.04963282234139 * S_NumDistPurchases
475265    +          +    -0.09521586837775 * S_NumStorePurchases
475266    +          +     0.00630626523742 * S_NumWebPurchases
475267    +          +    -0.03891587920939 * S_NumWebVisitsMonth
475268    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
475269    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
475270    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
475271    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
475272    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
475273    +        S_Income  +     0.25356767518099 * S_Kidhome
475274    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
475275    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
475276    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
475277    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
475278    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
475279    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
475280    +          +     0.83749876944877 * S_NumDealsPurchases
475281    +          +     0.29636537008068 * S_NumDistPurchases
475282    +          +    -0.61202052257506 * S_NumStorePurchases
475283    +          +    -0.96921731415369 * S_NumWebPurchases
475284    +          +     0.10056455703323 * S_NumWebVisitsMonth
475285    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
475286    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
475287    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
475288    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
475289    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
475290    +        S_Income  +    -0.66239517276633 * S_Kidhome
475291    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
475292    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
475293    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
475294    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
475295    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
475296    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
475297    +          +     0.63122884753912 * S_NumDealsPurchases
475298    +          +     0.00285388491049 * S_NumDistPurchases
475299    +          +    -0.76222252593182 * S_NumStorePurchases
475300    +          +    -0.71485070772733 * S_NumWebPurchases
475301    +          +     1.59020450778179 * S_NumWebVisitsMonth
475302    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
475303    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
475304    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
475305    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
475306    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
475307    +        S_Income  +    -0.22662005590555 * S_Kidhome
475308    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
475309    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
475310    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
475311    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
475312    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
475313    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
475314    +          +    -0.28143084367284 * S_NumDealsPurchases
475315    +          +     0.09640746756361 * S_NumDistPurchases
475316    +          +      0.1754994442449 * S_NumStorePurchases
475317    +          +     0.14321475617403 * S_NumWebPurchases
475318    +          +     -0.1908048876137 * S_NumWebVisitsMonth
475319    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
475320    +        S_RMntFrq  +     0.02280616139018 * S_Recency
475321    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
475322    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
475323    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
475324    +        S_Income  +    -0.45643247613458 * S_Kidhome
475325    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
475326    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
475327    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
475328    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
475329    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
475330    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
475331    +          +    -0.14623073736275 * S_NumDealsPurchases
475332    +          +      0.1591142102614 * S_NumDistPurchases
475333    +          +     0.10364624011419 * S_NumStorePurchases
475334    +          +     0.21545343951201 * S_NumWebPurchases
475335    +          +     0.61096997379603 * S_NumWebVisitsMonth
475336    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
475337    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
475338    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
475339    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
475340    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
475341    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
475342    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
475343    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
475344    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
475345    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
475346    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
475347    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
475348    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
475349    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
475350    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
475351    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
475352    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
475353    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
475354    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
475355    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
475356    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
475357    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
475358    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
475359    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
475360    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
475361    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
475362    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
475363    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
475364    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
475365    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
475366    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
475367    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
475368    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
475369    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
475370    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
475371    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
475372    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
475373    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
475374    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
475375    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
475376    +        EducationGraduation  +     0.00389495660452 * EducationMaster
475377    +          +     0.39856598367829 * Marital_StatusDivorced
475378    +          +    -0.45922754552461 * Marital_StatusMarried
475379    +          +     0.41270195301891 * Marital_StatusSingle
475380    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
475381    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
475382    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
475383    +        EducationGraduation  +      0.2609956614651 * EducationMaster
475384    +          +     0.12002180366932 * Marital_StatusDivorced
475385    +          +     0.50693056076018 * Marital_StatusMarried
475386    +          +    -0.40828651697464 * Marital_StatusSingle
475387    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
475388    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
475389    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
475390    +        EducationGraduation  +     0.20017847825938 * EducationMaster
475391    +          +    -0.05075621283629 * Marital_StatusDivorced
475392    +          +     0.06731276969307 * Marital_StatusMarried
475393    +          +     0.20458391966582 * Marital_StatusSingle
475394    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
475395    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
475396    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
475397    +        EducationGraduation  +     0.28829384238085 * EducationMaster
475398    +          +    -0.37925185401218 * Marital_StatusDivorced
475399    +          +     0.62971134740586 * Marital_StatusMarried
475400    +          +    -0.36562351730859 * Marital_StatusSingle
475401    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
475402    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
475403    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
475404    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
475405    +          +     0.84382044664305 * Marital_StatusDivorced
475406    +          +    -0.84062627203871 * Marital_StatusMarried
475407    +          +     0.74100406031127 * Marital_StatusSingle
475408    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
475409    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
475410    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
475411    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
475412    +          +     -0.1195105091383 * Marital_StatusDivorced
475413    +          +    -0.13486422945269 * Marital_StatusMarried
475414    +          +     0.33592403429156 * Marital_StatusSingle
475415    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
475416    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
475417    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
475418    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
475419    +          +     0.14792293029589 * Marital_StatusDivorced
475420    +          +    -0.96003393582564 * Marital_StatusMarried
475421    +          +     0.64637652355384 * Marital_StatusSingle
475422    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
475423    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
475424    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
475425    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
475426    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
475427    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
475428    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
475429    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
475430    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
475431    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
475432    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
475433    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
475434    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
475435    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
475436    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
475437    +END;
MPRINT(EM_DIAGRAM):   END;
475438    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475439    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
475440    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
475441    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
475442    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
475443    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
475444    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
475445    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
475446    +END;
MPRINT(EM_DIAGRAM):   END;
475447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475448    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
475449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475450    +
475451    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
475452    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
475453    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
475454    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
475455    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
475456    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
475457    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
475458    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
475459    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
475460    +end;
MPRINT(EM_DIAGRAM):   end;
475461    +else do;
MPRINT(EM_DIAGRAM):   else do;
475462    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
475463    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
475464    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
475465    +   end;
MPRINT(EM_DIAGRAM):   end;
475466    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
475467    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
475468    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
475469    +   end;
MPRINT(EM_DIAGRAM):   end;
475470    +   else do;
MPRINT(EM_DIAGRAM):   else do;
475471    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
475472    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
475473    +   end;
MPRINT(EM_DIAGRAM):   end;
475474    +end;
MPRINT(EM_DIAGRAM):   end;
475475    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
475476    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
475477    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
475478    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
475479    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
475480    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
475481    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
475482    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
475483    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
475484    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
475485    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
475486    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
475487    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
475488    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
475489    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
475490    +END;
MPRINT(EM_DIAGRAM):   END;
475491    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475492    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
475493    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
475494    +END;
MPRINT(EM_DIAGRAM):   END;
475495    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
475496    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
475497    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
475498    +END;
MPRINT(EM_DIAGRAM):   END;
475499    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
475500    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
475501    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
475502    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
475503    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
475504    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
475505    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
475506    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475507    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
475508    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
475509    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
475510    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
475511    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
475512    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
475513    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
475514    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
475515    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475516    +END;
MPRINT(EM_DIAGRAM):   END;
475517    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
475518    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
475519    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
475520    +drop
475521    +H11
475522    +H12
475523    +H13
475524    +H14
475525    +H15
475526    +H16
475527    +H17
475528    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
475529    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
475530    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
475531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475532    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
475533    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475534    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
475535    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
475536    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
475537    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
475538    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475539    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
475540    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475541    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
475542    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
475543    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
475544    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475545    +* Ensmbl25: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 8 of 10;
475546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475547    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475548    +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
475549    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
475550    +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
475551    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475552    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
475553    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
475554    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
475555    +
475556    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
475557    +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
475558    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
475559    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
475560    +
475561    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
475562    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
475563    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
475564    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
475565    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
475566    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
475567    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
475568    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
475569    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
475570    +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
475571    +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
475572    +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
475573    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
475574    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
475575    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
475576    +
475577    +
475578    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
475579    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
475580    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
475581    +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
475582    +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
475583    +
475584    +
475585    +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
475586    + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
475587    +
475588    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
475589    +IF  NOT MISSING(AcceptedCmpTotal ) AND
475590    +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
475591    +  IF  NOT MISSING(Recency ) AND
475592    +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
475593    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
475594    +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
475595    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
475596    +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
475597    +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
475598    +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
475599    +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
475600    +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
475601    +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
475602    +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
475603    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
475604    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
475605    +      END;
MPRINT(EM_DIAGRAM):   END;
475606    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475607    +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
475608    +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
475609    +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
475610    +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
475611    +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
475612    +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
475613    +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
475614    +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
475615    +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
475616    +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
475617    +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
475618    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
475619    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
475620    +        END;
MPRINT(EM_DIAGRAM):   END;
475621    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475622    +        IF  NOT MISSING(NumStorePurchases ) AND
475623    +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
475624    +          IF  NOT MISSING(NumWebVisitsMonth ) AND
475625    +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
475626    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
475627    +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
475628    +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
475629    +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
475630    +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
475631    +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
475632    +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
475633    +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
475634    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475635    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475636    +            END;
MPRINT(EM_DIAGRAM):   END;
475637    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475638    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
475639    +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
475640    +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
475641    +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
475642    +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
475643    +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
475644    +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
475645    +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
475646    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
475647    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
475648    +            END;
MPRINT(EM_DIAGRAM):   END;
475649    +          END;
MPRINT(EM_DIAGRAM):   END;
475650    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475651    +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
475652    +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
475653    +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
475654    +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
475655    +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
475656    +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
475657    +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
475658    +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
475659    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475660    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475661    +          END;
MPRINT(EM_DIAGRAM):   END;
475662    +        END;
MPRINT(EM_DIAGRAM):   END;
475663    +      END;
MPRINT(EM_DIAGRAM):   END;
475664    +    END;
MPRINT(EM_DIAGRAM):   END;
475665    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475666    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
475667    +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
475668    +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
475669    +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
475670    +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
475671    +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
475672    +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
475673    +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
475674    +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
475675    +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
475676    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
475677    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
475678    +      END;
MPRINT(EM_DIAGRAM):   END;
475679    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475680    +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
475681    +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
475682    +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
475683    +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
475684    +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
475685    +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
475686    +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
475687    +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
475688    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475689    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475690    +      END;
MPRINT(EM_DIAGRAM):   END;
475691    +    END;
MPRINT(EM_DIAGRAM):   END;
475692    +  END;
MPRINT(EM_DIAGRAM):   END;
475693    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475694    +  IF  NOT MISSING(Recency ) AND
475695    +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
475696    +    IF  NOT MISSING(NumCatalogPurchases ) AND
475697    +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
475698    +      IF  NOT MISSING(NumStorePurchases ) AND
475699    +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
475700    +        IF  NOT MISSING(RFMstat ) AND
475701    +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
475702    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
475703    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
475704    +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
475705    +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
475706    +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
475707    +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
475708    +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
475709    +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
475710    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
475711    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
475712    +          END;
MPRINT(EM_DIAGRAM):   END;
475713    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475714    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
475715    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
475716    +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
475717    +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
475718    +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
475719    +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
475720    +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
475721    +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
475722    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475723    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475724    +          END;
MPRINT(EM_DIAGRAM):   END;
475725    +        END;
MPRINT(EM_DIAGRAM):   END;
475726    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475727    +        IF  NOT MISSING(MntFishProducts ) AND
475728    +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
475729    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
475730    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
475731    +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
475732    +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
475733    +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
475734    +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
475735    +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
475736    +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
475737    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475738    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475739    +          END;
MPRINT(EM_DIAGRAM):   END;
475740    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475741    +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
475742    +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
475743    +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
475744    +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
475745    +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
475746    +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
475747    +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
475748    +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
475749    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
475750    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
475751    +          END;
MPRINT(EM_DIAGRAM):   END;
475752    +        END;
MPRINT(EM_DIAGRAM):   END;
475753    +      END;
MPRINT(EM_DIAGRAM):   END;
475754    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475755    +      IF  NOT MISSING(NumWebVisitsMonth ) AND
475756    +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
475757    +        IF  NOT MISSING(NumCatalogPurchases ) AND
475758    +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
475759    +          IF  NOT MISSING(Kidhome ) AND
475760    +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
475761    +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
475762    +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
475763    +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
475764    +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
475765    +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
475766    +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
475767    +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
475768    +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
475769    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475770    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475771    +            END;
MPRINT(EM_DIAGRAM):   END;
475772    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475773    +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
475774    +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
475775    +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
475776    +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
475777    +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
475778    +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
475779    +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
475780    +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
475781    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
475782    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
475783    +            END;
MPRINT(EM_DIAGRAM):   END;
475784    +          END;
MPRINT(EM_DIAGRAM):   END;
475785    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475786    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
475787    +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
475788    +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
475789    +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
475790    +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
475791    +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
475792    +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
475793    +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
475794    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475795    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475796    +          END;
MPRINT(EM_DIAGRAM):   END;
475797    +        END;
MPRINT(EM_DIAGRAM):   END;
475798    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475799    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
475800    +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
475801    +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
475802    +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
475803    +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
475804    +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
475805    +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
475806    +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
475807    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475808    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475809    +        END;
MPRINT(EM_DIAGRAM):   END;
475810    +      END;
MPRINT(EM_DIAGRAM):   END;
475811    +    END;
MPRINT(EM_DIAGRAM):   END;
475812    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475813    +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
475814    +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
475815    +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
475816    +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
475817    +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
475818    +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
475819    +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
475820    +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
475821    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
475822    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
475823    +    END;
MPRINT(EM_DIAGRAM):   END;
475824    +  END;
MPRINT(EM_DIAGRAM):   END;
475825    +
475826    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
475827    +IF  F_DepVar  NE '0'
475828    +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
475829    +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
475830    +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
475831    + END;
MPRINT(EM_DIAGRAM):   END;
475832    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
475833    +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
475834    +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
475835    +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
475836    +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
475837    +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
475838    +       END;
MPRINT(EM_DIAGRAM):   END;
475839    + END;
MPRINT(EM_DIAGRAM):   END;
475840    +
475841    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
475842    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
475843    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
475844    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
475845    +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
475846    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475847    +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
475848    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475849    +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
475850    +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
475851    +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
475852    +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
475853    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475854    +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
475855    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475856    +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
475857    +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
475858    +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
475859    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475860    +* Ensmbl25: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 9 of 10;
475861    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475862    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475863    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
475864    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
475865    +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
475866    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
475867    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
475868    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
475869    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
475870    +
475871    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
475872    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
475873    +
475874    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
475875    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
475876    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
475877    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
475878    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
475879    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
475880    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
475881    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
475882    +
475883    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
475884    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
475885    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
475886    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
475887    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
475888    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
475889    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
475890    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
475891    +end;
MPRINT(EM_DIAGRAM):   end;
475892    +else do;
MPRINT(EM_DIAGRAM):   else do;
475893    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
475894    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
475895    +   end;
MPRINT(EM_DIAGRAM):   end;
475896    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
475897    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
475898    +   end;
MPRINT(EM_DIAGRAM):   end;
475899    +   else do;
MPRINT(EM_DIAGRAM):   else do;
475900    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
475901    +   end;
MPRINT(EM_DIAGRAM):   end;
475902    +end;
MPRINT(EM_DIAGRAM):   end;
475903    +
475904    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
475905    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
475906    +
475907    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
475908    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
475909    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475910    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475911    +end;
MPRINT(EM_DIAGRAM):   end;
475912    +
475913    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
475914    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
475915    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475916    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475917    +end;
MPRINT(EM_DIAGRAM):   end;
475918    +
475919    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
475920    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
475921    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475922    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475923    +end;
MPRINT(EM_DIAGRAM):   end;
475924    +
475925    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
475926    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
475927    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475928    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475929    +end;
MPRINT(EM_DIAGRAM):   end;
475930    +
475931    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
475932    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
475933    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475934    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475935    +end;
MPRINT(EM_DIAGRAM):   end;
475936    +
475937    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
475938    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
475939    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475940    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475941    +end;
MPRINT(EM_DIAGRAM):   end;
475942    +
475943    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
475944    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
475945    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475946    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475947    +end;
MPRINT(EM_DIAGRAM):   end;
475948    +
475949    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
475950    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
475951    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475952    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475953    +end;
MPRINT(EM_DIAGRAM):   end;
475954    +
475955    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
475956    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
475957    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475958    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475959    +end;
MPRINT(EM_DIAGRAM):   end;
475960    +
475961    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
475962    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
475963    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475965    +end;
MPRINT(EM_DIAGRAM):   end;
475966    +
475967    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
475968    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
475969    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475970    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475971    +end;
MPRINT(EM_DIAGRAM):   end;
475972    +
475973    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
475974    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
475975    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475976    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475977    +end;
MPRINT(EM_DIAGRAM):   end;
475978    +
475979    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
475980    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
475981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475983    +end;
MPRINT(EM_DIAGRAM):   end;
475984    +
475985    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
475986    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
475987    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
475988    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
475989    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
475990    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
475991    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
475992    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
475993    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
475994    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
475995    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
475996    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
475997    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
475998    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
475999    +end;
MPRINT(EM_DIAGRAM):   end;
476000    +else do;
MPRINT(EM_DIAGRAM):   else do;
476001    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
476002    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
476003    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476004    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
476005    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
476006    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
476007    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
476008    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
476009    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476010    +         end;
MPRINT(EM_DIAGRAM):   end;
476011    +         else do;
MPRINT(EM_DIAGRAM):   else do;
476012    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
476013    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
476014    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476015    +            end;
MPRINT(EM_DIAGRAM):   end;
476016    +         end;
MPRINT(EM_DIAGRAM):   end;
476017    +      end;
MPRINT(EM_DIAGRAM):   end;
476018    +      else do;
MPRINT(EM_DIAGRAM):   else do;
476019    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
476020    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
476021    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476022    +         end;
MPRINT(EM_DIAGRAM):   end;
476023    +      end;
MPRINT(EM_DIAGRAM):   end;
476024    +   end;
MPRINT(EM_DIAGRAM):   end;
476025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476026    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
476027    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
476028    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476029    +      end;
MPRINT(EM_DIAGRAM):   end;
476030    +      else do;
MPRINT(EM_DIAGRAM):   else do;
476031    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
476032    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
476033    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
476034    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
476035    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
476036    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476037    +         end;
MPRINT(EM_DIAGRAM):   end;
476038    +      end;
MPRINT(EM_DIAGRAM):   end;
476039    +   end;
MPRINT(EM_DIAGRAM):   end;
476040    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
476041    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
476042    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
476043    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
476044    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
476045    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476046    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476047    +   end;
MPRINT(EM_DIAGRAM):   end;
476048    +end;
MPRINT(EM_DIAGRAM):   end;
476049    +
476050    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
476051    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
476052    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
476053    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
476054    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
476055    +end;
MPRINT(EM_DIAGRAM):   end;
476056    +
476057    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
476058    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
476059    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
476060    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
476061    +
476062    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
476063    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
476064    +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
476065    +
476066    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
476067    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
476068    +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
476069    +
476070    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
476071    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
476072    +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
476073    +
476074    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
476075    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
476076    +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
476077    +
476078    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
476079    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
476080    +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
476081    +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
476082    +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
476083    +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
476084    +
476085    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
476086    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
476087    +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
476088    +
476089    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
476090    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
476091    +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
476092    +
476093    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
476094    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
476095    +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
476096    +
476097    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
476098    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
476099    +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
476100    +
476101    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
476102    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
476103    +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
476104    +
476105    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
476106    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
476107    +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
476108    +
476109    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
476110    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
476111    +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
476112    +
476113    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
476114    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
476115    +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
476116    +
476117    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
476118    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
476119    +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
476120    +
476121    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
476122    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
476123    +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
476124    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
476125    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
476126    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
476127    +end;
MPRINT(EM_DIAGRAM):   end;
476128    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
476129    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
476130    +
476131    +REGDR1:
476132    +
476133    +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
476134    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
476135    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
476136    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
476137    +end;
MPRINT(EM_DIAGRAM):   end;
476138    +else do;
MPRINT(EM_DIAGRAM):   else do;
476139    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
476140    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
476141    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
476142    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
476143    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
476144    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
476145    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
476146    +   end;
MPRINT(EM_DIAGRAM):   end;
476147    +end;
MPRINT(EM_DIAGRAM):   end;
476148    +
476149    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
476150    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
476151    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
476152    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
476153    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
476154    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
476155    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
476156    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
476157    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
476158    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
476159    +end;
MPRINT(EM_DIAGRAM):   end;
476160    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
476161    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
476162    +
476163    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
476164    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
476165    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
476166    +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
476167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476168    +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
476169    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476170    +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
476171    +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
476172    +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
476173    +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
476174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476175    +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
476176    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476177    +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
476178    +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
476179    +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
476180    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476181    +* Ensmbl25: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Scoring Code of model 10 of 10;
476182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476184    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
476185    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
476186    +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
476187    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476188    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
476189    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
476190    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
476191    +
476192    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
476193    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
476194    +
476195    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
476196    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
476197    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
476198    +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
476199    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
476200    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
476201    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
476202    +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
476203    +
476204    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
476205    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
476206    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
476207    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
476208    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
476209    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476210    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
476211    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
476212    +end;
MPRINT(EM_DIAGRAM):   end;
476213    +else do;
MPRINT(EM_DIAGRAM):   else do;
476214    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
476215    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
476216    +   end;
MPRINT(EM_DIAGRAM):   end;
476217    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
476218    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
476219    +   end;
MPRINT(EM_DIAGRAM):   end;
476220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476221    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
476222    +   end;
MPRINT(EM_DIAGRAM):   end;
476223    +end;
MPRINT(EM_DIAGRAM):   end;
476224    +
476225    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
476226    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
476227    +
476228    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
476229    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
476230    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476231    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476232    +end;
MPRINT(EM_DIAGRAM):   end;
476233    +
476234    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
476235    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
476236    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476237    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476238    +end;
MPRINT(EM_DIAGRAM):   end;
476239    +
476240    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
476241    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
476242    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476243    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476244    +end;
MPRINT(EM_DIAGRAM):   end;
476245    +
476246    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
476247    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
476248    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476249    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476250    +end;
MPRINT(EM_DIAGRAM):   end;
476251    +
476252    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
476253    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
476254    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476255    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476256    +end;
MPRINT(EM_DIAGRAM):   end;
476257    +
476258    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
476259    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
476260    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476261    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476262    +end;
MPRINT(EM_DIAGRAM):   end;
476263    +
476264    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
476265    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
476266    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476267    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476268    +end;
MPRINT(EM_DIAGRAM):   end;
476269    +
476270    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
476271    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
476272    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476273    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476274    +end;
MPRINT(EM_DIAGRAM):   end;
476275    +
476276    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
476277    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
476278    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476279    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476280    +end;
MPRINT(EM_DIAGRAM):   end;
476281    +
476282    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
476283    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
476284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476286    +end;
MPRINT(EM_DIAGRAM):   end;
476287    +
476288    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
476289    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
476290    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476291    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476292    +end;
MPRINT(EM_DIAGRAM):   end;
476293    +
476294    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
476295    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
476296    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476297    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476298    +end;
MPRINT(EM_DIAGRAM):   end;
476299    +
476300    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
476301    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
476302    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
476303    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
476304    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
476305    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
476306    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
476307    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
476308    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
476309    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
476310    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
476311    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
476312    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476313    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476314    +end;
MPRINT(EM_DIAGRAM):   end;
476315    +else do;
MPRINT(EM_DIAGRAM):   else do;
476316    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
476317    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
476318    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476319    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
476320    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
476321    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
476322    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
476323    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
476324    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476325    +         end;
MPRINT(EM_DIAGRAM):   end;
476326    +         else do;
MPRINT(EM_DIAGRAM):   else do;
476327    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
476328    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
476329    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476330    +            end;
MPRINT(EM_DIAGRAM):   end;
476331    +         end;
MPRINT(EM_DIAGRAM):   end;
476332    +      end;
MPRINT(EM_DIAGRAM):   end;
476333    +      else do;
MPRINT(EM_DIAGRAM):   else do;
476334    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
476335    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
476336    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476337    +         end;
MPRINT(EM_DIAGRAM):   end;
476338    +      end;
MPRINT(EM_DIAGRAM):   end;
476339    +   end;
MPRINT(EM_DIAGRAM):   end;
476340    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476341    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
476342    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
476343    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476344    +      end;
MPRINT(EM_DIAGRAM):   end;
476345    +      else do;
MPRINT(EM_DIAGRAM):   else do;
476346    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
476347    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
476348    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
476349    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
476350    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
476351    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
476352    +         end;
MPRINT(EM_DIAGRAM):   end;
476353    +      end;
MPRINT(EM_DIAGRAM):   end;
476354    +   end;
MPRINT(EM_DIAGRAM):   end;
476355    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
476356    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
476357    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
476358    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
476359    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
476360    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476361    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476362    +   end;
MPRINT(EM_DIAGRAM):   end;
476363    +end;
MPRINT(EM_DIAGRAM):   end;
476364    +
476365    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
476366    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
476367    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
476368    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
476369    +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
476370    +end;
MPRINT(EM_DIAGRAM):   end;
476371    +
476372    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
476373    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
476374    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
476375    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
476376    +
476377    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
476378    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
476379    +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
476380    +
476381    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
476382    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
476383    +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
476384    +
476385    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
476386    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
476387    +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
476388    +
476389    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
476390    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
476391    +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
476392    +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
476393    +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
476394    +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
476395    +
476396    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
476397    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
476398    +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
476399    +
476400    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
476401    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
476402    +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
476403    +
476404    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
476405    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
476406    +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
476407    +
476408    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
476409    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
476410    +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
476411    +
476412    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
476413    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
476414    +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
476415    +
476416    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
476417    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
476418    +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
476419    +
476420    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
476421    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
476422    +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
476423    +
476424    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
476425    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
476426    +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
476427    +
476428    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
476429    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
476430    +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
476431    +
476432    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
476433    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
476434    +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
476435    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
476436    +
476437    +REG5DR1:
476438    +
476439    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
476440    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
476441    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
476442    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
476443    +end;
MPRINT(EM_DIAGRAM):   end;
476444    +else do;
MPRINT(EM_DIAGRAM):   else do;
476445    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
476446    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
476447    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
476448    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
476449    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
476450    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
476451    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
476452    +   end;
MPRINT(EM_DIAGRAM):   end;
476453    +end;
MPRINT(EM_DIAGRAM):   end;
476454    +
476455    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
476456    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
476457    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
476458    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
476459    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
476460    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
476461    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
476462    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
476463    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
476464    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
476465    +end;
MPRINT(EM_DIAGRAM):   end;
476466    +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
476467    +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
476468    +
476469    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
476470    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
476471    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
476472    +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
476473    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476474    +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
476475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476476    +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
476477    +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
476478    +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
476479    +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
476480    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476481    +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
476482    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476483    +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
476484    +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
476485    +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
476486    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476487    +* Ensmbl25: Maximum Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Maximum Posteriors of 10 models;
476488    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476489    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
476490    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
476491    +P_DepVar1 = max(
476492    +Neural_P_DepVar1 ,
476493    +Neural2_P_DepVar1 ,
476494    +Neural3_P_DepVar1 ,
476495    +Neural4_P_DepVar1 ,
476496    +Neural7_P_DepVar1 ,
476497    +Neural9_P_DepVar1 ,
476498    +Neural10_P_DepVar1 ,
476499    +Tree_P_DepVar1 ,
476500    +Reg_P_DepVar1 ,
476501    +Reg5_P_DepVar1
476502    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural_P_DepVar1 , Neural2_P_DepVar1 , 
Neural3_P_DepVar1 , Neural4_P_DepVar1 , Neural7_P_DepVar1 , Neural9_P_DepVar1 , 
Neural10_P_DepVar1 , Tree_P_DepVar1 , Reg_P_DepVar1 , Reg5_P_DepVar1 );
476503    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
476504    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
476505    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
476506    +end;
MPRINT(EM_DIAGRAM):   end;
476507    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
476508    +P_DepVar0 = max(
476509    +Neural_P_DepVar0 ,
476510    +Neural2_P_DepVar0 ,
476511    +Neural3_P_DepVar0 ,
476512    +Neural4_P_DepVar0 ,
476513    +Neural7_P_DepVar0 ,
476514    +Neural9_P_DepVar0 ,
476515    +Neural10_P_DepVar0 ,
476516    +Tree_P_DepVar0 ,
476517    +Reg_P_DepVar0 ,
476518    +Reg5_P_DepVar0
476519    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural_P_DepVar0 , Neural2_P_DepVar0 , 
Neural3_P_DepVar0 , Neural4_P_DepVar0 , Neural7_P_DepVar0 , Neural9_P_DepVar0 , 
Neural10_P_DepVar0 , Tree_P_DepVar0 , Reg_P_DepVar0 , Reg5_P_DepVar0 );
476520    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
476521    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
476522    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
476523    +end;
MPRINT(EM_DIAGRAM):   end;
476524    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
476525    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476526    +* Ensmbl25: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Computing Classification Vars;
476527    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476528    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
476529    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
476530    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
476531    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
476532    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
476533    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
476534    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
476535    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
476536    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
476537    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
476538    +end;
MPRINT(EM_DIAGRAM):   end;
476539    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
476540    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
476541    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
476542    +end;
MPRINT(EM_DIAGRAM):   end;
476543    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
476544    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476545    +* Ensmbl25: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Producing Unformatted variable;
476546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476547    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
476548    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
476549    +else
476550    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
476551    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476552    +* Ensmbl25: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Computing _WARN_ Variable;
476553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476554    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
476555    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
476556    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
476557    +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
476558    +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
476559    +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
476560    +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
476561    +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
476562    +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
476563    +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
476564    +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
476565    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
476566    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
476567    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
476568    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
476569    +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
476570    +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
476571    +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
476572    +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
476573    +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
476574    +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
476575    +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
476576    +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
476577    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
476578    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
476579    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
476580    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
476581    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
476581   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
476582    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
476582   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
476583    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
476583   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
476584    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
476584   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
476585    +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
476586    +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
476587    +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
476588    +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
476589    +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
476590    +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
476591    +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
476592    +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
476593    +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
476594    +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
476595    +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
476596    +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
476597    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476598    +* Ensmbl25: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Computing Residual Vars;
476599    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476600    +if
476601    +F_DepVar NE '1'
476602    +AND F_DepVar NE '0'
476603    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
476604    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
476605    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
476606    +end;
MPRINT(EM_DIAGRAM):   end;
476607    +else do;
MPRINT(EM_DIAGRAM):   else do;
476608    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
476609    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
476610    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
476611    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
476612    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
476613    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
476614    +END;
MPRINT(EM_DIAGRAM):   END;
476615    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
476616     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL25_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):   quit;
476617     quit;
476618     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl25_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl25_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl25_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl25_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl25_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
476678     filename _pref
476678   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
476679     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
476680     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas.
476681    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
476682    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
476683    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
476684    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
476685    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
476686    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
476687    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
476688    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
476689    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
476690    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
476691    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
476692    +LENGTH _WARN_ $4
476693    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
476694    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
476695    +
476696    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
476697    +
476698    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
476699    +
476700    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
476701    +
476702    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
476703    +
476704    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
476705    +
476706    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
476707    +
476708    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
476709    +
476710    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
476711    +
476712    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
476713    +
476714    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
476715    +
476716    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
476717    +
476718    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
476719    +
476720    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
476721    +
476722    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
476723    +
476724    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
476725    +
476726    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
476727    +
476728    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
476729    +
476730    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
476731    +
476732    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
476733    +
476734    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
476735    +
476736    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
476737    +
476738    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
476739    +
476740    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
476741    +
476742    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
476743    +
476744    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
476745    +
476746    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
476747    +
476748    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
476749    +
476750    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
476751    +
476752    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
476753    +
476754    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
476755    +
476756    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
476757    +
476758    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
476759    +
476760    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
476761    +
476762    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
476763    +
476764    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
476765    +
476766    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
476767    +
476768    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
476769    +
476770    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
476771    +
476772    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
476773    +
476774    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
476775    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
476776    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
476777    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
476778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476780    +end;
MPRINT(EM_DIAGRAM):   end;
476781    +else do;
MPRINT(EM_DIAGRAM):   else do;
476782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476783    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
476784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476785    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
476786    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
476787    +   end;
MPRINT(EM_DIAGRAM):   end;
476788    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
476789    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
476790    +   end;
MPRINT(EM_DIAGRAM):   end;
476791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476792    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
476793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476795    +   end;
MPRINT(EM_DIAGRAM):   end;
476796    +end;
MPRINT(EM_DIAGRAM):   end;
476797    +
476798    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
476799    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
476800    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
476801    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
476802    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476803    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476804    +end;
MPRINT(EM_DIAGRAM):   end;
476805    +else do;
MPRINT(EM_DIAGRAM):   else do;
476806    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476807    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
476808    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476809    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
476810    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
476811    +   end;
MPRINT(EM_DIAGRAM):   end;
476812    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
476813    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
476814    +   end;
MPRINT(EM_DIAGRAM):   end;
476815    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476816    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
476817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476819    +   end;
MPRINT(EM_DIAGRAM):   end;
476820    +end;
MPRINT(EM_DIAGRAM):   end;
476821    +
476822    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
476823    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
476824    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
476825    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
476826    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476828    +end;
MPRINT(EM_DIAGRAM):   end;
476829    +else do;
MPRINT(EM_DIAGRAM):   else do;
476830    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476831    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
476832    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476833    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
476834    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
476835    +   end;
MPRINT(EM_DIAGRAM):   end;
476836    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
476837    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
476838    +   end;
MPRINT(EM_DIAGRAM):   end;
476839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476840    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
476841    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476842    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476843    +   end;
MPRINT(EM_DIAGRAM):   end;
476844    +end;
MPRINT(EM_DIAGRAM):   end;
476845    +
476846    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
476847    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
476848    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
476849    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
476850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476852    +end;
MPRINT(EM_DIAGRAM):   end;
476853    +else do;
MPRINT(EM_DIAGRAM):   else do;
476854    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476855    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
476856    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476857    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
476858    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
476859    +   end;
MPRINT(EM_DIAGRAM):   end;
476860    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
476861    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
476862    +   end;
MPRINT(EM_DIAGRAM):   end;
476863    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476864    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
476865    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476866    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476867    +   end;
MPRINT(EM_DIAGRAM):   end;
476868    +end;
MPRINT(EM_DIAGRAM):   end;
476869    +
476870    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
476871    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
476872    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
476873    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
476874    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476875    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476876    +end;
MPRINT(EM_DIAGRAM):   end;
476877    +else do;
MPRINT(EM_DIAGRAM):   else do;
476878    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476879    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
476880    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476881    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
476882    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
476883    +   end;
MPRINT(EM_DIAGRAM):   end;
476884    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
476885    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
476886    +   end;
MPRINT(EM_DIAGRAM):   end;
476887    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476888    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
476889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476891    +   end;
MPRINT(EM_DIAGRAM):   end;
476892    +end;
MPRINT(EM_DIAGRAM):   end;
476893    +
476894    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
476895    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
476896    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
476897    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
476898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476900    +end;
MPRINT(EM_DIAGRAM):   end;
476901    +else do;
MPRINT(EM_DIAGRAM):   else do;
476902    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476903    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
476904    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476905    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
476906    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
476907    +   end;
MPRINT(EM_DIAGRAM):   end;
476908    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
476909    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
476910    +   end;
MPRINT(EM_DIAGRAM):   end;
476911    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476912    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
476913    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476914    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476915    +   end;
MPRINT(EM_DIAGRAM):   end;
476916    +end;
MPRINT(EM_DIAGRAM):   end;
476917    +
476918    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
476919    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
476920    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
476921    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
476922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476924    +end;
MPRINT(EM_DIAGRAM):   end;
476925    +else do;
MPRINT(EM_DIAGRAM):   else do;
476926    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476927    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
476928    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476929    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
476930    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
476931    +   end;
MPRINT(EM_DIAGRAM):   end;
476932    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
476933    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
476934    +   end;
MPRINT(EM_DIAGRAM):   end;
476935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476936    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
476937    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476938    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476939    +   end;
MPRINT(EM_DIAGRAM):   end;
476940    +end;
MPRINT(EM_DIAGRAM):   end;
476941    +
476942    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
476943    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
476944    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
476945    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
476946    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
476947    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
476948    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
476949    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
476950    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
476951    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
476952    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
476953    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
476954    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476955    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476956    +end;
MPRINT(EM_DIAGRAM):   end;
476957    +else do;
MPRINT(EM_DIAGRAM):   else do;
476958    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
476959    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
476960    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476961    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
476962    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
476963    +   end;
MPRINT(EM_DIAGRAM):   end;
476964    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
476965    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
476966    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
476967    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
476968    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
476969    +   end;
MPRINT(EM_DIAGRAM):   end;
476970    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
476971    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
476972    +   end;
MPRINT(EM_DIAGRAM):   end;
476973    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
476974    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
476975    +   end;
MPRINT(EM_DIAGRAM):   end;
476976    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
476977    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
476978    +   end;
MPRINT(EM_DIAGRAM):   end;
476979    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476980    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
476981    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
476982    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
476983    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
476984    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476985    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476986    +   end;
MPRINT(EM_DIAGRAM):   end;
476987    +end;
MPRINT(EM_DIAGRAM):   end;
476988    +
476989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
476990    +*** Checking missing input Interval
476991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
476992    +
476993    +IF NMISS(
476994    +   AcceptedCmpTotal ,
476995    +   Age ,
476996    +   Frq ,
476997    +   Income ,
476998    +   Kidhome ,
476999    +   Mnt ,
477000    +   MntFishProducts ,
477001    +   MntFruits ,
477002    +   MntGoldProds ,
477003    +   MntMeatProducts ,
477004    +   MntSweetProducts ,
477005    +   MntWines ,
477006    +   MonthsAsCustomer ,
477007    +   NumCatalogPurchases ,
477008    +   NumDealsPurchases ,
477009    +   NumDistPurchases ,
477010    +   NumStorePurchases ,
477011    +   NumWebPurchases ,
477012    +   NumWebVisitsMonth ,
477013    +   RFMstat ,
477014    +   RMntFrq ,
477015    +   Recency ,
477016    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
477017    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
477018    +
477019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477020    +END;
MPRINT(EM_DIAGRAM):   END;
477021    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477022    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
477023    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477024    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
477025    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
477026    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
477027    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
477028    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
477029    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
477030    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
477031    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
477032    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
477033    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
477034    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
477035    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
477036    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
477037    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
477038    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
477039    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
477040    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
477041    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
477042    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
477043    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
477044    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
477045    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
477046    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
477047    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
477048    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
477049    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
477050    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
477051    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
477052    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
477053    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
477054    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
477055    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
477056    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
477057    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
477058    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
477059    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
477060    +END;
MPRINT(EM_DIAGRAM):   END;
477061    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
477062    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
477063    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
477064    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
477065    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
477066    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
477067    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
477068    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
477069    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
477070    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
477071    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
477072    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
477073    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
477074    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
477075    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
477076    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
477077    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
477078    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
477079    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
477080    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
477081    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
477082    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
477083    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
477084    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
477085    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
477086    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
477087    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
477088    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
477089    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
477090    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
477091    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
477092    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
477093    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
477094    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
477095    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
477096    +   ELSE S_NumCatalogPurchases
477097    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
477098    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
477099    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
477100    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
477101    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
477102    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
477103    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
477104    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
477105    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
477106    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
477107    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
477108    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
477109    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
477110    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
477111    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
477112    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
477113    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
477114    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
477115    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
477116    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
477117    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
477118    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
477119    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
477120    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
477121    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
477122    +END;
MPRINT(EM_DIAGRAM):   END;
477123    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477124    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
477125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477127    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
477128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477130    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
477131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477132    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
477133    +   H11  =     0.17253933153192 * S_AcceptedCmpTotal  +    -0.00905682786307 *
477134    +        S_Age  +    -0.16189506426877 * S_Frq  +     0.04747866165156 *
477135    +        S_Income  +    -0.01003321974643 * S_Kidhome
477136    +          +      0.0295763599492 * S_Mnt  +    -0.01546318303003 *
477137    +        S_MntFishProducts  +    -0.01410665119089 * S_MntFruits
477138    +          +     0.00082923441873 * S_MntGoldProds  +     0.05549346930482 *
477139    +        S_MntMeatProducts  +    -0.01049992237931 * S_MntSweetProducts
477140    +          +    -0.07013234205633 * S_MntWines  +    -0.00721146825499 *
477141    +        S_MonthsAsCustomer  +     0.12264425658747 * S_NumCatalogPurchases
477142    +          +     0.04789435683014 * S_NumDealsPurchases
477143    +          +     0.03156899683016 * S_NumDistPurchases
477144    +          +     0.02920310465753 * S_NumStorePurchases
477145    +          +     -0.0008553015476 * S_NumWebPurchases
477146    +          +     0.09480487235301 * S_NumWebVisitsMonth
477147    +          +     0.01508383637372 * S_RFMstat  +     0.01456375884416 *
477148    +        S_RMntFrq  +    -0.10511528420774 * S_Recency
477149    +          +      -0.023971907884 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17253933153192 * S_AcceptedCmpTotal + -0.00905682786307 * S_Age 
+ -0.16189506426877 * S_Frq + 0.04747866165156 * S_Income + -0.01003321974643 * S_Kidhome + 
0.0295763599492 * S_Mnt + -0.01546318303003 * S_MntFishProducts + -0.01410665119089 * 
S_MntFruits + 0.00082923441873 * S_MntGoldProds + 0.05549346930482 * S_MntMeatProducts + 
-0.01049992237931 * S_MntSweetProducts + -0.07013234205633 * S_MntWines + -0.00721146825499 * 
S_MonthsAsCustomer + 0.12264425658747 * S_NumCatalogPurchases + 0.04789435683014 * 
S_NumDealsPurchases + 0.03156899683016 * S_NumDistPurchases + 0.02920310465753 * 
S_NumStorePurchases + -0.0008553015476 * S_NumWebPurchases + 0.09480487235301 * 
S_NumWebVisitsMonth + 0.01508383637372 * S_RFMstat + 0.01456375884416 * S_RMntFrq + 
-0.10511528420774 * S_Recency + -0.023971907884 * S_Teenhome ;
477150    +   H11  = H11  +     0.07798877961888 * AcceptedCmp10
477151    +          +     0.08545224835311 * AcceptedCmp20  +     0.07286185961898 *
477152    +        AcceptedCmp30  +     0.08445406170559 * AcceptedCmp40
477153    +          +     0.06102198752605 * AcceptedCmp50  +     0.01824734417591 *
477154    +        Complain0  +    -0.00626869897647 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.07798877961888 * AcceptedCmp10 + 0.08545224835311 * 
AcceptedCmp20 + 0.07286185961898 * AcceptedCmp30 + 0.08445406170559 * AcceptedCmp40 + 
0.06102198752605 * AcceptedCmp50 + 0.01824734417591 * Complain0 + -0.00626869897647 * 
HigherEducationBinary0 ;
477155    +   H11  = H11  +     0.00812441674075 * Education2n_Cycle
477156    +          +    -0.01198925622737 * EducationBasic  +     0.00714615715672 *
477157    +        EducationGraduation  +    -0.00200978992401 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00812441674075 * Education2n_Cycle + -0.01198925622737 * 
EducationBasic + 0.00714615715672 * EducationGraduation + -0.00200978992401 * EducationMaster ;
477158    +   H11  =     -0.3576236510542 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.3576236510542 + H11 ;
477159    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
477160    +END;
MPRINT(EM_DIAGRAM):   END;
477161    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
477162    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
477163    +END;
MPRINT(EM_DIAGRAM):   END;
477164    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477165    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
477166    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477167    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
477168    +   P_DepVar1  =     25.9968153762534 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.9968153762534 * H11 ;
477169    +   P_DepVar1  =    -4.91742031612348 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.91742031612348 + P_DepVar1 ;
477170    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
477171    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
477172    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
477173    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
477174    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
477175    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
477176    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
477177    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
477178    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
477179    +END;
MPRINT(EM_DIAGRAM):   END;
477180    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
477181    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
477182    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
477183    +END;
MPRINT(EM_DIAGRAM):   END;
477184    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
477185    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
477186    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
477187    +END;
MPRINT(EM_DIAGRAM):   END;
477188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477189    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
477190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477191    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
477192    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
477193    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
477194    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
477195    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
477196    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
477197    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
477198    +END;
MPRINT(EM_DIAGRAM):   END;
477199    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
477200    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
477201    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
477202    +drop
477203    +H11
477204    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
477205    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
477206     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
477207     quit;
477208     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
477209     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
477210     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
477211     retain ID 2 Node "Neural";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural";
477212     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
477213     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1832 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1832 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477214     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
477215     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477216     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1832 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1832 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477217     proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
477218     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477219     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477220     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
477221     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
477222     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
477223     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477224     proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
477225     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

477226     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
477227     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477228     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477229     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
477230     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
477231     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477232     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477233     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
477234     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
477234   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1228 rows and 5 columns.

477235     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

477236     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
477237     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1228 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1228 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477238     filename _pref
477238   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
477239     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
477240     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
477241    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
477242    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
477243    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
477244    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
477245    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
477246    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
477247     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
477248     quit;
477249     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
477250     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
477251     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
477252     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
477253     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
477254     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477255     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
477256     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477257     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477258     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
477259     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477260     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

477261     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
477262     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
477263     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
477264     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477265     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
477266     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

477267     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
477268     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477269     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477270     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
477271     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
477272     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477273     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477274     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
477275     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
477275   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

477276     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477277     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
477278     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1232 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

477279     filename _pref
477279   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
477280     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
477281     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
477282    +
477283    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
477284    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
477284   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
477285    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
477286    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
477287    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
477288    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
477289    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
477290     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
477291     quit;
477292     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
477293     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
477294     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
477295     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
477296     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
477297     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

477298     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
477299     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477301     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
477302     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477303     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477304     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
477305     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
477306     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
477307     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477308     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
477309     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477310     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
477311     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477312     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477313     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
477314     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
477315     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477316     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477317     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
477318     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
477318   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

477319     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

477320     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
477321     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1271 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477322     filename _pref
477322   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
477323     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
477324     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
477325    +
477326    +
477327    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
477328    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
477329    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
477330    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
477331    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
477332    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
477333    +
477334    +
477335    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
477336    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
477337    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
477338    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
477339    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
477340    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
477341    +
477342    +
477343    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
477344    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
477345    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
477346    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
477347    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
477348    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
477349    +
477350    +
477351    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
477352    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
477353    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
477354    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
477355    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
477356    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
477357    +
477358    +
477359    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
477360    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
477361    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
477362    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
477363    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
477364    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
477365    +
477366    +
477367    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
477368    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
477369    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
477370    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
477371    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
477372    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
477373    +
477374    +
477375    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
477376    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
477377    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
477378    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
477379    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
477380    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
477381    +
477382    +
477383    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
477384    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
477385    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
477386    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
477387    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
477388    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
477389    +if
477390    +_FILTERNORM1 not in ( '.')
477391    + and
477392    +_FILTERNORM2 not in ( '.')
477393    + and
477394    +_FILTERNORM3 not in ( '.')
477395    + and
477396    +_FILTERNORM4 not in ( '.')
477397    + and
477398    +_FILTERNORM5 not in ( '.')
477399    + and
477400    +_FILTERNORM6 not in ( '.')
477401    + and
477402    +_FILTERNORM7 not in ( ' ')
477403    + and
477404    +_FILTERNORM8 not in ( ' ')
477405    +and
477406    +( Dt_Customer ne .)
477407    +and ( Income ne . and (Income<=107000))
477408    +and ( Kidhome ne .)
477409    +and ( MntFishProducts ne .)
477410    +and ( MntFruits ne .)
477411    +and ( MntGoldProds ne .)
477412    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
477413    +and ( MntSweetProducts ne .)
477414    +and ( MntWines ne .)
477415    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
477416    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
477417    +and ( NumStorePurchases ne .)
477418    +and ( NumWebPurchases ne .)
477419    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
477420    +and ( Recency ne .)
477421    +and ( Teenhome ne .)
477422    +and ( Year_Birth ne .)
477423    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
477424    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
477425    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
477426    +end;
MPRINT(EM_DIAGRAM):   end;
477427    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
477428    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
477429     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
477430     quit;
477431     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
477432     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
477433     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
477434     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
477435     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
477436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477437     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
477438     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477439     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

477440     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
477441     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477442     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477443     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
477444     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
477445     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
477446     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477447     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
477448     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

477449     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
477450     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477451     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477452     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
477453     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
477454     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
477455     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477456     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
477457     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
477457   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

477458     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

477459     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
477460     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1337 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477461     %macro varDept(fcmpdata=,id=);
477462     %global nobs&id scoreFlag&id;
477463     %let scoreFlag&id = 0;
477464     %if &id=1 or ^&fcmpStart %then %do;
477465     proc sort data=&fcmpdata out=_temp&id nodupkey;
477466     by NAME;
477467     where id=&id and LHS in( %let j=1;
477468     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
477469     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
477470     "&var" %let j = %eval(&j+1);
477471     %end;
477472     );
477473     run;
477474     %let dsid = %sysfunc(open(_temp&id));
477475     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
477476     %let dsid = %sysfunc(close(&dsid));
477477     %if &&nobs&id %then %do;
477478     %let scoreFlag&id = 1;
477479     %let fcmpStart = 1;
477480     %end;
477481     %else %let fcmpStart = 0;
477482     %end;
477483     %else %do;
477484     proc sort data=&fcmpdata out=_tempid;
477485     where id=&id;
477486     by LHS;
477487     run;
477488     %let dsid = %sysfunc(open(_tempid));
477489     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
477490     %let dsid = %sysfunc(close(&dsid));
477491     %if ^&&nobs&id %then %do;
477492     proc datasets lib=work nolist;
477493     delete _tempid;
477494     run;
477495     quit;
477496     %end;
477497     %else %do;
477498     data _tempAll;
477499     set %let j=%eval(&id-1);
477500     %do x=1 %to &j;
477501     %if &&nobs&x %then %do;
477502     _temp&x %end;
477503     %end;
477504     ;
477505     run;
477506     proc sql;
477507     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
477507   ! work._tempid p2 where p.name=p2.lhs;
477508     quit;
477509     data _temp&id;
477510     set _temp&id;
477511     where LHS ne '' and NAME ne '' and Node ne '';
477512     run;
477513     proc datasets lib=work nolist;
477514     delete _tempAll;
477515     run;
477516     %let dsid = %sysfunc(open(_temp&id));
477517     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
477518     %let dsid = %sysfunc(close(&dsid));
477519     %if ^&&nobs&id %then %do;
477520     proc datasets lib=work nolist;
477521     delete _temp&id;
477522     run;
477523     quit;
477524     %end;
477525     %else %do;
477526     %let scoreFlag&id = 1;
477527     data _temp&id;
477528     set _temp&id;
477529     where LHS ne NAME and node ne '';
477530     run;
477531     %let dsid = %sysfunc(open(_temp&id));
477532     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
477533     %let dsid = %sysfunc(close(&dsid));
477534     %if ^&&nobs&id %then %do;
477535     proc datasets lib=work nolist;
477536     delete _temp&id;
477537     run;
477538     quit;
477539     %end;
477540     %else %do;
477541     proc sort data=_temp&id nodupkey;
477542     by LHS NAME;
477543     run;
477544     %end;
477545     %end;
477546     %end;
477547     %end;
477548     %mend varDept;
477549     %macro optCode(outdata=fcmpdata);
477550     %global fcmpStart;
477551     %let fcmpStart = 0;
477552     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
477553     %let NumNodes=9;
477554     %do k=1 %to &NumNodes;
477555     %vardept(fcmpdata=&outdata, id=&k);
477556     %end;
477557     %mend optCode;
477558     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 130 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 97 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 76 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

477559     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
477560     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
477561     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
477562     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477563     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
477564     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
477565     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
477566     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477567     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
477568     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
477568   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

477569     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477570     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
477571     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
477572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

477573     filename _pref
477573   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
477574     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
477575     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
477576    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
477577    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
477578    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
477579    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
477580    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
477581    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
477582    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
477583    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
477584    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
477585    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
477586    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
477587    +LENGTH _WARN_ $4
477588    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
477589    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
477590    +
477591    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
477592    +
477593    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
477594    +
477595    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
477596    +
477597    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
477598    +
477599    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
477600    +
477601    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
477602    +
477603    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
477604    +
477605    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
477606    +
477607    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
477608    +
477609    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
477610    +
477611    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
477612    +
477613    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
477614    +
477615    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
477616    +
477617    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
477618    +
477619    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
477620    +
477621    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
477622    +
477623    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
477624    +
477625    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
477626    +
477627    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
477628    +
477629    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
477630    +
477631    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
477632    +
477633    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
477634    +
477635    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
477636    +
477637    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
477638    +
477639    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
477640    +
477641    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
477642    +
477643    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
477644    +
477645    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
477646    +
477647    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
477648    +
477649    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
477650    +
477651    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
477652    +
477653    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
477654    +
477655    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
477656    +
477657    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
477658    +
477659    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
477660    +
477661    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
477662    +
477663    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
477664    +
477665    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
477666    +
477667    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
477668    +
477669    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
477670    +
477671    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
477672    +
477673    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
477674    +
477675    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
477676    +
477677    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
477678    +
477679    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
477680    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
477681    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
477682    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
477683    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477684    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477685    +end;
MPRINT(EM_DIAGRAM):   end;
477686    +else do;
MPRINT(EM_DIAGRAM):   else do;
477687    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477688    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
The SAS System

477689    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477690    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
477691    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
477692    +   end;
MPRINT(EM_DIAGRAM):   end;
477693    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
477694    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
477695    +   end;
MPRINT(EM_DIAGRAM):   end;
477696    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477697    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
477698    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477699    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477700    +   end;
MPRINT(EM_DIAGRAM):   end;
477701    +end;
MPRINT(EM_DIAGRAM):   end;
477702    +
477703    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
477704    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
477705    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
477706    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
477707    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477708    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477709    +end;
MPRINT(EM_DIAGRAM):   end;
477710    +else do;
MPRINT(EM_DIAGRAM):   else do;
477711    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477712    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
477713    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477714    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
477715    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
477716    +   end;
MPRINT(EM_DIAGRAM):   end;
477717    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
477718    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
477719    +   end;
MPRINT(EM_DIAGRAM):   end;
477720    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477721    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
477722    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477723    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477724    +   end;
MPRINT(EM_DIAGRAM):   end;
477725    +end;
MPRINT(EM_DIAGRAM):   end;
477726    +
477727    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
477728    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
477729    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
477730    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
477731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477733    +end;
MPRINT(EM_DIAGRAM):   end;
477734    +else do;
MPRINT(EM_DIAGRAM):   else do;
477735    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477736    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
477737    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477738    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
477739    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
477740    +   end;
MPRINT(EM_DIAGRAM):   end;
477741    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
477742    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
477743    +   end;
MPRINT(EM_DIAGRAM):   end;
477744    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477745    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
477746    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477747    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477748    +   end;
MPRINT(EM_DIAGRAM):   end;
477749    +end;
MPRINT(EM_DIAGRAM):   end;
477750    +
477751    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
477752    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
477753    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
477754    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
477755    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477756    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477757    +end;
MPRINT(EM_DIAGRAM):   end;
477758    +else do;
MPRINT(EM_DIAGRAM):   else do;
477759    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477760    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
477761    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477762    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
477763    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
477764    +   end;
MPRINT(EM_DIAGRAM):   end;
477765    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
477766    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
477767    +   end;
MPRINT(EM_DIAGRAM):   end;
477768    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477769    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
477770    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477771    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477772    +   end;
MPRINT(EM_DIAGRAM):   end;
477773    +end;
MPRINT(EM_DIAGRAM):   end;
477774    +
477775    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
477776    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
477777    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
477778    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
477779    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477780    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477781    +end;
MPRINT(EM_DIAGRAM):   end;
477782    +else do;
MPRINT(EM_DIAGRAM):   else do;
477783    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477784    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
477785    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477786    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
477787    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
477788    +   end;
MPRINT(EM_DIAGRAM):   end;
477789    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
477790    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
477791    +   end;
MPRINT(EM_DIAGRAM):   end;
477792    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477793    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
477794    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477795    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477796    +   end;
MPRINT(EM_DIAGRAM):   end;
477797    +end;
MPRINT(EM_DIAGRAM):   end;
477798    +
477799    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
477800    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
477801    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
477802    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
477803    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477804    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477805    +end;
MPRINT(EM_DIAGRAM):   end;
477806    +else do;
MPRINT(EM_DIAGRAM):   else do;
477807    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477808    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
477809    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477810    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
477811    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
477812    +   end;
MPRINT(EM_DIAGRAM):   end;
477813    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
477814    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
477815    +   end;
MPRINT(EM_DIAGRAM):   end;
477816    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477817    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
477818    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477819    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477820    +   end;
MPRINT(EM_DIAGRAM):   end;
477821    +end;
MPRINT(EM_DIAGRAM):   end;
477822    +
477823    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
477824    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
477825    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
477826    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
477827    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477828    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477829    +end;
MPRINT(EM_DIAGRAM):   end;
477830    +else do;
MPRINT(EM_DIAGRAM):   else do;
477831    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477832    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
477833    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477834    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
477835    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
477836    +   end;
MPRINT(EM_DIAGRAM):   end;
477837    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
477838    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
477839    +   end;
MPRINT(EM_DIAGRAM):   end;
477840    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477841    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
477842    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477843    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477844    +   end;
MPRINT(EM_DIAGRAM):   end;
477845    +end;
MPRINT(EM_DIAGRAM):   end;
477846    +
477847    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
477848    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
477849    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
477850    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
477851    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
477852    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
477853    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
477854    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
477855    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
477856    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
477857    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
477858    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
477859    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477860    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477861    +end;
MPRINT(EM_DIAGRAM):   end;
477862    +else do;
MPRINT(EM_DIAGRAM):   else do;
477863    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
477864    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
477865    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477866    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
477867    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
477868    +   end;
MPRINT(EM_DIAGRAM):   end;
477869    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
477870    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
477871    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
477872    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
477873    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
477874    +   end;
MPRINT(EM_DIAGRAM):   end;
477875    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
477876    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
477877    +   end;
MPRINT(EM_DIAGRAM):   end;
477878    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
477879    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
477880    +   end;
MPRINT(EM_DIAGRAM):   end;
477881    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
477882    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
477883    +   end;
MPRINT(EM_DIAGRAM):   end;
477884    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477885    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
477886    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
477887    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
477888    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
477889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477891    +   end;
MPRINT(EM_DIAGRAM):   end;
477892    +end;
MPRINT(EM_DIAGRAM):   end;
477893    +
477894    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
477895    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
477896    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
477897    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
477898    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
477899    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
477900    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
477901    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
477902    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
477903    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
477904    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
477905    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
477906    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
477907    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477908    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477909    +end;
MPRINT(EM_DIAGRAM):   end;
477910    +else do;
MPRINT(EM_DIAGRAM):   else do;
477911    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
477912    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
477913    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477914    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
477915    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
477916    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
477917    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
477918    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
477919    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
477920    +         end;
MPRINT(EM_DIAGRAM):   end;
477921    +         else do;
MPRINT(EM_DIAGRAM):   else do;
477922    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
477923    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
477924    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
477925    +            end;
MPRINT(EM_DIAGRAM):   end;
477926    +         end;
MPRINT(EM_DIAGRAM):   end;
477927    +      end;
MPRINT(EM_DIAGRAM):   end;
477928    +      else do;
MPRINT(EM_DIAGRAM):   else do;
477929    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
477930    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
477931    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
477932    +         end;
MPRINT(EM_DIAGRAM):   end;
477933    +      end;
MPRINT(EM_DIAGRAM):   end;
477934    +   end;
MPRINT(EM_DIAGRAM):   end;
477935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477936    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
477937    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
477938    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
477939    +      end;
MPRINT(EM_DIAGRAM):   end;
477940    +      else do;
MPRINT(EM_DIAGRAM):   else do;
477941    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
477942    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
477943    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
477944    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
477945    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
477946    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
477947    +         end;
MPRINT(EM_DIAGRAM):   end;
477948    +      end;
MPRINT(EM_DIAGRAM):   end;
477949    +   end;
MPRINT(EM_DIAGRAM):   end;
477950    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
477951    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
477952    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
477953    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
477954    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
477955    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477956    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477957    +   end;
MPRINT(EM_DIAGRAM):   end;
477958    +end;
MPRINT(EM_DIAGRAM):   end;
477959    +
477960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477961    +*** Checking missing input Interval
477962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
477963    +
477964    +IF NMISS(
477965    +   AcceptedCmpTotal ,
477966    +   Age ,
477967    +   Frq ,
477968    +   Income ,
477969    +   Kidhome ,
477970    +   Mnt ,
477971    +   MntFishProducts ,
477972    +   MntFruits ,
477973    +   MntGoldProds ,
477974    +   MntMeatProducts ,
477975    +   MntSweetProducts ,
477976    +   MntWines ,
477977    +   MonthsAsCustomer ,
477978    +   NumCatalogPurchases ,
477979    +   NumDealsPurchases ,
477980    +   NumDistPurchases ,
477981    +   NumStorePurchases ,
477982    +   NumWebPurchases ,
477983    +   NumWebVisitsMonth ,
477984    +   RFMstat ,
477985    +   RMntFrq ,
477986    +   Recency ,
477987    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
477988    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
477989    +
477990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477991    +END;
MPRINT(EM_DIAGRAM):   END;
477992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477993    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
477994    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
477995    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
477996    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
477997    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
477998    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
477999    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
478000    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
478001    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
478002    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
478003    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
478004    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
478005    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
478006    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
478007    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
478008    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
478009    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
478010    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
478011    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
478012    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
478013    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
478014    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
478015    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
478016    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
478017    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
478018    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
478019    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
478020    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
478021    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
478022    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
478023    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
478024    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
478025    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
478026    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
478027    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
478028    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
478029    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
478030    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
478031    +END;
MPRINT(EM_DIAGRAM):   END;
478032    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
478033    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
478034    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
478035    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
478036    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
478037    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
478038    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
478039    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
478040    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
478041    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
478042    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
478043    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
478044    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
478045    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
478046    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
478047    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
478048    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
478049    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
478050    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
478051    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
478052    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
478053    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
478054    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
478055    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
478056    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
478057    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
478058    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
478059    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
478060    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
478061    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
478062    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
478063    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
478064    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
478065    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
478066    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
478067    +   ELSE S_NumCatalogPurchases
478068    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
478069    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
478070    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
478071    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
478072    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
478073    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
478074    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
478075    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
478076    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
478077    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
478078    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
478079    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
478080    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
478081    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
478082    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
478083    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
478084    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
478085    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
478086    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
478087    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
478088    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
478089    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
478090    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
478091    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
478092    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
478093    +END;
MPRINT(EM_DIAGRAM):   END;
478094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478095    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
478096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478098    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
478099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478101    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
478102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478103    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
478104    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
478105    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
478106    +        S_Income  +    -1.07615700855274 * S_Kidhome
478107    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
478108    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
478109    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
478110    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
478111    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
478112    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
478113    +          +      0.3429043319369 * S_NumDealsPurchases
478114    +          +     0.71313309767469 * S_NumDistPurchases
478115    +          +     0.06017757740083 * S_NumStorePurchases
478116    +          +    -0.19817724925068 * S_NumWebPurchases
478117    +          +     1.34164122205952 * S_NumWebVisitsMonth
478118    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
478119    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
478120    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
478121    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
478122    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
478123    +        S_Income  +     -0.0027232441092 * S_Kidhome
478124    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
478125    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
478126    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
478127    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
478128    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
478129    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
478130    +          +      0.4576973746858 * S_NumDealsPurchases
478131    +          +     0.15590877272659 * S_NumDistPurchases
478132    +          +    -0.33414539713736 * S_NumStorePurchases
478133    +          +    -0.39370244666257 * S_NumWebPurchases
478134    +          +     0.52596714886704 * S_NumWebVisitsMonth
478135    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
478136    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
478137    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
478138    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
478139    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
478140    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
478141    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
478142    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
478143    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
478144    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
478145    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
478146    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
478147    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
478148    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
478149    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
478150    +        EducationGraduation  +      -0.333138438339 * EducationMaster
478151    +          +      0.4663802937397 * Marital_StatusDivorced
478152    +          +    -1.27401898796099 * Marital_StatusMarried
478153    +          +      1.3125969368079 * Marital_StatusSingle
478154    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
478155    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
478156    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
478157    +        EducationGraduation  +     0.00771527138053 * EducationMaster
478158    +          +     0.07419179522004 * Marital_StatusDivorced
478159    +          +     0.00234615813337 * Marital_StatusMarried
478160    +          +    -0.00725460458412 * Marital_StatusSingle
478161    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
478162    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
478163    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
478164    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
478165    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
478166    +END;
MPRINT(EM_DIAGRAM):   END;
478167    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
478168    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
478169    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
478170    +END;
MPRINT(EM_DIAGRAM):   END;
478171    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478172    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
478173    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478174    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
478175    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
478176    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
478177    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
478178    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
478179    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
478180    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
478181    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
478182    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
478183    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
478184    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
478185    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
478186    +END;
MPRINT(EM_DIAGRAM):   END;
478187    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
478188    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
478189    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
478190    +END;
MPRINT(EM_DIAGRAM):   END;
478191    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
478192    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
478193    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
478194    +END;
MPRINT(EM_DIAGRAM):   END;
478195    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478196    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
478197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478198    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
478199    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
478200    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
478201    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
478202    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
478203    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
478204    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
478205    +END;
MPRINT(EM_DIAGRAM):   END;
478206    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
478207    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
478208    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
478209    +drop
478210    +H11
478211    +H12
478212    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
478213    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
478214     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
478215     quit;
478216     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
478217     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
478218     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
478219     retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
478220     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
478221     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478222     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
478223     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478224     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478225     proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
478226     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478227     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478228     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
478229     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
478230     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
478231     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478232     proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
478233     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

478234     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
478235     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478236     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478237     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
478238     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
478239     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478240     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478241     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
478242     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
478242   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

478243     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478244     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
478245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478246     filename _pref
478246   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
478247     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
478248     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
478249    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
478250    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
478251    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
478252    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
478253    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
478254    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
478255     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
478256     quit;
478257     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
478258     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
478259     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
478260     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
478261     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
478262     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

478263     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
478264     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478265     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478266     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
478267     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478268     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478269     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
478270     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
478271     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
478272     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478273     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
478274     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478275     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
478276     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478277     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478278     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
478279     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
478280     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478281     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478282     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
478283     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
478283   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

478284     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478285     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
478286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478287     filename _pref
478287   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
478288     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
478289     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
478290    +
478291    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
478292    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
478292   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
478293    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
478294    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
478295    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
478296    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
478297    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
478298     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
478299     quit;
478300     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
478301     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
478302     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
478303     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
478304     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
478305     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478306     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
478307     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478308     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

478309     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
478310     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478311     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478312     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
478313     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
478314     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
478315     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478316     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
478317     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478318     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
478319     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478320     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478321     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
478322     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
478323     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478324     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478325     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
478326     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
478326   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

478327     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478328     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
478329     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478330     filename _pref
478330   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
478331     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
478332     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
478333    +
478334    +
478335    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
478336    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
478337    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
478338    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
478339    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
478340    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
478341    +
478342    +
478343    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
478344    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
478345    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
478346    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
478347    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
478348    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
478349    +
478350    +
478351    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
478352    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
478353    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
478354    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
478355    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
478356    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
478357    +
478358    +
478359    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
478360    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
478361    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
478362    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
478363    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
478364    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
478365    +
478366    +
478367    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
478368    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
478369    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
478370    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
478371    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
478372    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
478373    +
478374    +
478375    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
478376    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
478377    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
478378    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
478379    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
478380    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
478381    +
478382    +
478383    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
478384    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
478385    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
478386    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
478387    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
478388    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
478389    +
478390    +
478391    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
478392    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
478393    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
478394    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
478395    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
478396    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
478397    +if
478398    +_FILTERNORM1 not in ( '.')
478399    + and
478400    +_FILTERNORM2 not in ( '.')
478401    + and
478402    +_FILTERNORM3 not in ( '.')
478403    + and
478404    +_FILTERNORM4 not in ( '.')
478405    + and
478406    +_FILTERNORM5 not in ( '.')
478407    + and
478408    +_FILTERNORM6 not in ( '.')
478409    + and
478410    +_FILTERNORM7 not in ( ' ')
478411    + and
478412    +_FILTERNORM8 not in ( ' ')
478413    +and
478414    +( Dt_Customer ne .)
478415    +and ( Income ne . and (Income<=107000))
478416    +and ( Kidhome ne .)
478417    +and ( MntFishProducts ne .)
478418    +and ( MntFruits ne .)
478419    +and ( MntGoldProds ne .)
478420    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
478421    +and ( MntSweetProducts ne .)
478422    +and ( MntWines ne .)
478423    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
478424    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
478425    +and ( NumStorePurchases ne .)
478426    +and ( NumWebPurchases ne .)
478427    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
478428    +and ( Recency ne .)
478429    +and ( Teenhome ne .)
478430    +and ( Year_Birth ne .)
478431    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
478432    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
478433    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
478434    +end;
MPRINT(EM_DIAGRAM):   end;
478435    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
478436    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
478437     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
478438     quit;
478439     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
478440     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
478441     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
478442     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
478443     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
478444     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478445     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
478446     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478447     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478448     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
478449     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478450     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478451     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
478452     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
478453     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
478454     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478455     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
478456     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478457     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
478458     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478459     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478460     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
478461     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
478462     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
478463     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478464     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
478465     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
478465   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

478466     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478467     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
478468     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478469     %macro varDept(fcmpdata=,id=);
478470     %global nobs&id scoreFlag&id;
478471     %let scoreFlag&id = 0;
478472     %if &id=1 or ^&fcmpStart %then %do;
478473     proc sort data=&fcmpdata out=_temp&id nodupkey;
478474     by NAME;
478475     where id=&id and LHS in( %let j=1;
478476     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
478477     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
478478     "&var" %let j = %eval(&j+1);
478479     %end;
478480     );
478481     run;
478482     %let dsid = %sysfunc(open(_temp&id));
478483     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
478484     %let dsid = %sysfunc(close(&dsid));
478485     %if &&nobs&id %then %do;
478486     %let scoreFlag&id = 1;
478487     %let fcmpStart = 1;
478488     %end;
478489     %else %let fcmpStart = 0;
478490     %end;
478491     %else %do;
478492     proc sort data=&fcmpdata out=_tempid;
478493     where id=&id;
478494     by LHS;
478495     run;
478496     %let dsid = %sysfunc(open(_tempid));
478497     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
478498     %let dsid = %sysfunc(close(&dsid));
478499     %if ^&&nobs&id %then %do;
478500     proc datasets lib=work nolist;
478501     delete _tempid;
478502     run;
478503     quit;
478504     %end;
478505     %else %do;
478506     data _tempAll;
478507     set %let j=%eval(&id-1);
478508     %do x=1 %to &j;
478509     %if &&nobs&x %then %do;
478510     _temp&x %end;
478511     %end;
478512     ;
478513     run;
478514     proc sql;
478515     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
478515   ! work._tempid p2 where p.name=p2.lhs;
478516     quit;
478517     data _temp&id;
478518     set _temp&id;
478519     where LHS ne '' and NAME ne '' and Node ne '';
478520     run;
478521     proc datasets lib=work nolist;
478522     delete _tempAll;
478523     run;
478524     %let dsid = %sysfunc(open(_temp&id));
478525     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
478526     %let dsid = %sysfunc(close(&dsid));
478527     %if ^&&nobs&id %then %do;
478528     proc datasets lib=work nolist;
478529     delete _temp&id;
478530     run;
478531     quit;
478532     %end;
478533     %else %do;
478534     %let scoreFlag&id = 1;
478535     data _temp&id;
478536     set _temp&id;
478537     where LHS ne NAME and node ne '';
478538     run;
478539     %let dsid = %sysfunc(open(_temp&id));
478540     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
478541     %let dsid = %sysfunc(close(&dsid));
478542     %if ^&&nobs&id %then %do;
478543     proc datasets lib=work nolist;
478544     delete _temp&id;
478545     run;
478546     quit;
478547     %end;
478548     %else %do;
478549     proc sort data=_temp&id nodupkey;
478550     by LHS NAME;
478551     run;
478552     %end;
478553     %end;
478554     %end;
478555     %end;
478556     %mend varDept;
478557     %macro optCode(outdata=fcmpdata);
478558     %global fcmpStart;
478559     %let fcmpStart = 0;
478560     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
478561     %let NumNodes=9;
478562     %do k=1 %to &NumNodes;
478563     %vardept(fcmpdata=&outdata, id=&k);
478564     %end;
478565     %mend optCode;
478566     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

478567     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
478568     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
478569     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
478570     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478571     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
478572     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
478573     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
478574     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478575     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
478576     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
478576   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

478577     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478578     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
478579     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
478580     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478581     filename _pref
478581   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
478582     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
478583     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
478584    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
478585    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
478586    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
478587    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
478588    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
478589    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
478590    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
478591    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
478592    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
478593    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
478594    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
478595    +LENGTH _WARN_ $4
478596    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
478597    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
478598    +
478599    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
478600    +
478601    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
478602    +
478603    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
478604    +
478605    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
478606    +
478607    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
478608    +
478609    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
478610    +
478611    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
478612    +
478613    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
478614    +
478615    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
478616    +
478617    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
478618    +
478619    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
478620    +
478621    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
478622    +
478623    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
478624    +
478625    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
478626    +
478627    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
478628    +
478629    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
478630    +
478631    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
478632    +
478633    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
478634    +
478635    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
478636    +
478637    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
478638    +
478639    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
478640    +
478641    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
478642    +
478643    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
478644    +
478645    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
478646    +
478647    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
478648    +
478649    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
478650    +
478651    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
478652    +
478653    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
478654    +
478655    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
478656    +
478657    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
478658    +
478659    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
478660    +
478661    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
478662    +
478663    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
478664    +
478665    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
478666    +
478667    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
478668    +
478669    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
478670    +
478671    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
478672    +
478673    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
478674    +
478675    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
478676    +
478677    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
478678    +
478679    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
478680    +
478681    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
478682    +
478683    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
478684    +
478685    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
478686    +
478687    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
478688    +
478689    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
478690    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
478691    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
478692    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
478693    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478694    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478695    +end;
MPRINT(EM_DIAGRAM):   end;
478696    +else do;
MPRINT(EM_DIAGRAM):   else do;
478697    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
478698    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
478699    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478700    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
478701    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
478702    +   end;
MPRINT(EM_DIAGRAM):   end;
478703    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
478704    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
478705    +   end;
MPRINT(EM_DIAGRAM):   end;
478706    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478707    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
478708    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478709    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478710    +   end;
MPRINT(EM_DIAGRAM):   end;
478711    +end;
MPRINT(EM_DIAGRAM):   end;
478712    +
478713    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
478714    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
478715    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
478716    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
478717    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478718    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478719    +end;
MPRINT(EM_DIAGRAM):   end;
478720    +else do;
MPRINT(EM_DIAGRAM):   else do;
478721    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
478722    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
478723    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478724    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
478725    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
478726    +   end;
MPRINT(EM_DIAGRAM):   end;
478727    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
478728    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
478729    +   end;
MPRINT(EM_DIAGRAM):   end;
478730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478731    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
478732    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478733    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478734    +   end;
MPRINT(EM_DIAGRAM):   end;
478735    +end;
MPRINT(EM_DIAGRAM):   end;
478736    +
478737    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
478738    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
478739    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
478740    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
478741    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478742    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478743    +end;
MPRINT(EM_DIAGRAM):   end;
478744    +else do;
MPRINT(EM_DIAGRAM):   else do;
478745    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
478746    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
478747    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478748    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
478749    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
478750    +   end;
MPRINT(EM_DIAGRAM):   end;
478751    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
478752    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
478753    +   end;
MPRINT(EM_DIAGRAM):   end;
478754    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478755    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
478756    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478757    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478758    +   end;
MPRINT(EM_DIAGRAM):   end;
478759    +end;
MPRINT(EM_DIAGRAM):   end;
478760    +
478761    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
478762    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
478763    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
478764    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
478765    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478767    +end;
MPRINT(EM_DIAGRAM):   end;
478768    +else do;
MPRINT(EM_DIAGRAM):   else do;
478769    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
478770    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
478771    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478772    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
478773    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
478774    +   end;
MPRINT(EM_DIAGRAM):   end;
478775    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
478776    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
478777    +   end;
MPRINT(EM_DIAGRAM):   end;
478778    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478779    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
478780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478782    +   end;
MPRINT(EM_DIAGRAM):   end;
478783    +end;
MPRINT(EM_DIAGRAM):   end;
478784    +
478785    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
478786    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
478787    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
478788    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
478789    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478790    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478791    +end;
MPRINT(EM_DIAGRAM):   end;
478792    +else do;
MPRINT(EM_DIAGRAM):   else do;
478793    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
478794    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
478795    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478796    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
478797    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
478798    +   end;
MPRINT(EM_DIAGRAM):   end;
478799    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
478800    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
478801    +   end;
MPRINT(EM_DIAGRAM):   end;
478802    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478803    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
478804    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478805    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478806    +   end;
MPRINT(EM_DIAGRAM):   end;
478807    +end;
MPRINT(EM_DIAGRAM):   end;
478808    +
478809    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
478810    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
478811    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
478812    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
478813    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478814    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478815    +end;
MPRINT(EM_DIAGRAM):   end;
478816    +else do;
MPRINT(EM_DIAGRAM):   else do;
478817    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
478818    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
478819    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478820    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
478821    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
478822    +   end;
MPRINT(EM_DIAGRAM):   end;
478823    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
478824    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
478825    +   end;
MPRINT(EM_DIAGRAM):   end;
478826    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478827    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
478828    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478829    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478830    +   end;
MPRINT(EM_DIAGRAM):   end;
478831    +end;
MPRINT(EM_DIAGRAM):   end;
478832    +
478833    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
478834    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
478835    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
478836    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
478837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478839    +end;
MPRINT(EM_DIAGRAM):   end;
478840    +else do;
MPRINT(EM_DIAGRAM):   else do;
478841    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
478842    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
478843    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478844    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
478845    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
478846    +   end;
MPRINT(EM_DIAGRAM):   end;
478847    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
478848    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
478849    +   end;
MPRINT(EM_DIAGRAM):   end;
478850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478851    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
478852    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478853    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478854    +   end;
MPRINT(EM_DIAGRAM):   end;
478855    +end;
MPRINT(EM_DIAGRAM):   end;
478856    +
478857    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
478858    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
478859    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
478860    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
478861    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
478862    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
478863    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
478864    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
478865    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
478866    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
478867    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
478868    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
478869    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478870    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478871    +end;
MPRINT(EM_DIAGRAM):   end;
478872    +else do;
MPRINT(EM_DIAGRAM):   else do;
478873    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
478874    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
478875    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478876    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
478877    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
478878    +   end;
MPRINT(EM_DIAGRAM):   end;
478879    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
478880    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
478881    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
478882    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
478883    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
478884    +   end;
MPRINT(EM_DIAGRAM):   end;
478885    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
478886    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
478887    +   end;
MPRINT(EM_DIAGRAM):   end;
478888    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
478889    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
478890    +   end;
MPRINT(EM_DIAGRAM):   end;
478891    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
478892    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
478893    +   end;
MPRINT(EM_DIAGRAM):   end;
478894    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478895    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
478896    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
478897    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
478898    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
478899    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478900    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478901    +   end;
MPRINT(EM_DIAGRAM):   end;
478902    +end;
MPRINT(EM_DIAGRAM):   end;
478903    +
478904    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
478905    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
478906    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
478907    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
478908    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
478909    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
478910    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
478911    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
478912    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
478913    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
478914    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
478915    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
478916    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
478917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
478918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478919    +end;
MPRINT(EM_DIAGRAM):   end;
478920    +else do;
MPRINT(EM_DIAGRAM):   else do;
478921    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
478922    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
478923    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
478924    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
478925    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
478926    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
478927    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
478928    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
478929    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
478930    +         end;
MPRINT(EM_DIAGRAM):   end;
478931    +         else do;
MPRINT(EM_DIAGRAM):   else do;
478932    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
478933    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
478934    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
478935    +            end;
MPRINT(EM_DIAGRAM):   end;
478936    +         end;
MPRINT(EM_DIAGRAM):   end;
478937    +      end;
MPRINT(EM_DIAGRAM):   end;
478938    +      else do;
MPRINT(EM_DIAGRAM):   else do;
478939    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
478940    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
478941    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
478942    +         end;
MPRINT(EM_DIAGRAM):   end;
478943    +      end;
MPRINT(EM_DIAGRAM):   end;
478944    +   end;
MPRINT(EM_DIAGRAM):   end;
478945    +   else do;
MPRINT(EM_DIAGRAM):   else do;
478946    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
478947    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
478948    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
478949    +      end;
MPRINT(EM_DIAGRAM):   end;
478950    +      else do;
MPRINT(EM_DIAGRAM):   else do;
478951    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
478952    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
478953    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
478954    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
478955    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
478956    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
478957    +         end;
MPRINT(EM_DIAGRAM):   end;
478958    +      end;
MPRINT(EM_DIAGRAM):   end;
478959    +   end;
MPRINT(EM_DIAGRAM):   end;
478960    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
478961    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
478962    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
478963    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
478964    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
478965    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
478966    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
478967    +   end;
MPRINT(EM_DIAGRAM):   end;
478968    +end;
MPRINT(EM_DIAGRAM):   end;
478969    +
478970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
478971    +*** Checking missing input Interval
478972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
478973    +
478974    +IF NMISS(
478975    +   AcceptedCmpTotal ,
478976    +   Age ,
478977    +   Frq ,
478978    +   Income ,
478979    +   Kidhome ,
478980    +   Mnt ,
478981    +   MntFishProducts ,
478982    +   MntFruits ,
478983    +   MntGoldProds ,
478984    +   MntMeatProducts ,
478985    +   MntSweetProducts ,
478986    +   MntWines ,
478987    +   MonthsAsCustomer ,
478988    +   NumCatalogPurchases ,
478989    +   NumDealsPurchases ,
478990    +   NumDistPurchases ,
478991    +   NumStorePurchases ,
478992    +   NumWebPurchases ,
478993    +   NumWebVisitsMonth ,
478994    +   RFMstat ,
478995    +   RMntFrq ,
478996    +   Recency ,
478997    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
478998    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
478999    +
479000    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479001    +END;
MPRINT(EM_DIAGRAM):   END;
479002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479003    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
479004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479005    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
479006    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
479007    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
479008    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
479009    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
479010    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
479011    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
479012    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
479013    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
479014    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
479015    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
479016    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
479017    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
479018    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
479019    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
479020    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
479021    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
479022    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
479023    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
479024    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
479025    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
479026    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
479027    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
479028    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
479029    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
479030    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
479031    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
479032    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
479033    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
479034    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
479035    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
479036    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
479037    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
479038    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
479039    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
479040    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
479041    +END;
MPRINT(EM_DIAGRAM):   END;
479042    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
479043    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
479044    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
479045    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
479046    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
479047    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
479048    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
479049    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
479050    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
479051    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
479052    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
479053    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
479054    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
479055    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
479056    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
479057    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
479058    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
479059    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
479060    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
479061    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
479062    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
479063    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
479064    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
479065    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
479066    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
479067    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
479068    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
479069    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
479070    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
479071    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
479072    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
479073    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
479074    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
479075    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
479076    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
479077    +   ELSE S_NumCatalogPurchases
479078    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
479079    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
479080    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
479081    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
479082    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
479083    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
479084    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
479085    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
479086    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
479087    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
479088    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
479089    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
479090    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
479091    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
479092    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
479093    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
479094    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
479095    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
479096    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
479097    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
479098    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
479099    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
479100    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
479101    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
479102    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
479103    +END;
MPRINT(EM_DIAGRAM):   END;
479104    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479105    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
479106    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479108    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
479109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479110    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479111    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
479112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479113    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
479114    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
479115    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
479116    +        S_Income  +     0.51123266106809 * S_Kidhome
479117    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
479118    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
479119    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
479120    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
479121    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
479122    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
479123    +          +     1.34095732961105 * S_NumDealsPurchases
479124    +          +     0.16605991333252 * S_NumDistPurchases
479125    +          +    -0.61746267736536 * S_NumStorePurchases
479126    +          +    -0.61812800689506 * S_NumWebPurchases
479127    +          +     1.44649145055387 * S_NumWebVisitsMonth
479128    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
479129    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
479130    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
479131    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
479132    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
479133    +        S_Income  +     0.52295323651199 * S_Kidhome
479134    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
479135    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
479136    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
479137    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
479138    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
479139    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
479140    +          +    -0.72543332317832 * S_NumDealsPurchases
479141    +          +    -0.05245472565117 * S_NumDistPurchases
479142    +          +     1.00667431585298 * S_NumStorePurchases
479143    +          +     1.02836701470962 * S_NumWebPurchases
479144    +          +    -1.25666606219201 * S_NumWebVisitsMonth
479145    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
479146    +        S_RMntFrq  +     1.50910531484632 * S_Recency
479147    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
479148    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
479149    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
479150    +        S_Income  +     0.58025720116696 * S_Kidhome
479151    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
479152    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
479153    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
479154    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
479155    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
479156    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
479157    +          +     0.12670438262487 * S_NumDealsPurchases
479158    +          +    -0.46113523834333 * S_NumDistPurchases
479159    +          +     0.07074818720567 * S_NumStorePurchases
479160    +          +    -0.05066645783537 * S_NumWebPurchases
479161    +          +    -0.65729410185804 * S_NumWebVisitsMonth
479162    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
479163    +        S_RMntFrq  +      1.4337242246086 * S_Recency
479164    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
479165    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
479166    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
479167    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
479168    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
479169    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
479170    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
479171    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
479172    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
479173    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
479174    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
479175    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
479176    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
479177    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
479178    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
479179    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
479180    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
479181    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
479182    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
479183    +          +     0.12692950862511 * Marital_StatusDivorced
479184    +          +     0.10026497666167 * Marital_StatusMarried
479185    +          +    -0.19893864592813 * Marital_StatusSingle
479186    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
479187    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
479188    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
479189    +        EducationGraduation  +     0.05580498138108 * EducationMaster
479190    +          +    -0.16785192490199 * Marital_StatusDivorced
479191    +          +     0.13153695130362 * Marital_StatusMarried
479192    +          +    -0.50411544587104 * Marital_StatusSingle
479193    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
479194    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
479195    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
479196    +        EducationGraduation  +     0.21882736952662 * EducationMaster
479197    +          +    -0.62654958087044 * Marital_StatusDivorced
479198    +          +     1.86250132393341 * Marital_StatusMarried
479199    +          +    -1.37067556451928 * Marital_StatusSingle
479200    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
479201    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
479202    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
479203    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
479204    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
479205    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
479206    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
479207    +END;
MPRINT(EM_DIAGRAM):   END;
479208    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
479209    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
479210    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
479211    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
479212    +END;
MPRINT(EM_DIAGRAM):   END;
479213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479214    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
479215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479216    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
479217    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
479218    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
479219    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
479220    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
479221    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
479222    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
479223    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
479224    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
479225    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
479226    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
479227    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
479228    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
479229    +END;
MPRINT(EM_DIAGRAM):   END;
479230    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
479231    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
479232    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
479233    +END;
MPRINT(EM_DIAGRAM):   END;
479234    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
479235    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
479236    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
479237    +END;
MPRINT(EM_DIAGRAM):   END;
479238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479239    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
479240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
479241    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
479242    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
479243    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
479244    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
479245    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
479246    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
479247    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
479248    +END;
MPRINT(EM_DIAGRAM):   END;
479249    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
479250    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
479251    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
479252    +drop
479253    +H11
479254    +H12
479255    +H13
479256    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
479257    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
479258     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
479259     quit;
479260     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
479261     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
479262     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
479263     retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
479264     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
479265     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479266     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
479267     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479268     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

479269     proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
479270     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479271     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479272     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
479273     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
479274     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
479275     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479276     proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
479277     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

479278     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
479279     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479280     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479281     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
479282     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
479283     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479284     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

479285     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
479286     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
479286   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

479287     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479288     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
479289     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479290     filename _pref
479290   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
479291     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
479292     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
479293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
479294    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
479295    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
479296    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
479297    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
479298    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
479299     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
479300     quit;
479301     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
479302     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
479303     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
479304     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
479305     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
479306     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479307     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
479308     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479309     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479310     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
479311     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479312     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479313     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
479314     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
479315     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
479316     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479317     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
479318     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

479319     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
479320     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479321     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479322     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
479323     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
479324     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479325     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479326     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
479327     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
479327   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

479328     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479329     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
479330     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479331     filename _pref
479331   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
479332     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
479333     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
479334    +
479335    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
479336    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
479336   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
479337    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
479338    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
479339    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
479340    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
479341    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
479342     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
479343     quit;
479344     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
479345     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
479346     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
479347     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
479348     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
479349     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479350     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
479351     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479353     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
479354     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479355     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

479356     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
479357     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
479358     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
479359     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479360     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
479361     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479362     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
479363     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479364     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479365     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
479366     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
479367     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479368     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479369     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
479370     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
479370   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

479371     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479372     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
479373     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479374     filename _pref
479374   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
479375     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
479376     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
479377    +
479378    +
479379    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
479380    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
479381    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
479382    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
479383    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
479384    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
479385    +
479386    +
479387    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
479388    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
479389    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
479390    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
479391    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
479392    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
479393    +
479394    +
479395    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
479396    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
479397    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
479398    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
479399    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
479400    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
479401    +
479402    +
479403    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
479404    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
479405    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
479406    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
479407    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
479408    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
479409    +
479410    +
479411    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
479412    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
479413    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
479414    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
479415    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
479416    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
479417    +
479418    +
479419    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
479420    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
479421    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
479422    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
479423    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
479424    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
479425    +
479426    +
479427    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
479428    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
479429    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
479430    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
479431    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
479432    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
479433    +
479434    +
479435    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
479436    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
479437    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
479438    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
479439    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
479440    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
479441    +if
479442    +_FILTERNORM1 not in ( '.')
479443    + and
479444    +_FILTERNORM2 not in ( '.')
479445    + and
479446    +_FILTERNORM3 not in ( '.')
479447    + and
479448    +_FILTERNORM4 not in ( '.')
479449    + and
479450    +_FILTERNORM5 not in ( '.')
479451    + and
479452    +_FILTERNORM6 not in ( '.')
479453    + and
479454    +_FILTERNORM7 not in ( ' ')
479455    + and
479456    +_FILTERNORM8 not in ( ' ')
479457    +and
479458    +( Dt_Customer ne .)
479459    +and ( Income ne . and (Income<=107000))
479460    +and ( Kidhome ne .)
479461    +and ( MntFishProducts ne .)
479462    +and ( MntFruits ne .)
479463    +and ( MntGoldProds ne .)
479464    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
479465    +and ( MntSweetProducts ne .)
479466    +and ( MntWines ne .)
479467    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
479468    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
479469    +and ( NumStorePurchases ne .)
479470    +and ( NumWebPurchases ne .)
479471    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
479472    +and ( Recency ne .)
479473    +and ( Teenhome ne .)
479474    +and ( Year_Birth ne .)
479475    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
479476    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
479477    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
479478    +end;
MPRINT(EM_DIAGRAM):   end;
479479    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
479480    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
479481     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
479482     quit;
479483     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
479484     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
479485     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
479486     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
479487     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
479488     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

479489     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
479490     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479491     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479492     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
479493     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479494     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479495     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
479496     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
479497     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
479498     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

479499     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
479500     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

479501     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
479502     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479503     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479504     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
479505     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
479506     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
479507     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

479508     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
479509     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
479509   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

479510     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479511     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
479512     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479513     %macro varDept(fcmpdata=,id=);
479514     %global nobs&id scoreFlag&id;
479515     %let scoreFlag&id = 0;
479516     %if &id=1 or ^&fcmpStart %then %do;
479517     proc sort data=&fcmpdata out=_temp&id nodupkey;
479518     by NAME;
479519     where id=&id and LHS in( %let j=1;
479520     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
479521     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
479522     "&var" %let j = %eval(&j+1);
479523     %end;
479524     );
479525     run;
479526     %let dsid = %sysfunc(open(_temp&id));
479527     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
479528     %let dsid = %sysfunc(close(&dsid));
479529     %if &&nobs&id %then %do;
479530     %let scoreFlag&id = 1;
479531     %let fcmpStart = 1;
479532     %end;
479533     %else %let fcmpStart = 0;
479534     %end;
479535     %else %do;
479536     proc sort data=&fcmpdata out=_tempid;
479537     where id=&id;
479538     by LHS;
479539     run;
479540     %let dsid = %sysfunc(open(_tempid));
479541     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
479542     %let dsid = %sysfunc(close(&dsid));
479543     %if ^&&nobs&id %then %do;
479544     proc datasets lib=work nolist;
479545     delete _tempid;
479546     run;
479547     quit;
479548     %end;
479549     %else %do;
479550     data _tempAll;
479551     set %let j=%eval(&id-1);
479552     %do x=1 %to &j;
479553     %if &&nobs&x %then %do;
479554     _temp&x %end;
479555     %end;
479556     ;
479557     run;
479558     proc sql;
479559     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
479559   ! work._tempid p2 where p.name=p2.lhs;
479560     quit;
479561     data _temp&id;
479562     set _temp&id;
479563     where LHS ne '' and NAME ne '' and Node ne '';
479564     run;
479565     proc datasets lib=work nolist;
479566     delete _tempAll;
479567     run;
479568     %let dsid = %sysfunc(open(_temp&id));
479569     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
479570     %let dsid = %sysfunc(close(&dsid));
479571     %if ^&&nobs&id %then %do;
479572     proc datasets lib=work nolist;
479573     delete _temp&id;
479574     run;
479575     quit;
479576     %end;
479577     %else %do;
479578     %let scoreFlag&id = 1;
479579     data _temp&id;
479580     set _temp&id;
479581     where LHS ne NAME and node ne '';
479582     run;
479583     %let dsid = %sysfunc(open(_temp&id));
479584     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
479585     %let dsid = %sysfunc(close(&dsid));
479586     %if ^&&nobs&id %then %do;
479587     proc datasets lib=work nolist;
479588     delete _temp&id;
479589     run;
479590     quit;
479591     %end;
479592     %else %do;
479593     proc sort data=_temp&id nodupkey;
479594     by LHS NAME;
479595     run;
479596     %end;
479597     %end;
479598     %end;
479599     %end;
479600     %mend varDept;
479601     %macro optCode(outdata=fcmpdata);
479602     %global fcmpStart;
479603     %let fcmpStart = 0;
479604     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
479605     %let NumNodes=9;
479606     %do k=1 %to &NumNodes;
479607     %vardept(fcmpdata=&outdata, id=&k);
479608     %end;
479609     %mend optCode;
479610     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

479611     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
479612     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
479613     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
479614     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479615     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
479616     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
479617     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
479618     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479619     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
479620     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
479620   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

479621     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

479622     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
479623     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
479624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

479625     filename _pref
479625   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
479626     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
479627     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
479628    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
479629    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
479630    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
479631    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
479632    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
479633    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
479634    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
479635    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
479636    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
479637    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
479638    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
479639    +LENGTH _WARN_ $4
479640    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
479641    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
479642    +
479643    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
479644    +
479645    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
479646    +
479647    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
479648    +
479649    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
479650    +
479651    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
479652    +
479653    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
479654    +
479655    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
479656    +
479657    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
479658    +
479659    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
479660    +
479661    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
479662    +
479663    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
479664    +
479665    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
479666    +
479667    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
479668    +
479669    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
479670    +
479671    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
479672    +
479673    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
479674    +
479675    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
479676    +
479677    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
479678    +
479679    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
479680    +
479681    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
479682    +
479683    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
479684    +
479685    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
479686    +
479687    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
479688    +
479689    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
479690    +
479691    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
479692    +
479693    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
479694    +
479695    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
479696    +
479697    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
479698    +
479699    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
479700    +
479701    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
479702    +
479703    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
479704    +
479705    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
479706    +
479707    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
479708    +
479709    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
479710    +
479711    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
479712    +
479713    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
479714    +
479715    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
479716    +
479717    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
479718    +
479719    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
479720    +
479721    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
479722    +
479723    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
479724    +
479725    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
479726    +
479727    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
479728    +
479729    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
479730    +
479731    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
479732    +
479733    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
479734    +
479735    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
479736    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
479737    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
479738    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
479739    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479740    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479741    +end;
MPRINT(EM_DIAGRAM):   end;
479742    +else do;
MPRINT(EM_DIAGRAM):   else do;
479743    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
479744    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
479745    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479746    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
479747    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
479748    +   end;
MPRINT(EM_DIAGRAM):   end;
479749    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
479750    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
479751    +   end;
MPRINT(EM_DIAGRAM):   end;
479752    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479753    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
479754    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
479755    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479756    +   end;
MPRINT(EM_DIAGRAM):   end;
479757    +end;
MPRINT(EM_DIAGRAM):   end;
479758    +
479759    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
479760    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
479761    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
479762    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
479763    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479765    +end;
MPRINT(EM_DIAGRAM):   end;
479766    +else do;
MPRINT(EM_DIAGRAM):   else do;
479767    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
479768    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
479769    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479770    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
479771    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
479772    +   end;
MPRINT(EM_DIAGRAM):   end;
479773    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
479774    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
479775    +   end;
MPRINT(EM_DIAGRAM):   end;
479776    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479777    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
479778    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
479779    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479780    +   end;
MPRINT(EM_DIAGRAM):   end;
479781    +end;
MPRINT(EM_DIAGRAM):   end;
479782    +
479783    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
479784    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
479785    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
479786    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
479787    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479788    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479789    +end;
MPRINT(EM_DIAGRAM):   end;
479790    +else do;
MPRINT(EM_DIAGRAM):   else do;
479791    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
479792    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
479793    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479794    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
479795    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
479796    +   end;
MPRINT(EM_DIAGRAM):   end;
479797    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
479798    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
479799    +   end;
MPRINT(EM_DIAGRAM):   end;
479800    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479801    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
479802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
479803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479804    +   end;
MPRINT(EM_DIAGRAM):   end;
479805    +end;
MPRINT(EM_DIAGRAM):   end;
479806    +
479807    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
479808    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
479809    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
479810    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
479811    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479812    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479813    +end;
MPRINT(EM_DIAGRAM):   end;
479814    +else do;
MPRINT(EM_DIAGRAM):   else do;
479815    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
479816    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
479817    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479818    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
479819    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
479820    +   end;
MPRINT(EM_DIAGRAM):   end;
479821    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
479822    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
479823    +   end;
MPRINT(EM_DIAGRAM):   end;
479824    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479825    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
479826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
479827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479828    +   end;
MPRINT(EM_DIAGRAM):   end;
479829    +end;
MPRINT(EM_DIAGRAM):   end;
479830    +
479831    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
479832    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
479833    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
479834    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
479835    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479836    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479837    +end;
MPRINT(EM_DIAGRAM):   end;
479838    +else do;
MPRINT(EM_DIAGRAM):   else do;
479839    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
479840    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
479841    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479842    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
479843    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
479844    +   end;
MPRINT(EM_DIAGRAM):   end;
479845    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
479846    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
479847    +   end;
MPRINT(EM_DIAGRAM):   end;
479848    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479849    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
479850    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
479851    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479852    +   end;
MPRINT(EM_DIAGRAM):   end;
479853    +end;
MPRINT(EM_DIAGRAM):   end;
479854    +
479855    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
479856    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
479857    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
479858    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
479859    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479860    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479861    +end;
MPRINT(EM_DIAGRAM):   end;
479862    +else do;
MPRINT(EM_DIAGRAM):   else do;
479863    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
479864    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
479865    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479866    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
479867    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
479868    +   end;
MPRINT(EM_DIAGRAM):   end;
479869    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
479870    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
479871    +   end;
MPRINT(EM_DIAGRAM):   end;
479872    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479873    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
479874    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
479875    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479876    +   end;
MPRINT(EM_DIAGRAM):   end;
479877    +end;
MPRINT(EM_DIAGRAM):   end;
479878    +
479879    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
479880    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
479881    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
479882    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
479883    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479884    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479885    +end;
MPRINT(EM_DIAGRAM):   end;
479886    +else do;
MPRINT(EM_DIAGRAM):   else do;
479887    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
479888    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
479889    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479890    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
479891    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
479892    +   end;
MPRINT(EM_DIAGRAM):   end;
479893    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
479894    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
479895    +   end;
MPRINT(EM_DIAGRAM):   end;
479896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479897    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
479898    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
479899    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479900    +   end;
MPRINT(EM_DIAGRAM):   end;
479901    +end;
MPRINT(EM_DIAGRAM):   end;
479902    +
479903    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
479904    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
479905    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
479906    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
479907    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
479908    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
479909    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
479910    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
479911    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
479912    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
479913    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
479914    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
479915    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479916    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479917    +end;
MPRINT(EM_DIAGRAM):   end;
479918    +else do;
MPRINT(EM_DIAGRAM):   else do;
479919    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
479920    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
479921    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479922    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
479923    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
479924    +   end;
MPRINT(EM_DIAGRAM):   end;
479925    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
479926    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
479927    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
479928    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
479929    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
479930    +   end;
MPRINT(EM_DIAGRAM):   end;
479931    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
479932    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
479933    +   end;
MPRINT(EM_DIAGRAM):   end;
479934    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
479935    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
479936    +   end;
MPRINT(EM_DIAGRAM):   end;
479937    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
479938    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
479939    +   end;
MPRINT(EM_DIAGRAM):   end;
479940    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479941    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
479942    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
479943    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
479944    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
479945    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
479946    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479947    +   end;
MPRINT(EM_DIAGRAM):   end;
479948    +end;
MPRINT(EM_DIAGRAM):   end;
479949    +
479950    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
479951    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
479952    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
479953    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
479954    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
479955    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
479956    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
479957    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
479958    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
479959    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
479960    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
479961    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
479962    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
479963    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
479964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
479965    +end;
MPRINT(EM_DIAGRAM):   end;
479966    +else do;
MPRINT(EM_DIAGRAM):   else do;
479967    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
479968    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
479969    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
479970    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
479971    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
479972    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
479973    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
479974    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
479975    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
479976    +         end;
MPRINT(EM_DIAGRAM):   end;
479977    +         else do;
MPRINT(EM_DIAGRAM):   else do;
479978    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
479979    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
479980    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
479981    +            end;
MPRINT(EM_DIAGRAM):   end;
479982    +         end;
MPRINT(EM_DIAGRAM):   end;
479983    +      end;
MPRINT(EM_DIAGRAM):   end;
479984    +      else do;
MPRINT(EM_DIAGRAM):   else do;
479985    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
479986    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
479987    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
479988    +         end;
MPRINT(EM_DIAGRAM):   end;
479989    +      end;
MPRINT(EM_DIAGRAM):   end;
479990    +   end;
MPRINT(EM_DIAGRAM):   end;
479991    +   else do;
MPRINT(EM_DIAGRAM):   else do;
479992    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
479993    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
479994    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
479995    +      end;
MPRINT(EM_DIAGRAM):   end;
479996    +      else do;
MPRINT(EM_DIAGRAM):   else do;
479997    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
479998    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
479999    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
480000    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
480001    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
480002    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480003    +         end;
MPRINT(EM_DIAGRAM):   end;
480004    +      end;
MPRINT(EM_DIAGRAM):   end;
480005    +   end;
MPRINT(EM_DIAGRAM):   end;
480006    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
480007    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
480008    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
480009    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
480010    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
480011    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480012    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480013    +   end;
MPRINT(EM_DIAGRAM):   end;
480014    +end;
MPRINT(EM_DIAGRAM):   end;
480015    +
480016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480017    +*** Checking missing input Interval
480018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
480019    +
480020    +IF NMISS(
480021    +   AcceptedCmpTotal ,
480022    +   Age ,
480023    +   Frq ,
480024    +   Income ,
480025    +   Kidhome ,
480026    +   Mnt ,
480027    +   MntFishProducts ,
480028    +   MntFruits ,
480029    +   MntGoldProds ,
480030    +   MntMeatProducts ,
480031    +   MntSweetProducts ,
480032    +   MntWines ,
480033    +   MonthsAsCustomer ,
480034    +   NumCatalogPurchases ,
480035    +   NumDealsPurchases ,
480036    +   NumDistPurchases ,
480037    +   NumStorePurchases ,
480038    +   NumWebPurchases ,
480039    +   NumWebVisitsMonth ,
480040    +   RFMstat ,
480041    +   RMntFrq ,
480042    +   Recency ,
480043    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
480044    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
480045    +
480046    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480047    +END;
MPRINT(EM_DIAGRAM):   END;
480048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480049    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
480050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480051    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480052    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
480053    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
480054    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
480055    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
480056    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
480057    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
480058    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
480059    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
480060    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
480061    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
480062    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
480063    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
480064    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
480065    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
480066    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
480067    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
480068    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
480069    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
480070    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
480071    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
480072    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
480073    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
480074    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
480075    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
480076    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
480077    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
480078    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
480079    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
480080    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
480081    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
480082    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
480083    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
480084    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
480085    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
480086    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
480087    +END;
MPRINT(EM_DIAGRAM):   END;
480088    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480089    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
480090    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
480091    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
480092    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
480093    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
480094    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
480095    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
480096    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
480097    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
480098    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
480099    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
480100    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
480101    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
480102    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
480103    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
480104    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
480105    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
480106    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
480107    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
480108    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
480109    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
480110    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
480111    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
480112    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
480113    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
480114    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
480115    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
480116    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
480117    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
480118    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
480119    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
480120    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
480121    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
480122    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
480123    +   ELSE S_NumCatalogPurchases
480124    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
480125    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
480126    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
480127    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
480128    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
480129    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
480130    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
480131    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
480132    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
480133    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
480134    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
480135    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
480136    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
480137    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
480138    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
480139    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
480140    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
480141    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
480142    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
480143    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
480144    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
480145    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
480146    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
480147    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
480148    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
480149    +END;
MPRINT(EM_DIAGRAM):   END;
480150    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480151    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
480152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480153    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480154    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
480155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480156    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480157    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
480158    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480159    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480160    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
480161    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
480162    +        S_Income  +    -0.27053363011695 * S_Kidhome
480163    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
480164    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
480165    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
480166    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
480167    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
480168    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
480169    +          +    -1.35624485206227 * S_NumDealsPurchases
480170    +          +    -0.54646115734684 * S_NumDistPurchases
480171    +          +     1.29794225108321 * S_NumStorePurchases
480172    +          +      1.8453064081809 * S_NumWebPurchases
480173    +          +    -0.92747144824026 * S_NumWebVisitsMonth
480174    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
480175    +        S_RMntFrq  +     0.73207333681971 * S_Recency
480176    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
480177    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
480178    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
480179    +        S_Income  +    -0.79821220724157 * S_Kidhome
480180    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
480181    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
480182    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
480183    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
480184    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
480185    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
480186    +          +     0.72513216556859 * S_NumDealsPurchases
480187    +          +    -0.15566774650584 * S_NumDistPurchases
480188    +          +     -0.8847675798982 * S_NumStorePurchases
480189    +          +    -0.79405200318252 * S_NumWebPurchases
480190    +          +     1.74003779802254 * S_NumWebVisitsMonth
480191    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
480192    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
480193    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
480194    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
480195    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
480196    +        S_Income  +    -0.58596240450544 * S_Kidhome
480197    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
480198    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
480199    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
480200    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
480201    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
480202    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
480203    +          +     0.17466385502192 * S_NumDealsPurchases
480204    +          +    -0.06219545947203 * S_NumDistPurchases
480205    +          +     0.16637546838853 * S_NumStorePurchases
480206    +          +    -0.06908729397635 * S_NumWebPurchases
480207    +          +     1.44269772444244 * S_NumWebVisitsMonth
480208    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
480209    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
480210    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
480211    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
480212    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
480213    +        S_Income  +    -0.42454238091412 * S_Kidhome
480214    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
480215    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
480216    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
480217    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
480218    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
480219    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
480220    +          +     0.77329078721398 * S_NumDealsPurchases
480221    +          +     0.31693324305765 * S_NumDistPurchases
480222    +          +    -1.08524196373091 * S_NumStorePurchases
480223    +          +    -0.96945384922979 * S_NumWebPurchases
480224    +          +     1.24659288571587 * S_NumWebVisitsMonth
480225    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
480226    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
480227    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
480228    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
480229    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
480230    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
480231    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
480232    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
480233    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
480234    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
480235    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
480236    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
480237    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
480238    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
480239    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
480240    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
480241    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
480242    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
480243    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
480244    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
480245    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
480246    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
480247    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
480248    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
480249    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
480250    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
480251    +          +     0.36788499721115 * Marital_StatusDivorced
480252    +          +    -0.16988636986433 * Marital_StatusMarried
480253    +          +    -0.24560973256761 * Marital_StatusSingle
480254    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
480255    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
480256    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
480257    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
480258    +          +     0.24497797058028 * Marital_StatusDivorced
480259    +          +    -1.44410245434424 * Marital_StatusMarried
480260    +          +     1.47441310087392 * Marital_StatusSingle
480261    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
480262    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
480263    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
480264    +        EducationGraduation  +     0.04653963359475 * EducationMaster
480265    +          +     0.15823225296452 * Marital_StatusDivorced
480266    +          +    -0.39129434667884 * Marital_StatusMarried
480267    +          +     0.84414069966504 * Marital_StatusSingle
480268    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
480269    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
480270    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
480271    +        EducationGraduation  +     0.40030852414737 * EducationMaster
480272    +          +     1.22039169814542 * Marital_StatusDivorced
480273    +          +     0.91592976063128 * Marital_StatusMarried
480274    +          +    -1.51267332883308 * Marital_StatusSingle
480275    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
480276    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
480277    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
480278    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
480279    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
480280    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
480281    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
480282    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
480283    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
480284    +END;
MPRINT(EM_DIAGRAM):   END;
480285    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480286    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
480287    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
480288    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
480289    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
480290    +END;
MPRINT(EM_DIAGRAM):   END;
480291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480292    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
480293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480294    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480295    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
480296    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
480297    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
480298    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
480299    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
480300    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
480301    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
480302    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
480303    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
480304    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
480305    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
480306    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
480307    +END;
MPRINT(EM_DIAGRAM):   END;
480308    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480309    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
480310    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
480311    +END;
MPRINT(EM_DIAGRAM):   END;
480312    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
480313    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
480314    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
480315    +END;
MPRINT(EM_DIAGRAM):   END;
480316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480317    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
480318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480319    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
480320    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
480321    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
480322    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
480323    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
480324    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
480325    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
480326    +END;
MPRINT(EM_DIAGRAM):   END;
480327    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
480328    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
480329    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
480330    +drop
480331    +H11
480332    +H12
480333    +H13
480334    +H14
480335    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
480336    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
480337     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
480338     quit;
480339     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
480340     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
480341     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
480342     retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
480343     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
480344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480345     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
480346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480347     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

480348     proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
480349     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480350     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480351     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
480352     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
480353     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
480354     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480355     proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
480356     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

480357     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
480358     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480359     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480360     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
480361     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
480362     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480363     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

480364     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
480365     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
480365   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

480366     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480367     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
480368     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480369     filename _pref
480369   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
480370     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
480371     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
480372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
480373    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
480374    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
480375    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
480376    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
480377    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
480378     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
480379     quit;
480380     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
480381     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
480382     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
480383     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
480384     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
480385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480386     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
480387     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480388     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

480389     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
480390     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480392     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
480393     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
480394     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
480395     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480396     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
480397     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

480398     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
480399     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480400     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480401     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
480402     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
480403     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480404     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480405     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
480406     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
480406   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

480407     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480408     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
480409     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480410     filename _pref
480410   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
480411     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
480412     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
480413    +
480414    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
480415    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
480415   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
480416    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
480417    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
480418    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
480419    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
480420    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
480421     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
480422     quit;
480423     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
480424     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
480425     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
480426     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
480427     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
480428     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480429     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
480430     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480431     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480432     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
480433     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480434     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480435     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
480436     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
480437     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
480438     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480439     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
480440     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

480441     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
480442     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480443     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480444     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
480445     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
480446     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480447     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480448     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
480449     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
480449   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

480450     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

480451     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
480452     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480453     filename _pref
480453   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
480454     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
480455     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
480456    +
480457    +
480458    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
480459    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
480460    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
480461    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
480462    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
480463    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
480464    +
480465    +
480466    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
480467    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
480468    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
480469    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
480470    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
480471    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
480472    +
480473    +
480474    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
480475    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
480476    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
480477    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
480478    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
480479    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
480480    +
480481    +
480482    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
480483    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
480484    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
480485    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
480486    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
480487    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
480488    +
480489    +
480490    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
480491    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
480492    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
480493    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
480494    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
480495    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
480496    +
480497    +
480498    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
480499    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
480500    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
480501    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
480502    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
480503    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
480504    +
480505    +
480506    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
480507    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
480508    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
480509    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
480510    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
480511    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
480512    +
480513    +
480514    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
480515    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
480516    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
480517    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
480518    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
480519    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
480520    +if
480521    +_FILTERNORM1 not in ( '.')
480522    + and
480523    +_FILTERNORM2 not in ( '.')
480524    + and
480525    +_FILTERNORM3 not in ( '.')
480526    + and
480527    +_FILTERNORM4 not in ( '.')
480528    + and
480529    +_FILTERNORM5 not in ( '.')
480530    + and
480531    +_FILTERNORM6 not in ( '.')
480532    + and
480533    +_FILTERNORM7 not in ( ' ')
480534    + and
480535    +_FILTERNORM8 not in ( ' ')
480536    +and
480537    +( Dt_Customer ne .)
480538    +and ( Income ne . and (Income<=107000))
480539    +and ( Kidhome ne .)
480540    +and ( MntFishProducts ne .)
480541    +and ( MntFruits ne .)
480542    +and ( MntGoldProds ne .)
480543    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
480544    +and ( MntSweetProducts ne .)
480545    +and ( MntWines ne .)
480546    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
480547    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
480548    +and ( NumStorePurchases ne .)
480549    +and ( NumWebPurchases ne .)
480550    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
480551    +and ( Recency ne .)
480552    +and ( Teenhome ne .)
480553    +and ( Year_Birth ne .)
480554    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
480555    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
480556    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
480557    +end;
MPRINT(EM_DIAGRAM):   end;
480558    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
480559    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
480560     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
480561     quit;
480562     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
480563     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
480564     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
480565     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
480566     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
480567     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480568     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
480569     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480570     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

480571     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
480572     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480573     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480574     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
480575     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
480576     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
480577     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480578     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
480579     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

480580     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
480581     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480582     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480583     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
480584     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
480585     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
480586     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

480587     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
480588     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
480588   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

480589     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480590     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
480591     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480592     %macro varDept(fcmpdata=,id=);
480593     %global nobs&id scoreFlag&id;
480594     %let scoreFlag&id = 0;
480595     %if &id=1 or ^&fcmpStart %then %do;
480596     proc sort data=&fcmpdata out=_temp&id nodupkey;
480597     by NAME;
480598     where id=&id and LHS in( %let j=1;
480599     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
480600     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
480601     "&var" %let j = %eval(&j+1);
480602     %end;
480603     );
480604     run;
480605     %let dsid = %sysfunc(open(_temp&id));
480606     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
480607     %let dsid = %sysfunc(close(&dsid));
480608     %if &&nobs&id %then %do;
480609     %let scoreFlag&id = 1;
480610     %let fcmpStart = 1;
480611     %end;
480612     %else %let fcmpStart = 0;
480613     %end;
480614     %else %do;
480615     proc sort data=&fcmpdata out=_tempid;
480616     where id=&id;
480617     by LHS;
480618     run;
480619     %let dsid = %sysfunc(open(_tempid));
480620     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
480621     %let dsid = %sysfunc(close(&dsid));
480622     %if ^&&nobs&id %then %do;
480623     proc datasets lib=work nolist;
480624     delete _tempid;
480625     run;
480626     quit;
480627     %end;
480628     %else %do;
480629     data _tempAll;
480630     set %let j=%eval(&id-1);
480631     %do x=1 %to &j;
480632     %if &&nobs&x %then %do;
480633     _temp&x %end;
480634     %end;
480635     ;
480636     run;
480637     proc sql;
480638     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
480638   ! work._tempid p2 where p.name=p2.lhs;
480639     quit;
480640     data _temp&id;
480641     set _temp&id;
480642     where LHS ne '' and NAME ne '' and Node ne '';
480643     run;
480644     proc datasets lib=work nolist;
480645     delete _tempAll;
480646     run;
480647     %let dsid = %sysfunc(open(_temp&id));
480648     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
480649     %let dsid = %sysfunc(close(&dsid));
480650     %if ^&&nobs&id %then %do;
480651     proc datasets lib=work nolist;
480652     delete _temp&id;
480653     run;
480654     quit;
480655     %end;
480656     %else %do;
480657     %let scoreFlag&id = 1;
480658     data _temp&id;
480659     set _temp&id;
480660     where LHS ne NAME and node ne '';
480661     run;
480662     %let dsid = %sysfunc(open(_temp&id));
480663     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
480664     %let dsid = %sysfunc(close(&dsid));
480665     %if ^&&nobs&id %then %do;
480666     proc datasets lib=work nolist;
480667     delete _temp&id;
480668     run;
480669     quit;
480670     %end;
480671     %else %do;
480672     proc sort data=_temp&id nodupkey;
480673     by LHS NAME;
480674     run;
480675     %end;
480676     %end;
480677     %end;
480678     %end;
480679     %mend varDept;
480680     %macro optCode(outdata=fcmpdata);
480681     %global fcmpStart;
480682     %let fcmpStart = 0;
480683     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
480684     %let NumNodes=9;
480685     %do k=1 %to &NumNodes;
480686     %vardept(fcmpdata=&outdata, id=&k);
480687     %end;
480688     %mend optCode;
480689     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

480690     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
480691     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
480692     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
480693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480694     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
480695     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
480696     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
480697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480698     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
480699     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
480699   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

480700     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

480701     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
480702     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
480703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

480704     filename _pref
480704   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
480705     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
480706     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas.
480707    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
480708    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
480709    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
480710    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
480711    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
480712    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
480713    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
480714    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
480715    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
480716    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
480717    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
480718    +LENGTH _WARN_ $4
480719    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
480720    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
480721    +
480722    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
480723    +
480724    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
480725    +
480726    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
480727    +
480728    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
480729    +
480730    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
480731    +
480732    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
480733    +
480734    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
480735    +
480736    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
480737    +
480738    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
480739    +
480740    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
480741    +
480742    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
480743    +
480744    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
480745    +
480746    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
480747    +
480748    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
480749    +
480750    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
480751    +
480752    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
480753    +
480754    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
480755    +
480756    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
480757    +
480758    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
480759    +
480760    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
480761    +
480762    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
480763    +
480764    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
480765    +
480766    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
480767    +
480768    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
480769    +
480770    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
480771    +
480772    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
480773    +
480774    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
480775    +
480776    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
480777    +
480778    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
480779    +
480780    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
480781    +
480782    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
480783    +
480784    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
480785    +
480786    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
480787    +
480788    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
480789    +
480790    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
480791    +
480792    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
480793    +
480794    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
480795    +
480796    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
480797    +
480798    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
480799    +
480800    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
480801    +
480802    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
480803    +
480804    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
480805    +
480806    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
480807    +
480808    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
480809    +
480810    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
480811    +
480812    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
480813    +
480814    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
480815    +
480816    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
480817    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
480818    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
480819    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
480820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480822    +end;
MPRINT(EM_DIAGRAM):   end;
480823    +else do;
MPRINT(EM_DIAGRAM):   else do;
480824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
480825    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
480826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480827    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
480828    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
480829    +   end;
MPRINT(EM_DIAGRAM):   end;
480830    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
480831    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
480832    +   end;
MPRINT(EM_DIAGRAM):   end;
480833    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480834    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
480835    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480836    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480837    +   end;
MPRINT(EM_DIAGRAM):   end;
480838    +end;
MPRINT(EM_DIAGRAM):   end;
480839    +
480840    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
480841    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
480842    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
480843    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
480844    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480846    +end;
MPRINT(EM_DIAGRAM):   end;
480847    +else do;
MPRINT(EM_DIAGRAM):   else do;
480848    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
480849    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
480850    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480851    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
480852    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
480853    +   end;
MPRINT(EM_DIAGRAM):   end;
480854    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
480855    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
480856    +   end;
MPRINT(EM_DIAGRAM):   end;
480857    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480858    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
480859    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480860    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480861    +   end;
MPRINT(EM_DIAGRAM):   end;
480862    +end;
MPRINT(EM_DIAGRAM):   end;
480863    +
480864    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
480865    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
480866    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
480867    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
480868    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480869    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480870    +end;
MPRINT(EM_DIAGRAM):   end;
480871    +else do;
MPRINT(EM_DIAGRAM):   else do;
480872    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
480873    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
480874    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480875    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
480876    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
480877    +   end;
MPRINT(EM_DIAGRAM):   end;
480878    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
480879    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
480880    +   end;
MPRINT(EM_DIAGRAM):   end;
480881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480882    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
480883    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480884    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480885    +   end;
MPRINT(EM_DIAGRAM):   end;
480886    +end;
MPRINT(EM_DIAGRAM):   end;
480887    +
480888    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
480889    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
480890    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
480891    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
480892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480894    +end;
MPRINT(EM_DIAGRAM):   end;
480895    +else do;
MPRINT(EM_DIAGRAM):   else do;
480896    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
480897    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
480898    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480899    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
480900    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
480901    +   end;
MPRINT(EM_DIAGRAM):   end;
480902    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
480903    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
480904    +   end;
MPRINT(EM_DIAGRAM):   end;
480905    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480906    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
480907    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480908    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480909    +   end;
MPRINT(EM_DIAGRAM):   end;
480910    +end;
MPRINT(EM_DIAGRAM):   end;
480911    +
480912    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
480913    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
480914    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
480915    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
480916    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480917    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480918    +end;
MPRINT(EM_DIAGRAM):   end;
480919    +else do;
MPRINT(EM_DIAGRAM):   else do;
480920    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
480921    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
480922    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480923    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
480924    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
480925    +   end;
MPRINT(EM_DIAGRAM):   end;
480926    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
480927    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
480928    +   end;
MPRINT(EM_DIAGRAM):   end;
480929    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480930    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
480931    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480932    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480933    +   end;
MPRINT(EM_DIAGRAM):   end;
480934    +end;
MPRINT(EM_DIAGRAM):   end;
480935    +
480936    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
480937    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
480938    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
480939    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
480940    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480941    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480942    +end;
MPRINT(EM_DIAGRAM):   end;
480943    +else do;
MPRINT(EM_DIAGRAM):   else do;
480944    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
480945    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
480946    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480947    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
480948    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
480949    +   end;
MPRINT(EM_DIAGRAM):   end;
480950    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
480951    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
480952    +   end;
MPRINT(EM_DIAGRAM):   end;
480953    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480954    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
480955    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480956    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480957    +   end;
MPRINT(EM_DIAGRAM):   end;
480958    +end;
MPRINT(EM_DIAGRAM):   end;
480959    +
480960    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
480961    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
480962    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
480963    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
480964    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480965    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480966    +end;
MPRINT(EM_DIAGRAM):   end;
480967    +else do;
MPRINT(EM_DIAGRAM):   else do;
480968    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
480969    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
480970    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480971    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
480972    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
480973    +   end;
MPRINT(EM_DIAGRAM):   end;
480974    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
480975    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
480976    +   end;
MPRINT(EM_DIAGRAM):   end;
480977    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480978    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
480979    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480980    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480981    +   end;
MPRINT(EM_DIAGRAM):   end;
480982    +end;
MPRINT(EM_DIAGRAM):   end;
480983    +
480984    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
480985    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
480986    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
480987    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
480988    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
480989    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
480990    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
480991    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
480992    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
480993    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
480994    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
480995    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
480996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480998    +end;
MPRINT(EM_DIAGRAM):   end;
480999    +else do;
MPRINT(EM_DIAGRAM):   else do;
481000    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
481001    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
481002    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
481003    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
481004    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
481005    +   end;
MPRINT(EM_DIAGRAM):   end;
481006    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
481007    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
481008    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
481009    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
481010    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
481011    +   end;
MPRINT(EM_DIAGRAM):   end;
481012    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
481013    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
481014    +   end;
MPRINT(EM_DIAGRAM):   end;
481015    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
481016    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
481017    +   end;
MPRINT(EM_DIAGRAM):   end;
481018    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
481019    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
481020    +   end;
MPRINT(EM_DIAGRAM):   end;
481021    +   else do;
MPRINT(EM_DIAGRAM):   else do;
481022    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
481023    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
481024    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
481025    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
481026    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
481027    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481028    +   end;
MPRINT(EM_DIAGRAM):   end;
481029    +end;
MPRINT(EM_DIAGRAM):   end;
481030    +
481031    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
481032    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
481033    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
481034    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
481035    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
481036    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
481037    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
481038    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
481039    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
481040    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
481041    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
481042    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
481043    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
481044    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
481045    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481046    +end;
MPRINT(EM_DIAGRAM):   end;
481047    +else do;
MPRINT(EM_DIAGRAM):   else do;
481048    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
481049    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
481050    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
481051    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
481052    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
481053    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
481054    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
481055    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
481056    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
481057    +         end;
MPRINT(EM_DIAGRAM):   end;
481058    +         else do;
MPRINT(EM_DIAGRAM):   else do;
481059    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
481060    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
481061    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
481062    +            end;
MPRINT(EM_DIAGRAM):   end;
481063    +         end;
MPRINT(EM_DIAGRAM):   end;
481064    +      end;
MPRINT(EM_DIAGRAM):   end;
481065    +      else do;
MPRINT(EM_DIAGRAM):   else do;
481066    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
481067    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
481068    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
481069    +         end;
MPRINT(EM_DIAGRAM):   end;
481070    +      end;
MPRINT(EM_DIAGRAM):   end;
481071    +   end;
MPRINT(EM_DIAGRAM):   end;
481072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
481073    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
481074    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
481075    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
481076    +      end;
MPRINT(EM_DIAGRAM):   end;
481077    +      else do;
MPRINT(EM_DIAGRAM):   else do;
481078    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
481079    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
481080    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
481081    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
481082    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
481083    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
481084    +         end;
MPRINT(EM_DIAGRAM):   end;
481085    +      end;
MPRINT(EM_DIAGRAM):   end;
481086    +   end;
MPRINT(EM_DIAGRAM):   end;
481087    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
481088    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
481089    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
481090    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
481091    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
481092    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
481093    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481094    +   end;
MPRINT(EM_DIAGRAM):   end;
481095    +end;
MPRINT(EM_DIAGRAM):   end;
481096    +
481097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481098    +*** Checking missing input Interval
481099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
481100    +
481101    +IF NMISS(
481102    +   AcceptedCmpTotal ,
481103    +   Age ,
481104    +   Frq ,
481105    +   Income ,
481106    +   Kidhome ,
481107    +   Mnt ,
481108    +   MntFishProducts ,
481109    +   MntFruits ,
481110    +   MntGoldProds ,
481111    +   MntMeatProducts ,
481112    +   MntSweetProducts ,
481113    +   MntWines ,
481114    +   MonthsAsCustomer ,
481115    +   NumCatalogPurchases ,
481116    +   NumDealsPurchases ,
481117    +   NumDistPurchases ,
481118    +   NumStorePurchases ,
481119    +   NumWebPurchases ,
481120    +   NumWebVisitsMonth ,
481121    +   RFMstat ,
481122    +   RMntFrq ,
481123    +   Recency ,
481124    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
481125    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
481126    +
481127    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481128    +END;
MPRINT(EM_DIAGRAM):   END;
481129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481130    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
481131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481132    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
481133    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
481134    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
481135    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
481136    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
481137    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
481138    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
481139    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
481140    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
481141    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
481142    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
481143    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
481144    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
481145    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
481146    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
481147    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
481148    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
481149    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
481150    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
481151    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
481152    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
481153    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
481154    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
481155    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
481156    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
481157    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
481158    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
481159    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
481160    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
481161    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
481162    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
481163    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
481164    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
481165    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
481166    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
481167    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
481168    +END;
MPRINT(EM_DIAGRAM):   END;
481169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
481170    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
481171    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
481172    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
481173    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
481174    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
481175    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
481176    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
481177    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
481178    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
481179    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
481180    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
481181    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
481182    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
481183    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
481184    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
481185    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
481186    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
481187    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
481188    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
481189    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
481190    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
481191    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
481192    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
481193    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
481194    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
481195    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
481196    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
481197    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
481198    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
481199    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
481200    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
481201    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
481202    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
481203    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
481204    +   ELSE S_NumCatalogPurchases
481205    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
481206    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
481207    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
481208    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
481209    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
481210    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
481211    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
481212    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
481213    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
481214    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
481215    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
481216    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
481217    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
481218    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
481219    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
481220    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
481221    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
481222    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
481223    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
481224    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
481225    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
481226    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
481227    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
481228    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
481229    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
481230    +END;
MPRINT(EM_DIAGRAM):   END;
481231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481232    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
481233    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481235    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
481236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481237    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481238    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
481239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481240    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
481241    +   H11  =     0.13594465912127 * S_AcceptedCmpTotal  +    -0.04369874222877 *
481242    +        S_Age  +     -0.0222974124172 * S_Frq  +    -0.11043551468483 *
481243    +        S_Income  +    -0.32248758927071 * S_Kidhome
481244    +          +      0.0776161679259 * S_Mnt  +    -0.08725654580836 *
481245    +        S_MntFishProducts  +     0.14236031403157 * S_MntFruits
481246    +          +    -0.48581570899412 * S_MntGoldProds  +     0.03414406983139 *
481247    +        S_MntMeatProducts  +    -0.23271736394479 * S_MntSweetProducts
481248    +          +     0.43105893695077 * S_MntWines  +     0.31123874593742 *
481249    +        S_MonthsAsCustomer  +    -0.19669815006873 * S_NumCatalogPurchases
481250    +          +    -0.68207513361313 * S_NumDealsPurchases
481251    +          +    -0.37964850256921 * S_NumDistPurchases
481252    +          +     0.36066480603854 * S_NumStorePurchases
481253    +          +     0.25966011307033 * S_NumWebPurchases
481254    +          +    -0.03958464718959 * S_NumWebVisitsMonth
481255    +          +    -0.12441133162569 * S_RFMstat  +     0.05838942731159 *
481256    +        S_RMntFrq  +      0.2807801943237 * S_Recency
481257    +          +    -0.10186253847778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13594465912127 * S_AcceptedCmpTotal + -0.04369874222877 * S_Age 
+ -0.0222974124172 * S_Frq + -0.11043551468483 * S_Income + -0.32248758927071 * S_Kidhome + 
0.0776161679259 * S_Mnt + -0.08725654580836 * S_MntFishProducts + 0.14236031403157 * 
S_MntFruits + -0.48581570899412 * S_MntGoldProds + 0.03414406983139 * S_MntMeatProducts + 
-0.23271736394479 * S_MntSweetProducts + 0.43105893695077 * S_MntWines + 0.31123874593742 * 
S_MonthsAsCustomer + -0.19669815006873 * S_NumCatalogPurchases + -0.68207513361313 * 
S_NumDealsPurchases + -0.37964850256921 * S_NumDistPurchases + 0.36066480603854 * 
S_NumStorePurchases + 0.25966011307033 * S_NumWebPurchases + -0.03958464718959 * 
S_NumWebVisitsMonth + -0.12441133162569 * S_RFMstat + 0.05838942731159 * S_RMntFrq + 
0.2807801943237 * S_Recency + -0.10186253847778 * S_Teenhome ;
481258    +   H12  =     0.03443433887324 * S_AcceptedCmpTotal  +    -0.33034112884719 *
481259    +        S_Age  +    -0.29426561048486 * S_Frq  +      0.1259913339118 *
481260    +        S_Income  +    -0.01525271628925 * S_Kidhome
481261    +          +     0.12125196820394 * S_Mnt  +     0.27499561817138 *
481262    +        S_MntFishProducts  +     0.02702998039497 * S_MntFruits
481263    +          +     0.19117237676118 * S_MntGoldProds  +     0.14988798454777 *
481264    +        S_MntMeatProducts  +    -0.12004881951738 * S_MntSweetProducts
481265    +          +     0.21492388287889 * S_MntWines  +    -0.32645982553718 *
481266    +        S_MonthsAsCustomer  +     0.33162536777041 * S_NumCatalogPurchases
481267    +          +    -0.05060212016961 * S_NumDealsPurchases
481268    +          +    -0.14809619066524 * S_NumDistPurchases
481269    +          +    -0.02428798408125 * S_NumStorePurchases
481270    +          +     0.05554695337353 * S_NumWebPurchases
481271    +          +     -0.3347797414912 * S_NumWebVisitsMonth
481272    +          +    -0.08694305340873 * S_RFMstat  +    -0.34566171030649 *
481273    +        S_RMntFrq  +     0.34878481829389 * S_Recency
481274    +          +     0.10894516705031 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.03443433887324 * S_AcceptedCmpTotal + -0.33034112884719 * S_Age 
+ -0.29426561048486 * S_Frq + 0.1259913339118 * S_Income + -0.01525271628925 * S_Kidhome + 
0.12125196820394 * S_Mnt + 0.27499561817138 * S_MntFishProducts + 0.02702998039497 * 
S_MntFruits + 0.19117237676118 * S_MntGoldProds + 0.14988798454777 * S_MntMeatProducts + 
-0.12004881951738 * S_MntSweetProducts + 0.21492388287889 * S_MntWines + -0.32645982553718 * 
S_MonthsAsCustomer + 0.33162536777041 * S_NumCatalogPurchases + -0.05060212016961 * 
S_NumDealsPurchases + -0.14809619066524 * S_NumDistPurchases + -0.02428798408125 * 
S_NumStorePurchases + 0.05554695337353 * S_NumWebPurchases + -0.3347797414912 * 
S_NumWebVisitsMonth + -0.08694305340873 * S_RFMstat + -0.34566171030649 * S_RMntFrq + 
0.34878481829389 * S_Recency + 0.10894516705031 * S_Teenhome ;
481275    +   H13  =     0.00370096998686 * S_AcceptedCmpTotal  +    -0.51953611125691 *
481276    +        S_Age  +     0.17877016433586 * S_Frq  +     0.06789251642015 *
481277    +        S_Income  +    -0.05479760920776 * S_Kidhome
481278    +          +    -0.03872422009017 * S_Mnt  +    -0.14541111406951 *
481279    +        S_MntFishProducts  +     0.02855123883129 * S_MntFruits
481280    +          +     0.25306699654279 * S_MntGoldProds  +     0.08795222920616 *
481281    +        S_MntMeatProducts  +    -0.02903225924096 * S_MntSweetProducts
481282    +          +     0.15553330295402 * S_MntWines  +     0.02888022983016 *
481283    +        S_MonthsAsCustomer  +    -0.17290950123626 * S_NumCatalogPurchases
481284    +          +     0.18029447475323 * S_NumDealsPurchases
481285    +          +     0.05934542805435 * S_NumDistPurchases
481286    +          +     0.11232970412862 * S_NumStorePurchases
481287    +          +    -0.10916601726159 * S_NumWebPurchases
481288    +          +    -0.01910812243665 * S_NumWebVisitsMonth
481289    +          +    -0.21344753217364 * S_RFMstat  +      0.1645823437477 *
481290    +        S_RMntFrq  +    -0.40799689263706 * S_Recency
481291    +          +     0.02511588992095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.00370096998686 * S_AcceptedCmpTotal + -0.51953611125691 * S_Age 
+ 0.17877016433586 * S_Frq + 0.06789251642015 * S_Income + -0.05479760920776 * S_Kidhome + 
-0.03872422009017 * S_Mnt + -0.14541111406951 * S_MntFishProducts + 0.02855123883129 * 
S_MntFruits + 0.25306699654279 * S_MntGoldProds + 0.08795222920616 * S_MntMeatProducts + 
-0.02903225924096 * S_MntSweetProducts + 0.15553330295402 * S_MntWines + 0.02888022983016 * 
S_MonthsAsCustomer + -0.17290950123626 * S_NumCatalogPurchases + 0.18029447475323 * 
S_NumDealsPurchases + 0.05934542805435 * S_NumDistPurchases + 0.11232970412862 * 
S_NumStorePurchases + -0.10916601726159 * S_NumWebPurchases + -0.01910812243665 * 
S_NumWebVisitsMonth + -0.21344753217364 * S_RFMstat + 0.1645823437477 * S_RMntFrq + 
-0.40799689263706 * S_Recency + 0.02511588992095 * S_Teenhome ;
481292    +   H14  =    -0.61829421083246 * S_AcceptedCmpTotal  +    -0.16873052249719 *
481293    +        S_Age  +     0.13439351408573 * S_Frq  +    -0.50103344614666 *
481294    +        S_Income  +     0.31726096463976 * S_Kidhome
481295    +          +    -0.15181042208759 * S_Mnt  +     0.31922880035738 *
481296    +        S_MntFishProducts  +     0.09386333655585 * S_MntFruits
481297    +          +    -0.12620631685892 * S_MntGoldProds  +    -0.92555808639473 *
481298    +        S_MntMeatProducts  +    -0.15556710025124 * S_MntSweetProducts
481299    +          +     0.59625872106317 * S_MntWines  +    -0.14105032907988 *
481300    +        S_MonthsAsCustomer  +    -0.27105883046781 * S_NumCatalogPurchases
481301    +          +    -0.05889648319294 * S_NumDealsPurchases
481302    +          +     0.04297768152043 * S_NumDistPurchases
481303    +          +     0.08289772168464 * S_NumStorePurchases
481304    +          +     0.02925451736459 * S_NumWebPurchases
481305    +          +    -0.34806744064693 * S_NumWebVisitsMonth
481306    +          +    -0.10075155542626 * S_RFMstat  +    -0.54230386384017 *
481307    +        S_RMntFrq  +     0.54567939140523 * S_Recency
481308    +          +     0.75126712310981 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.61829421083246 * S_AcceptedCmpTotal + -0.16873052249719 * S_Age 
+ 0.13439351408573 * S_Frq + -0.50103344614666 * S_Income + 0.31726096463976 * S_Kidhome + 
-0.15181042208759 * S_Mnt + 0.31922880035738 * S_MntFishProducts + 0.09386333655585 * 
S_MntFruits + -0.12620631685892 * S_MntGoldProds + -0.92555808639473 * S_MntMeatProducts + 
-0.15556710025124 * S_MntSweetProducts + 0.59625872106317 * S_MntWines + -0.14105032907988 * 
S_MonthsAsCustomer + -0.27105883046781 * S_NumCatalogPurchases + -0.05889648319294 * 
S_NumDealsPurchases + 0.04297768152043 * S_NumDistPurchases + 0.08289772168464 * 
S_NumStorePurchases + 0.02925451736459 * S_NumWebPurchases + -0.34806744064693 * 
S_NumWebVisitsMonth + -0.10075155542626 * S_RFMstat + -0.54230386384017 * S_RMntFrq + 
0.54567939140523 * S_Recency + 0.75126712310981 * S_Teenhome ;
481309    +   H15  =     0.47250221965687 * S_AcceptedCmpTotal  +    -0.07487325745499 *
481310    +        S_Age  +      0.0382122049104 * S_Frq  +     0.55347292090838 *
481311    +        S_Income  +     -0.1831746721838 * S_Kidhome
481312    +          +    -0.12974904479016 * S_Mnt  +    -0.03773564357475 *
481313    +        S_MntFishProducts  +    -0.08740721632052 * S_MntFruits
481314    +          +    -0.10157053454184 * S_MntGoldProds  +     0.52457296443385 *
481315    +        S_MntMeatProducts  +    -0.13287009184486 * S_MntSweetProducts
481316    +          +    -0.37745748357546 * S_MntWines  +    -0.04143657431262 *
481317    +        S_MonthsAsCustomer  +     0.67758682109997 * S_NumCatalogPurchases
481318    +          +     0.46814119938755 * S_NumDealsPurchases
481319    +          +     0.03182241038425 * S_NumDistPurchases
481320    +          +    -0.51911846047007 * S_NumStorePurchases
481321    +          +    -0.53954754105242 * S_NumWebPurchases
481322    +          +     1.07208473057077 * S_NumWebVisitsMonth
481323    +          +     0.12556098363101 * S_RFMstat  +    -0.05748040855256 *
481324    +        S_RMntFrq  +    -0.95916513053649 * S_Recency
481325    +          +    -0.24142268692108 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.47250221965687 * S_AcceptedCmpTotal + -0.07487325745499 * S_Age 
+ 0.0382122049104 * S_Frq + 0.55347292090838 * S_Income + -0.1831746721838 * S_Kidhome + 
-0.12974904479016 * S_Mnt + -0.03773564357475 * S_MntFishProducts + -0.08740721632052 * 
S_MntFruits + -0.10157053454184 * S_MntGoldProds + 0.52457296443385 * S_MntMeatProducts + 
-0.13287009184486 * S_MntSweetProducts + -0.37745748357546 * S_MntWines + -0.04143657431262 * 
S_MonthsAsCustomer + 0.67758682109997 * S_NumCatalogPurchases + 0.46814119938755 * 
S_NumDealsPurchases + 0.03182241038425 * S_NumDistPurchases + -0.51911846047007 * 
S_NumStorePurchases + -0.53954754105242 * S_NumWebPurchases + 1.07208473057077 * 
S_NumWebVisitsMonth + 0.12556098363101 * S_RFMstat + -0.05748040855256 * S_RMntFrq + 
-0.95916513053649 * S_Recency + -0.24142268692108 * S_Teenhome ;
481326    +   H11  = H11  +      0.0203211213932 * AcceptedCmp10
481327    +          +    -0.24671835063904 * AcceptedCmp20  +    -0.16470646765907 *
481328    +        AcceptedCmp30  +     -0.4099897223583 * AcceptedCmp40
481329    +          +    -0.11336081432536 * AcceptedCmp50  +    -0.42649732753042 *
481330    +        Complain0  +     -0.0416551568273 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0203211213932 * AcceptedCmp10 + -0.24671835063904 * 
AcceptedCmp20 + -0.16470646765907 * AcceptedCmp30 + -0.4099897223583 * AcceptedCmp40 + 
-0.11336081432536 * AcceptedCmp50 + -0.42649732753042 * Complain0 + -0.0416551568273 * 
HigherEducationBinary0 ;
481331    +   H12  = H12  +     0.02213559506685 * AcceptedCmp10
481332    +          +      0.0220571091041 * AcceptedCmp20  +     0.17399856069521 *
481333    +        AcceptedCmp30  +    -0.18257604858416 * AcceptedCmp40
481334    +          +    -0.18091572749617 * AcceptedCmp50  +     0.05174557804497 *
481335    +        Complain0  +    -0.05809342634244 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02213559506685 * AcceptedCmp10 + 0.0220571091041 * 
AcceptedCmp20 + 0.17399856069521 * AcceptedCmp30 + -0.18257604858416 * AcceptedCmp40 + 
-0.18091572749617 * AcceptedCmp50 + 0.05174557804497 * Complain0 + -0.05809342634244 * 
HigherEducationBinary0 ;
481336    +   H13  = H13  +     0.18240929240485 * AcceptedCmp10
481337    +          +     0.08046156423197 * AcceptedCmp20  +    -0.09196288275429 *
481338    +        AcceptedCmp30  +     0.22693642674212 * AcceptedCmp40
481339    +          +    -0.22127877339648 * AcceptedCmp50  +     0.22787694199297 *
481340    +        Complain0  +    -0.20447728360836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18240929240485 * AcceptedCmp10 + 0.08046156423197 * 
AcceptedCmp20 + -0.09196288275429 * AcceptedCmp30 + 0.22693642674212 * AcceptedCmp40 + 
-0.22127877339648 * AcceptedCmp50 + 0.22787694199297 * Complain0 + -0.20447728360836 * 
HigherEducationBinary0 ;
481341    +   H14  = H14  +     0.15760334306304 * AcceptedCmp10
481342    +          +     0.25177195217647 * AcceptedCmp20  +     0.58646837477387 *
481343    +        AcceptedCmp30  +     0.35808865186096 * AcceptedCmp40
481344    +          +     0.24279152213079 * AcceptedCmp50  +    -0.03682926397711 *
481345    +        Complain0  +    -0.42398917474831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15760334306304 * AcceptedCmp10 + 0.25177195217647 * 
AcceptedCmp20 + 0.58646837477387 * AcceptedCmp30 + 0.35808865186096 * AcceptedCmp40 + 
0.24279152213079 * AcceptedCmp50 + -0.03682926397711 * Complain0 + -0.42398917474831 * 
HigherEducationBinary0 ;
481346    +   H15  = H15  +    -0.09968006776007 * AcceptedCmp10
481347    +          +     0.09022158834293 * AcceptedCmp20  +    -0.10842101964798 *
481348    +        AcceptedCmp30  +    -0.13099813140438 * AcceptedCmp40
481349    +          +    -0.22167423223515 * AcceptedCmp50  +    -0.04428927537039 *
481350    +        Complain0  +    -0.26182339546076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.09968006776007 * AcceptedCmp10 + 0.09022158834293 * 
AcceptedCmp20 + -0.10842101964798 * AcceptedCmp30 + -0.13099813140438 * AcceptedCmp40 + 
-0.22167423223515 * AcceptedCmp50 + -0.04428927537039 * Complain0 + -0.26182339546076 * 
HigherEducationBinary0 ;
481351    +   H11  = H11  +    -0.01959847584448 * Education2n_Cycle
481352    +          +    -0.23759194699722 * EducationBasic  +    -0.09694759635569 *
481353    +        EducationGraduation  +     0.16905118469563 * EducationMaster
481354    +          +     0.09920310143649 * Marital_StatusDivorced
481355    +          +    -0.03469710828426 * Marital_StatusMarried
481356    +          +     0.04524816569771 * Marital_StatusSingle
481357    +          +    -0.00616333143464 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01959847584448 * Education2n_Cycle + -0.23759194699722 * 
EducationBasic + -0.09694759635569 * EducationGraduation + 0.16905118469563 * EducationMaster 
+ 0.09920310143649 * Marital_StatusDivorced + -0.03469710828426 * Marital_StatusMarried + 
0.04524816569771 * Marital_StatusSingle + -0.00616333143464 * Marital_StatusTogether ;
481358    +   H12  = H12  +     0.05721184485318 * Education2n_Cycle
481359    +          +    -0.04983755787599 * EducationBasic  +    -0.05003868555341 *
481360    +        EducationGraduation  +     0.14755035027548 * EducationMaster
481361    +          +     0.15544361606364 * Marital_StatusDivorced
481362    +          +    -0.04549024479337 * Marital_StatusMarried
481363    +          +    -0.22192209058914 * Marital_StatusSingle
481364    +          +     0.27320991984549 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05721184485318 * Education2n_Cycle + -0.04983755787599 * 
EducationBasic + -0.05003868555341 * EducationGraduation + 0.14755035027548 * EducationMaster 
+ 0.15544361606364 * Marital_StatusDivorced + -0.04549024479337 * Marital_StatusMarried + 
-0.22192209058914 * Marital_StatusSingle + 0.27320991984549 * Marital_StatusTogether ;
481365    +   H13  = H13  +     0.00075033011137 * Education2n_Cycle
481366    +          +    -0.11503072939964 * EducationBasic  +     -0.4136153442156 *
481367    +        EducationGraduation  +    -0.10472711185558 * EducationMaster
481368    +          +     0.06080683366118 * Marital_StatusDivorced
481369    +          +    -0.29971612034722 * Marital_StatusMarried
481370    +          +    -0.28960939443613 * Marital_StatusSingle
481371    +          +     0.03465872178588 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00075033011137 * Education2n_Cycle + -0.11503072939964 * 
EducationBasic + -0.4136153442156 * EducationGraduation + -0.10472711185558 * EducationMaster 
+ 0.06080683366118 * Marital_StatusDivorced + -0.29971612034722 * Marital_StatusMarried + 
-0.28960939443613 * Marital_StatusSingle + 0.03465872178588 * Marital_StatusTogether ;
481372    +   H14  = H14  +      0.0962498664542 * Education2n_Cycle
481373    +          +     0.07755075978175 * EducationBasic  +     0.06918862821828 *
481374    +        EducationGraduation  +    -0.19451337075589 * EducationMaster
481375    +          +    -0.27877133922419 * Marital_StatusDivorced
481376    +          +     0.25867038797563 * Marital_StatusMarried
481377    +          +    -0.17854477297284 * Marital_StatusSingle
481378    +          +     0.35391632150142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0962498664542 * Education2n_Cycle + 0.07755075978175 * 
EducationBasic + 0.06918862821828 * EducationGraduation + -0.19451337075589 * EducationMaster 
+ -0.27877133922419 * Marital_StatusDivorced + 0.25867038797563 * Marital_StatusMarried + 
-0.17854477297284 * Marital_StatusSingle + 0.35391632150142 * Marital_StatusTogether ;
481379    +   H15  = H15  +     0.17326731400139 * Education2n_Cycle
481380    +          +    -0.09586091586548 * EducationBasic  +     0.08664696951776 *
481381    +        EducationGraduation  +    -0.05191600320717 * EducationMaster
481382    +          +     0.30169513410559 * Marital_StatusDivorced
481383    +          +    -0.33752566748869 * Marital_StatusMarried
481384    +          +     0.43876556032036 * Marital_StatusSingle
481385    +          +    -0.37953091676086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.17326731400139 * Education2n_Cycle + -0.09586091586548 * 
EducationBasic + 0.08664696951776 * EducationGraduation + -0.05191600320717 * EducationMaster 
+ 0.30169513410559 * Marital_StatusDivorced + -0.33752566748869 * Marital_StatusMarried + 
0.43876556032036 * Marital_StatusSingle + -0.37953091676086 * Marital_StatusTogether ;
481386    +   H11  =     1.66971140546954 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.66971140546954 + H11 ;
481387    +   H12  =    -2.00390550356371 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.00390550356371 + H12 ;
481388    +   H13  =    -1.90761416182049 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.90761416182049 + H13 ;
481389    +   H14  =     0.27067485542842 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27067485542842 + H14 ;
481390    +   H15  =       -0.78426510761 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.78426510761 + H15 ;
481391    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
481392    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
481393    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
481394    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
481395    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
481396    +END;
MPRINT(EM_DIAGRAM):   END;
481397    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
481398    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
481399    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
481400    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
481401    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
481402    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
481403    +END;
MPRINT(EM_DIAGRAM):   END;
481404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481405    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
481406    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481407    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
481408    +   P_DepVar1  =    -0.93198210671128 * H11  +    -0.73339280381433 * H12
481409    +          +     0.55985350295663 * H13  +    -2.31937062548345 * H14
481410    +          +     3.74909670300365 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.93198210671128 * H11 + -0.73339280381433 * H12 + 
0.55985350295663 * H13 + -2.31937062548345 * H14 + 3.74909670300365 * H15 ;
481411    +   P_DepVar1  =    -1.27659529547813 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.27659529547813 + P_DepVar1 ;
481412    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
481413    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
481414    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
481415    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
481416    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
481417    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
481418    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
481419    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
481420    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
481421    +END;
MPRINT(EM_DIAGRAM):   END;
481422    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
481423    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
481424    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
481425    +END;
MPRINT(EM_DIAGRAM):   END;
481426    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
481427    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
481428    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
481429    +END;
MPRINT(EM_DIAGRAM):   END;
481430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481431    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
481432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481433    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
481434    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
481435    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
481436    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
481437    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
481438    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
481439    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
481440    +END;
MPRINT(EM_DIAGRAM):   END;
481441    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
481442    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
481443    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
481444    +drop
481445    +H11
481446    +H12
481447    +H13
481448    +H14
481449    +H15
481450    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
481451    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
481452     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
481453     quit;
481454     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
481455     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
481456     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
481457     retain ID 2 Node "Neural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural7";
481458     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
481459     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2702 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2702 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481460     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
481461     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481462     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2702 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2702 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481463     proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
481464     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481465     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481466     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
481467     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
481468     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
481469     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481470     proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
481471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481472     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
481473     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481474     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481475     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
481476     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
481477     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481478     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481479     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
481480     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
481480   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1527 rows and 5 columns.

481481     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481482     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
481483     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1527 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1527 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481484     filename _pref
481484   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
481485     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
481486     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
481487    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
481488    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
481489    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
481490    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
481491    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
481492    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
481493     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
481494     quit;
481495     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
481496     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
481497     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
481498     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
481499     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
481500     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481501     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
481502     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481503     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481504     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
481505     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481506     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481507     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
481508     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
481509     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
481510     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481511     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
481512     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481513     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
481514     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481515     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481516     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
481517     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
481518     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481519     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481520     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
481521     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
481521   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

481522     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481523     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
481524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481525     filename _pref
481525   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
481526     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
481527     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
481528    +
481529    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
481530    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
481530   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
481531    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
481532    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
481533    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
481534    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
481535    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
481536     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
481537     quit;
481538     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
481539     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
481540     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
481541     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
481542     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
481543     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481544     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
481545     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481547     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
481548     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481549     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481550     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
481551     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
481552     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
481553     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481554     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
481555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481556     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
481557     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481558     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481559     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
481560     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
481561     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481562     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481563     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
481564     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
481564   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

481565     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481566     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
481567     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1570 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481568     filename _pref
481568   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
481569     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
481570     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
481571    +
481572    +
481573    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
481574    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
481575    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
481576    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
481577    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
481578    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
481579    +
481580    +
481581    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
481582    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
481583    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
481584    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
481585    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
481586    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
481587    +
481588    +
481589    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
481590    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
481591    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
481592    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
481593    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
481594    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
481595    +
481596    +
481597    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
481598    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
481599    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
481600    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
481601    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
481602    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
481603    +
481604    +
481605    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
481606    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
481607    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
481608    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
481609    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
481610    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
481611    +
481612    +
481613    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
481614    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
481615    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
481616    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
481617    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
481618    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
481619    +
481620    +
481621    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
481622    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
481623    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
481624    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
481625    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
481626    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
481627    +
481628    +
481629    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
481630    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
481631    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
481632    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
481633    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
481634    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
481635    +if
481636    +_FILTERNORM1 not in ( '.')
481637    + and
481638    +_FILTERNORM2 not in ( '.')
481639    + and
481640    +_FILTERNORM3 not in ( '.')
481641    + and
481642    +_FILTERNORM4 not in ( '.')
481643    + and
481644    +_FILTERNORM5 not in ( '.')
481645    + and
481646    +_FILTERNORM6 not in ( '.')
481647    + and
481648    +_FILTERNORM7 not in ( ' ')
481649    + and
481650    +_FILTERNORM8 not in ( ' ')
481651    +and
481652    +( Dt_Customer ne .)
481653    +and ( Income ne . and (Income<=107000))
481654    +and ( Kidhome ne .)
481655    +and ( MntFishProducts ne .)
481656    +and ( MntFruits ne .)
481657    +and ( MntGoldProds ne .)
481658    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
481659    +and ( MntSweetProducts ne .)
481660    +and ( MntWines ne .)
481661    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
481662    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
481663    +and ( NumStorePurchases ne .)
481664    +and ( NumWebPurchases ne .)
481665    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
481666    +and ( Recency ne .)
481667    +and ( Teenhome ne .)
481668    +and ( Year_Birth ne .)
481669    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
481670    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
481671    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
481672    +end;
MPRINT(EM_DIAGRAM):   end;
481673    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
481674    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
481675     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
481676     quit;
481677     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
481678     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
481679     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
481680     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
481681     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
481682     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481683     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
481684     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481685     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481686     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
481687     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481688     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481689     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
481690     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
481691     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
481692     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481693     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
481694     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481695     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
481696     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
481697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481698     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
481699     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
481700     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
The SAS System

481701     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481702     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
481703     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
481703   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

481704     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481705     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
481706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1636 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481707     %macro varDept(fcmpdata=,id=);
481708     %global nobs&id scoreFlag&id;
481709     %let scoreFlag&id = 0;
481710     %if &id=1 or ^&fcmpStart %then %do;
481711     proc sort data=&fcmpdata out=_temp&id nodupkey;
481712     by NAME;
481713     where id=&id and LHS in( %let j=1;
481714     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
481715     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
481716     "&var" %let j = %eval(&j+1);
481717     %end;
481718     );
481719     run;
481720     %let dsid = %sysfunc(open(_temp&id));
481721     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
481722     %let dsid = %sysfunc(close(&dsid));
481723     %if &&nobs&id %then %do;
481724     %let scoreFlag&id = 1;
481725     %let fcmpStart = 1;
481726     %end;
481727     %else %let fcmpStart = 0;
481728     %end;
481729     %else %do;
481730     proc sort data=&fcmpdata out=_tempid;
481731     where id=&id;
481732     by LHS;
481733     run;
481734     %let dsid = %sysfunc(open(_tempid));
481735     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
481736     %let dsid = %sysfunc(close(&dsid));
481737     %if ^&&nobs&id %then %do;
481738     proc datasets lib=work nolist;
481739     delete _tempid;
481740     run;
481741     quit;
481742     %end;
481743     %else %do;
481744     data _tempAll;
481745     set %let j=%eval(&id-1);
481746     %do x=1 %to &j;
481747     %if &&nobs&x %then %do;
481748     _temp&x %end;
481749     %end;
481750     ;
481751     run;
481752     proc sql;
481753     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
481753   ! work._tempid p2 where p.name=p2.lhs;
481754     quit;
481755     data _temp&id;
481756     set _temp&id;
481757     where LHS ne '' and NAME ne '' and Node ne '';
481758     run;
481759     proc datasets lib=work nolist;
481760     delete _tempAll;
481761     run;
481762     %let dsid = %sysfunc(open(_temp&id));
481763     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
481764     %let dsid = %sysfunc(close(&dsid));
481765     %if ^&&nobs&id %then %do;
481766     proc datasets lib=work nolist;
481767     delete _temp&id;
481768     run;
481769     quit;
481770     %end;
481771     %else %do;
481772     %let scoreFlag&id = 1;
481773     data _temp&id;
481774     set _temp&id;
481775     where LHS ne NAME and node ne '';
481776     run;
481777     %let dsid = %sysfunc(open(_temp&id));
481778     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
481779     %let dsid = %sysfunc(close(&dsid));
481780     %if ^&&nobs&id %then %do;
481781     proc datasets lib=work nolist;
481782     delete _temp&id;
481783     run;
481784     quit;
481785     %end;
481786     %else %do;
481787     proc sort data=_temp&id nodupkey;
481788     by LHS NAME;
481789     run;
481790     %end;
481791     %end;
481792     %end;
481793     %end;
481794     %mend varDept;
481795     %macro optCode(outdata=fcmpdata);
481796     %global fcmpStart;
481797     %let fcmpStart = 0;
481798     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
481799     %let NumNodes=9;
481800     %do k=1 %to &NumNodes;
481801     %vardept(fcmpdata=&outdata, id=&k);
481802     %end;
481803     %mend optCode;
481804     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

481805     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
481806     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
481807     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
481808     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481809     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
481810     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
481811     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
481812     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481813     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
481814     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
481814   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

481815     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481816     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
481817     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
481818     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481819     filename _pref
481819   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
481820     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
481821     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
481822    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
481823    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
481824    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
481825    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
481826    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
481827    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
481828    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
481829    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
481830    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
481831    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
481832    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
481833    +LENGTH _WARN_ $4
481834    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
481835    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
481836    +
481837    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
481838    +
481839    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
481840    +
481841    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
481842    +
481843    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
481844    +
481845    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
481846    +
481847    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
481848    +
481849    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
481850    +
481851    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
481852    +
481853    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
481854    +
481855    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
481856    +
481857    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
481858    +
481859    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
481860    +
481861    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
481862    +
481863    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
481864    +
481865    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
481866    +
481867    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
481868    +
481869    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
481870    +
481871    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
481872    +
481873    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
481874    +
481875    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
481876    +
481877    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
481878    +
481879    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
481880    +
481881    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
481882    +
481883    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
481884    +
481885    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
481886    +
481887    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
481888    +
481889    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
481890    +
481891    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
481892    +
481893    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
481894    +
481895    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
481896    +
481897    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
481898    +
481899    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
481900    +
481901    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
481902    +
481903    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
481904    +
481905    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
481906    +
481907    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
481908    +
481909    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
481910    +
481911    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
481912    +
481913    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
481914    +
481915    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
481916    +
481917    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
481918    +
481919    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
481920    +
481921    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
481922    +
481923    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
481924    +
481925    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
481926    +
481927    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
481928    +
481929    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
481930    +
481931    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
481932    +
481933    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
481934    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
481935    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
481936    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
481937    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
481938    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481939    +end;
MPRINT(EM_DIAGRAM):   end;
481940    +else do;
MPRINT(EM_DIAGRAM):   else do;
481941    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
481942    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
481943    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
481944    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
481945    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
481946    +   end;
MPRINT(EM_DIAGRAM):   end;
481947    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
481948    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
481949    +   end;
MPRINT(EM_DIAGRAM):   end;
481950    +   else do;
MPRINT(EM_DIAGRAM):   else do;
481951    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
481952    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
481953    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481954    +   end;
MPRINT(EM_DIAGRAM):   end;
481955    +end;
MPRINT(EM_DIAGRAM):   end;
481956    +
481957    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
481958    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
481959    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
481960    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
481961    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
481962    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481963    +end;
MPRINT(EM_DIAGRAM):   end;
481964    +else do;
MPRINT(EM_DIAGRAM):   else do;
481965    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
481966    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
481967    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
481968    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
481969    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
481970    +   end;
MPRINT(EM_DIAGRAM):   end;
481971    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
481972    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
481973    +   end;
MPRINT(EM_DIAGRAM):   end;
481974    +   else do;
MPRINT(EM_DIAGRAM):   else do;
481975    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
481976    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
481977    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481978    +   end;
MPRINT(EM_DIAGRAM):   end;
481979    +end;
MPRINT(EM_DIAGRAM):   end;
481980    +
481981    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
481982    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
481983    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
481984    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
481985    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
481986    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
481987    +end;
MPRINT(EM_DIAGRAM):   end;
481988    +else do;
MPRINT(EM_DIAGRAM):   else do;
481989    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
481990    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
481991    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
481992    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
481993    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
481994    +   end;
MPRINT(EM_DIAGRAM):   end;
481995    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
481996    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
481997    +   end;
MPRINT(EM_DIAGRAM):   end;
481998    +   else do;
MPRINT(EM_DIAGRAM):   else do;
481999    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
482000    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
482001    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482002    +   end;
MPRINT(EM_DIAGRAM):   end;
482003    +end;
MPRINT(EM_DIAGRAM):   end;
482004    +
482005    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
482006    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
482007    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
482008    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
482009    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
482010    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482011    +end;
MPRINT(EM_DIAGRAM):   end;
482012    +else do;
MPRINT(EM_DIAGRAM):   else do;
482013    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
482014    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
482015    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
482016    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
482017    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
482018    +   end;
MPRINT(EM_DIAGRAM):   end;
482019    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
482020    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
482021    +   end;
MPRINT(EM_DIAGRAM):   end;
482022    +   else do;
MPRINT(EM_DIAGRAM):   else do;
482023    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
482024    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
482025    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482026    +   end;
MPRINT(EM_DIAGRAM):   end;
482027    +end;
MPRINT(EM_DIAGRAM):   end;
482028    +
482029    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
482030    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
482031    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
482032    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
482033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
482034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482035    +end;
MPRINT(EM_DIAGRAM):   end;
482036    +else do;
MPRINT(EM_DIAGRAM):   else do;
482037    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
482038    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
482039    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
482040    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
482041    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
482042    +   end;
MPRINT(EM_DIAGRAM):   end;
482043    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
482044    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
482045    +   end;
MPRINT(EM_DIAGRAM):   end;
482046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
482047    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
482048    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
482049    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482050    +   end;
MPRINT(EM_DIAGRAM):   end;
482051    +end;
MPRINT(EM_DIAGRAM):   end;
482052    +
482053    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
482054    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
482055    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
482056    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
482057    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
482058    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482059    +end;
MPRINT(EM_DIAGRAM):   end;
482060    +else do;
MPRINT(EM_DIAGRAM):   else do;
482061    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
482062    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
482063    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
482064    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
482065    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
482066    +   end;
MPRINT(EM_DIAGRAM):   end;
482067    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
482068    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
482069    +   end;
MPRINT(EM_DIAGRAM):   end;
482070    +   else do;
MPRINT(EM_DIAGRAM):   else do;
482071    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
482072    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
482073    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482074    +   end;
MPRINT(EM_DIAGRAM):   end;
482075    +end;
MPRINT(EM_DIAGRAM):   end;
482076    +
482077    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
482078    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
482079    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
482080    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
482081    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
482082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482083    +end;
MPRINT(EM_DIAGRAM):   end;
482084    +else do;
MPRINT(EM_DIAGRAM):   else do;
482085    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
482086    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
482087    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
482088    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
482089    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
482090    +   end;
MPRINT(EM_DIAGRAM):   end;
482091    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
482092    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
482093    +   end;
MPRINT(EM_DIAGRAM):   end;
482094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
482095    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
482096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
482097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482098    +   end;
MPRINT(EM_DIAGRAM):   end;
482099    +end;
MPRINT(EM_DIAGRAM):   end;
482100    +
482101    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
482102    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
482103    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
482104    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
482105    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
482106    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
482107    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
482108    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
482109    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
482110    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
482111    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
482112    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
482113    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
482114    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482115    +end;
MPRINT(EM_DIAGRAM):   end;
482116    +else do;
MPRINT(EM_DIAGRAM):   else do;
482117    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
482118    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
482119    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
482120    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
482121    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
482122    +   end;
MPRINT(EM_DIAGRAM):   end;
482123    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
482124    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
482125    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
482126    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
482127    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
482128    +   end;
MPRINT(EM_DIAGRAM):   end;
482129    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
482130    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
482131    +   end;
MPRINT(EM_DIAGRAM):   end;
482132    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
482133    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
482134    +   end;
MPRINT(EM_DIAGRAM):   end;
482135    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
482136    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
482137    +   end;
MPRINT(EM_DIAGRAM):   end;
482138    +   else do;
MPRINT(EM_DIAGRAM):   else do;
482139    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
482140    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
482141    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
482142    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
482143    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
482144    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482145    +   end;
MPRINT(EM_DIAGRAM):   end;
482146    +end;
MPRINT(EM_DIAGRAM):   end;
482147    +
482148    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
482149    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
482150    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
482151    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
482152    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
482153    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
482154    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
482155    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
482156    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
482157    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
482158    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
482159    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
482160    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
482161    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
482162    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482163    +end;
MPRINT(EM_DIAGRAM):   end;
482164    +else do;
MPRINT(EM_DIAGRAM):   else do;
482165    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
482166    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
482167    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
482168    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
482169    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
482170    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
482171    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
482172    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
482173    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
482174    +         end;
MPRINT(EM_DIAGRAM):   end;
482175    +         else do;
MPRINT(EM_DIAGRAM):   else do;
482176    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
482177    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
482178    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
482179    +            end;
MPRINT(EM_DIAGRAM):   end;
482180    +         end;
MPRINT(EM_DIAGRAM):   end;
482181    +      end;
MPRINT(EM_DIAGRAM):   end;
482182    +      else do;
MPRINT(EM_DIAGRAM):   else do;
482183    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
482184    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
482185    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
482186    +         end;
MPRINT(EM_DIAGRAM):   end;
482187    +      end;
MPRINT(EM_DIAGRAM):   end;
482188    +   end;
MPRINT(EM_DIAGRAM):   end;
482189    +   else do;
MPRINT(EM_DIAGRAM):   else do;
482190    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
482191    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
482192    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
482193    +      end;
MPRINT(EM_DIAGRAM):   end;
482194    +      else do;
MPRINT(EM_DIAGRAM):   else do;
482195    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
482196    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
482197    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
482198    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
482199    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
482200    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
482201    +         end;
MPRINT(EM_DIAGRAM):   end;
482202    +      end;
MPRINT(EM_DIAGRAM):   end;
482203    +   end;
MPRINT(EM_DIAGRAM):   end;
482204    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
482205    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
482206    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
482207    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
482208    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
482209    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
482210    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482211    +   end;
MPRINT(EM_DIAGRAM):   end;
482212    +end;
MPRINT(EM_DIAGRAM):   end;
482213    +
482214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482215    +*** Checking missing input Interval
482216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
482217    +
482218    +IF NMISS(
482219    +   AcceptedCmpTotal ,
482220    +   Age ,
482221    +   Frq ,
482222    +   Income ,
482223    +   Kidhome ,
482224    +   Mnt ,
482225    +   MntFishProducts ,
482226    +   MntFruits ,
482227    +   MntGoldProds ,
482228    +   MntMeatProducts ,
482229    +   MntSweetProducts ,
482230    +   MntWines ,
482231    +   MonthsAsCustomer ,
482232    +   NumCatalogPurchases ,
482233    +   NumDealsPurchases ,
482234    +   NumDistPurchases ,
482235    +   NumStorePurchases ,
482236    +   NumWebPurchases ,
482237    +   NumWebVisitsMonth ,
482238    +   RFMstat ,
482239    +   RMntFrq ,
482240    +   Recency ,
482241    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
482242    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
482243    +
482244    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482245    +END;
MPRINT(EM_DIAGRAM):   END;
482246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482247    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
482248    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482249    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
482250    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
482251    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
482252    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
482253    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
482254    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
482255    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
482256    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
482257    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
482258    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
482259    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
482260    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
482261    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
482262    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
482263    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
482264    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
482265    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
482266    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
482267    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
482268    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
482269    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
482270    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
482271    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
482272    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
482273    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
482274    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
482275    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
482276    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
482277    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
482278    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
482279    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
482280    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
482281    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
482282    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
482283    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
482284    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
482285    +END;
MPRINT(EM_DIAGRAM):   END;
482286    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
482287    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
482288    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
482289    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
482290    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
482291    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
482292    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
482293    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
482294    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
482295    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
482296    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
482297    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
482298    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
482299    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
482300    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
482301    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
482302    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
482303    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
482304    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
482305    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
482306    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
482307    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
482308    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
482309    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
482310    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
482311    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
482312    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
482313    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
482314    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
482315    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
482316    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
482317    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
482318    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
482319    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
482320    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
482321    +   ELSE S_NumCatalogPurchases
482322    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
482323    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
482324    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
482325    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
482326    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
482327    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
482328    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
482329    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
482330    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
482331    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
482332    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
482333    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
482334    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
482335    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
482336    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
482337    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
482338    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
482339    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
482340    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
482341    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
482342    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
482343    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
482344    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
482345    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
482346    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
482347    +END;
MPRINT(EM_DIAGRAM):   END;
482348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482349    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
482350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482352    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
482353    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482355    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
482356    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482357    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
482358    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
482359    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
482360    +        S_Income  +    -0.14142658616971 * S_Kidhome
482361    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
482362    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
482363    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
482364    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
482365    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
482366    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
482367    +          +     0.96837841774168 * S_NumDealsPurchases
482368    +          +      0.2846105381881 * S_NumDistPurchases
482369    +          +    -0.69514041792943 * S_NumStorePurchases
482370    +          +    -0.96425407351749 * S_NumWebPurchases
482371    +          +     0.79545449599683 * S_NumWebVisitsMonth
482372    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
482373    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
482374    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
482375    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
482376    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
482377    +        S_Income  +    -0.55432195959203 * S_Kidhome
482378    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
482379    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
482380    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
482381    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
482382    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
482383    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
482384    +          +      0.2190184330724 * S_NumDealsPurchases
482385    +          +    -0.01682909442896 * S_NumDistPurchases
482386    +          +    -0.70244951048552 * S_NumStorePurchases
482387    +          +     -0.3057457659316 * S_NumWebPurchases
482388    +          +     0.95928538762715 * S_NumWebVisitsMonth
482389    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
482390    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
482391    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
482392    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
482393    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
482394    +        S_Income  +    -0.06354861159882 * S_Kidhome
482395    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
482396    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
482397    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
482398    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
482399    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
482400    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
482401    +          +    -0.21394230159696 * S_NumDealsPurchases
482402    +          +    -0.23833771124663 * S_NumDistPurchases
482403    +          +     0.45832031017813 * S_NumStorePurchases
482404    +          +    -0.30226952040179 * S_NumWebPurchases
482405    +          +    -0.29796387184481 * S_NumWebVisitsMonth
482406    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
482407    +        S_RMntFrq  +     0.87067423045258 * S_Recency
482408    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
482409    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
482410    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
482411    +        S_Income  +    -0.04839586846715 * S_Kidhome
482412    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
482413    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
482414    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
482415    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
482416    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
482417    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
482418    +          +    -0.43749647771198 * S_NumDealsPurchases
482419    +          +     0.21263473847472 * S_NumDistPurchases
482420    +          +     0.26102168039141 * S_NumStorePurchases
482421    +          +     0.54921725943657 * S_NumWebPurchases
482422    +          +    -0.75685843498122 * S_NumWebVisitsMonth
482423    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
482424    +        S_RMntFrq  +     0.80536256822347 * S_Recency
482425    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
482426    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
482427    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
482428    +        S_Income  +     0.71499527198653 * S_Kidhome
482429    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
482430    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
482431    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
482432    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
482433    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
482434    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
482435    +          +     0.09436067776126 * S_NumDealsPurchases
482436    +          +    -0.02824201859641 * S_NumDistPurchases
482437    +          +    -0.06770433780564 * S_NumStorePurchases
482438    +          +    -0.07177620319715 * S_NumWebPurchases
482439    +          +    -0.75589979685266 * S_NumWebVisitsMonth
482440    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
482441    +        S_RMntFrq  +     0.94408788011429 * S_Recency
482442    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
482443    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
482444    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
482445    +        S_Income  +    -0.63474522042341 * S_Kidhome
482446    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
482447    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
482448    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
482449    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
482450    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
482451    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
482452    +          +    -0.51154511343396 * S_NumDealsPurchases
482453    +          +    -0.52422915823572 * S_NumDistPurchases
482454    +          +     0.30305498422357 * S_NumStorePurchases
482455    +          +     0.12197321559338 * S_NumWebPurchases
482456    +          +    -0.10520335422769 * S_NumWebVisitsMonth
482457    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
482458    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
482459    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
482460    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
482461    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
482462    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
482463    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
482464    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
482465    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
482466    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
482467    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
482468    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
482469    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
482470    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
482471    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
482472    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
482473    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
482474    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
482475    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
482476    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
482477    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
482478    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
482479    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
482480    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
482481    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
482482    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
482483    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
482484    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
482485    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
482486    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
482487    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
482488    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
482489    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
482490    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
482491    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
482492    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
482493    +          +     0.10234616400375 * Marital_StatusDivorced
482494    +          +     0.27961650739075 * Marital_StatusMarried
482495    +          +    -0.40239488723767 * Marital_StatusSingle
482496    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
482497    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
482498    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
482499    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
482500    +          +     0.46385792428023 * Marital_StatusDivorced
482501    +          +    -0.62344590646391 * Marital_StatusMarried
482502    +          +     0.61767209252062 * Marital_StatusSingle
482503    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
482504    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
482505    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
482506    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
482507    +          +    -0.07839612590836 * Marital_StatusDivorced
482508    +          +     0.35316864062221 * Marital_StatusMarried
482509    +          +    -0.10730136429834 * Marital_StatusSingle
482510    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
482511    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
482512    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
482513    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
482514    +          +    -0.09942175269886 * Marital_StatusDivorced
482515    +          +     0.24385460865335 * Marital_StatusMarried
482516    +          +    -0.33658955096296 * Marital_StatusSingle
482517    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
482518    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
482519    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
482520    +        EducationGraduation  +     0.37352174719748 * EducationMaster
482521    +          +    -0.08047852561096 * Marital_StatusDivorced
482522    +          +     1.16485862694561 * Marital_StatusMarried
482523    +          +    -0.94140251178566 * Marital_StatusSingle
482524    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
482525    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
482526    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
482527    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
482528    +          +    -0.16621963893391 * Marital_StatusDivorced
482529    +          +    -0.44542186297324 * Marital_StatusMarried
482530    +          +     0.42176133228308 * Marital_StatusSingle
482531    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
482532    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
482533    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
482534    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
482535    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
482536    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
482537    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
482538    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
482539    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
482540    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
482541    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
482542    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
482543    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
482544    +END;
MPRINT(EM_DIAGRAM):   END;
482545    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
482546    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
482547    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
482548    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
482549    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
482550    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
482551    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
482552    +END;
MPRINT(EM_DIAGRAM):   END;
482553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482554    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
482555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482556    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
482557    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
482558    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
482559    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
482560    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
482561    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
482562    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
482563    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
482564    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
482565    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
482566    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
482567    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
482568    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
482569    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
482570    +END;
MPRINT(EM_DIAGRAM):   END;
482571    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
482572    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
482573    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
482574    +END;
MPRINT(EM_DIAGRAM):   END;
482575    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
482576    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
482577    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
482578    +END;
MPRINT(EM_DIAGRAM):   END;
482579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482580    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
482581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482582    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
482583    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
482584    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
482585    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
482586    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
482587    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
482588    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
482589    +END;
MPRINT(EM_DIAGRAM):   END;
482590    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
482591    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
482592    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
482593    +drop
482594    +H11
482595    +H12
482596    +H13
482597    +H14
482598    +H15
482599    +H16
482600    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
482601    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
482602     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
482603     quit;
482604     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
482605     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
482606     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
482607     retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
482608     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
482609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482610     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
482611     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482612     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482613     proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
482614     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482616     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
482617     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
482618     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
482619     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482620     proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
482621     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

482622     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
482623     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482625     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
482626     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
482627     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482628     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482629     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
482630     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
482630   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

482631     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

482632     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
482633     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.20 seconds
      cpu time            0.00 seconds
      

482634     filename _pref
482634   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
482635     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
482636     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
482637    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
482638    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
482639    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
482640    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
482641    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
482642    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
482643     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
482644     quit;
482645     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
482646     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
482647     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
482648     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
482649     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
482650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482651     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
482652     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482653     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482654     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
482655     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482656     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482657     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
482658     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
482659     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
482660     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482661     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
482662     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482663     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
482664     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482665     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482666     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
482667     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
482668     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482669     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482670     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
482671     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
482671   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

482672     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482673     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
482674     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482675     filename _pref
482675   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
482676     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
482677     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
482678    +
482679    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
482680    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
482680   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
482681    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
482682    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
482683    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
482684    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
482685    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
482686     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
482687     quit;
482688     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
482689     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
482690     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
482691     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
482692     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
482693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482694     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
482695     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482696     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482697     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
482698     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482699     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482700     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
482701     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
482702     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
482703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482704     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
482705     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482706     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
482707     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482708     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482709     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
482710     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
482711     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482712     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482713     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
482714     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
482714   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

482715     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482716     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
482717     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482718     filename _pref
482718   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
482719     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
482720     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
482721    +
482722    +
482723    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
482724    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
482725    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
482726    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
482727    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
482728    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
482729    +
482730    +
482731    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
482732    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
482733    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
482734    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
482735    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
482736    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
482737    +
482738    +
482739    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
482740    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
482741    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
482742    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
482743    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
482744    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
482745    +
482746    +
482747    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
482748    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
482749    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
482750    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
482751    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
482752    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
482753    +
482754    +
482755    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
482756    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
482757    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
482758    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
482759    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
482760    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
482761    +
482762    +
482763    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
482764    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
482765    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
482766    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
482767    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
482768    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
482769    +
482770    +
482771    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
482772    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
482773    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
482774    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
482775    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
482776    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
482777    +
482778    +
482779    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
482780    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
482781    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
482782    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
482783    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
482784    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
482785    +if
482786    +_FILTERNORM1 not in ( '.')
482787    + and
482788    +_FILTERNORM2 not in ( '.')
482789    + and
482790    +_FILTERNORM3 not in ( '.')
482791    + and
482792    +_FILTERNORM4 not in ( '.')
482793    + and
482794    +_FILTERNORM5 not in ( '.')
482795    + and
482796    +_FILTERNORM6 not in ( '.')
482797    + and
482798    +_FILTERNORM7 not in ( ' ')
482799    + and
482800    +_FILTERNORM8 not in ( ' ')
482801    +and
482802    +( Dt_Customer ne .)
482803    +and ( Income ne . and (Income<=107000))
482804    +and ( Kidhome ne .)
482805    +and ( MntFishProducts ne .)
482806    +and ( MntFruits ne .)
482807    +and ( MntGoldProds ne .)
482808    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
482809    +and ( MntSweetProducts ne .)
482810    +and ( MntWines ne .)
482811    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
482812    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
482813    +and ( NumStorePurchases ne .)
482814    +and ( NumWebPurchases ne .)
482815    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
482816    +and ( Recency ne .)
482817    +and ( Teenhome ne .)
482818    +and ( Year_Birth ne .)
482819    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
482820    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
482821    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
482822    +end;
MPRINT(EM_DIAGRAM):   end;
482823    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
482824    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
482825     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
482826     quit;
482827     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
482828     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
482829     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
482830     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
482831     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
482832     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482833     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
482834     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482835     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482836     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
482837     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482838     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482839     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
482840     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
482841     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
482842     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482843     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
482844     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482845     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
482846     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482847     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482848     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
482849     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
482850     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
482851     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482852     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
482853     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
482853   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

482854     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482855     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
482856     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482857     %macro varDept(fcmpdata=,id=);
482858     %global nobs&id scoreFlag&id;
482859     %let scoreFlag&id = 0;
482860     %if &id=1 or ^&fcmpStart %then %do;
482861     proc sort data=&fcmpdata out=_temp&id nodupkey;
482862     by NAME;
482863     where id=&id and LHS in( %let j=1;
482864     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
482865     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
482866     "&var" %let j = %eval(&j+1);
482867     %end;
482868     );
482869     run;
482870     %let dsid = %sysfunc(open(_temp&id));
482871     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
482872     %let dsid = %sysfunc(close(&dsid));
482873     %if &&nobs&id %then %do;
482874     %let scoreFlag&id = 1;
482875     %let fcmpStart = 1;
482876     %end;
482877     %else %let fcmpStart = 0;
482878     %end;
482879     %else %do;
482880     proc sort data=&fcmpdata out=_tempid;
482881     where id=&id;
482882     by LHS;
482883     run;
482884     %let dsid = %sysfunc(open(_tempid));
482885     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
482886     %let dsid = %sysfunc(close(&dsid));
482887     %if ^&&nobs&id %then %do;
482888     proc datasets lib=work nolist;
482889     delete _tempid;
482890     run;
482891     quit;
482892     %end;
482893     %else %do;
482894     data _tempAll;
482895     set %let j=%eval(&id-1);
482896     %do x=1 %to &j;
482897     %if &&nobs&x %then %do;
482898     _temp&x %end;
482899     %end;
482900     ;
482901     run;
482902     proc sql;
482903     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
482903   ! work._tempid p2 where p.name=p2.lhs;
482904     quit;
482905     data _temp&id;
482906     set _temp&id;
482907     where LHS ne '' and NAME ne '' and Node ne '';
482908     run;
482909     proc datasets lib=work nolist;
482910     delete _tempAll;
482911     run;
482912     %let dsid = %sysfunc(open(_temp&id));
482913     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
482914     %let dsid = %sysfunc(close(&dsid));
482915     %if ^&&nobs&id %then %do;
482916     proc datasets lib=work nolist;
482917     delete _temp&id;
482918     run;
482919     quit;
482920     %end;
482921     %else %do;
482922     %let scoreFlag&id = 1;
482923     data _temp&id;
482924     set _temp&id;
482925     where LHS ne NAME and node ne '';
482926     run;
482927     %let dsid = %sysfunc(open(_temp&id));
482928     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
482929     %let dsid = %sysfunc(close(&dsid));
482930     %if ^&&nobs&id %then %do;
482931     proc datasets lib=work nolist;
482932     delete _temp&id;
482933     run;
482934     quit;
482935     %end;
482936     %else %do;
482937     proc sort data=_temp&id nodupkey;
482938     by LHS NAME;
482939     run;
482940     %end;
482941     %end;
482942     %end;
482943     %end;
482944     %mend varDept;
482945     %macro optCode(outdata=fcmpdata);
482946     %global fcmpStart;
482947     %let fcmpStart = 0;
482948     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
482949     %let NumNodes=9;
482950     %do k=1 %to &NumNodes;
482951     %vardept(fcmpdata=&outdata, id=&k);
482952     %end;
482953     %mend optCode;
482954     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

482955     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
482956     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
482957     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
482958     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482959     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
482960     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
482961     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
482962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482963     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
482964     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
482964   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

482965     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

482966     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
482967     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
482968     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

482969     filename _pref
482969   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
482970     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
482971     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
482972    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
482973    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
482974    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
482975    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
482976    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
482977    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
482978    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
482979    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
482980    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
482981    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
482982    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
482983    +LENGTH _WARN_ $4
482984    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
482985    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
482986    +
482987    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
482988    +
482989    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
482990    +
482991    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
482992    +
482993    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
482994    +
482995    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
482996    +
482997    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
482998    +
482999    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
483000    +
483001    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
483002    +
483003    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
483004    +
483005    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
483006    +
483007    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
483008    +
483009    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
483010    +
483011    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
483012    +
483013    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
483014    +
483015    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
483016    +
483017    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
483018    +
483019    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
483020    +
483021    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
483022    +
483023    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
483024    +
483025    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
483026    +
483027    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
483028    +
483029    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
483030    +
483031    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
483032    +
483033    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
483034    +
483035    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
483036    +
483037    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
483038    +
483039    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
483040    +
483041    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
483042    +
483043    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
483044    +
483045    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
483046    +
483047    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
483048    +
483049    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
483050    +
483051    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
483052    +
483053    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
483054    +
483055    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
483056    +
483057    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
483058    +
483059    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
483060    +
483061    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
483062    +
483063    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
483064    +
483065    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
483066    +
483067    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
483068    +
483069    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
483070    +
483071    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
483072    +
483073    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
483074    +
483075    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
483076    +
483077    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
483078    +
483079    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
483080    +
483081    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
483082    +
483083    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
483084    +
483085    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
483086    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
483087    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
483088    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
483089    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483091    +end;
MPRINT(EM_DIAGRAM):   end;
483092    +else do;
MPRINT(EM_DIAGRAM):   else do;
483093    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
483094    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
483095    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483096    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
483097    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
483098    +   end;
MPRINT(EM_DIAGRAM):   end;
483099    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
483100    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
483101    +   end;
MPRINT(EM_DIAGRAM):   end;
483102    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483103    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
483104    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483105    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483106    +   end;
MPRINT(EM_DIAGRAM):   end;
483107    +end;
MPRINT(EM_DIAGRAM):   end;
483108    +
483109    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
483110    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
483111    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
483112    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
483113    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483114    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483115    +end;
MPRINT(EM_DIAGRAM):   end;
483116    +else do;
MPRINT(EM_DIAGRAM):   else do;
483117    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
483118    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
483119    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483120    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
483121    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
483122    +   end;
MPRINT(EM_DIAGRAM):   end;
483123    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
483124    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
483125    +   end;
MPRINT(EM_DIAGRAM):   end;
483126    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483127    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
483128    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483129    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483130    +   end;
MPRINT(EM_DIAGRAM):   end;
483131    +end;
MPRINT(EM_DIAGRAM):   end;
483132    +
483133    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
483134    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
483135    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
483136    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
483137    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483138    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483139    +end;
MPRINT(EM_DIAGRAM):   end;
483140    +else do;
MPRINT(EM_DIAGRAM):   else do;
483141    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
483142    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
483143    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483144    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
483145    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
483146    +   end;
MPRINT(EM_DIAGRAM):   end;
483147    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
483148    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
483149    +   end;
MPRINT(EM_DIAGRAM):   end;
483150    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483151    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
483152    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483153    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483154    +   end;
MPRINT(EM_DIAGRAM):   end;
483155    +end;
MPRINT(EM_DIAGRAM):   end;
483156    +
483157    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
483158    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
483159    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
483160    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
483161    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483162    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483163    +end;
MPRINT(EM_DIAGRAM):   end;
483164    +else do;
MPRINT(EM_DIAGRAM):   else do;
483165    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
483166    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
483167    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483168    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
483169    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
483170    +   end;
MPRINT(EM_DIAGRAM):   end;
483171    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
483172    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
483173    +   end;
MPRINT(EM_DIAGRAM):   end;
483174    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483175    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
483176    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483177    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483178    +   end;
MPRINT(EM_DIAGRAM):   end;
483179    +end;
MPRINT(EM_DIAGRAM):   end;
483180    +
483181    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
483182    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
483183    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
483184    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
483185    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483186    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483187    +end;
MPRINT(EM_DIAGRAM):   end;
483188    +else do;
MPRINT(EM_DIAGRAM):   else do;
483189    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
483190    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
483191    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483192    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
483193    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
483194    +   end;
MPRINT(EM_DIAGRAM):   end;
483195    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
483196    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
483197    +   end;
MPRINT(EM_DIAGRAM):   end;
483198    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483199    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
483200    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483201    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483202    +   end;
MPRINT(EM_DIAGRAM):   end;
483203    +end;
MPRINT(EM_DIAGRAM):   end;
483204    +
483205    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
483206    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
483207    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
483208    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
483209    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483210    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483211    +end;
MPRINT(EM_DIAGRAM):   end;
483212    +else do;
MPRINT(EM_DIAGRAM):   else do;
483213    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
483214    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
483215    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483216    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
483217    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
483218    +   end;
MPRINT(EM_DIAGRAM):   end;
483219    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
483220    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
483221    +   end;
MPRINT(EM_DIAGRAM):   end;
483222    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483223    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
483224    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483225    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483226    +   end;
MPRINT(EM_DIAGRAM):   end;
483227    +end;
MPRINT(EM_DIAGRAM):   end;
483228    +
483229    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
483230    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
483231    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
483232    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
483233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483235    +end;
MPRINT(EM_DIAGRAM):   end;
483236    +else do;
MPRINT(EM_DIAGRAM):   else do;
483237    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
483238    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
483239    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483240    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
483241    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
483242    +   end;
MPRINT(EM_DIAGRAM):   end;
483243    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
483244    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
483245    +   end;
MPRINT(EM_DIAGRAM):   end;
483246    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483247    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
483248    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483249    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483250    +   end;
MPRINT(EM_DIAGRAM):   end;
483251    +end;
MPRINT(EM_DIAGRAM):   end;
483252    +
483253    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
483254    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
483255    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
483256    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
483257    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
483258    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
483259    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
483260    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
483261    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
483262    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
483263    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
483264    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
483265    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483266    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483267    +end;
MPRINT(EM_DIAGRAM):   end;
483268    +else do;
MPRINT(EM_DIAGRAM):   else do;
483269    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
483270    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
483271    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483272    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
483273    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
483274    +   end;
MPRINT(EM_DIAGRAM):   end;
483275    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
483276    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
483277    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
483278    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
483279    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
483280    +   end;
MPRINT(EM_DIAGRAM):   end;
483281    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
483282    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
483283    +   end;
MPRINT(EM_DIAGRAM):   end;
483284    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
483285    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
483286    +   end;
MPRINT(EM_DIAGRAM):   end;
483287    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
483288    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
483289    +   end;
MPRINT(EM_DIAGRAM):   end;
483290    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483291    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
483292    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
483293    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
483294    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
483295    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483296    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483297    +   end;
MPRINT(EM_DIAGRAM):   end;
483298    +end;
MPRINT(EM_DIAGRAM):   end;
483299    +
483300    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
483301    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
483302    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
483303    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
483304    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
483305    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
483306    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
483307    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
483308    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
483309    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
483310    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
483311    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
483312    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
483313    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
483314    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483315    +end;
MPRINT(EM_DIAGRAM):   end;
483316    +else do;
MPRINT(EM_DIAGRAM):   else do;
483317    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
483318    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
483319    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483320    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
483321    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
483322    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
483323    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
483324    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
483325    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
483326    +         end;
MPRINT(EM_DIAGRAM):   end;
483327    +         else do;
MPRINT(EM_DIAGRAM):   else do;
483328    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
483329    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
483330    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
483331    +            end;
MPRINT(EM_DIAGRAM):   end;
483332    +         end;
MPRINT(EM_DIAGRAM):   end;
483333    +      end;
MPRINT(EM_DIAGRAM):   end;
483334    +      else do;
MPRINT(EM_DIAGRAM):   else do;
483335    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
483336    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
483337    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
483338    +         end;
MPRINT(EM_DIAGRAM):   end;
483339    +      end;
MPRINT(EM_DIAGRAM):   end;
483340    +   end;
MPRINT(EM_DIAGRAM):   end;
483341    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483342    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
483343    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
483344    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
483345    +      end;
MPRINT(EM_DIAGRAM):   end;
483346    +      else do;
MPRINT(EM_DIAGRAM):   else do;
483347    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
483348    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
483349    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
483350    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
483351    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
483352    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
483353    +         end;
MPRINT(EM_DIAGRAM):   end;
483354    +      end;
MPRINT(EM_DIAGRAM):   end;
483355    +   end;
MPRINT(EM_DIAGRAM):   end;
483356    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
483357    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
483358    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
483359    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
483360    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
483361    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
483362    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483363    +   end;
MPRINT(EM_DIAGRAM):   end;
483364    +end;
MPRINT(EM_DIAGRAM):   end;
483365    +
483366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483367    +*** Checking missing input Interval
483368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
483369    +
483370    +IF NMISS(
483371    +   AcceptedCmpTotal ,
483372    +   Age ,
483373    +   Frq ,
483374    +   Income ,
483375    +   Kidhome ,
483376    +   Mnt ,
483377    +   MntFishProducts ,
483378    +   MntFruits ,
483379    +   MntGoldProds ,
483380    +   MntMeatProducts ,
483381    +   MntSweetProducts ,
483382    +   MntWines ,
483383    +   MonthsAsCustomer ,
483384    +   NumCatalogPurchases ,
483385    +   NumDealsPurchases ,
483386    +   NumDistPurchases ,
483387    +   NumStorePurchases ,
483388    +   NumWebPurchases ,
483389    +   NumWebVisitsMonth ,
483390    +   RFMstat ,
483391    +   RMntFrq ,
483392    +   Recency ,
483393    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
483394    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
483395    +
483396    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483397    +END;
MPRINT(EM_DIAGRAM):   END;
483398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483399    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
483400    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483401    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
483402    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
483403    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
483404    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
483405    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
483406    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
483407    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
483408    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
483409    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
483410    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
483411    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
483412    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
483413    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
483414    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
483415    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
483416    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
483417    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
483418    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
483419    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
483420    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
483421    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
483422    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
483423    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
483424    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
483425    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
483426    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
483427    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
483428    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
483429    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
483430    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
483431    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
483432    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
483433    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
483434    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
483435    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
483436    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
483437    +END;
MPRINT(EM_DIAGRAM):   END;
483438    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
483439    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
483440    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
483441    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
483442    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
483443    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
483444    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
483445    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
483446    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
483447    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
483448    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
483449    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
483450    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
483451    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
483452    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
483453    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
483454    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
483455    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
483456    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
483457    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
483458    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
483459    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
483460    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
483461    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
483462    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
483463    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
483464    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
483465    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
483466    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
483467    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
483468    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
483469    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
483470    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
483471    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
483472    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
483473    +   ELSE S_NumCatalogPurchases
483474    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
483475    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
483476    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
483477    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
483478    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
483479    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
483480    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
483481    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
483482    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
483483    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
483484    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
483485    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
483486    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
483487    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
483488    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
483489    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
483490    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
483491    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
483492    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
483493    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
483494    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
483495    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
483496    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
483497    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
483498    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
483499    +END;
MPRINT(EM_DIAGRAM):   END;
483500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483501    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
483502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483503    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483504    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
483505    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483506    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483507    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
483508    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483509    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
483510    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
483511    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
483512    +        S_Income  +    -0.43070069114587 * S_Kidhome
483513    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
483514    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
483515    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
483516    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
483517    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
483518    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
483519    +          +    -0.21858146166244 * S_NumDealsPurchases
483520    +          +     0.18409991080913 * S_NumDistPurchases
483521    +          +     0.35683163455594 * S_NumStorePurchases
483522    +          +     0.24429183714976 * S_NumWebPurchases
483523    +          +     -0.1263739191616 * S_NumWebVisitsMonth
483524    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
483525    +        S_RMntFrq  +      0.3452503815146 * S_Recency
483526    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
483527    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
483528    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
483529    +        S_Income  +     0.24623934031778 * S_Kidhome
483530    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
483531    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
483532    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
483533    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
483534    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
483535    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
483536    +          +    -0.08125614129909 * S_NumDealsPurchases
483537    +          +     0.38003696656333 * S_NumDistPurchases
483538    +          +     0.22006494588298 * S_NumStorePurchases
483539    +          +     0.26217639358993 * S_NumWebPurchases
483540    +          +    -0.56905781005459 * S_NumWebVisitsMonth
483541    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
483542    +        S_RMntFrq  +     0.33060213336674 * S_Recency
483543    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
483544    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
483545    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
483546    +        S_Income  +     0.18597632724783 * S_Kidhome
483547    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
483548    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
483549    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
483550    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
483551    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
483552    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
483553    +          +     0.08121213946217 * S_NumDealsPurchases
483554    +          +    -0.04963282234139 * S_NumDistPurchases
483555    +          +    -0.09521586837775 * S_NumStorePurchases
483556    +          +     0.00630626523742 * S_NumWebPurchases
483557    +          +    -0.03891587920939 * S_NumWebVisitsMonth
483558    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
483559    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
483560    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
483561    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
483562    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
483563    +        S_Income  +     0.25356767518099 * S_Kidhome
483564    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
483565    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
483566    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
483567    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
483568    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
483569    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
483570    +          +     0.83749876944877 * S_NumDealsPurchases
483571    +          +     0.29636537008068 * S_NumDistPurchases
483572    +          +    -0.61202052257506 * S_NumStorePurchases
483573    +          +    -0.96921731415369 * S_NumWebPurchases
483574    +          +     0.10056455703323 * S_NumWebVisitsMonth
483575    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
483576    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
483577    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
483578    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
483579    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
483580    +        S_Income  +    -0.66239517276633 * S_Kidhome
483581    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
483582    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
483583    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
483584    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
483585    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
483586    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
483587    +          +     0.63122884753912 * S_NumDealsPurchases
483588    +          +     0.00285388491049 * S_NumDistPurchases
483589    +          +    -0.76222252593182 * S_NumStorePurchases
483590    +          +    -0.71485070772733 * S_NumWebPurchases
483591    +          +     1.59020450778179 * S_NumWebVisitsMonth
483592    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
483593    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
483594    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
483595    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
483596    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
483597    +        S_Income  +    -0.22662005590555 * S_Kidhome
483598    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
483599    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
483600    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
483601    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
483602    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
483603    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
483604    +          +    -0.28143084367284 * S_NumDealsPurchases
483605    +          +     0.09640746756361 * S_NumDistPurchases
483606    +          +      0.1754994442449 * S_NumStorePurchases
483607    +          +     0.14321475617403 * S_NumWebPurchases
483608    +          +     -0.1908048876137 * S_NumWebVisitsMonth
483609    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
483610    +        S_RMntFrq  +     0.02280616139018 * S_Recency
483611    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
483612    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
483613    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
483614    +        S_Income  +    -0.45643247613458 * S_Kidhome
483615    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
483616    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
483617    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
483618    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
483619    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
483620    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
483621    +          +    -0.14623073736275 * S_NumDealsPurchases
483622    +          +      0.1591142102614 * S_NumDistPurchases
483623    +          +     0.10364624011419 * S_NumStorePurchases
483624    +          +     0.21545343951201 * S_NumWebPurchases
483625    +          +     0.61096997379603 * S_NumWebVisitsMonth
483626    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
483627    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
483628    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
483629    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
483630    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
483631    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
483632    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
483633    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
483634    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
483635    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
483636    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
483637    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
483638    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
483639    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
483640    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
483641    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
483642    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
483643    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
483644    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
483645    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
483646    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
483647    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
483648    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
483649    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
483650    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
483651    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
483652    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
483653    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
483654    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
483655    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
483656    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
483657    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
483658    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
483659    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
483660    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
483661    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
483662    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
483663    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
483664    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
483665    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
483666    +        EducationGraduation  +     0.00389495660452 * EducationMaster
483667    +          +     0.39856598367829 * Marital_StatusDivorced
483668    +          +    -0.45922754552461 * Marital_StatusMarried
483669    +          +     0.41270195301891 * Marital_StatusSingle
483670    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
483671    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
483672    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
483673    +        EducationGraduation  +      0.2609956614651 * EducationMaster
483674    +          +     0.12002180366932 * Marital_StatusDivorced
483675    +          +     0.50693056076018 * Marital_StatusMarried
483676    +          +    -0.40828651697464 * Marital_StatusSingle
483677    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
483678    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
483679    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
483680    +        EducationGraduation  +     0.20017847825938 * EducationMaster
483681    +          +    -0.05075621283629 * Marital_StatusDivorced
483682    +          +     0.06731276969307 * Marital_StatusMarried
483683    +          +     0.20458391966582 * Marital_StatusSingle
483684    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
483685    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
483686    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
483687    +        EducationGraduation  +     0.28829384238085 * EducationMaster
483688    +          +    -0.37925185401218 * Marital_StatusDivorced
483689    +          +     0.62971134740586 * Marital_StatusMarried
483690    +          +    -0.36562351730859 * Marital_StatusSingle
483691    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
483692    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
483693    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
483694    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
483695    +          +     0.84382044664305 * Marital_StatusDivorced
483696    +          +    -0.84062627203871 * Marital_StatusMarried
483697    +          +     0.74100406031127 * Marital_StatusSingle
483698    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
483699    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
483700    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
483701    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
483702    +          +     -0.1195105091383 * Marital_StatusDivorced
483703    +          +    -0.13486422945269 * Marital_StatusMarried
483704    +          +     0.33592403429156 * Marital_StatusSingle
483705    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
483706    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
483707    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
483708    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
483709    +          +     0.14792293029589 * Marital_StatusDivorced
483710    +          +    -0.96003393582564 * Marital_StatusMarried
483711    +          +     0.64637652355384 * Marital_StatusSingle
483712    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
483713    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
483714    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
483715    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
483716    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
483717    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
483718    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
483719    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
483720    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
483721    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
483722    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
483723    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
483724    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
483725    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
483726    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
483727    +END;
MPRINT(EM_DIAGRAM):   END;
483728    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
483729    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
483730    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
483731    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
483732    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
483733    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
483734    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
483735    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
483736    +END;
MPRINT(EM_DIAGRAM):   END;
483737    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483738    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
483739    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483740    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
483741    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
483742    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
483743    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
483744    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
483745    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
483746    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
483747    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
483748    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
483749    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
483750    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
483751    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
483752    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
483753    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
483754    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
483755    +END;
MPRINT(EM_DIAGRAM):   END;
483756    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
483757    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
483758    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
483759    +END;
MPRINT(EM_DIAGRAM):   END;
483760    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
483761    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
483762    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
483763    +END;
MPRINT(EM_DIAGRAM):   END;
483764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483765    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
483766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483767    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
483768    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
483769    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
483770    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
483771    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
483772    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
483773    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
483774    +END;
MPRINT(EM_DIAGRAM):   END;
483775    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
483776    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
483777    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
483778    +drop
483779    +H11
483780    +H12
483781    +H13
483782    +H14
483783    +H15
483784    +H16
483785    +H17
483786    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
483787    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
483788     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
483789     quit;
483790     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
483791     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
483792     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
483793     retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
483794     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
483795     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483796     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
483797     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483798     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

483799     proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
483800     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483801     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483802     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
483803     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
483804     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
483805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483806     proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
483807     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

483808     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
483809     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483810     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483811     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
483812     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
483813     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483814     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

483815     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
483816     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
483816   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

483817     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483818     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
483819     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483820     filename _pref
483820   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
483821     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
483822     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
483823    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
483824    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
483825    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
483826    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
483827    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
483828    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
483829     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
483830     quit;
483831     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
483832     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
483833     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
483834     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
483835     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
483836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483837     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
483838     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483839     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

483840     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
483841     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483842     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483843     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
483844     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
483845     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
483846     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483847     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
483848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

483849     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
483850     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483851     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483852     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
483853     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
483854     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483855     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483856     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
483857     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
483857   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

483858     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483859     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
483860     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483861     filename _pref
483861   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
483862     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
483863     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
483864    +
483865    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
483866    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
483866   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
483867    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
483868    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
483869    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
483870    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
483871    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
483872     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
483873     quit;
483874     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
483875     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
483876     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
483877     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
483878     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
483879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483880     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
483881     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483883     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
483884     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483885     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

483886     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
483887     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
483888     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
483889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483890     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
483891     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483892     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
483893     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483894     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483895     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
483896     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
483897     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483898     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483899     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
483900     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
483900   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

483901     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483902     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
483903     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

483904     filename _pref
483904   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
483905     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
483906     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
483907    +
483908    +
483909    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
483910    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
483911    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
483912    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
483913    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
483914    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
483915    +
483916    +
483917    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
483918    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
483919    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
483920    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
483921    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
483922    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
483923    +
483924    +
483925    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
483926    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
483927    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
483928    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
483929    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
483930    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
483931    +
483932    +
483933    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
483934    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
483935    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
483936    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
483937    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
483938    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
483939    +
483940    +
483941    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
483942    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
483943    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
483944    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
483945    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
483946    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
483947    +
483948    +
483949    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
483950    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
483951    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
483952    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
483953    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
483954    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
483955    +
483956    +
483957    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
483958    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
483959    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
483960    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
483961    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
483962    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
483963    +
483964    +
483965    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
483966    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
483967    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
483968    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
483969    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
483970    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
483971    +if
483972    +_FILTERNORM1 not in ( '.')
483973    + and
483974    +_FILTERNORM2 not in ( '.')
483975    + and
483976    +_FILTERNORM3 not in ( '.')
483977    + and
483978    +_FILTERNORM4 not in ( '.')
483979    + and
483980    +_FILTERNORM5 not in ( '.')
483981    + and
483982    +_FILTERNORM6 not in ( '.')
483983    + and
483984    +_FILTERNORM7 not in ( ' ')
483985    + and
483986    +_FILTERNORM8 not in ( ' ')
483987    +and
483988    +( Dt_Customer ne .)
483989    +and ( Income ne . and (Income<=107000))
483990    +and ( Kidhome ne .)
483991    +and ( MntFishProducts ne .)
483992    +and ( MntFruits ne .)
483993    +and ( MntGoldProds ne .)
483994    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
483995    +and ( MntSweetProducts ne .)
483996    +and ( MntWines ne .)
483997    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
483998    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
483999    +and ( NumStorePurchases ne .)
484000    +and ( NumWebPurchases ne .)
484001    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
484002    +and ( Recency ne .)
484003    +and ( Teenhome ne .)
484004    +and ( Year_Birth ne .)
484005    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
484006    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
484007    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
484008    +end;
MPRINT(EM_DIAGRAM):   end;
484009    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
484010    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
484011     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
484012     quit;
484013     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
484014     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
484015     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
484016     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
484017     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
484018     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484019     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
484020     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484021     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484022     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
484023     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484024     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484025     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484026     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
484027     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
484028     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484029     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
484030     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

484031     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
484032     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484033     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484034     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484035     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
484036     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484037     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484038     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
484039     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
484039   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

484040     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484041     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
484042     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484043     %macro varDept(fcmpdata=,id=);
484044     %global nobs&id scoreFlag&id;
484045     %let scoreFlag&id = 0;
484046     %if &id=1 or ^&fcmpStart %then %do;
484047     proc sort data=&fcmpdata out=_temp&id nodupkey;
484048     by NAME;
484049     where id=&id and LHS in( %let j=1;
484050     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
484051     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
484052     "&var" %let j = %eval(&j+1);
484053     %end;
484054     );
484055     run;
484056     %let dsid = %sysfunc(open(_temp&id));
484057     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
484058     %let dsid = %sysfunc(close(&dsid));
484059     %if &&nobs&id %then %do;
484060     %let scoreFlag&id = 1;
484061     %let fcmpStart = 1;
484062     %end;
484063     %else %let fcmpStart = 0;
484064     %end;
484065     %else %do;
484066     proc sort data=&fcmpdata out=_tempid;
484067     where id=&id;
484068     by LHS;
484069     run;
484070     %let dsid = %sysfunc(open(_tempid));
484071     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
484072     %let dsid = %sysfunc(close(&dsid));
484073     %if ^&&nobs&id %then %do;
484074     proc datasets lib=work nolist;
484075     delete _tempid;
484076     run;
484077     quit;
484078     %end;
484079     %else %do;
484080     data _tempAll;
484081     set %let j=%eval(&id-1);
484082     %do x=1 %to &j;
484083     %if &&nobs&x %then %do;
484084     _temp&x %end;
484085     %end;
484086     ;
484087     run;
484088     proc sql;
484089     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
484089   ! work._tempid p2 where p.name=p2.lhs;
484090     quit;
484091     data _temp&id;
484092     set _temp&id;
484093     where LHS ne '' and NAME ne '' and Node ne '';
484094     run;
484095     proc datasets lib=work nolist;
484096     delete _tempAll;
484097     run;
484098     %let dsid = %sysfunc(open(_temp&id));
484099     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
484100     %let dsid = %sysfunc(close(&dsid));
484101     %if ^&&nobs&id %then %do;
484102     proc datasets lib=work nolist;
484103     delete _temp&id;
484104     run;
484105     quit;
484106     %end;
484107     %else %do;
484108     %let scoreFlag&id = 1;
484109     data _temp&id;
484110     set _temp&id;
484111     where LHS ne NAME and node ne '';
484112     run;
484113     %let dsid = %sysfunc(open(_temp&id));
484114     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
484115     %let dsid = %sysfunc(close(&dsid));
484116     %if ^&&nobs&id %then %do;
484117     proc datasets lib=work nolist;
484118     delete _temp&id;
484119     run;
484120     quit;
484121     %end;
484122     %else %do;
484123     proc sort data=_temp&id nodupkey;
484124     by LHS NAME;
484125     run;
484126     %end;
484127     %end;
484128     %end;
484129     %end;
484130     %mend varDept;
484131     %macro optCode(outdata=fcmpdata);
484132     %global fcmpStart;
484133     %let fcmpStart = 0;
484134     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
484135     %let NumNodes=9;
484136     %do k=1 %to &NumNodes;
484137     %vardept(fcmpdata=&outdata, id=&k);
484138     %end;
484139     %mend optCode;
484140     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

484141     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
484142     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
484143     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
484144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484145     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
484146     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
484147     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
484148     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484149     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
484150     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
484150   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

484151     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484152     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
484153     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
484154     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484155     filename _pref
484155   ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
484156     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
484157     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas.
484158    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
484159    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
484160    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
484161    +
484162    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
484163    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
484164    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
484165    +
484166    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
484167    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
484168    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
484169    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
484170    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
484171    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
484172    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
484173    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
484174    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
484175    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
484176    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
484177    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
484178    +
484179    +
484180    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
484181    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
484182    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
484183    +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
484184    +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
484185    +
484186    +
484187    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
484188    +IF  NOT MISSING(AcceptedCmpTotal ) AND
484189    +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
484190    +  IF  NOT MISSING(Recency ) AND
484191    +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
484192    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
484193    +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
484194    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
484195    +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
484196    +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
484197    +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
484198    +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
484199    +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
484200    +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
484201    +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
484202    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
484203    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
484204    +      END;
MPRINT(EM_DIAGRAM):   END;
484205    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484206    +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
484207    +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
484208    +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
484209    +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
484210    +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
484211    +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
484212    +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
484213    +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
484214    +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
484215    +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
484216    +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
484217    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
484218    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
484219    +        END;
MPRINT(EM_DIAGRAM):   END;
484220    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484221    +        IF  NOT MISSING(NumStorePurchases ) AND
484222    +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
484223    +          IF  NOT MISSING(NumWebVisitsMonth ) AND
484224    +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
484225    +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
484226    +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
484227    +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
484228    +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
484229    +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
484230    +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
484231    +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
484232    +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
484233    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484234    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484235    +            END;
MPRINT(EM_DIAGRAM):   END;
484236    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484237    +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
484238    +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
484239    +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
484240    +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
484241    +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
484242    +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
484243    +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
484244    +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
484245    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
484246    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
484247    +            END;
MPRINT(EM_DIAGRAM):   END;
484248    +          END;
MPRINT(EM_DIAGRAM):   END;
484249    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484250    +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
484251    +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
484252    +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
484253    +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
484254    +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
484255    +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
484256    +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
484257    +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
484258    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484259    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484260    +          END;
MPRINT(EM_DIAGRAM):   END;
484261    +        END;
MPRINT(EM_DIAGRAM):   END;
484262    +      END;
MPRINT(EM_DIAGRAM):   END;
484263    +    END;
MPRINT(EM_DIAGRAM):   END;
484264    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484265    +    IF  NOT MISSING(AcceptedCmpTotal ) AND
484266    +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
484267    +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
484268    +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
484269    +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
484270    +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
484271    +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
484272    +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
484273    +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
484274    +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
484275    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
484276    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
484277    +      END;
MPRINT(EM_DIAGRAM):   END;
484278    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484279    +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
484280    +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
484281    +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
484282    +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
484283    +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
484284    +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
484285    +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
484286    +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
484287    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484288    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484289    +      END;
MPRINT(EM_DIAGRAM):   END;
484290    +    END;
MPRINT(EM_DIAGRAM):   END;
484291    +  END;
MPRINT(EM_DIAGRAM):   END;
484292    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484293    +  IF  NOT MISSING(Recency ) AND
484294    +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
484295    +    IF  NOT MISSING(NumCatalogPurchases ) AND
484296    +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
484297    +      IF  NOT MISSING(NumStorePurchases ) AND
484298    +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
484299    +        IF  NOT MISSING(RFMstat ) AND
484300    +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
484301    +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
484302    +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
484303    +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
484304    +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
484305    +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
484306    +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
484307    +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
484308    +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
484309    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
484310    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
484311    +          END;
MPRINT(EM_DIAGRAM):   END;
484312    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484313    +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
484314    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
484315    +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
484316    +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
484317    +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
484318    +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
484319    +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
484320    +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
484321    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484322    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484323    +          END;
MPRINT(EM_DIAGRAM):   END;
484324    +        END;
MPRINT(EM_DIAGRAM):   END;
484325    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484326    +        IF  NOT MISSING(MntFishProducts ) AND
484327    +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
484328    +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
484329    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
484330    +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
484331    +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
484332    +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
484333    +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
484334    +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
484335    +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
484336    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484337    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484338    +          END;
MPRINT(EM_DIAGRAM):   END;
484339    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484340    +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
484341    +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
484342    +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
484343    +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
484344    +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
484345    +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
484346    +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
484347    +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
484348    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
484349    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
484350    +          END;
MPRINT(EM_DIAGRAM):   END;
484351    +        END;
MPRINT(EM_DIAGRAM):   END;
484352    +      END;
MPRINT(EM_DIAGRAM):   END;
484353    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484354    +      IF  NOT MISSING(NumWebVisitsMonth ) AND
484355    +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
484356    +        IF  NOT MISSING(NumCatalogPurchases ) AND
484357    +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
484358    +          IF  NOT MISSING(Kidhome ) AND
484359    +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
484360    +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
484361    +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
484362    +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
484363    +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
484364    +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
484365    +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
484366    +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
484367    +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
484368    +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484369    +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484370    +            END;
MPRINT(EM_DIAGRAM):   END;
484371    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484372    +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
484373    +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
484374    +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
484375    +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
484376    +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
484377    +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
484378    +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
484379    +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
484380    +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
484381    +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
484382    +            END;
MPRINT(EM_DIAGRAM):   END;
484383    +          END;
MPRINT(EM_DIAGRAM):   END;
484384    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484385    +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
484386    +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
484387    +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
484388    +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
484389    +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
484390    +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
484391    +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
484392    +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
484393    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484394    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484395    +          END;
MPRINT(EM_DIAGRAM):   END;
484396    +        END;
MPRINT(EM_DIAGRAM):   END;
484397    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484398    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
484399    +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
484400    +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
484401    +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
484402    +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
484403    +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
484404    +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
484405    +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
484406    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484407    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484408    +        END;
MPRINT(EM_DIAGRAM):   END;
484409    +      END;
MPRINT(EM_DIAGRAM):   END;
484410    +    END;
MPRINT(EM_DIAGRAM):   END;
484411    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
484412    +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
484413    +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
484414    +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
484415    +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
484416    +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
484417    +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
484418    +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
484419    +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
484420    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
484421    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
484422    +    END;
MPRINT(EM_DIAGRAM):   END;
484423    +  END;
MPRINT(EM_DIAGRAM):   END;
484424    +
484425    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
484426    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
484427    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
484428    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
484429     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
484430     quit;
484431     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
484432     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
484433     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
484434     retain ID 2 Node "Tree";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree";
484435     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
484436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 103 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 103 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484437     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
484438     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484439     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 103 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 103 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484440     proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
484441     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484442     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.TREE_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484443     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484444     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
484445     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
484446     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484447     proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
484448     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484449     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
484450     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484451     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484452     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484453     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
484454     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484455     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484456     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
484457     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
484457   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 93 rows and 5 columns.

484458     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484459     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
484460     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 93 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 93 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484461     filename _pref
484461   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
484462     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
484463     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
484464    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
484465    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
484466    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
484467    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
484468    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
484469    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
484470     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
484471     quit;
484472     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
484473     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
484474     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
484475     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
484476     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
484477     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484478     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
484479     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484480     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484481     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
484482     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484483     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

484484     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484485     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
484486     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
484487     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484488     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
484489     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

484490     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
484491     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484492     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484493     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484494     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
484495     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484496     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484497     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
484498     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
484498   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

484499     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484500     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
484501     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 97 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484502     filename _pref
484502   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
484503     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
484504     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
484505    +
484506    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
484507    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
484507   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
484508    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
484509    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
484510    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
484511    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
484512    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
484513     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
484514     quit;
484515     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
484516     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
484517     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
484518     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
484519     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
484520     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484521     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
484522     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484524     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
484525     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484526     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484527     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484528     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
484529     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
484530     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484531     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
484532     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484533     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
484534     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484535     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484536     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484537     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
484538     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484539     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484540     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
484541     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
484541   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

484542     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484543     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
484544     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 136 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484545     filename _pref
484545   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
484546     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
484547     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
484548    +
484549    +
484550    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
484551    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
484552    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
484553    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
484554    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
484555    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
484556    +
484557    +
484558    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
484559    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
484560    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
484561    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
484562    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
484563    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
484564    +
484565    +
484566    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
484567    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
484568    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
484569    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
484570    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
484571    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
484572    +
484573    +
484574    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
484575    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
484576    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
484577    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
484578    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
484579    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
484580    +
484581    +
484582    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
484583    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
484584    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
484585    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
484586    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
484587    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
484588    +
484589    +
484590    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
484591    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
484592    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
484593    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
484594    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
484595    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
484596    +
484597    +
484598    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
484599    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
484600    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
484601    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
484602    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
484603    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
484604    +
484605    +
484606    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
484607    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
484608    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
484609    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
484610    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
484611    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
484612    +if
484613    +_FILTERNORM1 not in ( '.')
484614    + and
484615    +_FILTERNORM2 not in ( '.')
484616    + and
484617    +_FILTERNORM3 not in ( '.')
484618    + and
484619    +_FILTERNORM4 not in ( '.')
484620    + and
484621    +_FILTERNORM5 not in ( '.')
484622    + and
484623    +_FILTERNORM6 not in ( '.')
484624    + and
484625    +_FILTERNORM7 not in ( ' ')
484626    + and
484627    +_FILTERNORM8 not in ( ' ')
484628    +and
484629    +( Dt_Customer ne .)
484630    +and ( Income ne . and (Income<=107000))
484631    +and ( Kidhome ne .)
484632    +and ( MntFishProducts ne .)
484633    +and ( MntFruits ne .)
484634    +and ( MntGoldProds ne .)
484635    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
484636    +and ( MntSweetProducts ne .)
484637    +and ( MntWines ne .)
484638    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
484639    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
484640    +and ( NumStorePurchases ne .)
484641    +and ( NumWebPurchases ne .)
484642    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
484643    +and ( Recency ne .)
484644    +and ( Teenhome ne .)
484645    +and ( Year_Birth ne .)
484646    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
484647    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
484648    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
484649    +end;
MPRINT(EM_DIAGRAM):   end;
484650    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
484651    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
484652     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
484653     quit;
484654     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
484655     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
484656     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
484657     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
484658     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
484659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484660     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
484661     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484662     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484663     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
484664     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484665     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484666     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484667     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
484668     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
484669     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484670     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
484671     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484672     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
484673     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484674     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484675     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
484676     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
484677     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
484678     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484679     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
484680     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
484680   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

484681     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

484682     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
484683     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484684     %macro varDept(fcmpdata=,id=);
484685     %global nobs&id scoreFlag&id;
484686     %let scoreFlag&id = 0;
484687     %if &id=1 or ^&fcmpStart %then %do;
484688     proc sort data=&fcmpdata out=_temp&id nodupkey;
484689     by NAME;
484690     where id=&id and LHS in( %let j=1;
484691     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
484692     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
484693     "&var" %let j = %eval(&j+1);
484694     %end;
484695     );
484696     run;
484697     %let dsid = %sysfunc(open(_temp&id));
484698     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
484699     %let dsid = %sysfunc(close(&dsid));
484700     %if &&nobs&id %then %do;
484701     %let scoreFlag&id = 1;
484702     %let fcmpStart = 1;
484703     %end;
484704     %else %let fcmpStart = 0;
484705     %end;
484706     %else %do;
484707     proc sort data=&fcmpdata out=_tempid;
484708     where id=&id;
484709     by LHS;
484710     run;
484711     %let dsid = %sysfunc(open(_tempid));
484712     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
484713     %let dsid = %sysfunc(close(&dsid));
484714     %if ^&&nobs&id %then %do;
484715     proc datasets lib=work nolist;
484716     delete _tempid;
484717     run;
484718     quit;
484719     %end;
484720     %else %do;
484721     data _tempAll;
484722     set %let j=%eval(&id-1);
484723     %do x=1 %to &j;
484724     %if &&nobs&x %then %do;
484725     _temp&x %end;
484726     %end;
484727     ;
484728     run;
484729     proc sql;
484730     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
484730   ! work._tempid p2 where p.name=p2.lhs;
484731     quit;
484732     data _temp&id;
484733     set _temp&id;
484734     where LHS ne '' and NAME ne '' and Node ne '';
484735     run;
484736     proc datasets lib=work nolist;
484737     delete _tempAll;
484738     run;
484739     %let dsid = %sysfunc(open(_temp&id));
484740     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
484741     %let dsid = %sysfunc(close(&dsid));
484742     %if ^&&nobs&id %then %do;
484743     proc datasets lib=work nolist;
484744     delete _temp&id;
484745     run;
484746     quit;
484747     %end;
484748     %else %do;
484749     %let scoreFlag&id = 1;
484750     data _temp&id;
484751     set _temp&id;
484752     where LHS ne NAME and node ne '';
484753     run;
484754     %let dsid = %sysfunc(open(_temp&id));
484755     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
484756     %let dsid = %sysfunc(close(&dsid));
484757     %if ^&&nobs&id %then %do;
484758     proc datasets lib=work nolist;
484759     delete _temp&id;
484760     run;
484761     quit;
484762     %end;
484763     %else %do;
484764     proc sort data=_temp&id nodupkey;
484765     by LHS NAME;
484766     run;
484767     %end;
484768     %end;
484769     %end;
484770     %end;
484771     %mend varDept;
484772     %macro optCode(outdata=fcmpdata);
484773     %global fcmpStart;
484774     %let fcmpStart = 0;
484775     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
484776     %let NumNodes=9;
484777     %do k=1 %to &NumNodes;
484778     %vardept(fcmpdata=&outdata, id=&k);
484779     %end;
484780     %mend optCode;
484781     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 18 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 9 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 17 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

484782     filename _pref
484782   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
484783     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
484784     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
484785    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
484786    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
484787    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
484788    +
484789    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
484790    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
484791    +
484792    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
484793    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
484794    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
484795    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
484796    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
484797    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
484798    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
484799    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
484800    +
484801    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
484802    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
484803    +
484804    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
484805    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
484806    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484807    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484808    +end;
MPRINT(EM_DIAGRAM):   end;
484809    +
484810    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
484811    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
484812    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484814    +end;
MPRINT(EM_DIAGRAM):   end;
484815    +
484816    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
484817    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
484818    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484819    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484820    +end;
MPRINT(EM_DIAGRAM):   end;
484821    +
484822    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
484823    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
484824    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484825    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484826    +end;
MPRINT(EM_DIAGRAM):   end;
484827    +
484828    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
484829    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
484830    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484831    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484832    +end;
MPRINT(EM_DIAGRAM):   end;
484833    +
484834    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
484835    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
484836    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484837    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484838    +end;
MPRINT(EM_DIAGRAM):   end;
484839    +
484840    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
484841    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
484842    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484843    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484844    +end;
MPRINT(EM_DIAGRAM):   end;
484845    +
484846    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
484847    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
484848    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484849    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484850    +end;
MPRINT(EM_DIAGRAM):   end;
484851    +
484852    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
484853    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
484854    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484855    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484856    +end;
MPRINT(EM_DIAGRAM):   end;
484857    +
484858    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
484859    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
484860    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484861    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484862    +end;
MPRINT(EM_DIAGRAM):   end;
484863    +
484864    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
484865    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
484866    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484867    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484868    +end;
MPRINT(EM_DIAGRAM):   end;
484869    +
484870    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
484871    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
484872    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484873    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484874    +end;
MPRINT(EM_DIAGRAM):   end;
484875    +
484876    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
484877    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
484878    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484879    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484880    +end;
MPRINT(EM_DIAGRAM):   end;
484881    +
484882    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
484883    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
484884    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
484885    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
484886    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
484887    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
484888    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
484889    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
484890    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
484891    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
484892    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
484893    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
484894    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
484895    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484896    +end;
MPRINT(EM_DIAGRAM):   end;
484897    +else do;
MPRINT(EM_DIAGRAM):   else do;
484898    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
484899    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
484900    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
484901    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
484902    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
484903    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
484904    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
484905    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
484906    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
484907    +         end;
MPRINT(EM_DIAGRAM):   end;
484908    +         else do;
MPRINT(EM_DIAGRAM):   else do;
484909    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
484910    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
484911    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
484912    +            end;
MPRINT(EM_DIAGRAM):   end;
484913    +         end;
MPRINT(EM_DIAGRAM):   end;
484914    +      end;
MPRINT(EM_DIAGRAM):   end;
484915    +      else do;
MPRINT(EM_DIAGRAM):   else do;
484916    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
484917    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
484918    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
484919    +         end;
MPRINT(EM_DIAGRAM):   end;
484920    +      end;
MPRINT(EM_DIAGRAM):   end;
484921    +   end;
MPRINT(EM_DIAGRAM):   end;
484922    +   else do;
MPRINT(EM_DIAGRAM):   else do;
484923    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
484924    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
484925    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
484926    +      end;
MPRINT(EM_DIAGRAM):   end;
484927    +      else do;
MPRINT(EM_DIAGRAM):   else do;
484928    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
484929    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
484930    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
484931    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
484932    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
484933    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
484934    +         end;
MPRINT(EM_DIAGRAM):   end;
484935    +      end;
MPRINT(EM_DIAGRAM):   end;
484936    +   end;
MPRINT(EM_DIAGRAM):   end;
484937    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
484938    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
484939    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
484940    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
484941    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
484942    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
484943    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
484944    +   end;
MPRINT(EM_DIAGRAM):   end;
484945    +end;
MPRINT(EM_DIAGRAM):   end;
484946    +
484947    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
484948    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
484949    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
484950    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
484951    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
484952    +end;
MPRINT(EM_DIAGRAM):   end;
484953    +
484954    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
484955    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
484956    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
484957    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
484958    +
484959    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
484960    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
484961    +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
484962    +
484963    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
484964    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
484965    +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
484966    +
484967    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
484968    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
484969    +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
484970    +
484971    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
484972    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
484973    +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
484974    +
484975    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
484976    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
484977    +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
484978    +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
484979    +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
484980    +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
484981    +
484982    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
484983    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
484984    +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
484985    +
484986    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
484987    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
484988    +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
484989    +
484990    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
484991    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
484992    +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
484993    +
484994    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
484995    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
484996    +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
484997    +
484998    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
484999    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
485000    +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
485001    +
485002    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
485003    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
485004    +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
485005    +
485006    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
485007    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
485008    +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
485009    +
485010    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
485011    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
485012    +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
485013    +
485014    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
485015    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
485016    +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
485017    +
485018    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
485019    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
485020    +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
485021    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
485022    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
485023    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
485024    +end;
MPRINT(EM_DIAGRAM):   end;
485025    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
485026    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
485027    +
485028    +REGDR1:
485029    +
485030    +
485031    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
485032    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
485033    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
485034    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
485035    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
485036    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
485037    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
485038    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
485039    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
485040    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
485041    +end;
MPRINT(EM_DIAGRAM):   end;
485042    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
485043    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
485044    +
485045    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
485046    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
485047    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485048     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485049     quit;
485050     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
485051     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
485052     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
485053     retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
485054     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
485055     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485056     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
485057     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485058     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485059     proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
485060     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485061     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485062     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485063     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
485064     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
485065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485066     proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
485067     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485068     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
485069     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485070     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485071     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485072     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
485073     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485074     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485075     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
485076     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
485076   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.

485077     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485078     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
485079     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485080     filename _pref
485080   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
485081     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
485082     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
485083    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
485084    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
485085    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
485086    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
485087    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
485088    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485089     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485090     quit;
485091     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
485092     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
485093     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
485094     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
485095     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
485096     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485097     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
485098     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485099     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485100     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
485101     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485102     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485103     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485104     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
485105     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
485106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485107     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
485108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485109     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
485110     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485111     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485112     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485113     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
485114     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485115     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485116     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
485117     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
485117   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

485118     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485119     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
485120     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485121     filename _pref
485121   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
485122     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
485123     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
485124    +
485125    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
485126    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
485126   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
485127    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
485128    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
485129    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
485130    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
485131    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485132     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485133     quit;
485134     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
485135     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
485136     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
485137     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
485138     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
485139     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485140     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
485141     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485142     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485143     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
485144     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485145     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485146     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485147     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
485148     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
485149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485150     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
485151     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485152     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
485153     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485154     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485155     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485156     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
485157     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485158     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485159     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
485160     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
485160   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

485161     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485162     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
485163     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485164     filename _pref
485164   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
485165     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
485166     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
485167    +
485168    +
485169    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
485170    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
485171    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
485172    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
485173    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
485174    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485175    +
485176    +
485177    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
485178    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
485179    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
485180    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
485181    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
485182    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485183    +
485184    +
485185    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
485186    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
485187    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
485188    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
485189    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
485190    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485191    +
485192    +
485193    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
485194    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
485195    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
485196    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
485197    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
485198    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485199    +
485200    +
485201    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
485202    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
485203    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
485204    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
485205    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
485206    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485207    +
485208    +
485209    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
485210    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
485211    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
485212    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
485213    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
485214    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485215    +
485216    +
485217    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
485218    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
485219    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
485220    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
485221    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
485222    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485223    +
485224    +
485225    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
485226    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
485227    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
485228    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
485229    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
485230    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485231    +if
485232    +_FILTERNORM1 not in ( '.')
485233    + and
485234    +_FILTERNORM2 not in ( '.')
485235    + and
485236    +_FILTERNORM3 not in ( '.')
485237    + and
485238    +_FILTERNORM4 not in ( '.')
485239    + and
485240    +_FILTERNORM5 not in ( '.')
485241    + and
485242    +_FILTERNORM6 not in ( '.')
485243    + and
485244    +_FILTERNORM7 not in ( ' ')
485245    + and
485246    +_FILTERNORM8 not in ( ' ')
485247    +and
485248    +( Dt_Customer ne .)
485249    +and ( Income ne . and (Income<=107000))
485250    +and ( Kidhome ne .)
485251    +and ( MntFishProducts ne .)
485252    +and ( MntFruits ne .)
485253    +and ( MntGoldProds ne .)
485254    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
485255    +and ( MntSweetProducts ne .)
485256    +and ( MntWines ne .)
485257    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
485258    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
485259    +and ( NumStorePurchases ne .)
485260    +and ( NumWebPurchases ne .)
485261    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
485262    +and ( Recency ne .)
485263    +and ( Teenhome ne .)
485264    +and ( Year_Birth ne .)
485265    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
485266    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
485267    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
485268    +end;
MPRINT(EM_DIAGRAM):   end;
485269    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
485270    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485271     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485272     quit;
485273     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
485274     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
485275     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
485276     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
485277     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
485278     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485279     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
485280     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485281     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485282     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
485283     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485284     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485285     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485286     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
485287     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
485288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485289     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
485290     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485291     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
485292     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485293     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485294     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485295     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
485296     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485297     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485298     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
485299     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
485299   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

485300     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485301     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
485302     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485303     %macro varDept(fcmpdata=,id=);
485304     %global nobs&id scoreFlag&id;
485305     %let scoreFlag&id = 0;
485306     %if &id=1 or ^&fcmpStart %then %do;
485307     proc sort data=&fcmpdata out=_temp&id nodupkey;
485308     by NAME;
485309     where id=&id and LHS in( %let j=1;
485310     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
485311     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
485312     "&var" %let j = %eval(&j+1);
485313     %end;
485314     );
485315     run;
485316     %let dsid = %sysfunc(open(_temp&id));
485317     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
485318     %let dsid = %sysfunc(close(&dsid));
485319     %if &&nobs&id %then %do;
485320     %let scoreFlag&id = 1;
485321     %let fcmpStart = 1;
485322     %end;
485323     %else %let fcmpStart = 0;
485324     %end;
485325     %else %do;
485326     proc sort data=&fcmpdata out=_tempid;
485327     where id=&id;
485328     by LHS;
485329     run;
485330     %let dsid = %sysfunc(open(_tempid));
485331     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
485332     %let dsid = %sysfunc(close(&dsid));
485333     %if ^&&nobs&id %then %do;
485334     proc datasets lib=work nolist;
485335     delete _tempid;
485336     run;
485337     quit;
485338     %end;
485339     %else %do;
485340     data _tempAll;
485341     set %let j=%eval(&id-1);
485342     %do x=1 %to &j;
485343     %if &&nobs&x %then %do;
485344     _temp&x %end;
485345     %end;
485346     ;
485347     run;
485348     proc sql;
485349     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
485349   ! work._tempid p2 where p.name=p2.lhs;
485350     quit;
485351     data _temp&id;
485352     set _temp&id;
485353     where LHS ne '' and NAME ne '' and Node ne '';
485354     run;
485355     proc datasets lib=work nolist;
485356     delete _tempAll;
485357     run;
485358     %let dsid = %sysfunc(open(_temp&id));
485359     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
485360     %let dsid = %sysfunc(close(&dsid));
485361     %if ^&&nobs&id %then %do;
485362     proc datasets lib=work nolist;
485363     delete _temp&id;
485364     run;
485365     quit;
485366     %end;
485367     %else %do;
485368     %let scoreFlag&id = 1;
485369     data _temp&id;
485370     set _temp&id;
485371     where LHS ne NAME and node ne '';
485372     run;
485373     %let dsid = %sysfunc(open(_temp&id));
485374     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
485375     %let dsid = %sysfunc(close(&dsid));
485376     %if ^&&nobs&id %then %do;
485377     proc datasets lib=work nolist;
485378     delete _temp&id;
485379     run;
485380     quit;
485381     %end;
485382     %else %do;
485383     proc sort data=_temp&id nodupkey;
485384     by LHS NAME;
485385     run;
485386     %end;
485387     %end;
485388     %end;
485389     %end;
485390     %mend varDept;
485391     %macro optCode(outdata=fcmpdata);
485392     %global fcmpStart;
485393     %let fcmpStart = 0;
485394     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
485395     %let NumNodes=9;
485396     %do k=1 %to &NumNodes;
485397     %vardept(fcmpdata=&outdata, id=&k);
485398     %end;
485399     %mend optCode;
485400     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
The SAS System


NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

485401     filename _pref
485401   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
485402     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
485403     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
485404    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
485405    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
485406    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
485407    +
485408    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
485409    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
485410    +
485411    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
485412    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
485413    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
485414    +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
485415    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
485416    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
485417    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
485418    +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
485419    +
485420    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
485421    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
485422    +
485423    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
485424    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
485425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485427    +end;
MPRINT(EM_DIAGRAM):   end;
485428    +
485429    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
485430    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
485431    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485432    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485433    +end;
MPRINT(EM_DIAGRAM):   end;
485434    +
485435    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
485436    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
485437    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485438    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485439    +end;
MPRINT(EM_DIAGRAM):   end;
485440    +
485441    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
485442    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
485443    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485444    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485445    +end;
MPRINT(EM_DIAGRAM):   end;
485446    +
485447    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
485448    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
485449    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485450    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485451    +end;
MPRINT(EM_DIAGRAM):   end;
485452    +
485453    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
485454    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
485455    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485456    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485457    +end;
MPRINT(EM_DIAGRAM):   end;
485458    +
485459    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
485460    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
485461    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485462    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485463    +end;
MPRINT(EM_DIAGRAM):   end;
485464    +
485465    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
485466    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
485467    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485468    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485469    +end;
MPRINT(EM_DIAGRAM):   end;
485470    +
485471    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
485472    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
485473    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485474    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485475    +end;
MPRINT(EM_DIAGRAM):   end;
485476    +
485477    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
485478    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
485479    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485480    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485481    +end;
MPRINT(EM_DIAGRAM):   end;
485482    +
485483    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
485484    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
485485    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485486    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485487    +end;
MPRINT(EM_DIAGRAM):   end;
485488    +
485489    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
485490    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
485491    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485493    +end;
MPRINT(EM_DIAGRAM):   end;
485494    +
485495    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
485496    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
485497    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
485498    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
485499    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
485500    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
485501    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
485502    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
485503    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
485504    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
485505    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
485506    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
485507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
485508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485509    +end;
MPRINT(EM_DIAGRAM):   end;
485510    +else do;
MPRINT(EM_DIAGRAM):   else do;
485511    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
485512    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
485513    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
485514    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
485515    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
485516    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
485517    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
485518    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
485519    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485520    +         end;
MPRINT(EM_DIAGRAM):   end;
485521    +         else do;
MPRINT(EM_DIAGRAM):   else do;
485522    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
485523    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
485524    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485525    +            end;
MPRINT(EM_DIAGRAM):   end;
485526    +         end;
MPRINT(EM_DIAGRAM):   end;
485527    +      end;
MPRINT(EM_DIAGRAM):   end;
485528    +      else do;
MPRINT(EM_DIAGRAM):   else do;
485529    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
485530    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
485531    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485532    +         end;
MPRINT(EM_DIAGRAM):   end;
485533    +      end;
MPRINT(EM_DIAGRAM):   end;
485534    +   end;
MPRINT(EM_DIAGRAM):   end;
485535    +   else do;
MPRINT(EM_DIAGRAM):   else do;
485536    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
485537    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
485538    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485539    +      end;
MPRINT(EM_DIAGRAM):   end;
485540    +      else do;
MPRINT(EM_DIAGRAM):   else do;
485541    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
485542    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
485543    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
485544    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
485545    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
485546    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
485547    +         end;
MPRINT(EM_DIAGRAM):   end;
485548    +      end;
MPRINT(EM_DIAGRAM):   end;
485549    +   end;
MPRINT(EM_DIAGRAM):   end;
485550    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
485551    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
485552    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
485553    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
485554    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
485555    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
485556    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
485557    +   end;
MPRINT(EM_DIAGRAM):   end;
485558    +end;
MPRINT(EM_DIAGRAM):   end;
485559    +
485560    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
485561    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
485562    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
485563    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
485564    +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
485565    +end;
MPRINT(EM_DIAGRAM):   end;
485566    +
485567    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
485568    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
485569    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
485570    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
485571    +
485572    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
485573    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
485574    +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
485575    +
485576    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
485577    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
485578    +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
485579    +
485580    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
485581    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
485582    +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
485583    +
485584    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
485585    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
485586    +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
485587    +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
485588    +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
485589    +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
485590    +
485591    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
485592    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
485593    +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
485594    +
485595    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
485596    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
485597    +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
485598    +
485599    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
485600    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
485601    +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
485602    +
485603    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
485604    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
485605    +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
485606    +
485607    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
485608    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
485609    +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
485610    +
485611    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
485612    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
485613    +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
485614    +
485615    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
485616    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
485617    +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
485618    +
485619    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
485620    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
485621    +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
485622    +
485623    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
485624    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
485625    +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
485626    +
485627    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
485628    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
485629    +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
485630    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
485631    +
485632    +REG5DR1:
485633    +
485634    +
485635    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
485636    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
485637    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
485638    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
485639    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
485640    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
485641    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
485642    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
485643    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
485644    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
485645    +end;
MPRINT(EM_DIAGRAM):   end;
485646    +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
485647    +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
485648    +
485649    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
485650    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
485651    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485652     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485653     quit;
485654     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
485655     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
485656     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
485657     retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
485658     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
485659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485660     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
485661     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485662     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485663     proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
485664     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485665     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485666     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485667     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
485668     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
485669     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485670     proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
485671     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

485672     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
485673     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485674     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485675     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485676     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
485677     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485678     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485679     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
485680     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
485680   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.

485681     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485682     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
485683     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485684     filename _pref
485684   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
485685     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
485686     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
485687    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
485688    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
485689    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
485690    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
485691    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
485692    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485693     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485694     quit;
485695     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
485696     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
485697     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
485698     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
485699     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
485700     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485701     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
485702     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485704     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
485705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485707     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485708     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
485709     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
485710     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485711     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
485712     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

485713     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
485714     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485715     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485716     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485717     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
485718     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485719     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485720     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
485721     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
485721   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

485722     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485723     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
485724     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485725     filename _pref
485725   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
485726     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
485727     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
485728    +
485729    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
485730    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
485730   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
485731    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
485732    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
485733    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
485734    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
485735    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485736     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485737     quit;
485738     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
485739     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
485740     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
485741     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
485742     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
485743     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485744     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
485745     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485746     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485747     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
485748     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485749     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485750     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485751     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
485752     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
485753     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485754     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
485755     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485756     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
485757     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485758     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485759     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485760     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
485761     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485762     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485763     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
485764     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
485764   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

485765     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485766     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
485767     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485768     filename _pref
485768   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
485769     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
485770     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
485771    +
485772    +
485773    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
485774    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
485775    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
485776    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
485777    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
485778    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485779    +
485780    +
485781    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
485782    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
485783    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
485784    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
485785    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
485786    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485787    +
485788    +
485789    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
485790    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
485791    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
485792    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
485793    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
485794    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485795    +
485796    +
485797    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
485798    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
485799    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
485800    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
485801    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
485802    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485803    +
485804    +
485805    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
485806    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
485807    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
485808    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
485809    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
485810    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485811    +
485812    +
485813    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
485814    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
485815    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
485816    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
485817    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
485818    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485819    +
485820    +
485821    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
485822    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
485823    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
485824    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
485825    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
485826    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485827    +
485828    +
485829    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
485830    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
485831    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
485832    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
485833    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
485834    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
485835    +if
485836    +_FILTERNORM1 not in ( '.')
485837    + and
485838    +_FILTERNORM2 not in ( '.')
485839    + and
485840    +_FILTERNORM3 not in ( '.')
485841    + and
485842    +_FILTERNORM4 not in ( '.')
485843    + and
485844    +_FILTERNORM5 not in ( '.')
485845    + and
485846    +_FILTERNORM6 not in ( '.')
485847    + and
485848    +_FILTERNORM7 not in ( ' ')
485849    + and
485850    +_FILTERNORM8 not in ( ' ')
485851    +and
485852    +( Dt_Customer ne .)
485853    +and ( Income ne . and (Income<=107000))
485854    +and ( Kidhome ne .)
485855    +and ( MntFishProducts ne .)
485856    +and ( MntFruits ne .)
485857    +and ( MntGoldProds ne .)
485858    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
485859    +and ( MntSweetProducts ne .)
485860    +and ( MntWines ne .)
485861    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
485862    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
485863    +and ( NumStorePurchases ne .)
485864    +and ( NumWebPurchases ne .)
485865    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
485866    +and ( Recency ne .)
485867    +and ( Teenhome ne .)
485868    +and ( Year_Birth ne .)
485869    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
485870    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
485871    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
485872    +end;
MPRINT(EM_DIAGRAM):   end;
485873    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
485874    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
485875     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
485876     quit;
485877     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
485878     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
485879     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
485880     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
485881     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
485882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485883     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
485884     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485885     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485886     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
485887     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485888     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485889     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485890     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
485891     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
485892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

485893     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
485894     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485895     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
485896     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485897     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485898     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
485899     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
485900     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
485901     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485902     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
485903     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
485903   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

485904     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

485905     proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl25_FCMP data=_tempx;
485906     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL25_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL25_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

485907     %macro varDept(fcmpdata=,id=);
485908     %global nobs&id scoreFlag&id;
485909     %let scoreFlag&id = 0;
485910     %if &id=1 or ^&fcmpStart %then %do;
485911     proc sort data=&fcmpdata out=_temp&id nodupkey;
485912     by NAME;
485913     where id=&id and LHS in( %let j=1;
485914     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
485915     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
485916     "&var" %let j = %eval(&j+1);
485917     %end;
485918     );
485919     run;
485920     %let dsid = %sysfunc(open(_temp&id));
485921     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
485922     %let dsid = %sysfunc(close(&dsid));
485923     %if &&nobs&id %then %do;
485924     %let scoreFlag&id = 1;
485925     %let fcmpStart = 1;
485926     %end;
485927     %else %let fcmpStart = 0;
485928     %end;
485929     %else %do;
485930     proc sort data=&fcmpdata out=_tempid;
485931     where id=&id;
485932     by LHS;
485933     run;
485934     %let dsid = %sysfunc(open(_tempid));
485935     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
485936     %let dsid = %sysfunc(close(&dsid));
485937     %if ^&&nobs&id %then %do;
485938     proc datasets lib=work nolist;
485939     delete _tempid;
485940     run;
485941     quit;
485942     %end;
485943     %else %do;
485944     data _tempAll;
485945     set %let j=%eval(&id-1);
485946     %do x=1 %to &j;
485947     %if &&nobs&x %then %do;
485948     _temp&x %end;
485949     %end;
485950     ;
485951     run;
485952     proc sql;
485953     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
485953   ! work._tempid p2 where p.name=p2.lhs;
485954     quit;
485955     data _temp&id;
485956     set _temp&id;
485957     where LHS ne '' and NAME ne '' and Node ne '';
485958     run;
485959     proc datasets lib=work nolist;
485960     delete _tempAll;
485961     run;
485962     %let dsid = %sysfunc(open(_temp&id));
485963     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
485964     %let dsid = %sysfunc(close(&dsid));
485965     %if ^&&nobs&id %then %do;
485966     proc datasets lib=work nolist;
485967     delete _temp&id;
485968     run;
485969     quit;
485970     %end;
485971     %else %do;
485972     %let scoreFlag&id = 1;
485973     data _temp&id;
485974     set _temp&id;
485975     where LHS ne NAME and node ne '';
485976     run;
485977     %let dsid = %sysfunc(open(_temp&id));
485978     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
485979     %let dsid = %sysfunc(close(&dsid));
485980     %if ^&&nobs&id %then %do;
485981     proc datasets lib=work nolist;
485982     delete _temp&id;
485983     run;
485984     quit;
485985     %end;
485986     %else %do;
485987     proc sort data=_temp&id nodupkey;
485988     by LHS NAME;
485989     run;
485990     %end;
485991     %end;
485992     %end;
485993     %end;
485994     %mend varDept;
485995     %macro optCode(outdata=fcmpdata);
485996     %global fcmpStart;
485997     %let fcmpStart = 0;
485998     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
485999     %let NumNodes=9;
486000     %do k=1 %to &NumNodes;
486001     %vardept(fcmpdata=&outdata, id=&k);
486002     %end;
486003     %mend optCode;
486004     %optcode(outData=EMWS8.Ensmbl25_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl25_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL25_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

486005     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
486006     * Ensmbl25: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Computing metadata for TRAIN data;
486007     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL25_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl25\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl25_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl25_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl25_TRAIN out=WORK.M1RBWICY noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RBWICY;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RBWICY(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RBWICY;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RBWICY;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M29O5FSV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29O5FSV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M29O5FSV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RT7N2I(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M29O5FSV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29O5FSV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M29O5FSV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29O5FSV;
MPRINT(EMADVISECOLUMNS):   set WORK.M29O5FSV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl25_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl25";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl25";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl25: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl25";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
486319     data EMWS8.Ensmbl25_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl25_EMINFO;
486320     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
486321     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
486322     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL25_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
486326     run;
486327     proc sort data = EMWS8.Ensmbl25_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl25_EMINFO NOTHREADS;
486328     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
486329     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL25_EMINFO.
NOTE: The data set EMWS8.ENSMBL25_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

486330     proc sort data = EMWS8.Neural_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
486331     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
486332     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

486333     proc sort data = EMWS8.Ensmbl25_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl25_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
486334     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
486335     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL25_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

486336     data EMWS8.Ensmbl25_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl25_EMINFO;
486337     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
486338     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
486339     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL25_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

486340     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
486341     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
486342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
486343     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL25_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.ENSMBL25_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
